-- MySQL dump 10.13  Distrib 5.5.29, for debian-linux-gnu (i686)
--
-- Host: localhost    Database: sharecode_temp
-- ------------------------------------------------------
-- Server version	5.5.29-0ubuntu0.12.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `captcha`
--

DROP TABLE IF EXISTS `captcha`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `captcha` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `word` char(10) NOT NULL,
  `hash` varchar(64) NOT NULL,
  `time` int(12) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=16538 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `captcha`
--

LOCK TABLES `captcha` WRITE;
/*!40000 ALTER TABLE `captcha` DISABLE KEYS */;
INSERT INTO `captcha` VALUES (16537,'CAy9oId','c46359d37d494674962e17daf75cd42c66474375',1372134499);
/*!40000 ALTER TABLE `captcha` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `clars`
--

DROP TABLE IF EXISTS `clars`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `clars` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uid` int(11) NOT NULL,
  `pid` int(11) NOT NULL,
  `cid` int(11) NOT NULL,
  `question` text COLLATE utf8_unicode_ci NOT NULL,
  `answer` text COLLATE utf8_unicode_ci NOT NULL,
  `toall` tinyint(1) NOT NULL,
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=270 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `clars`
--

LOCK TABLES `clars` WRITE;
/*!40000 ALTER TABLE `clars` DISABLE KEYS */;
INSERT INTO `clars` VALUES (30,12,-1,17,'حالتون چطوره؟','No Response. Read the problem specification.',0,'2011-11-08 17:02:35'),(29,7,-1,17,'ورودی و خروجی‌ها را از چه فایلی باید بخوانیم؟','ورودی‌ و خروجی همه‌ی سوالات، ورودی و خروجی استاندارد هستند!<br />\ncin &amp; cout<br />\nSystem.in &amp; System.out',1,'2011-11-08 15:42:01'),(31,530,1043,18,'I get Pre Error,Why?<br />\nand MS C++ supported by g++??','because your program printed extra white spaces <br />\nand for your second question, it is obvious that MS C++ is not supported by G++, you should consider including necessary libraries while submitting. For example don\'t forget to include string.h for memset.',1,'2011-11-09 12:17:51'),(32,530,1043,18,'Plz help me<br />\nMy Code Is true','No Response. Read the problem specification.',0,'2011-11-09 12:47:18'),(33,530,1043,18,'mishe bgid koja darm White Spaces mizane??mn k harchi hceck krdm ndaidm<br />\nmosabghe tamrini has mishe komk konid','It is mentioned in the problem statement that &quot;There is a blank line BETWEEN output blocks.&quot; and keep in mind that for the tomorrow contest such questions won\'t be answered, because their answers are included in the problem statements!',0,'2011-11-09 13:09:27'),(34,498,-1,18,'http://acm.ut.ac.ir/sc/contests/submit/18/B is not received correctly in chrome 15.0. (HTTP Error 500)','Thanks!<br />\ncheck it again! :)',0,'2011-11-09 14:25:26'),(35,530,1043,18,'Thanks for you.<br />\nOk,I know :-)','No Response. Read the problem specification.<br />\n:D',0,'2011-11-09 14:38:22'),(36,10,-1,18,'Why RE?','Runtime Error may have numerous reasons such as, index array out of bounds, division by zero, allocating excessive memory.<br />\nIn this online judge, using cerr and other restricted functions may cause Runtime Error too.',1,'2011-11-09 14:47:59'),(37,518,1043,18,'is test case in problem b correct?','No Response. Read the problem specification.',0,'2011-11-09 15:16:53'),(38,433,1043,18,'What kind of presentation do you mean?<br />\nIt is not completely clear, according to the 1 sample testcase.','No Response. Read the problem specification.',0,'2011-11-09 16:11:21'),(39,435,-1,18,'mishe begin voroodiharo chejoori begirim?az vorodihaye estandard ya az file?<br />\ntoo soal ke neveshtin (separated by a space, one pair of integers per line)<br />\nlotfan rahnemaei konin','You should read the input from standard input and print the output into standard output.<br />\nin C and C++, you can use &quot;cin&quot; and &quot;cout&quot;.',0,'2011-11-09 16:14:41'),(40,543,1043,18,'your sample input in this question is wrong, doesn\'t it? :O what\'s the &quot;1&quot; on first line!!!!!','Due to the fact that this problem has been solved by many teams (as you can see in the scoreboard) this problem is absolutely correct and out of question. Even for you my dear friend :D<br />\nFor your information, the \'1\' you asked about is the number of test cases and it is clearly written in the first sentence of input specification.',0,'2011-11-09 16:24:08'),(41,543,1043,18,'I have a 15 Presentation error :D what should I do?','You should correct your solution. Afterward, it comes the submission process. In this stage, you should select your solution and press the submit button. Is it clear enough? :P',0,'2011-11-09 16:50:26'),(42,557,2002,19,'how much is input limit','No Response. Read the problem specification.',0,'2011-11-10 06:41:22'),(43,557,2002,19,'how much is input limit?','No Response. Read the problem specification.',0,'2011-11-10 06:42:02'),(44,557,2004,19,'in the third paragraph shouldnt it be mentioned with Ri = 0.2 ????','Yes.',1,'2011-11-10 07:06:22'),(45,557,2001,19,'اگه همه با هم حذف بشن و طول Cs صفر باشه باید چی چاپ کنیم؟؟','It can be inferred from the problem statement',0,'2011-11-10 07:07:57'),(46,30,-1,19,'Yes, you are right.','No Response. Read the problem specification.',0,'2011-11-10 07:10:08'),(47,445,2003,19,'what is output of 0 0 0 ?','1',1,'2011-11-10 07:32:55'),(48,466,2001,19,'الگوریتم حذف B چیه؟<br />\nمثال:<br />\n1 2 3 4 4 3 3 3 3 4 -4 -3 -2 -1<br />\nهم می تواند 4 های نزدیک به هم ابتدا حذف شود، هم 3 های نزدیک به هم که در حالت دوم نهایتا یک 3 می ماند.<br />\n','No Response. Read the problem specification.',0,'2011-11-10 07:39:53'),(49,556,2002,19,'if two ways are possible which one should be in output!?','It is written in the problem statement',0,'2011-11-10 07:41:20'),(50,497,2006,19,'with four integers f0, f1, n, and (1 &lt;= f0, f1, X &lt;= 109 and 4 &lt;= n &lt;= 109). <br />\nchaharomi chie alan? fn?','It is clearly written in the problem statement.',0,'2011-11-10 07:45:23'),(51,520,2002,19,'aya chizi az  input ja nayoftade? vase man intor neshon mide:<br />\n<br />\nThe input consists of a number of test cases. Each test case starts with a line containing the integer N which is less than 501. The next  lines specify the values of ***, each appearing on a single line. The input ends with ***.<br />\n<br />\njahaei ke shak daram 3ta * mizanam','Alan dobare check konid bayad doros shode bashe.<br />\nkollan oon pdfi ke be groupe acm ferestade shode, in moshkela ro nadare, va team ha daran az oon pdfe estefade mikonan ke soal ro migiran',0,'2011-11-10 07:55:48'),(52,448,2007,19,'can two intervals make overlap?<br />\n','No Response. Read the problem specification.',0,'2011-11-10 07:58:20'),(53,506,2000,19,'aya gharare havapiam ertefaesh az adadi ke paida mikonim be safr berese?','Yes',0,'2011-11-10 08:00:41'),(54,520,-1,19,'passworde file pdf ro bedid lotfan.','737p7bYe0rNof64vW0oH2khXJ256n941hXRzf393046<br />\nit is also written in the problem pages of contest.',0,'2011-11-10 08:03:06'),(55,482,2007,19,'is the second sample input and its output right?','No Response. Read the problem specification.',0,'2011-11-10 08:07:59'),(56,512,2004,19,'is the output need end of line for each test case ?<br />\n','It is obvious. Yes.',0,'2011-11-10 08:18:06'),(57,561,2002,19,'In the seceond paragraph &quot; These numbers indicate that how many stronger Anaconda Tigers returns before the Anaconda Tiger with rank .... comes back (we denote this number by.... )&quot; it seems that these parts that i mentioned is skipped <br />\nAm i right ?','Please read the pdf which is posted in the acm tehran group. The pdf version does not have any errors.',0,'2011-11-10 08:30:23'),(58,489,2004,19,'اگر تعداد اصلحه ها فرد باشد نویت ها چگونه می شود؟؟؟<br />\nمثلا اگر تعداد اصلحه مساوی 3 یاشد نوبت ها به این صورت می شود که علی و سپس رضا و علی و به همین ترتیب؟؟','اسلحه درسته البته :چشمک<br />\nنوبت ها ربطی به تعداد اسلحه ها نداره، یکی در میان بازی می کنن',0,'2011-11-10 08:31:27'),(59,490,2000,19,'what is output of 8768 ?','No Response. Read the problem specification.',0,'2011-11-10 08:32:36'),(60,561,-1,19,'what is the link of acm tehran group?<br />\n ','I corrected the problem statements in the website.<br />\nSend me your emails and I will send you the problem statements in PDF. but I think the problem statements are correct by now.',0,'2011-11-10 08:36:48'),(61,451,2000,19,'What\'s the output of 259335458','No Response. Read the problem specification.',0,'2011-11-10 08:38:56'),(62,561,-1,19,'my mail is peyman.r.m@gmail.com','sent',0,'2011-11-10 08:40:06'),(63,525,-1,19,'how to read and write data int/from files , im turboC++ programmer, and i dont know anything about g++ compiler !!!','if you use standard C/C++ IO it is not different in G++.<br />\nYou could also google it :D',0,'2011-11-10 08:51:31'),(64,525,-1,19,'what\'s the name of input file and output file ?','You should read from standard input (console) using functions such as cin, scanf and so on. YOU SHOULD NOT READ OR WRITE FROM/TO ANY FILE!!!',0,'2011-11-10 08:57:38'),(65,525,-1,19,'why we have\'nt iostream.h ??<br />\n<br />\n#include &lt;iostream.h&gt;<br />\n<br />\nMain.cc:1:22: error: iostream.h: No such file or directory<br />\nMain.cc:2:19: error: conio.h: No such file or directory<br />\nMain.cc: In function \'int main()\':<br />\nMain.cc:8: error: \'clrscr\' was not declared in this scope<br />\nMain.cc:9: error: \'cin\' was not declared in this scope<br />\nMain.cc:24: error: \'cout\' was not declared in this scope<br />\nMain.cc:26: error: \'getch\' was not declared in this scope','No Response. Read the problem specification.',0,'2011-11-10 09:02:05'),(66,452,2007,19,'ایا ورودی ها مرتب شده اند یا نه؟','نه لزوما',0,'2011-11-10 09:09:50'),(67,546,2006,19,'Can a or b be zero?','We don\'t have such case in the test data :D',0,'2011-11-10 09:11:02'),(68,445,2001,19,'aya momken ast bazi az adad 0 bashand?','Yes, and it is written that the range of input is between 10^6 and -10^6. So, it is possible that some numbers become 0.',0,'2011-11-10 09:12:28'),(69,489,2004,19,'با داده های ورودی نمونه برنامه ما درست کار می کند اما بعد از فرستادن جواب با خطای زمان اجرا مواجه شدیم!<br />\nاگر امکان دارد تعداد بیشتری داده های ورودی نمونه در اختیار ما قرار دهید.','No Response. Read the problem specification.',0,'2011-11-10 09:13:36'),(70,445,2001,19,'there is no difference between 0 and -0,<br />\ndo we have -0 in input?','No.',0,'2011-11-10 09:15:06'),(71,30,-1,19,'Will the contest extended?','The contest time has been extended. So, the contest will end at 15:00',1,'2011-11-10 09:15:47'),(72,494,2000,19,'can you explain why the result of 17 is 15?','You should figure it out on your own.',0,'2011-11-10 09:16:49'),(73,509,2000,19,'5 bar bara 1 ferestadam kofrim kard, in inputaye 3 &amp; 17 yani az 0 ta 3 rafte?bad az 3 ta 17?','No Response. Read the problem specification.',0,'2011-11-10 09:20:07'),(74,432,2001,19,'he starts with 1?<br />\nit means that there is no peg with number 0?','yes. there is no peg with number 0.',0,'2011-11-10 09:21:47'),(75,445,2001,19,'what is output of &quot;1 1&quot;?','No Response. Read the problem specification.',0,'2011-11-10 09:25:05'),(76,525,2002,19,'  what is output of  ?<br />\n2<br />\n2<br />\n1','This input is impossible and there is no invalid input in the test data.',0,'2011-11-10 09:30:19'),(77,489,2004,19,'What is the separator character in input data?<br />\nIs it white-space?!<br />\nIt’s not mentioned in the problem specification!','You can understand from the sample input that it is white-space!!!',0,'2011-11-10 09:33:54'),(78,525,2002,19,'  what is output of ?<br />\n3<br />\n2<br />\n2<br />\n1<br />\n0','No Response. Read the problem specification.',0,'2011-11-10 09:34:12'),(79,495,2004,19,'boundary of n ?','n is as same as W in the problem statement.',0,'2011-11-10 09:43:36'),(80,451,2002,19,'Below part of the question is ambiguous! It seems to be not completed!<br />\n<br />\nhow many stronger Anaconda Tigers returns before the Anaconda Tiger with rank  comes back (we denote this number by )','It is written a_i!!! ',0,'2011-11-10 09:48:49'),(81,500,2006,19,'what is exactly run time error means in our code?','the exact reason of run time error is not declared neither in this contest nor regional contest.',0,'2011-11-10 09:49:35'),(82,30,-1,19,'Here is the scoreboard of Sharif U teams. They are taking the same problems in a separate internal contest:<br />\n<br />\n','Rank	Name	Solved	Time	    A    	    B    	    C    	    D    	    E    	    F    	    G    	    H    	    I    	Total att/solv<br />\n			<br />\n1	Musketeers	5	465	1/24	0/--	1/17	1/96	2/--	1/157	0/--	0/--	1/171	7/5<br />\n2	Laconic	4	321	1/14	3/92	1/39	3/96	0/--	0/--	0/--	1/--	0/--	9/4<br />\n3	Too_Funny	4	356	1/57	3/--	1/20	2/158	0/--	0/--	0/--	2/81	0/--	9/4<br />\n4	Sut	4	367	1/1	3/145	2/35	1/126	1/--	0/--	0/--	0/--	0/--	8/4<br />\n5	Oila	4	425	1/26	3/182	2/42	2/95	3/--	0/--	0/--	0/--	0/--	11/4<br />\n6	LiveCode.H	3	177	1/0	0/--	1/34	1/143	7/--	0/--	0/--	0/--	0/--	10/3<br />\n7	Goblin_Techies	2	166	1/121	1/--	1/45	0/--	1/--	0/--	0/--	3/--	0/--	7/2<br />\n	Submitted/1st Yes/Total Yes			7/0/7	13/92/3	9/17/7	10/95/6	14/--/0	1/157/1	0/--/0	6/81/1	1/171/1	61/26',1,'2011-11-10 09:53:51'),(83,477,2000,19,'what is the answer of 444 ?','No Response. Read the problem specification.',0,'2011-11-10 10:00:20'),(84,552,2001,19,'Are start point and end point at one side of the pegs?? (Do they have the minimum x coordinate?<br />\nOr Do they have the maximum x coordinate?) Or they are arbitrary chosen in the plane?','arbitrary',0,'2011-11-10 10:15:53'),(85,489,-1,19,'برید جمع کنید با این کامپایلر و سایت اتیقتون که الکی ریفرش میشه و<br />\nکامپایلرتون هم زده رو دست <br />\nNet beans &amp; idea &amp; eclipse ….<br />\n','No Response. Read the problem specification.',0,'2011-11-10 10:23:43'),(86,444,2005,19,'please check input and output ....','checked and it is correct',0,'2011-11-10 10:25:32'),(87,563,2006,19,'Sample output is 1 2 or 2 1?','2 1 is correct.',0,'2011-11-10 10:26:07'),(88,489,2002,19,'لطفا اگر میشه در مورد سوال یه توضیح مختصر بدین چون من انگلیسیم خوب نیست و نفهمیدم','امکانش نیست. شما باید تسلط به زبان انگلیسی داشته باشید.',0,'2011-11-10 10:35:53'),(89,452,2007,19,'java.util.Arrays;<br />\nآیا از این کتابخانه میتوان استفاده کرد؟','man khodam oon moghe ke contest midadam, ba java code nemizadam, vali fek nemikonam in chizi ke zadin (java.util.Arrays) moshkeli dashte bashe, chize routinie ',0,'2011-11-10 10:36:54'),(90,534,2008,19,'what is the position of the basket?','No Response. Read the problem specification.',0,'2011-11-10 10:39:33'),(91,445,2008,19,'javabe kamele teste avvale mishe (51.68) va too soal gofte shode ke bayad adaad ro be nazdiktarin integer gerd konim, ke javab mishe (52) vali javabe khode test hast (51), chera?','Our answer is not 51.68 and 51 is correct.',0,'2011-11-10 10:42:12'),(92,30,-1,19,'Sharif score board until 14:09:<br />\n','Rank	Name	Solved	Time	    A    	    B    	    C    	    D    	    E    	    F    	    G    	    H    	    I    	Total att/solv<br />\n			<br />\n1	Laconic	6	818	1/14	3/92	1/39	3/96	0/--	2/231	0/--	2/226	0/--	12/6<br />\n2	Musketeers	5	465	1/24	3/--	1/17	1/96	2/--	1/157	0/--	0/--	1/171	10/5<br />\n3	Sut	5	587	1/1	3/145	2/35	1/126	1/--	0/--	0/--	2/200	0/--	10/5<br />\n4	Too_Funny	5	589	1/57	3/--	1/20	2/158	0/--	1/233	0/--	2/81	0/--	10/5<br />\n5	Oila	4	425	1/26	3/182	2/42	2/95	4/--	0/--	0/--	1/--	0/--	13/4<br />\n6	LiveCode.H	3	177	1/0	0/--	1/34	1/143	7/--	1/--	0/--	0/--	0/--	11/3<br />\n7	Goblin_Techies	3	458	1/121	2/--	1/45	0/--	3/--	0/--	0/--	4/232	0/--	11/3<br />\n8	Error_404	2	445	0/--	3/--	1/193	2/232	0/--	0/--	0/--	0/--	0/--	6/2<br />\n	Submitted/1st Yes/Total Yes			7/0/7	20/92/3	10/17/8	12/95/7	17/--/0	5/157/3	0/--/0	11/81/4	1/171/1	83/33',1,'2011-11-10 10:48:49'),(93,552,2001,19,'Do we have an empty line in the input?','I don\'t see any and of course not :D',0,'2011-11-10 10:58:28'),(94,7,-1,19,'salam judge claram miad?! :D','Yep',0,'2011-11-10 11:12:04'),(95,528,2002,19,'Hi<br />\nOur last answer to c was complied correctly as well as last answers of us to questions but judge tell us that your answer has an compilation error! that wasn\'t before!. What\'s the problem?!','It\'s an automated judge, and it has worked correctly since the beginning of the contest. So, I don\'t know.',0,'2011-11-10 11:17:28'),(96,432,-1,19,'Will the contest extended?','No',1,'2011-11-10 11:17:38'),(97,30,-1,19,'Dear Contestants,<br />\n<br />\n   The contest is over in a few seconds. khaste nabashin :D<br />\n<br />\n--Arsalan','No Response. Read the problem specification.',0,'2011-11-10 11:30:00'),(98,101,1096,21,'salam, khaste nabashid! :D<br />\nchera inghad soal beham rikhtast?<br />\nche vazeshe?<br />\n&gt;:P','No Response. Read the problem specification.',0,'2011-11-14 12:20:57'),(99,101,-1,21,'chera soala hame siahan?<br />\nmage shahadate?!','No Response. Read the problem specification.',0,'2011-11-14 12:21:32'),(100,10,-1,21,'Will the contest extend?','No! if anybody cares! :D',1,'2011-11-14 13:21:41'),(101,557,1100,21,'jam konin ba in sitetun :D alaki wrong mide :D <br />\n','Yes Response. Do not read the problem specification.',0,'2011-11-14 13:25:00'),(102,557,1104,22,'haji jajet kharabe :D ','kod e shoma raang anser khahad shod!',0,'2011-11-15 07:08:37'),(103,15,-1,23,'Salam Amir<br />\nin che vaze contest e. be ezaye har 1 soal ke hal nemikoni midooni che ettefaghi miofte :D<br />\n<br />\nHamed','برو بابا! سخته خب!',0,'2011-11-17 07:19:37'),(104,523,-1,23,'Hi,<br />\nIs the contest restricted to some universities? if not would you please tell where can I download the problemset?<br />\n',':)<br />\nYou can download the problem statements here:<br />\nhttp://acm.ro/problems.htm',0,'2011-11-17 07:44:32'),(105,10,1110,23,'is there any problem with i/o?','There was some extra character at the end of input and output.<br />\nREJUDGED!',1,'2011-11-17 09:43:25'),(106,523,-1,24,'Soala ro az koja mishe begirim ?','No Response. Read the problem specification.',0,'2011-11-18 06:02:01'),(107,651,-1,24,'Hi, where can I find the problemset?<br />\n<br />\nThank you','No Response. Read the problem specification.',0,'2011-11-18 06:12:42'),(108,440,-1,24,'Compilation Error shouldn\'t count as penalty. Isn\'t it?','',0,'2011-11-18 06:14:48'),(109,144,-1,24,'we havent any problem<br />\nplease get me a link to download.','No Response. Read the problem specification.',0,'2011-11-18 06:46:07'),(110,444,-1,24,'Where are the problems?','No Response. Read the problem specification.',0,'2011-11-18 06:47:24'),(111,144,-1,24,'buzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz','No Response. Read the problem specification.',0,'2011-11-18 07:26:00'),(112,576,-1,24,'!!سوالارو چطور میشه دید؟!','No Response. Read the problem specification.',0,'2011-11-18 08:15:54'),(113,30,1122,24,'soal e D special judge has va validatoresh ro roie site nazashtan, do not submit','No Response. Read the problem specification.',0,'2011-11-18 08:32:24'),(114,30,1122,24,'soal e D special judge hastesh, va validatoresh roie site nis, submit nakonid.','No Response. Read the problem specification.',1,'2011-11-18 08:33:35'),(115,424,-1,24,'hi<br />\nI am Login but I can\'t see text of any Problems in this contest :(  .<br />\nplease help.<br />\ncan you tell me ?','No Response. Read the problem specification.',0,'2011-11-18 08:50:30'),(116,140,-1,24,'where can i see the problems','No Response. Read the problem specification.',0,'2011-11-18 09:03:25'),(117,30,-1,27,'In conteste kheili sakht nistaaaa... man avalesh fek kardam in soala male 1 contest dgeas, 6 7 ta ro nagirin narahat mishamaaa... ;) <br />\ngood luck','--Arsalan',1,'2011-11-22 16:08:56'),(118,523,-1,29,'Is there any way for us to compete in the secret ongoing contest(AUT,UT &amp; SUT guys are submitting 404 problem :-D) ?','',0,'2011-11-24 06:40:35'),(119,10,-1,28,'بعضی سوال‌ها ممکنه<br />\nSpecial Judge<br />\nباشن! از اونجایی که کد<br />\nchecker<br />\nاونها رو نداریم، ممکنه اگه بفرستید <br />\nWrong<br />\nبخورید!<br />\n','--',1,'2011-11-24 06:54:53'),(120,596,5004,29,'what\'s the input and output file name?','',0,'2011-11-24 07:19:51'),(121,30,-1,61839612,'H ham begirid berim dge....','No Response. Read the problem specification.',1,'2011-11-25 10:50:46'),(122,30,-1,61839612,'Avarin...','',0,'2011-11-25 11:05:14'),(123,10,1157,61839612,'نشد دیگه! ران تایم ارور!','',0,'2011-11-25 11:09:11'),(124,10,-1,61839614,'------','You have to submit your solutions in JAVA! your solutions will be compiled with javac (version 1.6).<br />\nYour solution must have only one public class named &quot;Main&quot; and your class must be in default package (no package!)<br />\nUse STDIN and STDOUT for input and output.',1,'2011-12-16 05:50:50'),(125,761,-1,61839614,'checked','No Response. Read the problem specification.',0,'2011-12-16 05:51:57'),(126,764,5500,61839614,'import java.util.Scanner;<br />\n<br />\nimport javax.sound.sampled.ReverbType;<br />\n<br />\n<br />\npublic class main {<br />\n<br />\n	/**<br />\n	 * @param args<br />\n	 */<br />\n	public static void main(String[] args) {<br />\n		// TODO Auto-generated method stub<br />\n		 Scanner scan = new Scanner(System.in);<br />\n		  <br />\n		  int numberOfTekrar = scan.nextInt();<br />\n		  for (int i = 0; i &lt; numberOfTekrar; i++) {<br />\n			int firstNumber = scan.nextInt();<br />\n			int seconNumber = scan.nextInt();<br />\n			System.out.println(barax(barax(firstNumber)+barax(seconNumber)));<br />\n		  }<br />\n		  <br />\n			<br />\n			//while<br />\n		 // int temp = 0;<br />\n		<br />\n	}<br />\n	<br />\n	public static int barax ( int input)<br />\n	{<br />\n		int result  = 0;<br />\n		int k=1;<br />\n		while ( (input/k)!=0){<br />\n			result = 10*result + (input/k)%10;<br />\n			k = k*10;<br />\n		}<br />\n		//System.out.println(input + \'input \');<br />\n		return result;<br />\n		<br />\n	}<br />\n<br />\n}<br />\n','No Response. Read the problem specification.',0,'2011-12-16 06:04:03'),(127,751,5501,61839614,'import java.io.BufferedReader;<br />\nimport java.io.IOException;<br />\nimport java.io.InputStreamReader;<br />\npublic class Main {<br />\n	public static void main(String[] args) throws IOException {<br />\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));<br />\n		String N = bf.readLine();<br />\n		while(N != null){<br />\n			int n = Integer.parseInt(N) % 8;<br />\n			if(n==2 || n==6)<br />\n				System.out.println(&quot;yes&quot;);<br />\n			else<br />\n				System.out.println(&quot;no&quot;);<br />\n			N = bf.readLine();<br />\n		}<br />\n		<br />\n<br />\n	}<br />\n}<br />\n','No Response. Read the problem specification.',0,'2011-12-16 06:05:02'),(128,754,5501,61839614,'in test case hayi ke entehaa nadaran, bayad masalan while(Scanner.hasNext()) benevisim!? :P','Yes!',1,'2011-12-16 06:32:23'),(129,10,5503,61839614,'------','صورت سوال یکم مشکل داره!<br />\r\nشما باید سعی کنید امتیاز طرف مقابل رو کم کنید!<br />\r\nنفر اول جمله‌ی اول رو مشخص می‌کنه و شما باید یک طول مشخص کنید به طوری که امتیاز نفر اول کمینه باشه!<br />\r\nبه این هم دقت کنید بازی یک بار انجام میشه و ادامه نداره!\r\n<br />\r\nتست کیس دوم رو بخونید متوجه می‌شید!\r\n<br />\r\nیا می‌تونید فرض کنید نفر اول هستید و نفر دوم به صورت هوشمندانه بازی می‌کنه! بیشتری امتیازی که شما می‌تونید داشته باشید چقدره؟<br />',1,'2011-12-16 06:42:19'),(130,746,5504,61839614,'ye nod e khali vurudish chi mishe? ','No Response. Read the problem specification.',0,'2011-12-16 08:35:28'),(131,745,-1,61839614,'mishe ma enseraf bedim az edameye kar AYA?!?!?!','مشکل‌هاتون رو از تی‌ای ها بپرسید.',0,'2011-12-16 09:19:54'),(132,10,-1,61839614,'Will the contest extend?','Yes! :D<br />\nThe contest extended!',1,'2011-12-16 09:48:27'),(133,53,5008,61839615,'aeedkrjghser','عدد سوم خط اول حداکثر روزی است که هر پلیس می تواند کشیک دهد<br />\n<br />\nN خط آخر مشخص می کنند که برای هر پلیس اولین عدد (k) این است که این پلیس چند روز می تواند حاضر شود و k جفت بعدی که می آید هر کدام یک روز را مشخص می کند به این صورت که عدد اول این جفت شماره دوره و عدد دوم شماره روز آن دوره است که این پلیس می تواند حاضر شود.<br />\n<br />\nهر پلیس نباید دو روز از یک دوره را کشیک دهد و کلا هم بیشتر از عدد سوم خط اول کشیک ندهد.<br />\n<br />\n.در تست کیس ها، حداکثر تعداد کل پلیس ها 70 عدد و حداکثر تعداد کل روز ها 90 است<br />\n',1,'2011-12-22 06:22:09'),(134,53,5008,61839615,'O e No bayad bozorg bashe ke eshtebahan koochike','are',1,'2011-12-22 07:36:34'),(135,630,-1,61839616,'in yani beram? :D','آره بابا! برو دیگه! :دی<br />\nاینم سواله آخه داری حل می‌کنی؟<br />\nبرو <br />\nSGU',0,'2011-12-30 07:00:23'),(136,630,-1,61839616,'amir? :D javab nemidi?','No Response. Read the problem specification.',0,'2011-12-30 07:02:05'),(137,630,2018,61839616,'bia soale regionalemuno gereftam :D','No Response. Read the problem specification.',0,'2011-12-30 07:32:34'),(138,630,-1,61839616,':D sry amir :D<br />\n:D plz dont hurt me! :D','No Response. Read the problem specification.',0,'2011-12-30 07:36:13'),(139,520,-1,61839616,'Salam, khaste nabashid.<br />\nbebakhshid chera soal haei ke man hal karde budam hazf shodan?<br />\nhatta dishab soale 1012 ro accept gerefte budam ke on ham alan hazf shode...<br />\nfekr konam nabayad to in mosabeghe sherkat mikardam...<br />\nDoroste?','به شما ایمیل زده شد :)<br />\n',0,'2011-12-30 10:24:50'),(140,497,-1,61839617,'che khasis~ hala age yeki haminjoori contest shoma ro bede chi mishe mage..','از اونجا که این کانتست برای بچه‌های ساختمان داده‌س، سوالا رو توی سایت نمی‌ذاریم که دوستاشون از بیرون شرکت نکنن!<br />\nایمیلتون رو بدید صورت سوالا رو براتون بفرستیم!<br />\nولی سوالا خیلی آسونن‌ها! به درد تمرین و اینا نمی‌خورن! :دی',0,'2012-01-05 05:42:50'),(141,10,5511,61839617,'-----','در ورودی، اول عدد<br />\nM<br />\nو بعد عدد<br />\nN<br />\nمی‌آید!',1,'2012-01-05 05:43:24'),(142,745,5508,61839617,'adade 446 nabayad be 400 gerd beshe?! ya 1445 be 1000 na 2000!!!!','صورت سوال رو دقیق بخونید.',0,'2012-01-05 05:47:46'),(143,10,5513,61839617,'-----','طبیعتا کلمات در ورودی به ترتیب ظاهر نمی‌شوند!!',1,'2012-01-05 06:15:33'),(144,10,5515,61839617,'منظور از <br />\nHFT<br />\nهمون<br />\nHFL<br />\nهست! اشتباه تایپی!','!',1,'2012-01-05 06:32:45'),(145,760,5511,61839617,'baraye bishtarin danehaye moosh P ra har adadi ke bekhahim mitoonim dar nazar begirim?','بله',0,'2012-01-05 08:16:21'),(146,10,5514,61839617,'-------','اگر جواب ۱ باشه، باید به جای <br />\nchannel<br />\nچاپ کنید!<br />\nنه <br />\nchannels',1,'2012-01-05 09:45:14'),(147,753,-1,61839617,'sample_clar','fdxeuqvqpffeubdxfbv',0,'2012-01-05 09:53:03'),(148,10,-1,61839617,'--------','از ساعت ۳ اعتراض‌ها شروع می‌شن!<br />\nبه ترتیب رنکینگ همین مسابقه ده دقیقه به ده دقیقه تیم‌ها بیان اتاق شورا!<br />\nطبقه‌ی دوم!',1,'2012-01-05 10:40:23'),(149,726,-1,61839618,'salam <br />\nbebakhshid mage gharar nabood ba har zabani ke mikhahim submit konim.<br />\nto gozine ha faghat java dare....','درست شد!<br />\nممنون',0,'2012-02-16 07:06:24'),(150,23,7002,61839618,'baraye vurudie 0 bayad 1 javab bedim na 0 (ke albate 0 manteghitare).','باشه',0,'2012-02-17 14:15:46'),(151,967,-1,61839618,'شرح مسئله کجاست؟؟','در سایت درس طراحی الگوریتم',0,'2012-02-20 20:48:49'),(152,1016,1176,61839621,'what is the limit of n?','',0,'2012-03-02 06:31:30'),(153,885,7003,61839620,'test case','No Response. Read the problem specification.',0,'2012-03-09 14:50:14'),(154,842,7003,61839620,'i cant see it','Its private! for University of Tehran DAA Course! Sorry!',0,'2012-03-11 17:40:37'),(155,12,-1,61839624,'چرا سرعت اینقدر پایین است؟','با عرض پوزش، به دلیل مشکلات به وجود آمده برای اینترنت دانشکده ارتباط سرور قضاوت با سرور شیرکد بسیار کند است.<br />\nلطفاً پس از ارسال پاسخ هر مسأله، وقت خود را صرف حل کردن سؤال دیگری کنید.<br />\n<br />\nبا تشکر',1,'2012-05-25 16:14:37'),(156,10,-1,61839624,'آفرین! :دی','',0,'2012-05-25 17:55:01'),(157,1021,1078,61839626,'اگه راهی باشه برای اینکه برای همین نمونه مطرح شده در صورت سوال تخفیف بیشتری به دست بده<br />\nاونوقت جواب اشتباه میشه<br />\nولی بیشترین تخفیفه باز!<br />\nحکم چیه!؟<br />\n(مثلا اگه یه سری ۴۰۰و۳۵۰ و ۳۰۰ رو ببره یه سری ...یه سری ۲۵۰ و ۲۰۰ و ۱۵۰ و یه سری هم ۱۰۰ رو اونوقت تخفیفش میشه ۴۵۰!)','No Response. Read the problem specification.',0,'2012-07-26 06:56:30'),(158,726,9003,61839627,'mage sub cube nabayad yek a^3 tayi bashe to mesale khodesh a*a*3 tayi gerefte','No Response. Read the problem specification.',0,'2012-08-03 07:48:22'),(159,1257,9001,61839629,'toole string hadeaksar cheghadre????','No Response. Read the problem specification.',0,'2012-08-16 06:28:49'),(160,1257,9005,61839629,'یه نگاهی به الگوریتم مون میندازین؟','jlwdhxclwvhbqnvtgkruitthtknqcsugmmjlkpisuubxljsjrqnxqwwwxmmibmenbvvhrbjdjbsqkrwbmqibe<br />\nجواب این تست<br />\n670<br />\nهست',0,'2012-08-16 08:58:30'),(161,23,1316,61839631,'sample output is not in the correct format','No judge to answer! :D<br />\nچه جوری باید باشه؟<br />\nاینو از روی پی‌دی‌اف بهنود کپی پیست کرده!<br />\nسه تا اسپیس می‌خواد بین عددا؟<br />\nحالا بعداً درستش می‌کنیم!',0,'2012-08-30 07:29:25'),(162,10,-1,61839632,'        ‌','',0,'2012-09-06 05:46:22'),(163,12,1323,61839632,'There was a problem with the test data!<br />\n','All the runs for problem B has been rejudged!',1,'2012-09-06 07:48:23'),(164,794,1327,61839632,'aya mishe chand bar be campus ya address ha raft va bargasht ? ','Read the sample input!',0,'2012-09-06 07:49:52'),(165,1291,1327,61839632,'aya mishe chand bar be campus ya addressha raft va bargasht?','Read the sample input!',0,'2012-09-06 07:58:02'),(166,10,-1,61839633,'What are the other users in the ranklist?','The contest\'s ranklist is virtual, so the original ranklist is merging the current one!',1,'2012-09-13 05:31:31'),(167,1305,1333,61839633,'what &quot;Presentation Error&quot;?<br />\nhelp me','Do not output trailing white spaces.<br />\nPrint a blank line after each test case!',0,'2012-09-13 07:57:06'),(168,1303,1334,61839633,'I\'m pretty sure that the answer for<br />\n3<br />\n10920 2184 6552<br />\nis not 1/3, would you please check it?','',0,'2012-09-13 09:02:32'),(169,1324,1344,61839634,'#include&lt;iostream&gt;<br />\n#include&lt;stdio.h&gt;<br />\nusing namespace std;<br />\nint cal,fat,arr[3];<br />\nbool f(int index,float sum)<br />\n{<br />\n       if(index==2)<br />\n     {<br />\n                if(sum&lt;cal+0.5 &amp;&amp; sum&gt;cal-0.6)<br />\n                return true;<br />\n                return false;<br />\n     }<br />\n     for(int i=0.0;i&lt;0.5;i+=0.1)<br />\n     {<br />\n        if(f(index+1,(sum+4 * (arr[index]+i))))<br />\n        return true;<br />\n        if(f(index+1,(sum+4 * (arr[index]-(i+0.1)))))<br />\n        return true;   <br />\n        return false;   <br />\n     }<br />\n}<br />\nint main()<br />\n{<br />\n    while(scanf(&quot;%d %d %d %d&quot;,&amp;cal,&amp;fat,arr,arr+1))<br />\n    {<br />\n                    if(cal==0 &amp;&amp; fat==0 &amp;&amp; arr[0]==0 &amp;&amp; arr[1]==0)<br />\n                    break;<br />\n                    bool check=1;<br />\n                    for(float i=0.0;i&lt;0.5;i+=0.1)<br />\n                    {<br />\n                            if(f(0,(9 * (fat+i))))<br />\n                            {<br />\n                                     printf(&quot;yes\\n&quot;);<br />\n                                     check=false;<br />\n                                     break;<br />\n                            }<br />\n                            if(f(0,9 * (fat-(i+0.1))))<br />\n                             {<br />\n                                     printf(&quot;yes\\n&quot;);<br />\n                                     check=false;<br />\n                                     break;<br />\n                            }<br />\n                            <br />\n                    }<br />\n                    if(check)<br />\n                    printf(&quot;no\\n&quot;);            <br />\n    }<br />\n    return 0;}<br />\n','?',0,'2012-09-20 06:43:37'),(170,1168,1343,61839634,'do ta charkhesh 2n ta tik dare?<br />\nharekat beine 0-1 chand ta tik hesab mishe? 1 ya 2?','&gt;&gt;  do ta charkhesh 2n ta tik dare?<br />\nYes.<br />\n<br />\n&gt;&gt; harekat beine 0-1 chand ta tik hesab mishe? 1 ya 2?<br />\n1.',0,'2012-09-20 07:46:43'),(171,1168,1342,61839634,'Output Limit error chie?!<br />\n<br />\nman daram dorost chap mikonam vali error output mide!','It means your program outputs many characters that is bigger than the judge\'s output!<br />\nCheck your program termination conditions.',0,'2012-09-20 07:53:11'),(172,1168,1342,61839634,'Moshkele Ghablim raf shod. taghsire khodam bud. eshtebah khoruji midadam. mamnun.',':)',0,'2012-09-20 07:58:57'),(173,1295,1348,61839634,'input 4 &amp; input 9 in this problem are equal, but output 4 &amp; output 9 are not. what\'s the problem?','they\'re not the same',0,'2012-09-20 08:11:29'),(174,1168,1343,61839634,'Salam,<br />\n<br />\nTu sample avval :<br />\n1- residan az noghat mokhtalef be t1 jam\'esh mishe jam\'e adad 0..n - 1 + 2n ta baraye har kodum = 80 * 79  / 2 + 80 * 2 * 80<br />\n2- residan az t1 be t2 va az t2 be t3 150 tick dare ke mishe : 80 * 150 <br />\npas dar nahayat javab mishe:349.5<br />\n<br />\npas chera shoma neveshtid 369.5?','2- ghalate :D',0,'2012-09-20 08:34:53'),(175,1303,1348,61839634,'the fourth and the ninth line of the sample input are exactly the same, but their answers in sample output are different, why?','Refresh the problem statement page!',0,'2012-09-20 08:48:08'),(176,1168,1343,61839634,'Mage harekat dige anjam mishe joz ina?<br />\nbaraye residan az t1 be t2 avval ye charkhesh = n ba\'desh 60 ta harekat<br />\naz t2 be t3 ham ke 10 ta harekat mibare<br />\n60 + 10 + 80 = 150<br />\n','No Response. Read the problem specification.',0,'2012-09-20 09:02:04'),(177,1168,1345,61839634,'toye smaple avval rebalance avvale term 5 rokh mide ya akharesh?','No Response. Read the problem specification.',0,'2012-09-20 09:33:53'),(178,1168,1346,61839634,'chppe enter ba\'de khatte akhar wrong mikhore?','',0,'2012-09-20 10:21:15'),(179,1360,1356,61839636,'Hi, Can a queen be in (1 , 1) from first?','No.',0,'2012-09-27 07:49:16'),(180,1168,1353,61839636,'blank akhare khatte dovvome har instance nist?','There is only one input!',0,'2012-09-27 08:14:56'),(181,1305,1355,61839636,'what is \'t\'?','Apparent Prime: A positive number that is not divisible by all integer numbers greater than 1 and less than or equal to t is called apparent prime. The value of t will be supplied for you.',0,'2012-09-27 08:31:20'),(182,1168,1356,61839636,'can a queen pas another one?<br />\nye queen mitune az un yeki begzare?','No Response. Read the problem specification.',0,'2012-09-27 08:46:03'),(183,1319,1352,61839636,'hello admin,<br />\nIs it safer to assume that V is always greater than T in the input.<br />\n<br />\nThanks in advance','Thank you :)',0,'2012-09-27 09:14:45'),(184,1168,1360,61839636,'in the first sample can 2-1-3 be used as an special path?','No Response. Read the problem specification.',0,'2012-09-27 09:24:42'),(185,10,-1,61839637,'Is &quot;Mehran_USB&quot; a cheater?','Yes. He uploads judge solutions! Just ignore him :)',1,'2012-10-04 08:22:58'),(186,1289,-1,61839637,'for real? or u\'re kidding!:D<br />\ncuz he didn\'t try on problem E!:D','Maybe the solution for problem E is hard to find on the internet! :D',0,'2012-10-04 09:03:30'),(187,1303,9020,61839641,'what is MAX_N (maximum number in the input) in this problem? it\'s not mentioned in the problem statement.','',0,'2012-10-18 08:00:50'),(188,1302,1376,61839643,'Our last submission must be accepted, probably the judge output is incorrect . Our solution got accepted here : http://poj.org/status ( They always fix bugs in SEERC problems, You can use our solution to generate correct output :D )','سخته!! :دی<br />\nحالا اکسپتشو می‌دم! ولی دفه‌ی آخرتون باشه! :دی',0,'2012-11-01 09:08:35'),(189,10,1389,61839645,'------','There was a problem with Problem E test data and special judge checker.<br />\n<br />\nRejudged.',1,'2012-11-21 08:15:43'),(190,1778,1001,61839651,'ورودی و خروجی از طریق فایل می باشد یا رشته؟','No',0,'2012-12-05 13:43:25'),(191,1168,1023,61839651,'words in output should be in lowercase or uppercase?<br />\n','lowercase!',0,'2012-12-05 13:45:11'),(192,1168,1023,61839651,'kalamate toye output bayad kuchik bashan ya bozorg?<br />\n','lowercase!',0,'2012-12-05 14:05:33'),(193,1360,1023,61839651,'If There\'s no word, what should we give for ouput?','There is no such cases.',0,'2012-12-05 14:06:25'),(194,1693,1023,61839651,'توی متن سوال گفته شده برنامه حساس به کوچیک و بزرگی حروف نیست. اگه دو تا کلمه در حالت حساس مساوی نباشند اما در حالت غیر حساس مساوی باشند، کدوم یکی رو باید بفرستیم به خروجی؟','همه ی حروف را باید به حالت حروف کوچک تبدیل کنید',0,'2012-12-05 14:17:35'),(195,1732,1001,61839651,'EOF  مخفف چیه؟','End Of File',0,'2012-12-05 14:19:02'),(196,1818,6005,61839651,'lamp e aval hatman bayad roshan bashe ? masalan test case e zir dorost hast ya nist ? <br />\n3 0 1 0<br />\noutput : 0<br />\n<br />\nnemishe injuri ?','تست درست است. لازم نیست که لامپ اول روشن باشد',0,'2012-12-05 14:22:38'),(197,1695,-1,61839651,'برنامه فایل ورودی رو از کجا باید بخونه؟','Standard Input/Output',0,'2012-12-05 14:23:36'),(198,1818,6005,61839651,'does the first lamp have to be switched on or it doesn\'t matter whether it\'s on or off ?<br />\n<br />\nwhat would be the answer to this test case ? 1 or 0 ?<br />\n<br />\n3 0 1 0','Doesn\'t matter the first lamp is on or off. For &quot;3 0 1 0&quot; answer is &quot;0&quot;.',0,'2012-12-05 14:29:51'),(199,1708,1001,61839651,'با سلام. هدر فایل <br />\nIOSTREAM<br />\nبرای برنامه ما کار نمیکند. مشکل چیست؟<br />\n','No Response. Read the problem specification.',0,'2012-12-05 14:34:11'),(200,1775,6005,61839651,'من هر چفدر تست می کنم جوابم درسته چرا wrong ansewr می ده؟','No Response. Read the problem specification.',0,'2012-12-05 14:40:23'),(201,1818,6005,61839651,'لامپ اول حتما باید روشن باشد ؟<br />\nجواب تست کیس زیر چیست ؟<br />\n4 0 1 0 1','خیر، جواب 0 است',0,'2012-12-05 14:46:48'),(202,1756,6005,61839651,'man barnamam doroste kamelan va ba koli test case emtehan kardam ama nemidunam chera wrong mide !!<br />\n<br />\nvorudiro injuri migire while( cin&gt;&gt;n )  baed mikhune n ta <br />\nbaed be ezaye har n yeki chap mikone   va  endl  ham nazashtam , doroste ? ','بله',0,'2012-12-05 14:47:33'),(203,1760,1023,61839651,'why have two ,.;\\\'\'\\&quot;()/:-.  in the problem ?','It is a fault in problem statement!',0,'2012-12-05 14:56:17'),(204,1760,1023,61839651,'  why have two back slashes  ,.;\\\'\'\\&quot;()/:-. in the problem ? ','It is a fault in problem statement!',0,'2012-12-05 14:57:05'),(205,1790,1001,61839651,'سلام<br />\nمیشه بگید کجای این کد مشکل داره؟<br />\n#include&lt;iostream&gt;<br />\nusing namespace std;<br />\nint main()<br />\n{<br />\n	int y,z,y2,z2;<br />\n	<br />\n		cin&gt;&gt;y&gt;&gt;z;<br />\n		cin&gt;&gt;y2&gt;&gt;z2;<br />\n		cout&lt;&lt;y+z&lt;&lt;&quot;\\n&quot;;<br />\n		cout&lt;&lt;z2+y2;<br />\n		return 0;<br />\n}','No Response. Read the problem specification.',0,'2012-12-05 15:05:38'),(206,1841,1001,61839651,'Salam.<br />\nman ba JAVA code mizanam.<br />\ninke neveshtid: &quot;The input ends at end-of-file.&quot;<br />\n1 rahnamaE mikonid ke ino chejoori bayad 2 codam biaram?','Use something such this.<br />\nScanner sc = new Scanner(System.in);<br />\nwhile (sc.hasNextLong()) {<br />\n     int a = sc.nextInt();<br />\n}',0,'2012-12-05 15:26:51'),(207,1775,6005,61839651,'آقا کد من درسته چرا ایراد میگیره؟','No Response. Read the problem specification.',0,'2012-12-05 15:43:03'),(208,1769,1023,61839651,'مشکل برنامه ما چیست؟ ممنون','No Response. Read the problem specification.',0,'2012-12-05 16:16:11'),(209,1740,1001,61839651,'what should we use for EOF ?','1) while(cin &gt;&gt; a){}<br />\n2) while(scanf(&quot;%d&quot;, &amp;a) &gt; 0){}',0,'2012-12-05 16:32:05'),(210,1769,1023,61839651,'any answer for my fault?????','No Response. Read the problem specification.',0,'2012-12-05 16:42:11'),(211,1711,6005,61839651,'چرا برا برنامه ما ارور میده در حالی که درسته؟','No Response. Read the problem specification.',0,'2012-12-05 16:51:41'),(212,1828,1001,61839651,'import java.util.Scanner;<br />\npublic class main {<br />\n	public static void main(String[] args) {		<br />\n		Scanner input = new Scanner(System.in);<br />\n		String strout=&quot;&quot;;<br />\n		int sum=0;		<br />\n		while ( input.hasNext() )<br />\n		{<br />\n			String strint = input.nextLine();		<br />\n			String[] strin = strint.split(&quot; &quot;);			<br />\n			for(int i= 0 ; i&lt; strin.length ; i++)<br />\n				sum += Integer.parseInt( strin[i] );			<br />\n				<br />\n			strout +=( sum + &quot;\\n&quot;) ;<br />\n			sum = 0;<br />\n		}<br />\n		System.out.println(strout);		<br />\n	}<br />\n}','No Response. Read the problem specification.',0,'2012-12-05 17:09:18'),(213,1828,1001,61839651,'import java.util.Scanner;<br />\npublic class Main {<br />\n	public static void main(String[] args) {		<br />\n		Scanner input = new Scanner(System.in);		<br />\n		int sum=0;		<br />\n		while ( input.hasNext() )<br />\n		{<br />\n			String strint = input.nextLine();		<br />\n			String[] strin = strint.split(&quot; &quot;);			<br />\n			for(int i= 0 ; i&lt; strin.length ; i++)<br />\n				sum += Integer.parseInt( strin[i] );													<br />\n			System.out.println( sum);<br />\n			sum = 0;<br />\n		}	<br />\n	}<br />\n}','Send your code in submit tag!',0,'2012-12-05 17:38:30'),(214,1289,2020,61839653,'Defence? or Defense?','Defense :D',0,'2012-12-06 05:44:44'),(215,1774,2020,61839653,'در این سوال, در جدول کلمه <br />\nDefence <br />\nنوشته شده ولی در خروجی<br />\nDefense<br />\n<br />\nبه خاطر همین دو بار رانگ داد. لطفا بازداوری کنید.','بررسی می شود. نگران نباشید',0,'2012-12-06 05:57:27'),(216,1302,2026,61839653,'In the n-th round, shall we consider the first n choices in vote lists, or only the n-th choice ?','In each round we only consider the best choice of each voter that is not eliminated yet.',0,'2012-12-06 06:14:02'),(217,44,2020,61839653,'What is correct? &quot;Defence&quot; of &quot;Defense&quot;?','&quot;Defense&quot; is correct.<br />\n<br />\nThe problem description is fixed.',1,'2012-12-06 06:30:22'),(218,1730,2020,61839653,'سلام،<br />\nخروجی برنامه نوشته شده با جاوا کاملا درسته، ولی متاسفانه فقط Wrong Answer میگیریم.<br />\nلطفا بررسی شود<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n/*<br />\n * To change this template, choose Tools | Templates<br />\n * and open the template in the editor.<br />\n */<br />\npackage q1;<br />\nimport java.util.*;<br />\n<br />\n/**<br />\n *<br />\n * @author Armin<br />\n */<br />\npublic class Main {<br />\n<br />\n    /**<br />\n     * @param args the command line arguments<br />\n     */<br />\n    public static void main(String[] args) {<br />\n        // TODO code application logic here<br />\n        Scanner in = new Scanner(System.in);<br />\n       // int testCases = Integer.parseInt(in.nextLine());<br />\n        for(int x = 0; x &lt; 999; x++) {<br />\n            String theLine = in.nextLine().trim();<br />\n            if(theLine.equals(&quot;0 0 0&quot;)) {<br />\n                break;<br />\n            }<br />\n            String theBreak[] = theLine.split(&quot; &quot;);<br />\n            int _age = Integer.parseInt(theBreak[0]);<br />\n            int _w = Integer.parseInt(theBreak[1]);<br />\n            int _s = Integer.parseInt(theBreak[2]);<br />\n            <br />\n            boolean hasSth = false;<br />\n            if(_age &lt;= 30 &amp;&amp; _w &gt;= 70 &amp;&amp; _s &gt;= 500) {<br />\n                System.out.print(&quot;Mid-field&quot;);<br />\n                hasSth = true;<br />\n            }<br />\n            <br />\n            if(_age &lt;= 26 &amp;&amp; _w &gt;= 60 &amp;&amp; _s &gt;= 200) {<br />\n                if(hasSth) {<br />\n                    System.out.print(&quot; &quot;);<br />\n                }<br />\n                System.out.print(&quot;Forward&quot;);<br />\n                hasSth = true;<br />\n            }<br />\n            <br />\n            if(_age &lt;= 36 &amp;&amp; _w &gt;= 80 &amp;&amp; _s &gt;= 300) {<br />\n                if(hasSth) {<br />\n                    System.out.print(&quot; &quot;);<br />\n                }<br />\n                System.out.print(&quot;Defense&quot;);<br />\n                hasSth = true;<br />\n            }<br />\n            <br />\n            if(hasSth) {<br />\n                String newLine = System.getProperty(&quot;line.separator&quot;);<br />\n                System.out.print(newLine);<br />\n            } else {<br />\n                System.out.println(&quot;No positions&quot;);<br />\n            }<br />\n        }<br />\n       <br />\n        <br />\n        <br />\n        <br />\n    }<br />\n}<br />\n','Your code is correct and will be accepted. It sounds to be a problem with the judge environment. We will check into it. Meanwhile proceed to the next problem.',0,'2012-12-06 06:32:31'),(219,1730,2020,61839653,'Absolutely sure it\'s not working in Java compiler. we are sure that we entered &quot;Defense&quot; as you see above','Check the answer to your previous clar.',0,'2012-12-06 06:44:48'),(220,1810,2020,61839653,'can input contain characters? if yes what should be the reaction?','No, each line of input is three space-separated integers.',0,'2012-12-06 06:47:05'),(221,1677,2025,61839653,'How many test cases are there?<br />\nwhat is that 0 at the end of input?','There is no 0 at the end of input. Fixed!',0,'2012-12-06 06:54:38'),(222,1748,2020,61839653,'which part of our program is wrong ?','No Response. Read the problem specification.',0,'2012-12-06 06:59:43'),(223,1774,2026,61839653,'If a candidate gets more than half <br />\nof the ***votes***, he/she wins the election. Otherwise, the candidate with the lowest ***vote*** counts (or candidates, ...<br />\n۱.<br />\nمنظور از رای تمام رای هاست یا فقط رای های در اولویت اول؟<br />\n۲.<br />\nاگر کاندیدایی حذف شود و در لیستی اولویت اول باشد<br />\nممکن است نفر دوم در ان لیست جایش را بگیرد؟','The problem statement is quite clear.<br />\n1. Only the first not eliminated choice of each voter is taken into account.<br />\n2. Definitely. <br />\n',0,'2012-12-06 07:04:18'),(224,1315,2026,61839653,'age emkanesh hast be test-data e soale G ye negahi bendazid<br />\nman taghriban motmaen am code am doroste<br />\n<br />\nmamnoon','No Response. Read the problem specification.',0,'2012-12-06 07:05:10'),(225,1772,2020,61839653,'کجای برنامه ما  مشکل دارد؟','No Response. Read the problem specification.',0,'2012-12-06 07:05:22'),(226,1812,-1,61839653,'we have to read from console or file?<br />\n&quot; wrong Answer &quot; include the problem with input or output?','Standard input/output. (console)<br />\nNormally with output!',0,'2012-12-06 07:13:15'),(227,1779,-1,61839653,'از ویژوا استادیو می توان استفاده کرد؟','Yes, you can use it to write your code. But make sure your code is also compatible with g++ compiler, because eventually it will be compiled with g++ 4.6.2.',0,'2012-12-06 07:23:30'),(228,1779,-1,61839653,'خطای کامپایل داریم. چه کنیم؟','No Response. Read the problem specification.',0,'2012-12-06 07:24:13'),(229,1694,2025,61839653,'What\'s the range of Id Numbers?','Read the problem statement carefully.<br />\n&quot;Item/Bidder id is a non-negative integer number.&quot;',0,'2012-12-06 07:28:30'),(230,1835,2023,61839653,'salam<br />\nkey test case ha tamom mishe?','When n is equal to 0. Sample output updated.',0,'2012-12-06 07:28:55'),(231,1859,2020,61839653,'our output must be follow your example exactly or not?<br />\n','Yes.',0,'2012-12-06 07:33:51'),(232,1887,-1,61839653,'خروجی ها باید بعد از ورود همه ی داده ها چاپ شوند یا فرقی نمیکند؟','فرقی نمی کند',0,'2012-12-06 07:34:29'),(233,1740,-1,61839653,'با پیغام <br />\nCompilation Error<br />\nمواجه شده ایم<br />\nچه کنیم؟<br />\nمشکل  چیست؟','Make sure your code is compiling with the compiler you submit. For more information test your code here:<br />\nhttp://ideone.com',0,'2012-12-06 07:38:29'),(234,44,-1,61839653,'Is there any issue with HTML format of problem statements?','PDF version of problems is more reliable. HTML have some issues due to caching mechanism.<br />\n<br />\nAlso be noted that the HTML version of problems A, D and F had minor changes and are updated.',1,'2012-12-06 07:42:36'),(235,1790,2020,61839653,'ایا نمایش خروجی بعداز هر ورودی اشکالی دارد؟','خیر',0,'2012-12-06 07:45:16'),(236,1730,2026,61839653,'Some Java core libraries are not installed in server. please check our code handy, the result is correct.<br />\n<br />\npackage q2;<br />\nimport com.sun.xml.internal.bind.v2.model.core.MaybeElement;<br />\nimport java.util.*;<br />\n<br />\npublic class Main {<br />\n    public static void main(String[] args) {<br />\n        // TODO code application logic here<br />\n        Scanner in = new Scanner(System.in);<br />\n        for(int x = 0; x &lt; 999; x++) {<br />\n            String theLine = in.nextLine().trim();<br />\n            if(theLine.equals(&quot;0 0&quot;)) break;<br />\n            String theBreak[] = theLine.split(&quot; &quot;);<br />\n            int _t = Integer.parseInt(theBreak[0]);<br />\n            int _v = Integer.parseInt(theBreak[1]);<br />\n            Hashtable b = new Hashtable();<br />\n           <br />\n            for(int y = 0; y &lt; _v; y++) {<br />\n                String theGuy = in.nextLine().trim();<br />\n                if(b.containsKey(theGuy)) {<br />\n                   // System.out.println(&quot;:t&quot;);<br />\n                    b.put(theGuy, (Integer)b.get(theGuy) + 1);<br />\n                } else {<br />\n                   // System.out.println(&quot;:n&quot;);<br />\n                    b.put(theGuy, 0);<br />\n                }<br />\n            }<br />\n            <br />\n            <br />\n            int _theMax = 0;<br />\n            String _theMaxKey = &quot;&quot;;<br />\n            Enumeration names; <br />\n            names = b.keys(); <br />\n            while(names.hasMoreElements()) { <br />\n               String str = (String) names.nextElement(); <br />\n               //System.out.println(&quot;::&quot; + b.get(str));<br />\n               <br />\n               if  ((Integer)b.get(str) &gt; _theMax) {<br />\n                   _theMax = (Integer)b.get(str);<br />\n                   _theMaxKey = str;<br />\n               }<br />\n            }<br />\n            <br />\n            if(_theMax == 0) {<br />\n                System.out.println(&quot;There is no winner&quot;);<br />\n            } else {<br />\n                System.out.println(_theMaxKey.split(&quot; &quot;)[0]);<br />\n            }<br />\n           <br />\n            <br />\n            <br />\n        }<br />\n    }<br />\n}<br />\n','You Should Comment package and editor dependent lines before submitting to judge (in this problem, first two lines)',0,'2012-12-06 07:47:20'),(237,1730,2026,61839653,'Java: And again we get wrong answer, but the results are correct. please check the results.<br />\n<br />\npackage q2;<br />\nimport java.util.*;<br />\n<br />\n<br />\npublic class Q2 {<br />\n    public static void main(String[] args) {<br />\n        // TODO code application logic here<br />\n        Scanner in = new Scanner(System.in);<br />\n        for(int x = 0; x &lt; 999; x++) {<br />\n            String theLine = in.nextLine().trim();<br />\n            if(theLine.equals(&quot;0 0&quot;)) break;<br />\n            String theBreak[] = theLine.split(&quot; &quot;);<br />\n            int _t = Integer.parseInt(theBreak[0]);<br />\n            int _v = Integer.parseInt(theBreak[1]);<br />\n            Hashtable b = new Hashtable();<br />\n           <br />\n            for(int y = 0; y &lt; _v; y++) {<br />\n                String theGuy = in.nextLine().trim();<br />\n                if(b.containsKey(theGuy)) {<br />\n                   // System.out.println(&quot;:t&quot;);<br />\n                    b.put(theGuy, (Integer)b.get(theGuy) + 1);<br />\n                } else {<br />\n                   // System.out.println(&quot;:n&quot;);<br />\n                    b.put(theGuy, 0);<br />\n                }<br />\n            }<br />\n            <br />\n            <br />\n            int _theMax = 0;<br />\n            String _theMaxKey = &quot;&quot;;<br />\n            Enumeration names; <br />\n            names = b.keys(); <br />\n            while(names.hasMoreElements()) { <br />\n               String str = (String) names.nextElement(); <br />\n               //System.out.println(&quot;::&quot; + b.get(str));<br />\n               <br />\n               if  ((Integer)b.get(str) &gt; _theMax) {<br />\n                   _theMax = (Integer)b.get(str);<br />\n                   _theMaxKey = str;<br />\n               }<br />\n            }<br />\n            <br />\n            if(_theMax == 0) {<br />\n                System.out.println(&quot;There is no winner&quot;);<br />\n            } else {<br />\n                System.out.println(_theMaxKey.split(&quot; &quot;)[0]);<br />\n            }<br />\n            <br />\n            //int _total = (int)Math.round(Math.pow(3,_theK));<br />\n           // int _mt = (int)(_total / 3);<br />\n            <br />\n            <br />\n        }<br />\n    }<br />\n}<br />\n','1) You Should Comment package line before submitting to judge.<br />\n2) Your solution is incorrect!',0,'2012-12-06 08:02:06'),(238,1780,2026,61839653,'If everyone has the same vote counts, should we eliminate all or redo the process? (Since they all have the fewest votes)','Read the problem statement carefully and check the samples.',0,'2012-12-06 08:10:10'),(239,1790,2020,61839653,'برنامه من به ازای تمام ورودی ها خروجی مناسب میده ولی کامپایلر شما خطا میدهد .چرا؟','You don\'t have any submission.',0,'2012-12-06 08:13:09'),(240,1790,2020,61839653,'برنامه من به ازای تمام ورودی ها خروجی مناسب میده ولی کامپایلر شما خطا میدهد .چرا؟<br />\n<br />\n','Because your solution is wrong indeed!',0,'2012-12-06 08:31:53'),(241,1315,2026,61839653,'mishe be code man va khoroojim ye negahi bendazid<br />\n<br />\nshayad aslan khoroji nemide , chon man ba visual studio javab migiram !','You solution is incorrect!',0,'2012-12-06 08:33:08'),(242,1715,2026,61839653,'Can The Election Last More Than 2 Round?','Maybe!',0,'2012-12-06 08:41:37'),(243,1743,2021,61839653,'My C Code for problem B is true but this error shown:<br />\nOutput Limi Error<br />\nplease check this','There is some problem with your input/output, check them!',0,'2012-12-06 08:44:03'),(244,1694,2025,61839653,'Is there only one test case?','Yes.',0,'2012-12-06 08:44:50'),(245,1715,2026,61839653,'does any test case like this in valid<br />\n3 3<br />\nsaeed<br />\nsaeed ali<br />\nali saeed mohammad<br />\nI mean all voter vote same names number or first voter can vote for only 1 name when third voter vote for 3 candidate','Yes, it\'s valid and different voters can have different number of votes.',0,'2012-12-06 08:53:26'),(246,1883,2020,61839653,'این کد مشکلش چیست<br />\n/*<br />\n * To change this template, choose Tools | Templates<br />\n * and open the template in the editor.<br />\n */<br />\npackage acma;<br />\n<br />\nimport java.util.Scanner;<br />\n<br />\n/**<br />\n *<br />\n * @author MirReza<br />\n */<br />\npublic class AcmA {<br />\n<br />\n    /**<br />\n     * @param args the command line arguments<br />\n     */<br />\n    public static void main(String[] args) {<br />\nint a=1;<br />\n        while(a&lt;2)<br />\n        { <br />\n        int age=-1, weight=-1, strength=-1;<br />\n<br />\n        Scanner sc = new Scanner(System.in);<br />\n        String st = sc.nextLine();<br />\n        int j = 0, k = 0, t = 0;<br />\n        for (int i = 0; i &lt; st.length(); i++) {<br />\n            if (st.substring(i, i + 1).equals(&quot; &quot;)) {<br />\n                j = i;<br />\n                age = Integer.parseInt(st.substring(0,j));<br />\n                break;<br />\n            }<br />\n        }<br />\n        for (int i = j + 1; i &lt; st.length(); i++) {<br />\n            if (st.substring(i, i + 1).equals(&quot; &quot;)) {<br />\n                k = i;<br />\n                weight = Integer.parseInt(st.substring(j + 1, k));<br />\n                break;<br />\n            }<br />\n        }<br />\n<br />\n                if(weight!=-1)<br />\n                strength = Integer.parseInt(st.substring(k+1,st.length()));<br />\n<br />\n<br />\n            <br />\n<br />\n            <br />\n        if(age==0 &amp;&amp; weight==0 &amp;&amp; strength==0)<br />\n        break;<br />\n        int count;<br />\n        count=0;<br />\n        if(age &lt;=30 &amp;&amp; weight&gt;=70 &amp;&amp; strength&gt;=500){<br />\n            System.out.print(&quot;Mid-field&quot;);<br />\n        count++;<br />\n        }<br />\n        if(age &lt;=26 &amp;&amp; weight&gt;=60 &amp;&amp; strength&gt;=200){<br />\n            if(count!=0)<br />\n            System.out.print(&quot; &quot;);<br />\n            System.out.print(&quot;Forward&quot;);<br />\n            count++;<br />\n        }<br />\n        <br />\n        if(age &lt;=36 &amp;&amp; weight&gt;=80 &amp;&amp; strength&gt;=300){<br />\n            if(count!=0)<br />\n            System.out.print(&quot; &quot;);<br />\n            System.out.print(&quot;Defense&quot;);<br />\n            count++;<br />\n        }<br />\n        if(count==0)<br />\n            System.out.print(&quot;No positions&quot;);<br />\n      <br />\n        }<br />\n<br />\n    }<br />\n}<br />\n','Finding the issue is your own task!',0,'2012-12-06 08:59:12'),(247,1806,2021,61839653,'how can we solve this problem ??Time Limit Exceeded ','No Response. Read the problem specification.',0,'2012-12-06 09:13:42'),(248,1315,2026,61839653,'age emkanesh hast<br />\nbadaz inke contest tamoom shod<br />\nyek test case ke javabe eshtebah migiram o baram ersaal konid<br />\n<br />\nmamnoon ','No Response. Read the problem specification.',0,'2012-12-06 09:18:15'),(249,1728,2020,61839653,'what is wrong?','Something.',0,'2012-12-06 09:19:58'),(250,1728,2020,61839653,'what is &quot;something&quot;?','You Should Comment package line before submitting to judge.',0,'2012-12-06 09:26:34'),(251,1743,2021,61839653,'I strongly believe that my code for problem B is correct. But<br />\nthe system says: Output Limit Error!<br />\n<br />\nThis is my main loop, one Yes or one No for each input line.<br />\nSo there cabn\'t be any output limit error.<br />\n<br />\nI\'ve got 7 negative points for this error. Please check this<br />\nand if i\'m right then correct our team scores.<br />\n<br />\nThank you<br />\n<br />\nwhile (1)<br />\n{<br />\n  scanf (&quot;%d%d&quot;, &amp;k, &amp;i);<br />\n  if ((k == 0) &amp;&amp; (i == 0))<br />\n    {<br />\n      printf (&quot;\\n&quot;);<br />\n      return EXIT_SUCCESS;<br />\n    }<br />\n<br />\n  size = power (3, k);<br />\n  printf (&quot;%s\\n&quot;, (frac (size, i) ? &quot;Yes&quot; : &quot;No&quot;));<br />\n}<br />\n','Now that the contest is over, I can say that you should use &quot;%lld&quot; instead of &quot;%d&quot; for &quot;long long&quot; variables.<br />\nscanf (&quot;%d%d&quot;, &amp;k, &amp;i); =&gt; scanf (&quot;%d%lld&quot;, &amp;k, &amp;i);',0,'2012-12-06 09:32:16'),(252,1715,-1,61839656,'I Can\'t See Questions In HTML','download pdf<br />\nhttp://sharecode.ir/contests/view/61839656',0,'2012-12-13 06:29:19'),(253,1931,-1,61839656,'سلام ، می شود برای کامپایل کردن برنامه ها به زبان c++ کمک کنید.<br />\n','No Response. Read the problem specification.',0,'2012-12-13 08:02:35'),(254,1931,-1,61839656,'help in g++ compile,please!!!!','Click on &quot;compile error&quot;, you will see the error.',0,'2012-12-13 08:18:54'),(255,10,1456,61839660,'اینو با پنج رقم اعشار چاپ کنین','اینو با پنج رقم اعشار چاپ کنین',1,'2012-12-19 07:51:31'),(256,12,8017,61839661,'What Are The Limits?','Any Number Will Be Less Than Or Equal To 30',0,'2012-12-27 07:16:19'),(257,12,8017,61839661,' What Are The Limits?','Any Number Will Be Less Than Or Equal To 30!!!!',1,'2012-12-27 07:16:59'),(258,12,8018,61839661,'دما و طول را جابجا بخوانید. در ورودی نمونه و صورت سوال برعکس گفته شده.','a b d t',1,'2012-12-27 08:05:23'),(259,12,8015,61839661,'تا چند رقم اعشار باید جواب بدهیم؟','جواب آخر را به نزدیک ترین عدد صحیح رند کنید.',1,'2012-12-27 08:51:38'),(260,103,-1,61839664,'از عیدی های عیدانه دو بادکنک ۵۰۰ در حوض باقی مانده است. قاعدتا گروهی که زودتر به آنها برسد بادکنک ها را تصاحب خواهد کرد.','--',1,'2013-03-08 08:17:40'),(261,103,-1,61839664,'تیم<br />\nInfermediate<br />\n۱۰۰۰ امتیاز به دست آورد.<br />\nمنتظر کلریفیکیشن های بعد باشید.','--',1,'2013-03-08 08:23:46'),(262,2229,1094,61839665,'vorudi az console ast yA file? agar az console ast chetor EOF moshakhas mishavad?','',0,'2013-04-11 09:53:51'),(263,2126,1459,61839666,'what is the maximum of k ?<br />\n','',0,'2013-04-22 12:44:14'),(264,10,1462,61839666,'There was a problem with the test cases. All the runs have been rejudged.',' ',1,'2013-04-26 07:23:53'),(265,10,-1,61839666,'----------','All the runs have been rejudged due to problems with the test data!',1,'2013-04-28 19:35:49'),(266,2207,-1,61839666,'What is the output limit error?','Your program generates many more output that needed to judge.',0,'2013-04-28 20:36:10'),(267,2286,1462,61839666,'manzoor az inke be nazdiktarin dahome mile gerd shode daghighan chie?<br />\nmesal bezanid lotfan.','',0,'2013-05-01 18:19:05'),(268,1599,1459,61839666,'salam.<br />\nbebakhshid ehsas mikonam judge soale yeke contest eshtebahe.<br />\ndorostesh ine ke har reshte be tule 10^n-1 ke hameye 10^n adad ro<br />\ndaran qabul kone Dge.(tebqe gofteye manbae soal ke conetste Ulm sale<br />\n2004 e)<br />\nhttp://www.informatik.uni-ulm.de/acm/Locals/2004/html/judge.html<br />\nvali judge shoma faq@ reshteE ro ke khodesh mikhado qabul midune dar<br />\nhali ke yek geraf mitune Bshtar az yedune ture euleri dashte bashe.<br />\nlotfan barreCsh konid.<br />\nmerC.','',0,'2013-05-02 07:50:23'),(269,2262,1107,61839667,'bebakhshid codi ke submit mikonim bayad formate khasi dashte bashe?<br />\ndge inke az consul vorudi mikhunim?','',0,'2013-06-13 14:44:34');
/*!40000 ALTER TABLE `clars` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contest_problem`
--

DROP TABLE IF EXISTS `contest_problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contest_problem` (
  `contest_id` int(11) NOT NULL,
  `problem_id` int(11) NOT NULL,
  `letter` varchar(1) NOT NULL,
  `color` varchar(7) NOT NULL,
  PRIMARY KEY (`contest_id`,`problem_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contest_problem`
--

LOCK TABLES `contest_problem` WRITE;
/*!40000 ALTER TABLE `contest_problem` DISABLE KEYS */;
INSERT INTO `contest_problem` VALUES (1,1001,'A','#478fc9'),(11,1057,'B','#ff0099'),(11,1056,'A','#ff000d'),(10,1055,'J','#ff5900'),(10,1054,'I','#c90083'),(10,1053,'H','#a69b71'),(10,1052,'G','#346b68'),(10,1051,'F','#ffa600'),(10,1050,'E','#00ff0d'),(10,1049,'D','#00ffff'),(10,1048,'C','#0000ff'),(10,1047,'B','#f200ff'),(10,1046,'A','#ff000d'),(9,1055,'J','#000000'),(9,1054,'I','#000000'),(9,1053,'H','#000000'),(9,1052,'G','#000000'),(9,1051,'F','#000000'),(9,1050,'E','#000000'),(9,1049,'D','#000000'),(9,1048,'C','#000000'),(9,1047,'B','#000000'),(9,1046,'A','#000000'),(8,1045,'C','#ff000d'),(8,1044,'B','#ffff00'),(8,1043,'A','#00ffe5'),(11,1058,'C','#9900ff'),(11,1059,'D','#0019ff'),(11,1060,'E','#00bfff'),(11,1061,'F','#00ff73'),(11,1062,'G','#99ff00'),(11,1063,'H','#fff200'),(11,1064,'I','#ff8000'),(11,1065,'J','#183d5c'),(12,1001,'A','#000000'),(12,1002,'B','#000000'),(12,1003,'C','#000000'),(13,1067,'A','#1ec940'),(13,1068,'B','#dc25e6'),(13,1069,'C','#e61e50'),(13,1070,'D','#dbd218'),(13,1071,'E','#000000'),(13,1072,'F','#22e3c6'),(13,1073,'G','#ffffff'),(14,1074,'A','#ff000d'),(14,1075,'B','#ff00cc'),(14,1076,'C','#0000ff'),(14,1077,'D','#00e5ff'),(14,1078,'E','#00ff73'),(14,1079,'F','#0dff00'),(14,1080,'G','#d9ff00'),(14,1081,'H','#ffa600'),(14,1082,'I','#ffffff'),(15,1083,'A','#d223db'),(15,1084,'B','#45eb0e'),(15,1085,'C','#bffa0f'),(15,1086,'D','#0033ff'),(15,1087,'E','#0b613a'),(15,1088,'F','#eb094d'),(15,1089,'G','#4d4d52'),(15,1090,'H','#f56962'),(15,1091,'I','#000000'),(15,5000,'J','#000000'),(16,1083,'A','#d223db'),(16,1084,'B','#45eb0e'),(16,1085,'C','#bffa0f'),(16,1086,'D','#0033ff'),(16,1087,'E','#0b613a'),(16,1088,'F','#eb094d'),(16,1089,'G','#4d4d52'),(16,1090,'H','#f56962'),(16,1091,'I','#000000'),(17,1001,'A','#ff000d'),(17,1002,'B','#004cff'),(17,1003,'C','#ffff00'),(18,1001,'A','#ff000d'),(18,1076,'C','#0000FF'),(18,1043,'B','#1aff00'),(19,2000,'A','#ff000d'),(19,2001,'B','#ff00cc'),(19,2002,'C','#8b1fc4'),(19,2003,'D','#0d00ff'),(19,2004,'E','#00e5ff'),(19,2005,'F','#00ff33'),(19,2006,'G','#f2ff00'),(19,2007,'H','#ff8c00'),(19,2008,'I','#6b6b6b'),(20,1035,'A','#000000'),(20,1036,'B','#000000'),(20,1037,'C','#000000'),(20,1038,'D','#000000'),(20,1039,'E','#000000'),(20,1040,'F','#000000'),(20,1041,'G','#000000'),(20,1042,'H','#000000'),(21,1092,'A','#000000'),(21,1093,'B','#000000'),(21,1094,'C','#000000'),(21,1095,'D','#000000'),(21,1096,'E','#000000'),(21,1097,'F','#000000'),(21,1098,'G','#000000'),(21,1099,'H','#000000'),(21,1100,'I','#000000'),(22,1101,'A','#000000'),(22,1102,'B','#000000'),(22,1103,'C','#000000'),(22,1104,'D','#000000'),(22,1105,'E','#000000'),(22,1106,'F','#000000'),(22,1107,'G','#000000'),(22,1108,'H','#000000'),(23,1109,'A','#ff000d'),(23,1110,'B','#ff00bf'),(23,1111,'C','#b300ff'),(23,1112,'D','#0033ff'),(23,1113,'E','#00ccff'),(23,1114,'F','#1c9c8f'),(23,1115,'G','#00ff8c'),(23,1116,'H','#158f1b'),(23,1117,'I','#f2ff00'),(23,1118,'J','#ff9900'),(24,1119,'A','#ff000d'),(24,1120,'B','#ff00b3'),(24,1121,'C','#571796'),(24,1122,'D','#0000ff'),(24,1123,'E','#00ffff'),(24,1124,'F','#047d71'),(24,1125,'G','#059e0c'),(24,1126,'H','#fff200'),(24,1127,'I','#ff9900'),(24,1128,'J','#8f8f8f'),(24,1129,'K','#000000'),(25,1001,'A','#000000'),(25,1002,'B','#000000'),(25,1003,'C','#000000'),(26,1001,'A','#000000'),(26,1002,'B','#000000'),(26,1003,'C','#000000'),(27,1130,'A','#ff000d'),(27,1131,'B','#ff00e6'),(27,1132,'C','#8c00ff'),(27,1133,'D','#2600ff'),(27,1134,'E','#00ccff'),(27,1135,'F','#00ffa6'),(27,1136,'G','#00ff0d'),(27,1137,'H','#bfff00'),(27,1138,'I','#ffd900'),(27,1139,'J','#ffa600'),(28,1141,'A','#ff000d'),(28,1149,'B','#ff00cc'),(28,1148,'C','#4c00ff'),(28,1146,'D','#008cff'),(28,1144,'E','#00ff99'),(28,1145,'F','#00ff0d'),(28,1140,'G','#167833'),(28,1143,'H','#fff200'),(28,1147,'I','#ff8000'),(28,1142,'J','#000000'),(29,5002,'A','#ff000d'),(29,5003,'B','#00ff19'),(29,5004,'C','#4c00ff'),(30,1150,'A','#ff000d'),(30,1151,'B','#ff00ff'),(30,1152,'C','#511b6e'),(30,1153,'D','#000dff'),(30,1154,'E','#00f2ff'),(30,1155,'F','#40ff00'),(30,1156,'G','#ff9900'),(30,1157,'H','#25686b'),(30,1158,'I','#ad428d'),(61839613,1159,'A','#ff000d'),(61839613,1160,'B','#ff00d9'),(61839613,1161,'C','#641c9e'),(61839613,1162,'D','#0d00ff'),(61839613,1163,'E','#62c1f5'),(61839613,1164,'F','#00ff66'),(61839613,1165,'G','#59941f'),(61839613,1166,'H','#f2ff00'),(61839613,1167,'I','#ff9900'),(61839613,1168,'J','#000000'),(61839614,5500,'A','#ff000d'),(61839614,5501,'B','#ffff00'),(61839614,5502,'C','#00ff00'),(61839614,5503,'D','#ff00ea'),(61839614,5504,'E','#ffffff'),(61839614,5505,'F','#d398e4'),(61839614,5506,'G','#ff7300'),(61839614,5507,'H','#0000ff'),(61839615,5007,'A','#000000'),(61839615,5008,'B','#000000'),(61839615,5006,'C','#000000'),(61839616,6018,'A','#ff000d'),(61839616,6003,'B','#ffff00'),(61839616,6020,'C','#0dff00'),(61839616,2018,'D','#000dff'),(61839616,1105,'E','#ff7300'),(61839617,5508,'A','#ff000d'),(61839617,5509,'B','#ffff00'),(61839617,5510,'C','#00ff19'),(61839617,5511,'D','#f200ff'),(61839617,5512,'E','#ffffff'),(61839617,5513,'F','#d085d4'),(61839617,5514,'G','#ba5d00'),(61839617,5515,'H','#0033ff'),(61839618,7000,'A','#000000'),(61839618,7001,'B','#000000'),(61839618,7002,'C','#000000'),(61839619,1169,'A','#b943bf'),(61839619,1170,'B','#273c7d'),(61839619,1171,'C','#1c9e6a'),(61839619,1172,'D','#d1b82c'),(61839619,1173,'E','#e34119'),(61839619,1174,'F','#ff000d'),(61839619,1175,'G','#12e007'),(61839620,7003,'A','#000000'),(61839620,7004,'B','#000000'),(61839620,7005,'C','#000000'),(61839621,1176,'A','#000000'),(61839621,1177,'B','#000000'),(61839621,1178,'C','#000000'),(61839621,1179,'D','#000000'),(61839621,1180,'E','#000000'),(61839621,1181,'F','#000000'),(61839621,1182,'G','#000000'),(61839621,1183,'H','#000000'),(61839621,1184,'I','#000000'),(61839622,1185,'A','#ff000d'),(61839622,1186,'B','#ff00e6'),(61839622,1187,'C','#8c00ff'),(61839622,1188,'D','#0033ff'),(61839622,1189,'E','#00a6ff'),(61839622,1190,'F','#00ff80'),(61839622,1191,'G','#238a17'),(61839622,1192,'H','#bfff00'),(61839622,1193,'I','#fff200'),(61839622,1194,'J','#ff7300'),(61839623,1195,'A','#ff000d'),(61839623,1196,'B','#ff00f2'),(61839623,1197,'C','#8000ff'),(61839623,1198,'D','#0019ff'),(61839623,1199,'E','#00d9ff'),(61839623,1200,'F','#00ff73'),(61839623,1201,'G','#229c28'),(61839623,1202,'H','#f2ff00'),(61839623,1203,'I','#ffa600'),(61839623,1204,'J','#ff4d00'),(61839624,8000,'A','#c62dcf'),(61839624,8001,'B','#f50049'),(61839624,8002,'C','#29fc1e'),(61839624,8003,'D','#37f0e6'),(61839624,8004,'E','#ffe16b'),(61839624,8005,'F','#ff0033'),(61839624,8006,'G','#000000'),(61839625,1021,'A','#ff000d'),(61839625,1073,'B','#f200ff'),(61839625,1158,'C','#0019ff'),(61839625,1055,'D','#00d9ff'),(61839625,1134,'E','#40ff00'),(61839626,1164,'A','#ff000d'),(61839626,1078,'B','#f200ff'),(61839626,1149,'C','#3300ff'),(61839626,1151,'D','#00bfff'),(61839626,1130,'E','#33ff00'),(61839627,9000,'A','#000000'),(61839627,9001,'B','#000000'),(61839627,9002,'C','#000000'),(61839627,9003,'D','#000000'),(61839627,1085,'E','#000000'),(61839628,1200,'A','#000000'),(61839628,1090,'B','#000000'),(61839628,1057,'C','#000000'),(61839628,1079,'D','#000000'),(61839628,1197,'E','#000000'),(61839628,1155,'F','#000000'),(61839628,1127,'G','#000000'),(61839628,1069,'H','#000000'),(61839629,9000,'A','#f200ff'),(61839629,9001,'B','#cccccc'),(61839629,9002,'C','#00d9ff'),(61839629,9003,'D','#00AF00'),(61839629,9004,'E','#000dff'),(61839629,9005,'F','#ff000d'),(61839629,9006,'G','#ff8c00'),(61839629,9007,'H','#ffff00'),(61839629,9008,'I','#000000'),(61839630,1300,'A','#ff000d'),(61839630,1301,'B','#ff0099'),(61839630,1302,'C','#8c00ff'),(61839630,1303,'D','#0000ff'),(61839630,1304,'E','#00bfff'),(61839630,1305,'F','#2dcc7c'),(61839630,1306,'G','#26ff00'),(61839630,1307,'H','#fff200'),(61839630,1308,'I','#ff6600'),(61839630,1309,'J','#9e9e9e'),(61839630,1310,'K','#000000'),(61839631,1311,'A','#d619e0'),(61839631,1312,'B','#37cc9f'),(61839631,1313,'C','#e6e617'),(61839631,1314,'D','#51e014'),(61839631,1315,'E','#5f27b3'),(61839631,1316,'F','#000000'),(61839631,1317,'G','#f7ebf7'),(61839631,1318,'H','#eb0915'),(61839631,1319,'I','#0e2feb'),(61839631,1320,'J','#eb7fd0'),(61839631,1321,'K','#584959'),(61839632,1322,'A','#000000'),(61839632,1323,'B','#000000'),(61839632,1324,'C','#000000'),(61839632,1325,'D','#000000'),(61839632,1326,'E','#000000'),(61839632,1327,'F','#000000'),(61839632,1328,'G','#000000'),(61839632,1329,'H','#000000'),(61839632,1330,'I','#000000'),(61839632,1331,'J','#000000'),(61839633,1332,'A','#000000'),(61839633,1333,'B','#000000'),(61839633,1334,'C','#000000'),(61839633,1335,'D','#000000'),(61839633,1336,'E','#000000'),(61839633,1337,'F','#000000'),(61839633,1338,'G','#000000'),(61839633,1339,'H','#000000'),(61839633,1340,'I','#000000'),(61839633,1341,'J','#000000'),(61839634,1342,'A','#000000'),(61839634,1343,'B','#000000'),(61839634,1344,'C','#000000'),(61839634,1345,'D','#000000'),(61839634,1346,'E','#000000'),(61839634,1347,'F','#000000'),(61839634,1348,'G','#000000'),(61839634,1349,'H','#000000'),(61839634,1350,'I','#000000'),(61839634,1351,'J','#000000'),(61839635,1343,'B','#180fd1'),(61839635,1344,'C','#29b4e3'),(61839635,1345,'D','#1fd90b'),(61839635,1346,'E','#fafa1b'),(61839635,1347,'F','#ed9a00'),(61839635,1348,'G','#d65a60'),(61839635,1349,'H','#000000'),(61839635,1350,'I','#f4e6f5'),(61839635,1351,'J','#d00ff2'),(61839636,1352,'A','#000000'),(61839636,1353,'B','#000000'),(61839636,1354,'C','#000000'),(61839636,1355,'D','#000000'),(61839636,1356,'E','#000000'),(61839636,1357,'F','#000000'),(61839636,1358,'G','#000000'),(61839636,1359,'H','#000000'),(61839636,1360,'I','#000000'),(61839636,1361,'J','#000000'),(61839637,1362,'A','#000000'),(61839637,1363,'B','#000000'),(61839637,1364,'C','#000000'),(61839637,1365,'D','#000000'),(61839637,1366,'E','#000000'),(61839637,1367,'F','#000000'),(61839637,1368,'G','#000000'),(61839637,1369,'H','#000000'),(61839640,1371,'B','#24de10'),(61839640,1370,'A','#d114db'),(61839638,9010,'A','#000000'),(61839638,9011,'B','#000000'),(61839638,9012,'C','#000000'),(61839638,9013,'D','#000000'),(61839638,9014,'E','#000000'),(61839638,9015,'F','#000000'),(61839639,9000,'A','#ff000d'),(61839639,9001,'B','#f200ff'),(61839639,9002,'C','#0000ff'),(61839639,9003,'D','#00ff00'),(61839639,9004,'E','#ffd900'),(61839639,9005,'F','#5cd6ff'),(61839639,9006,'G','#9e9e9e'),(61839640,1372,'C','#e84023'),(61839640,1373,'D','#3bd1d1'),(61839640,1374,'E','#e6f024'),(61839640,1375,'F','#1b2fe0'),(61839641,9017,'A','#df0ceb'),(61839641,9018,'B','#46f294'),(61839641,9019,'C','#09ede2'),(61839641,9020,'D','#e3ed1c'),(61839641,9021,'E','#e04714'),(61839641,9022,'F','#eb1540'),(61839642,9027,'B','#946ecc'),(61839642,9026,'A','#ff00f2'),(61839641,9025,'G','#f2e4f2'),(61839642,9028,'C','#000dff'),(61839642,9029,'D','#00ff26'),(61839642,9030,'E','#ffe500'),(61839642,9031,'F','#ff8c00'),(61839642,9032,'G','#ff000d'),(61839643,1376,'A','#000000'),(61839643,1377,'B','#000000'),(61839643,1378,'C','#000000'),(61839643,1379,'D','#000000'),(61839643,1380,'E','#000000'),(61839643,1381,'F','#000000'),(61839643,1382,'G','#000000'),(61839643,1383,'H','#000000'),(61839643,1384,'I','#000000'),(61839644,8000,'A','#000000'),(61839644,8001,'B','#000000'),(61839644,8002,'C','#000000'),(61839644,8003,'D','#000000'),(61839644,8004,'E','#000000'),(61839644,8005,'F','#000000'),(61839644,8006,'G','#000000'),(61839644,8007,'H','#000000'),(61839645,1385,'A','#ff000d'),(61839645,1386,'B','#f200ff'),(61839645,1387,'C','#6600ff'),(61839645,1388,'D','#00b2ff'),(61839645,1389,'E','#00ff0d'),(61839645,1390,'F','#bfff00'),(61839645,1391,'G','#fff200'),(61839645,1392,'H','#ff8c00'),(61839645,1393,'I','#878787'),(61839645,1394,'J','#000000'),(61839646,1395,'A','#000000'),(61839646,1396,'B','#000000'),(61839646,1397,'C','#000000'),(61839646,1398,'D','#000000'),(61839646,1399,'E','#000000'),(61839646,1400,'F','#000000'),(61839646,1401,'G','#000000'),(61839646,1402,'H','#000000'),(61839646,1403,'I','#000000'),(61839646,1404,'J','#000000'),(61839647,1395,'A','#000000'),(61839647,1396,'B','#000000'),(61839647,1397,'C','#000000'),(61839647,1398,'D','#000000'),(61839647,1399,'E','#000000'),(61839647,1400,'F','#000000'),(61839647,1401,'G','#000000'),(61839647,1402,'H','#000000'),(61839647,1403,'I','#000000'),(61839647,1404,'J','#000000'),(61839648,1049,'A','#000000'),(61839648,1081,'B','#000000'),(61839648,1104,'C','#000000'),(61839648,1105,'D','#000000'),(61839648,1110,'E','#000000'),(61839648,1115,'F','#000000'),(61839648,1117,'G','#000000'),(61839648,1142,'H','#000000'),(61839648,1189,'I','#000000'),(61839648,1306,'J','#000000'),(61839649,1049,'A','#f200ff'),(61839649,1081,'B','#ff004d'),(61839649,1104,'C','#7300ff'),(61839649,1105,'D','#00fff2'),(61839649,1110,'E','#00ff26'),(61839649,1115,'F','#e6ff00'),(61839649,1117,'G','#170963'),(61839649,1142,'H','#43a193'),(61839649,1189,'I','#838731'),(61839649,1306,'J','#f582d2'),(61839650,1395,'A','#000000'),(61839650,1396,'B','#000000'),(61839650,1397,'C','#000000'),(61839650,1398,'D','#000000'),(61839650,1399,'E','#000000'),(61839650,1400,'F','#000000'),(61839650,1401,'G','#000000'),(61839650,1402,'H','#000000'),(61839650,1403,'I','#000000'),(61839650,1404,'J','#000000'),(61839651,1001,'A','#000000'),(61839651,1023,'B','#000000'),(61839651,6005,'C','#000000'),(61839651,2003,'D','#000000'),(61839652,1001,'A','#000000'),(61839652,1002,'B','#000000'),(61839652,1003,'C','#000000'),(61839652,1004,'D','#000000'),(61839652,1005,'E','#000000'),(61839652,1006,'F','#000000'),(61839652,1007,'G','#000000'),(61839652,1008,'H','#000000'),(61839653,2020,'A','#ff000d'),(61839653,2021,'B','#ff00cc'),(61839653,2022,'C','#7a2696'),(61839653,2023,'D','#0033ff'),(61839653,2024,'E','#00ffff'),(61839653,2025,'F','#0dff00'),(61839653,2026,'G','#ffff00'),(61839653,2027,'H','#ff8c00'),(61839654,1405,'A','#000000'),(61839654,1406,'B','#000000'),(61839654,1407,'C','#000000'),(61839654,1408,'D','#000000'),(61839654,1409,'E','#000000'),(61839654,1410,'F','#000000'),(61839654,1411,'G','#000000'),(61839654,1412,'H','#000000'),(61839654,1413,'I','#000000'),(61839654,1414,'J','#000000'),(61839654,1415,'K','#000000'),(61839655,1416,'A','#000000'),(61839655,1417,'B','#000000'),(61839655,1418,'C','#000000'),(61839655,1419,'D','#000000'),(61839655,1420,'E','#000000'),(61839655,1421,'F','#000000'),(61839655,1422,'G','#000000'),(61839655,1423,'H','#000000'),(61839655,1424,'I','#000000'),(61839655,1425,'J','#000000'),(61839656,1426,'A','#000000'),(61839656,1427,'B','#000000'),(61839656,1428,'C','#000000'),(61839656,1429,'D','#000000'),(61839656,1430,'E','#000000'),(61839656,1431,'F','#000000'),(61839656,1432,'G','#000000'),(61839656,1433,'H','#000000'),(61839656,1434,'I','#000000'),(61839656,1435,'J','#000000'),(61839657,1426,'A','#000000'),(61839657,1427,'B','#000000'),(61839657,1428,'C','#000000'),(61839657,1429,'D','#000000'),(61839657,1430,'E','#000000'),(61839657,1431,'F','#000000'),(61839657,1432,'G','#000000'),(61839657,1433,'H','#000000'),(61839657,1434,'I','#000000'),(61839657,1435,'J','#000000'),(61839657,1436,'K','#000000'),(61839656,1436,'K','#000000'),(61839658,1405,'A','#000000'),(61839658,1406,'B','#000000'),(61839658,1407,'C','#000000'),(61839658,1408,'D','#000000'),(61839658,1409,'E','#000000'),(61839658,1410,'F','#000000'),(61839658,1411,'G','#000000'),(61839658,1412,'H','#000000'),(61839658,1413,'I','#000000'),(61839658,1414,'J','#000000'),(61839658,1415,'K','#000000'),(61839659,1437,'A','#000000'),(61839659,1438,'B','#000000'),(61839659,1439,'C','#000000'),(61839659,1440,'D','#000000'),(61839659,1441,'E','#000000'),(61839659,1442,'F','#000000'),(61839659,1443,'G','#000000'),(61839659,1444,'H','#000000'),(61839659,1445,'I','#000000'),(61839659,1446,'J','#000000'),(61839659,1447,'K','#000000'),(61839659,1448,'L','#000000'),(61839660,1449,'A','#000000'),(61839660,1450,'B','#000000'),(61839660,1451,'C','#000000'),(61839660,1452,'D','#000000'),(61839660,1453,'E','#000000'),(61839660,1454,'F','#000000'),(61839660,1125,'G','#000000'),(61839660,1455,'H','#000000'),(61839660,1456,'I','#000000'),(61839660,1457,'J','#000000'),(61839660,1458,'K','#000000'),(61839661,8013,'A','#cc5e14'),(61839661,8014,'B','#fff305'),(61839661,8015,'C','#0c0cf2'),(61839661,8016,'D','#f5f6fa'),(61839661,8017,'E','#db16aa'),(61839661,8018,'F','#d60222'),(61839661,8019,'G','#000000'),(61839662,1322,'A','#000000'),(61839662,1329,'B','#000000'),(61839662,1140,'C','#000000'),(61839662,1323,'D','#000000'),(61839662,1108,'E','#000000'),(61839662,1179,'F','#000000'),(61839662,1099,'G','#000000'),(61839663,6019,'A','#0c14fa'),(61839663,1310,'B','#f20f1a'),(61839663,1303,'C','#fae605'),(61839663,1150,'D','#ef1bfa'),(61839663,1177,'E','#17d423'),(61839663,1174,'F','#f58a00'),(61839664,9100,'A','#ff000d'),(61839664,9101,'B','#f200ff'),(61839664,9102,'C','#000dff'),(61839664,9103,'D','#00fff2'),(61839664,9104,'E','#00ff19'),(61839664,9105,'F','#e6ff00'),(61839664,9106,'G','#ff5900'),(61839664,9107,'H','#5f3261'),(61839664,9108,'I','#000000'),(61839664,9109,'J','#ffffff'),(61839664,9110,'K','#5986bd'),(61839664,9111,'L','#bf6060'),(61839664,9112,'M','#009921'),(61839664,9113,'N','#787878'),(61839664,9114,'O','#afe35d'),(61839665,1094,'A','#000000'),(61839665,1103,'B','#000000'),(61839665,1085,'C','#000000'),(61839666,1459,'A','#000000'),(61839666,1460,'B','#000000'),(61839666,1461,'C','#000000'),(61839666,1462,'D','#000000'),(61839667,1107,'A','#000000'),(61839667,1103,'B','#000000'),(61839667,1085,'C','#000000');
/*!40000 ALTER TABLE `contest_problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contests`
--

DROP TABLE IF EXISTS `contests`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contests` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `label` varchar(128) NOT NULL,
  `starttime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `length` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `confirmed` tinyint(1) NOT NULL,
  `create_date` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `description` text NOT NULL,
  `vranklist` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=61839668 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contests`
--

LOCK TABLES `contests` WRITE;
/*!40000 ALTER TABLE `contests` DISABLE KEYS */;
INSERT INTO `contests` VALUES (9,'UT Practice Contest - 21 Oct.','2011-10-21 04:45:00',18000,10,0,'2011-10-20 22:04:08','',-1),(8,'DAA ACM Contest#1 19102011','2011-10-20 06:30:00',9000,53,1,'2011-10-19 14:16:09','',-1),(18,'9th Iran Internet ACM ICPC - Test Contest','2011-11-09 10:30:00',32400,10,1,'2011-11-08 19:53:43','<span class=\"center red\">Suggestions and comments are welcome!<br />Contact us at sharecode@acm.org<br /></span>',-1),(10,'UT Practice Contest - 21 Oct.','2011-10-21 05:30:00',18000,10,1,'2011-10-20 22:16:13','',-1),(11,'UT Practice Contest - 27 Oct.','2011-10-28 06:38:00',18000,10,1,'2011-10-27 14:20:14','',-1),(13,'Practice Contest 31st October','2011-10-31 12:15:00',18000,12,1,'2011-10-30 19:21:16','',-1),(14,'UT Practice Contest - 4 Nov.','2011-11-04 07:05:00',18000,10,1,'2011-11-04 06:52:49','',-1),(15,'6th October Practice Contest','2011-11-06 12:00:00',18001,12,0,'2011-11-06 11:13:20','',-1),(16,'UT Practice Contest - 6 Nov','2011-11-06 12:02:00',18001,12,1,'2011-11-06 11:13:47','',-1),(19,'9th Iran Nationwide Internet Contest','2011-11-10 06:30:00',18000,10,1,'2011-11-09 16:45:33','',-1),(23,'Practice Contest - 17 Nov.','2011-11-17 06:00:00',18000,10,1,'2011-11-16 13:35:10','',-1),(22,'UT Practice Contest - 15 Nov.','2011-11-15 06:05:00',18000,10,1,'2011-11-15 05:49:23','',-1),(21,'UT Practice Contest - 14 Nov.','2011-11-14 11:10:00',18000,10,1,'2011-11-14 11:07:44','',-1),(24,'Practice Contest - 18 Nov.','2011-11-18 06:00:00',18000,10,1,'2011-11-17 14:27:59','',-1),(28,'Practice Contest - 24 Nov.','2011-11-24 06:00:00',18000,10,1,'2011-11-23 14:53:25','',-1),(27,'UT Practice Contest - 22 Nov.','2011-11-22 12:05:00',18000,10,1,'2011-11-21 11:20:34','',-1),(29,'DAA ACM Contest#1 24112011','2011-11-24 05:30:00',12200,10,0,'2011-11-23 17:01:54','',-1),(30,'Practice Contest - 25 Nov.','2011-11-25 06:05:00',18300,10,1,'2011-11-24 17:50:46','',-1),(61839613,'UT Practice Contest - 19 Nov.','2011-11-29 11:45:00',18000,10,1,'2011-11-29 11:35:47','',-1),(61839614,'UT DS ACM Contest F90-1','2011-12-16 05:50:00',17100,10,0,'2011-12-15 22:42:22','',-1),(61839615,'DAA ACM Contest #3 1990','2011-12-22 05:45:00',14700,53,0,'2011-12-22 05:43:48','',-1),(61839616,'UT DM ACM Contest F90','2011-12-30 06:45:00',14400,10,1,'2011-12-29 07:10:23','',-1),(61839617,'UT DS ACM Contest F90-2','2012-01-05 05:42:00',18000,10,0,'2012-01-04 16:49:48','',-1),(61839618,'UT DA Computer Assignment 1','2012-02-14 09:30:00',1248900,10,0,'2012-02-14 09:34:37','',-1),(61839619,'UT-ACM-CONTEST-24th Feb','2012-02-24 05:35:00',14400,12,1,'2012-02-23 20:27:52','Practice Contest',-1),(61839620,'UT DA Computer Assignment 2','2012-02-26 20:25:00',1555800,10,0,'2012-02-28 08:50:59','',-1),(61839621,'2nd of March','2012-03-02 05:40:00',14400,12,1,'2012-03-01 20:18:38','Practice Contest',-1),(61839623,'UT Practice Contest - 10 March.','2012-03-10 09:55:00',18000,10,1,'2012-03-10 09:51:14','',-1),(61839624,'DS ACM Contest 25052012','2012-05-25 13:00:00',18000,12,0,'2012-05-25 12:24:09','',-1),(61839625,'UT Summer Class Contest - 000','2012-07-19 05:30:00',9000,10,1,'2012-07-18 19:42:58','',-1),(61839626,'UT Summer Class Contest - 001','2012-07-26 05:35:00',14400,10,1,'2012-07-25 21:00:23','',-1),(61839627,'UT Summer Class Contest - 010','2012-08-03 05:30:00',18000,10,1,'2012-08-03 00:30:42','All the submissions will be deleted after the contest. Please back up your codes.',-1),(61839628,'Practice Contest','2012-08-09 05:30:00',18000,10,1,'2012-08-09 01:01:59','',-1),(61839629,'UT Summer Class Contest - 011','2012-08-16 06:00:00',18000,10,1,'2012-08-15 20:53:32','Back up your codes please.<br /> All of your submissions will be deleted after the contest.<br />',-1),(61839630,'UT Practice Contest - 23 Aug.','2012-08-23 05:00:00',18000,10,1,'2012-08-22 18:46:39','',-1),(61839631,'UT Practice Contest 30 Aug','2012-08-30 05:00:00',18000,12,1,'2012-08-29 10:52:20','',-1),(61839632,'Multi-university Practice Contest - Sep. 6','2012-09-06 05:30:00',18000,10,1,'2012-09-05 10:06:13','',-1),(61839633,'Multi-university Practice Contest - Sep. 13','2012-09-13 05:30:00',18000,10,1,'2012-09-05 10:32:10','',2),(61839634,'Multi-university Practice Contest - Sep. 20','2012-09-20 05:30:00',18000,10,1,'2012-09-16 16:02:21','',-1),(61839635,'Multi-University Contest 20 Sept.','2012-09-20 05:30:00',18000,12,0,'2012-09-19 17:03:29','',-1),(61839636,'Multi-university Practice Contest - Sep. 27','2012-09-27 06:30:00',18000,10,1,'2012-09-21 18:39:44','',-1),(61839637,'Multi-university Practice Contest - Oct. 04','2012-10-04 06:30:00',14400,10,1,'2012-09-27 11:42:50','',-1),(61839638,'UT ACM League Sep. 28.','2012-09-28 05:30:00',10800,10,0,'2012-09-27 22:24:26','',-1),(61839639,'UT ACM League Oct. 4','2012-10-04 06:40:00',12600,10,1,'2012-10-04 05:50:17','',-1),(61839640,'Multi-university Practice Contest - Oct. 11','2012-10-11 06:30:00',10800,12,0,'2012-10-10 21:33:13','',-1),(61839641,'UT ACM League Oct. 18','2012-10-18 06:30:00',14400,12,1,'2012-10-17 19:40:26','',-1),(61839642,'UT ACM League Oct. 25','2012-10-25 06:45:00',14400,10,1,'2012-10-25 05:57:52','',-1),(61839643,'Multi-university Practice Contest - Nov. 1','2012-11-01 06:30:00',18000,10,1,'2012-10-31 18:47:32','',-1),(61839644,'ACM Regional Preparation Contest 9 Nov','2012-11-09 05:30:00',18000,14,1,'2012-11-08 16:16:50','',-1),(61839645,'ACM Regional Preparation Contest 21 Nov','2012-11-21 05:00:00',18000,10,1,'2012-11-20 18:11:34','Download problems here:<br /><a href=\"http://sharecode.ir/assets/cerc10.pdf\"></a>http://sharecode.ir/assets/cerc10.pdf<br /><br />',-1),(61839646,'ACM Regional Preparation Contest 29 Nov','2012-11-29 08:30:00',18000,10,0,'2012-11-29 08:17:07','',-1),(61839647,'ACM Regional Preparation Contest 29 Nov','2012-11-29 08:30:00',18000,10,1,'2012-11-29 08:17:22','Download problems here:<br /><a href=\"http://sharecode.ir/assets/SWERC12.pdf\"></a>http://sharecode.ir/assets/SWERC12.pdf<br /><br />',-1),(61839648,'ACM LEAGUE 2 - Round 1 - Nov. 30','2012-11-30 05:20:00',18000,14,0,'2012-11-29 17:57:29','',-1),(61839649,'ACM LEAGUE 2 - Round 1 - Nov. 30','2012-11-30 05:20:00',18000,14,1,'2012-11-29 17:59:13','',-1),(61839658,'ACM Regional Preparation Contest 15 Dec.','2012-12-15 07:00:00',18000,10,1,'2012-12-14 18:53:37','<br /><br />\n<a class=\"red\" href=\"http://sharecode.ir/assets/NWERC12.pdf\">DOWNLOAD PROBLEMSET HERE: http://sharecode.ir/assets/NWERC12.pdf</a><br /><br />',-1),(61839651,'10th Iran Internet ACM ICPC - Test Contest','2012-12-05 13:30:00',18000,10,1,'2012-12-01 13:22:33','',-1),(61839653,'10th Iran Nationwide Internet Contest','2012-12-06 05:35:00',14400,10,1,'2012-12-01 13:28:40','<br /><br />\r\n<a class=\"red\" href=\"http://sharecode.ir/assets/IIPC2012.pdf\">DOWNLOAD PROBLEMSET HERE: http://sharecode.ir/assets/IIPC2012.pdf</a><br /><br />',-1),(61839656,'ACM Regional Preparation Contest 13 Dec.','2012-12-13 06:10:00',18000,10,1,'2012-12-06 10:20:00','<br /><br />\r\n<a class=\"red\" href=\"http://sharecode.ir/assets/cerc12.pdf\">DOWNLOAD PROBLEMSET HERE: http://sharecode.ir/assets/cerc12.pdf</a><br /><br />',-1),(61839659,'HIDDEN test','2012-12-16 13:06:45',18000,10,0,'2012-12-16 13:01:19','',-1),(61839660,'HIDDEN test','2012-12-19 06:52:00',18000,10,0,'2012-12-19 06:27:40','',-1),(61839661,'DS ACM 90','2012-12-27 06:30:00',18000,12,1,'2012-12-27 05:49:46','',-1),(61839662,'Practice Contest','2013-02-08 05:30:00',14400,10,1,'2013-02-07 18:07:06','',-1),(61839663,'Open Contest 26-11-91','2013-02-14 05:30:00',10800,23,1,'2013-02-13 19:14:19','',-1),(61839664,'Casino Contest','2013-03-08 06:00:00',11700,23,1,'2013-03-08 04:34:20','',-1),(61839665,'DAA CA1','2013-04-07 19:25:00',864000,12,1,'2013-04-07 15:22:51','DAA CA1',-1),(61839666,'DM Contest','2013-04-19 19:25:00',1209600,12,1,'2013-04-19 10:11:50','',-1),(61839667,'DAA CA2','2013-06-05 10:30:00',723600,12,1,'2013-06-05 09:00:52','DAA HW2',-1);
/*!40000 ALTER TABLE `contests` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `discussions`
--

DROP TABLE IF EXISTS `discussions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `discussions` (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) NOT NULL,
  `subject` varchar(256) CHARACTER SET utf8 NOT NULL,
  `text` text CHARACTER SET utf8 NOT NULL,
  `user_id` int(11) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent` int(11) NOT NULL,
  `hash` varchar(40) NOT NULL,
  `visible` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=132 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `discussions`
--

LOCK TABLES `discussions` WRITE;
/*!40000 ALTER TABLE `discussions` DISABLE KEYS */;
INSERT INTO `discussions` VALUES (1,1001,'a big problem','<p>سلام<br />\nخیلی سوال سختی بود\nبالاخره پس از مجاهدت های بسیار موفق به حلش شدم</p>\n',842,'2012-09-15 09:45:02',-1,'2fa09f6451cadba82c839a35cac930356e49d3d0',1),(2,6002,'Seems this question is eligible to be certified as a code golf problem!','<p>Yeah, so far I\'m the best (after python guys)! who can beat me?</p>\n',40,'2012-09-16 11:00:18',-1,'77addd98deb0dc346bb838ed6f277d6ddda2dce5',1),(3,1001,'@','<blockquote>\n  <p><strong>Saeid A</strong> said:</p>\n  \n  <p>سلام<br />\n  خیلی سوال سختی بود بالاخره پس از مجاهدت های بسیار موفق به حلش شدم</p>\n</blockquote>\n\n<p>What was your biggest challange with this problem? :D</p>\n',10,'2012-09-16 15:50:29',1,'029415eb90584dd2737d4aa44b47c6576d6eb49e',1),(4,1001,'@','<p>my challange was to reading data until EOF.\nthe first time i was not friend enough to the programming tips.</p>\n',842,'2012-09-18 18:26:33',1,'9fc9f62e6756a53625b37695d870601e44d3d80d',1),(5,1001,'@','<blockquote>\n  <p><strong>Saeid A</strong> said:</p>\n  \n  <p>my challange was to reading data until EOF. the first time i was not friend enough to the programming tips.</p>\n</blockquote>\n\n<p>Hmmm!</p>\n\n<p>I think the last <code>\\n</code> in the input file is the source of this confusion! Because of the last new-line character in the file <code>cin.eof()</code> will return <code>false</code> in some points!</p>\n\n<p>A note for the people that have the same problem: in c++ simply use <code>while (cin &gt;&gt; a &gt;&gt; b) { ... }</code> to read the input until <code>EOF</code>.</p>\n',10,'2012-09-18 18:31:47',1,'80af0ff0a0f4c59176374e442970933f87f8dbda',1),(6,6002,'@','<p>That was though!</p>\n\n<p>I\'m on <strong>84 characters</strong> now!</p>\n',10,'2012-09-19 15:58:54',2,'3a3dd4dc1c9cc6bd5864779052493a032e36ed83',1),(7,1326,'Python','<p>Same algorithm that got Accepted using C++, got TLE using Python.\nMaybe 15-second-time-limit is a little too tightbound for this problem...!!!</p>\n',963,'2012-09-19 18:31:26',-1,'e6d8e2be25611b2b595e92d813f88c5b33ee8fd9',1),(8,1326,'@','<blockquote>\n  <p><strong>H__M</strong> said:</p>\n  \n  <p>Same algorithm that got Accepted using C++, got TLE using Python. Maybe 15-second-time-limit is a little too tightbound for this problem...!!!</p>\n</blockquote>\n\n<p>The input file for this problem is a little huge. I don\'t know if there is any faster methods in python for IO operation but I belive using faster methods will reduce the execution time by far.</p>\n\n<p>Your python code on the judge server took 40 seconds to terminate.</p>\n',10,'2012-09-19 20:10:47',7,'f43ca8623f4b988fe71f7e295fa7ed1e04a808dd',1),(9,6002,'@','<p><strong>81 characters</strong> :D</p>\n',10,'2012-09-19 20:13:46',2,'ceec9d1c6b4b6b41b160355d1d71d18ebd3c6116',1),(10,1326,'@','<blockquote>\n  <p><strong>AMiR</strong> said:</p>\n  \n  <blockquote>\n    <p><strong>H__M</strong> said:</p>\n    \n    <p>Same algorithm that got Accepted using C++, got TLE using Python. Maybe 15-second-time-limit is a little too tightbound for this problem...!!!</p>\n  </blockquote>\n  \n  <p>The input file for this problem is a little huge. I don\'t know if there is any faster methods in python for IO operation but I belive using faster methods will reduce the execution time by far.</p>\n  \n  <p>Your python code on the judge server took 40 seconds to terminate.</p>\n</blockquote>\n\n<p>Yes, I believe that\'s the most likely cause.</p>\n\n<p>In any case, thanks for the details of execution time.</p>\n',963,'2012-09-19 20:42:58',7,'647044a8a6f5bd9881a99c0ae62309afea8253d2',1),(11,1326,'@','<p>By the way, is the \"psyco\" module available on the server? Using it is a good way to boost the performance in python code. I\'ve seen some of the online judges have installed that module and suggested using it for better performance.</p>\n',963,'2012-09-19 20:53:40',7,'3ec7b4bb65bfa7d6e5c5a27644fa225c661849a8',1),(12,6002,'@','<p>80 let\'s see if you can beat this one!</p>\n',40,'2012-09-19 21:04:22',2,'221a7c11a71f789d24cc7959b81ce8e739c0e110',1),(13,6002,'@','<p><strong>79</strong> and I don\'t want any more arguement.</p>\n',40,'2012-09-19 21:07:59',2,'3c1cc7bc00160f440c560f523a0f009857b39904',1),(14,6002,'@','<blockquote>\n  <p><strong>ali.S</strong> said:</p>\n  \n  <p><strong>79</strong> and I don\'t want any more arguement.</p>\n</blockquote>\n\n<p>I\'ve cast the spell! :D <strong>76 characters</strong>!</p>\n',10,'2012-09-19 21:28:27',2,'23785aa3f54e706c854b08b259ab0bc8c2fb2688',1),(15,6002,'@','<p>Seems I know better spells! </p>\n',40,'2012-09-19 21:48:43',2,'1a345d4d09f21834ea66b0b2b7763d8bc60ed258',0),(16,6002,'@','<p>Seems I know better spells! <strong>Done in only 72</strong></p>\n',40,'2012-09-19 21:59:18',2,'3b53c44a00d7061f4a463cabf61362fd53a04c50',1),(17,6002,'@','<blockquote>\n  <p><strong>ali.S</strong> said:</p>\n  \n  <p>Seems I know better spells! <strong>Done in only 72</strong></p>\n</blockquote>\n\n<p>Wow! :D</p>\n\n<p>Here is mine:</p>\n\n<pre><code>main(i, s){\n    for(s=8;\n        i=getchar(), s+i-18;\n        s=i-10?s+i-48:printf(\"%d\\n\",s%9+1)+6\n    );\n}\n</code></pre>\n',10,'2012-09-20 10:22:03',2,'4496987c7201629a9fe1f7c7e47e0eedf0e88f86',1),(18,6002,'@','<p>Since you shared your code, here is mine! with all it\'s revisions (starting 85 character)</p>\n\n<pre><code>a;\nmain(c)\n{       \n    for(;c=getchar()+a-10;a=c-a?c-38:printf(\"%d\\n\",a%9?a%9:9)*0);              /*fixed a bug which application didn\'t generate any output for anyline starting with 0*/\n//  for(;c=getchar()+a-48;a=c-a+38?c:printf(\"%d\\n\",a%9?a%9:9)*0);              /*72 char*/\n//  for(;c=getchar(),c+a-64;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c+6);          /*76 char*/\n//  for(;scanf(\"%c\",&amp;c),c+a-64;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c+6);       /*79 char*/\n//  for(;scanf(\"%c\",&amp;c),c+a-10;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c-48);      /*80 char*/\n//  for(;scanf(\"%c\",&amp;c),c&gt;10?a+=c-48,1:a;c&lt;11?printf(\"%d\\n\",a%9?a%9:9),a=0:0); /*85 char*/\n}\n</code></pre>\n',40,'2012-09-20 10:35:12',2,'5dfa0994eab8d3b8428af436f0b5d3b3ae6b4f18',0),(19,6002,'@','<p>I don\'t think anyone will ever be able to get smaller than this, so here is my code (with all it\'s revisions)! </p>\n\n<pre><code>a;\nmain(c)\n{       \n    for(;c=getchar()+a-10;a=c-a?c-38:printf(\"%d\\n\",a%9?a%9:9)*0);              /*fixed a bug happened at 021*/\n//  for(;c=getchar()+a-48;a=c-a+38?c:printf(\"%d\\n\",a%9?a%9:9)*0);              /*72 char*/\n//  for(;c=getchar(),c+a-64;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c+6);          /*76 char*/\n//  for(;scanf(\"%c\",&amp;c),c+a-64;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c+6);       /*79 char*/\n//  for(;scanf(\"%c\",&amp;c),c+a-10;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c-48);      /*80 char*/\n//  for(;scanf(\"%c\",&amp;c),c&gt;10?a+=c-48,1:a;c&lt;11?printf(\"%d\\n\",a%9?a%9:9),a=0:0); /*85 char*/\n}\n</code></pre>\n',40,'2012-09-20 10:37:25',2,'6abda499027be64858f6eec7804c7b3da108e57f',1),(20,1326,'@','<blockquote>\n  <p><strong>H__M</strong> said:</p>\n  \n  <p>By the way, is the \"psyco\" module available on the server? Using it is a good way to boost the performance in python code. I\'ve seen some of the online judges have installed that module and suggested using it for better performance.</p>\n</blockquote>\n\n<p>I\'m not sure if this module have security issues for the judge server or not. I will notify the judge core team to study about that.</p>\n\n<p>Thank you :)</p>\n',10,'2012-09-20 17:15:32',7,'5b6dfb2d11b4bd30252e4917f6cfd80d360e0a28',1),(21,6002,'@','<blockquote>\n  <p><strong>ali.S</strong> said:</p>\n  \n  <p>I don\'t think anyone will ever be able to get smaller than this, so here is my code (with all it\'s revisions)! </p>\n\n<pre><code>a;\nmain(c)\n{       \n    for(;c=getchar()+a-10;a=c-a?c-38:printf(\"%d\\n\",a%9?a%9:9)*0);              /*fixed a bug happened at 021*/\n//  for(;c=getchar()+a-48;a=c-a+38?c:printf(\"%d\\n\",a%9?a%9:9)*0);              /*72 char*/\n//  for(;c=getchar(),c+a-64;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c+6);          /*76 char*/\n//  for(;scanf(\"%c\",&amp;c),c+a-64;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c+6);       /*79 char*/\n//  for(;scanf(\"%c\",&amp;c),c+a-10;a=c&lt;11?printf(\"%d\\n\",a%9?a%9:9),0:a+c-48);      /*80 char*/\n//  for(;scanf(\"%c\",&amp;c),c&gt;10?a+=c-48,1:a;c&lt;11?printf(\"%d\\n\",a%9?a%9:9),a=0:0); /*85 char*/\n}\n</code></pre>\n</blockquote>\n\n<p>Here is the new revision of your code (70 characters):</p>\n\n<pre><code>for(;c=getchar()+a-10;a=c-a?c-38:printf(\"%d\\n\",--a%9+1)*0);\n</code></pre>\n',21,'2012-09-20 20:34:10',2,'d9cef937fb9a10be3b449909c1cd2464fc28dd62',1),(22,6002,'@','<p>you left a room for furthor improvement in your code! now it\'s only 69!</p>\n\n<pre><code>for(;c+=a=getchar()-10;c=a?c-38:printf(\"%d\\n\",--c%9+1)*0);\n</code></pre>\n',40,'2012-09-21 13:50:39',2,'2fbe32cc9ecff378d0eaeb125399e41359dcabb5',1),(23,6002,'@','<p>there still was a little room for improvement! (<strong>69</strong> characters):</p>\n\n<pre><code>for(;c+=a=getchar()-10;c=a?c-38:printf(\"%d\\n\",--c%9+1)*0);\n</code></pre>\n',40,'2012-09-21 21:05:47',2,'16b27703ecfa6db1db3b4b98acac2afd55fa45e9',0),(24,1001,'@','<p>thank u so much.\ni have used the same method whitch u said.</p>\n',842,'2012-10-14 23:45:06',1,'c70bb34f52155421d64b2a9ed8afae32878b710c',1),(25,1007,'Matter!!','<p>What\'s the wrong with this Question, my program works well for all test cases, but wrong answer. I need Help I need more test Cases !!</p>\n',1454,'2012-10-25 20:20:57',-1,'9d7fdc28012a62f343b8d875c88b006ad01effff',1),(26,1363,'Matter !!','<p>What\'sthe wrong with this Question??? My program works well for test cases, but i can\'t accept my code, need more test cases . could u help !!</p>\n',1454,'2012-10-25 20:23:59',-1,'f664aff27d767c9564622fcc3029f938ff548b18',1),(27,6024,'Pleasment !!!','<p>Oh my God, this is so simple. i am sure my code is enough Well to be accepted, but Wrong Answer, Need More Test case, if it is possible !!</p>\n',1454,'2012-10-25 20:27:54',-1,'6dad3723cc54dc5f9215b3f22652394cd9536b7d',1),(28,1001,'Pleasement !!!!!!!!!','<p>Please Check Other Question\'s Discussion, specially 6024 ,1007 \nthnx</p>\n',1454,'2012-10-25 20:57:01',-1,'f1a40050070874d12c3a029634d5e44a8d737726',0),(29,1023,'Question','<p>در این سؤال اومده که ورودی می تونه شامل کاراکترهای ,.)(/ و...باشه اما در الگو اصلا استفاده نکرده همچنین راجع به اعداد\nتوضیحی نداده فقط گفته می تونه وجود داشته باشه \nاگه یکی راهنمایی کنه ممنون میشم</p>\n',847,'2012-10-27 08:22:31',-1,'4eccb10579d6b10897ccdc4c7c5d084f7e3dde79',0),(30,1023,'@','<p>اعداد می توانند جز کلمات به کار روند\nکاراکتر های دیگر که ذکر شده و همچنین وایت اسپیس ها(*) به عنوان جدا کننده دو کلمه استفاده می شوند\nبه مورد آزمون زیر دقت کنید</p>\n\n<p>x21,x21,x21;x22-1000. x21</p>\n\n<p>پاسخ این مورد آزمون از قرار زیر است\n4 occurrences\nx21</p>\n\n<p>(*) White Space</p>\n',963,'2012-10-27 11:14:13',29,'b6991a1ab926f1542a14cc2aeed5fcf9e0690eef',0),(31,1023,'@','<p>اعداد می توانند جز کلمات به کار روند کاراکتر های دیگر که ذکر شده و همچنین وایت اسپیس ها(*) به عنوان جدا کننده دو کلمه استفاده می شوند به مورد آزمون زیر دقت کنید</p>\n\n<p>x21,x21,x21;x22-1000. x21</p>\n\n<p>پاسخ این مورد آزمون از قرار زیر است</p>\n\n<p>4 occurrences</p>\n\n<p>x21</p>\n',963,'2012-10-27 11:15:55',29,'f8efe97f144e817a91178f39adcafc48e6d02b97',0),(32,1023,'@','<p>باتشکر\nیه سؤال دیگه\nاگه چند تا کیس جواب بود اولویت با چیه؟ترتیب حروف الفبا یا ترتیب حضور در متن؟اعداد چطور؟\nهمچنین آیا کاراکترهای \".\" و\",\"می تونه به عنوان جداکننده ی ارقام یک عدد باشه مثلا  1.202.345.458</p>\n',847,'2012-10-28 13:42:33',29,'0e79b2edfd4bc8fe8d877924a64842f4632a8857',0),(33,1001,'@','<blockquote>\n  <p><strong>Yashar Khan</strong> said:</p>\n  \n  <p>Please Check Other Question\'s Discussion, specially 6024 ,1007 thnx</p>\n</blockquote>\n\n<p>You dont have to post your question on multiple discussions. Everyone that solved that specefic problem will be notified by your question.</p>\n\n<p>Would you please delete this topic? I\'m sure someone will answer your questions on those problems soon :)</p>\n',10,'2012-10-29 21:31:06',28,'b9c767804df770c33f24756263c60378c2fc2b88',0),(34,1007,'@','<blockquote>\n  <p><strong>Yashar Khan</strong> said:</p>\n  \n  <p>What\'s the wrong with this Question, my program works well for all test cases, but wrong answer. I need Help I need more test Cases !!</p>\n</blockquote>\n\n<p>Your solution got <code>Presentation Error</code>. It means your output is almost the same as the judge\'s output, but it\'s slightly different in whitespaces.</p>\n\n<p>Have you paid attention to the part of the output specification that says:</p>\n\n<blockquote>\n  <p>Leave a blank line between the output for different data sets.</p>\n</blockquote>\n\n<p>Notice that it said <strong>between</strong>. It\'s important.</p>\n',10,'2012-10-29 21:35:45',25,'3ebfe960e663287b66f864ade11506f6d4b2cec1',1),(35,1363,'@','<blockquote>\n  <p><strong>Yashar Khan</strong> said:</p>\n  \n  <p>What\'sthe wrong with this Question??? My program works well for test cases, but i can\'t accept my code, need more test cases . could u help !!</p>\n</blockquote>\n\n<p>You can do your rounding operation with <code>printf</code> function:</p>\n\n<pre><code>double d = 4.355561;\nprintf(\"%.4f\\n\", d);\n</code></pre>\n\n<p>You can see my solution for this problem here:</p>\n\n<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;cstdio&gt;\nusing namespace std;\ntypedef pair&lt;string, double&gt; psd;\nint main () {\n    map&lt;string, pair&lt;string, double&gt; &gt; m;\n    m[\"kg\"] = psd(\"lb\", 2.2046);\n    m[\"l\"] = psd(\"g\", 0.2642);\n    m[\"lb\"] = psd(\"kg\", 0.4536);\n    m[\"g\"] = psd(\"l\", 3.7854);\n\n    string s; double n;\n\n    int T, i=1;\n    cin &gt;&gt; T;\n\n    while (T-- &amp;&amp; cin &gt;&gt; n &gt;&gt; s) printf(\"%d %.4f %s\\n\", i++, n*m[s].second, m[s].first.c_str());\n\n    return 0;\n}\n</code></pre>\n',10,'2012-10-29 21:47:37',26,'e18fd3ab511e20ee77485cf3a2b0ef81f10c02c6',1),(36,1023,'@','<p>The words may be listed in lexicographic order.\n//\nجدا کننده ارقام هم محسوب میشن</p>\n',1003,'2012-10-31 17:37:33',29,'a90d54a3763a34b9a5bd0d6bf3ea8d862f64699f',0),(37,1001,'@','<p>What The Fuck A Men..................... I Have No Asab</p>\n',780,'2012-11-01 12:17:16',1,'589136f1c4e3cebccb37fe6c39e2b428163560bf',0),(38,1001,'@','<p>Shittt</p>\n',780,'2012-11-01 12:17:36',1,'3c59825d135e1dc08dff5dbd365e60ee8c67b43e',1),(39,1363,'@','<p>Hmmmmmmmmmmmm Thnx Amir, U r perfect :)</p>\n',1454,'2012-11-03 12:30:27',26,'d4b964eb98b3852b323a7d2e9723485edd68a9dc',1),(40,1135,'WTF (what a time freak!!)','<p>الان داستان چیه که با 40 ثانیه هم اکسپت گرفتن دوستان؟</p>\n',48,'2012-11-04 12:53:57',-1,'1f2edc21d9746254c8ada615fca0f852ebcf331e',1),(41,1001,'@','<p>F*** U</p>\n',1195,'2012-11-10 11:26:11',1,'9f8dbdcfaa2aacb410fbad7fa7244234313d01f0',0),(42,1001,'@','<p>***K YEEEEAHHHH</p>\n',1195,'2012-11-10 11:26:58',1,'46fe7096d9118802c581e2c198d8cb4294730295',1),(43,6020,'Senator','<p>Senator Tu Halgham</p>\n',780,'2012-11-12 09:25:29',-1,'b2499da054ec7c2df4b30d081837ccb8a1466f1f',1),(44,1001,'@','<p>آقا من خیلی تازه کارم این کد چه مشکلی داره \nwhile True:\n    try:\n        a,b=raw_input().split(\" \")\n        print int(a)+int(b)\n    except:\n        break</p>\n',1691,'2012-12-02 08:45:00',1,'0b516dbb8815cb628295bc9ad807a3b435898957',1),(45,1001,'@','<blockquote>\n  <p><strong>Arvant</strong> said:</p>\n  \n  <p>آقا من خیلی تازه کارم این کد چه مشکلی داره while True: try: a,b=raw_input().split(\" \") print int(a)+int(b) except: break</p>\n</blockquote>\n\n<p>Your code seems right.</p>\n\n<p>There is a problem with our python judge! I believe the new version of python does not compatible with our judge core. We are working on it right now.</p>\n\n<p>You submission will be rejudged after solving the issue.</p>\n\n<p>Thank you for notice and patience.</p>\n',10,'2012-12-02 08:54:44',1,'1c7c878edb9f583ad0e79a0b0ec605831364bcec',1),(46,1001,'@','<blockquote>\n  <p><strong>AMiR</strong> said:</p>\n  \n  <blockquote>\n    <p><strong>Arvant</strong> said:</p>\n    \n    <p>آقا من خیلی تازه کارم این کد چه مشکلی داره while True: try: a,b=raw_input().split(\" \") print int(a)+int(b) except: break</p>\n  </blockquote>\n  \n  <p>Your code seems right.</p>\n  \n  <p>There is a problem with our python judge! I believe the new version of python does not compatible with our judge core. We are working on it right now.</p>\n  \n  <p>You submission will be rejudged after solving the issue.</p>\n  \n  <p>Thank you for notice and patience.</p>\n</blockquote>\n\n<p>Python interpreter has been downgraded and some of python submissions were rejudged.</p>\n',10,'2012-12-02 21:04:45',1,'894ef484395c876dc18a51dc386c08478d113bf0',1),(47,1002,'persentation error','<h1>include&lt;stdio.h&gt;</h1>\n\n<p>int abs(int x)\n{\n    if(x&lt;0)\n        return -x;\n    return x;\n}</p>\n\n<p>int main()\n{\n    int cok<em>pos,f</em>pos,s<em>pos;\n    char x;\n    while(1)\n    {\n        scanf(\"%d\",&amp;cok</em>pos);</p>\n\n<pre><code>    if(cok_pos==5280)\n    {\n        return 0;\n    }\n\n\n    f_pos=0;\n\n    while(1)\n    {\n        scanf(\"%d\",&amp;s_pos);\n\n\n        if(s_pos==cok_pos)\n        {\n            printf(\"Moving from %d to %d: found it!\\n\",f_pos,s_pos);\n            break;\n        }\n\n        if(abs(f_pos-cok_pos)&gt;abs(s_pos-cok_pos))\n            printf(\"Moving from %d to %d: warmer.\\n\",f_pos,s_pos);\n        else if(abs(f_pos-cok_pos)&lt;abs(s_pos-cok_pos))\n            printf(\"Moving from %d to %d: colder.\\n\",f_pos,s_pos);\n        else\n            printf(\"Moving from %d to %d: same.\\n\",f_pos,s_pos);\n\n    f_pos=s_pos;\n\n    }\n    printf(\"\\n\");\n}\n\nreturn 0;\n</code></pre>\n\n<p>}\ncan u check wats problem in it?</p>\n',1744,'2012-12-04 13:31:03',-1,'127e7611cea0f018fe7cf642155413f3b28f127e',1),(48,1002,'@','<p>can u please check my code?</p>\n\n<p>every time i submit it shows persentation error!!! </p>\n',1744,'2012-12-04 13:33:27',47,'69cb06c99f4b54ca39a9f25866c60337a9a5c2a3',1),(49,1002,'@','<blockquote>\n  <p><strong>ankurkumar</strong> said:</p>\n  \n  <p>can u please check my code?</p>\n  \n  <p>every time i submit it shows persentation error!!!</p>\n</blockquote>\n\n<p>In the <strong>Output</strong> clearly mentioned that:</p>\n\n<blockquote>\n  <p>Have a blank line between the output for different input lines.</p>\n</blockquote>\n\n<p>By <strong><em>between</em></strong> means after the last output block, you should not output any addition <code>\\n</code>.</p>\n\n<p>You can check my code for this problem:</p>\n\n<pre><code>int main() {\n    int f, k, p, a, b, c=0;\n    while(~scanf(\"%d\",&amp;f) &amp;&amp; f-5280) {      \n        printf(c++?\"\\n\":\"\");\n        p = 0;\n        while(~scanf(\"%d\", &amp;k)) {\n            printf(\"Moving from %d to %d: \",p,k);\n            a = p &gt; f ? p - f: f - p;\n            b = k &gt; f ? k - f: f - k;\n            if (!b &amp;&amp; printf(\"found it!\\n\")) break;\n\n            if (a==b) printf(\"same.\\n\");\n            if (a&gt;b) printf(\"warmer.\\n\");\n            if (a&lt;b) printf(\"colder.\\n\");\n            p = k;\n        }\n    }\n    return 0;\n}\n</code></pre>\n',10,'2012-12-04 14:55:28',47,'d0d139ccca73afbba7f6048ca4a8c5ef8f6f03ec',1),(50,2021,'give me a testcase that shows my code is wrong','<p>bool isOk(long j ,int i)\n{\n    if(i &lt;= 1)\n        {\n        if(i == 0)\n        return true;\n        else if(j == 0 || j == 2)\n            return true;\n        return false;<br />\n        }\n    else \n    {\n    if((long)pow(3,i-1) &lt; j &amp;&amp; j &lt; (long)2*pow(3,i-1) )\n        return false;\n    else \n        if((long)pow(3,i-1) &lt;= j )\n            return isOk((long)pow(3,i)-j-1, i-1 );\n        else\n            return isOk( j , i-1 );\n    }<br />\n}</p>\n\n<p>int main()\n{\n    int i;\n    long j;\nwhile(cin&gt;&gt;i&gt;&gt;j)\n{</p>\n\n<pre><code>if(i == 0 &amp;&amp; j == 0 )\n    break;\nif(i&lt; 0 || j &lt; 0  )  \n    {cout&lt;&lt;\"No\"&lt;&lt;endl;continue;}\nif(j &gt;= pow(3,i) || j == 0)\n    {cout&lt;&lt;\"Yes\"&lt;&lt;endl;continue;}\nif(!isOk(j-1,i))\n    cout&lt;&lt;\"No\"&lt;&lt;endl;\nelse\n    cout&lt;&lt;\"Yes\"&lt;&lt;endl;\n</code></pre>\n\n<p>}\nreturn 0;\n}</p>\n',635,'2012-12-06 20:50:21',-1,'180b9034024d9f4a2d00252afd61fa44d6a0d59c',1),(51,2021,'@','<p>nabayad int begiri az bazeye int khareje !!</p>\n',1839,'2012-12-06 21:04:14',50,'ea0ec05982e0b5ad232b3692944fdd570bc6088c',1),(52,2021,'@','<p>Use <code>long long</code> instead of <code>int</code>.</p>\n\n<p>P.S. Please post your code in <em>code format</em>. You just have to put a tab or 4 spaces before each line. Please read the markdown editor help on the top of the editor. You can also read it\'s <a href=\"http://en.wikipedia.org/wiki/Markdown\">wikipedia page</a>.</p>\n',10,'2012-12-07 08:44:16',50,'759d9d41831af1d6c65914eeef12f295de4a565e',1),(53,2021,'@','<blockquote>\n  <p><strong>AMiR</strong> said:</p>\n  \n  <p>Use <code>long long</code> instead of <code>int</code>.</p>\n  \n  <p>P.S. Please post your code in <em>code format</em>. You just have to put a tab or 4 spaces before each line. Please read the markdown editor help on the top of the editor. You can also read it\'s [wikipedia page][1].</p>\n  \n  <p>[1]: <a href=\"http://en.wikipedia.org/wiki/Markdown\">http://en.wikipedia.org/wiki/Markdown</a></p>\n</blockquote>\n\n<p>i == tavan \nj == adad va tavan &lt; 30 banabar in nabayad moshkeli ijad beshe ba in gereftanesh va hamchenin ke man taghiresh dadam bazam\nwrong khordam!</p>\n',635,'2012-12-07 11:59:23',50,'3e80c13324de384a3aff18f4ba942e1f4ce10ec4',1),(54,2021,'@','<p>The output specification mentioned:</p>\n\n<blockquote>\n  <p>Each test case is given in a line containing two numbers k (less than 30) and i (at most  3k)</p>\n</blockquote>\n\n<p>According to this, <em>i</em> can be 330 which is too large to fit in integer type. You should use <code>long long</code> (in your variable definition and type castings).</p>\n\n<p>Your solution may have some other problems. I would suggest you to post your newest code here again.</p>\n',10,'2012-12-07 12:15:23',50,'80e046d4d0e5710747f4f55178cbd6d533dcf6f2',0),(55,2021,'@','<p>The output specification mentioned:</p>\n\n<blockquote>\n  <p>Each test case is given in a line containing two numbers k (less than 30) and i (at most 3^k)</p>\n</blockquote>\n\n<p>According to this, <em>i</em> can be 3^30 which is too large to fit in integer type. You should use <code>long long</code> (in your variable definition and type castings).</p>\n\n<p>Your solution may have some other problems. I would suggest you to post your newest code here again.</p>\n',10,'2012-12-07 12:16:23',50,'f6b406bfc339b684220813adeefcddce4a5a4b2b',1),(56,2021,'@','<p>i in problem is j in my code!</p>\n\n<blockquote>\n  <p><strong>AMiR</strong> said:</p>\n  \n  <p>The output specification mentioned:</p>\n  \n  <blockquote>\n    <p>Each test case is given in a line containing two numbers k (less than 30) and i (at most 3^k)</p>\n  </blockquote>\n  \n  <p>According to this, <em>i</em> can be 3^30 which is too large to fit in integer type. You should use <code>long long</code> (in your variable definition and type castings).</p>\n  \n  <p>Your solution may have some other problems. I would suggest you to post your newest code here again.</p>\n</blockquote>\n',635,'2012-12-07 12:53:16',50,'966a31f7bb27593317b4cbda8a4d7ab1bd59ead9',1),(57,2021,'@','<pre><code>bool isOk(long j ,long long i)\n{\nif(i &lt;= 1)\n    {\n    if(i == 0)\n    return true;\n    else if(j == 0 || j == 2)\n        return true;\n    return false;   \n    }\nelse \n{\nif((long)pow(3,i-1) &lt; j &amp;&amp; j &lt; (long)2*pow(3,i-1) )\n    return false;\nelse \n    if((long)pow(3,i-1) &lt;= j )\n        return isOk((long)pow(3,i)-j-1, i-1 );\n    else\n        return isOk( j , i-1 );\n}       \n}\n\n int main()\n{\nlong i;\nlong j;\nwhile(cin&gt;&gt;i&gt;&gt;j)\n{\n\nif(i == 0 &amp;&amp; j == 0 )\n    break;\nif(i&lt; 0 || j &lt; 0  )  \n    {cout&lt;&lt;\"No\"&lt;&lt;endl;continue;}\nif(j &gt;= pow(3,i) || j == 0)\n    {cout&lt;&lt;\"Yes\"&lt;&lt;endl;continue;}\nif(!isOk(j-1,i))\n    cout&lt;&lt;\"No\"&lt;&lt;endl;\nelse\n    cout&lt;&lt;\"Yes\"&lt;&lt;endl;\n}\n return 0;\n}    \n</code></pre>\n',635,'2012-12-07 12:55:37',50,'3d0c04461975ac4cb482da01a8abbb92656bdc4b',1),(58,2021,'@','<p>You can\'t use <code>int</code> to save large values!</p>\n\n<p>As you may know, <code>long</code> and <code>int</code> are the same and both using 32 bits to store values. Use <code>long long</code> for every variable! You also should cast the <code>pow</code> function\'s return value to <code>long long</code>.</p>\n\n<p>Another problem is <code>pow</code> returns in <code>double</code> which is not accurate enough for large values. I would suggest that write your own power function that uses <code>long long</code> to calculate powers of 3, or use <code>powl</code> function that returns in <code>long double</code> which is more accurate.</p>\n\n<p>The seccond approuch can be implemented by adding this: <code>#define pow powl</code>.</p>\n\n<p>P.S. This problem can be solved simpler. Think about it. :)</p>\n',10,'2012-12-07 15:25:57',50,'2322396d20883c657384d25d125d0a90df5013d0',1),(59,2021,'@','<p>thank you my program accepted.</p>\n\n<blockquote>\n  <p><strong>AMiR</strong> said:</p>\n  \n  <p>You can\'t use <code>int</code> to save large values!</p>\n  \n  <p>As you may know, <code>long</code> and <code>int</code> are the same and both using 32 bits to store values. Use <code>long long</code> for every variable! You also should cast the <code>pow</code> function\'s return value to <code>long long</code>.</p>\n  \n  <p>Another problem is <code>pow</code> returns in <code>double</code> which is not accurate enough for large values. I would suggest that write your own power function that uses <code>long long</code> to calculate powers of 3, or use <code>powl</code> function that returns in <code>long double</code> which is more accurate.</p>\n  \n  <p>The seccond approuch can be implemented by adding this: <code>#define pow powl</code>.</p>\n  \n  <p>P.S. This problem can be solved simpler. Think about it. :)</p>\n</blockquote>\n',635,'2012-12-07 17:11:26',50,'7371c2be09297f30fa83b21e2d6b2febb9930bbb',1),(60,1322,'mishe lotfan komakam konid ?','<p>man soalo dorost motevajeh nemisham !! mage nemige begid ke yek kalame ba reverese hamun kalame yeki hast ya na ?!!\npas chera in code bayad wrong she ?!! </p>\n\n<pre><code>getline(cin, str); // dur rikhtane khate aval\nwhile ( getline(cin, str) )\n    if ( equal(str.begin(), str.end(), str.rbegin()) ) puts(\"YES\");\n    else                                               puts(\"NO\");\n</code></pre>\n',1839,'2012-12-07 23:43:57',-1,'3d3afb49aa57b764efe88a8cd34748991d09493e',1),(61,1322,'@','<p>First of all, the string itself may not be a palindrome! The sequence of the numbers that you hit while typing the string with a cellphone\'s keypad is the thing that must be palindromic.</p>\n\n<p>Seconde, your program must be case insensitive.</p>\n\n<p>The problem specification states the combination of the cellphone\'s keypad:</p>\n\n<blockquote>\n  <p>2: ABC, 3: DEF, 4: GHI, 5: JKL, 6: MNO, 7: PQRS, 8: TUV, 9: WXYZ</p>\n</blockquote>\n\n<p>According to this, your code should output <strong>YES</strong> for this string: <strong>AAABBB</strong>. Because the sequence is <strong>222222</strong> which is palindrome.</p>\n\n<p>Same goes to something like that: <strong>AaABBb</strong> or <strong>ADGEB</strong>.</p>\n',10,'2012-12-08 06:49:02',60,'d9a91d10c64601e6456aa176c8b5f02e2d012459',1),(62,1322,'@','<p>kheyly mamnunam azat :)</p>\n',1839,'2012-12-08 13:40:15',60,'8183f28e9ec38c9005ebd8795d6a5bfad2d434b1',1),(63,2021,'output limit error','<p>Hi\nCan someone explain what is output limit error?\nthanks.</p>\n',1888,'2012-12-08 17:02:29',-1,'15ef970cea97ca52ed4c7ce50c16a35a7309e3dc',1),(64,2021,'@','<blockquote>\n  <p><strong>virtual</strong> said:</p>\n  \n  <p>Hi Can someone explain what is output limit error? thanks.</p>\n</blockquote>\n\n<p>It means your program generated many more output that needed.</p>\n\n<p>Sometimes sticking in an infinite loop and generating output may cause <em>Output limit Error</em>. The other reason of this error -in this specific problem- is that you may have not used <code>long long</code> for reading numbers from input stream, then your program can not read a 32bit integer from input (because the input number will not fit in 32bit integers) and giving you the previous values of your variables.</p>\n\n<p>Use <code>long long</code> instead of <code>int</code>.</p>\n',10,'2012-12-08 19:58:51',63,'b5c6d52412998492529d44f1ae46a5abb2da1c79',1),(65,2021,'@','<p>thank you very much it was helpful</p>\n',1888,'2012-12-08 21:39:38',63,'b9c4ecf7da5352a2362931608a24b7b419da36cd',1),(66,2025,'How to solve','<p>salam ravesh hale in soal chetory ast???</p>\n',1825,'2012-12-10 07:52:26',-1,'a3bf5dfd5fb326bb56940bea669d4fe3c59be611',1),(67,1001,'@','<p>الان تو سی پلاس پلاس این اشتباهه؟</p>\n\n<h1>include </h1>\n\n<p>using namespace std;</p>\n\n<p>int main()\n{\n        int a=0,b=0;\n        cin&gt;&gt;a&gt;&gt;b;\n        cout&lt;&lt;a+b;\n        return 0;\n}</p>\n',1691,'2012-12-11 09:43:01',1,'79c9e6d3b0a529fa98730136cdb3e3c3a53fb1b2',1),(68,1001,'@','<blockquote>\n  <p><strong>Arvant</strong> said:</p>\n  \n  <p>الان تو سی پلاس پلاس این اشتباهه؟</p>\n  \n  <h1>include</h1>\n  \n  <p>using namespace std;</p>\n  \n  <p>int main() { int a=0,b=0; cin&gt;&gt;a&gt;&gt;b; cout&lt;&lt;a+b; return 0; }</p>\n</blockquote>\n\n<p>First of all, please post you source code in discussion in code format. You can hit a tab or 4 spaces before each line.</p>\n\n<p>Please read the <a href=\"http://en.wikipedia.org/wiki/Markdown\">markdown help</a>. You can also read the short help on the top of reply text box.</p>\n\n<p>Second, you have to read the input until <code>EOF</code>. Try this:</p>\n\n<pre><code>int a, b;\nwhile (cin &gt;&gt; a &gt;&gt; b) {\n    cout &lt;&lt; a+b &lt;&lt; endl;\n}\n</code></pre>\n',10,'2012-12-11 17:36:55',1,'ba6d55dd56bbcb03e3901eaf637e4a9ffe1763a3',1),(69,2025,'@','<p>Just simulate the process.</p>\n',10,'2012-12-12 07:13:07',66,'8fd3ffee349da56755529b4c1de8a950b8b2bc99',1),(70,2026,'Input','<p>Vorudi, harkodum az vote ha faghat 2ta esm daran ya emkanesh has bishtaram bashe ? </p>\n',865,'2012-12-13 06:04:32',-1,'cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95',1),(71,2026,'@','<p>There will be a list of names. You should read the names until <code>\\n</code>.</p>\n',10,'2012-12-13 06:07:24',70,'9411a99735a188b1e52e1eebfa6db78973e89e48',1),(72,1383,'Suitable include for getch();','<h1>include &lt;conio.h&gt; doesn\'t work in ur compiler, i run it in visual 2010, there is no problem, but here compilation error, what should i do??? help me plz,thnk u</h1>\n',1454,'2012-12-13 20:57:11',-1,'0e8a72ae850848f240a4efad95948f88a221f6bd',1),(73,1383,'@','<p>kollan az library conio.h nabayad StFade koni, getch ro faghat bara in StFade mikonim ke chek konim beBnim codemoon javabe dorost ro mide ya na,vaghT DDm javabe dorost mide getch va conio.h ro hazf mikonim va code ro submit mikonim!</p>\n',1019,'2012-12-14 08:36:43',72,'b3e0a02ff0b51ab507ed1f4337f7210567107138',1),(74,1012,'help  komak','<p>kasi midoone chera code man accept nemishe??? :((</p>\n\n<p>Does anyone know why my code is not accepted ؟؟؟ :(((</p>\n\n<h1>include </h1>\n\n<p>using namespace std;\nstruct node\n{\n    char data[8];\n    char data2[8];\n    node <em>next;\n};\nnode *first=new node();\n    node *p=new node();\nvoid insert( char adata [],char adata2 [])\n{\n    node *q=new node();\n    for (int i = 0; i &lt; 8; i++)\n    {\n        p-&gt;data[i]=adata[i];\n    }\n    for (int i = 0; i &lt; 8; i++)\n    {\n        p-&gt;data2[i]=adata2[i];\n    }\n    p-&gt;next=q;\n    p=q;\n}\nvoid show()\n{\n    std::cout&lt;data&lt;&lt; \" took clay from \"&lt;&lt; first-&gt;data2&lt;&lt;\".\";\n    first=first-&gt;next;\n    while(first-&gt;next!=NULL)\n    {\n        std::cout&lt;&lt;endl&lt;data&lt;&lt; \" took clay from \"&lt;&lt; first-&gt;data2&lt;&lt;\".\";\n        first=first-&gt;next;\n    }\n    std::cout&lt;&lt;endl;\n}\nint main()\n{\n    first=p;\n    int n;\n    cin&gt;&gt;n;\n    while (n!=-1)\n    {\n        char qorbani [8]={0,0,0,0,0,0,0,0};\n        char qoldor [8]={0,0,0,0,0,0,0,0};\n        double min=250,max=0;\n        for (int i = 0; i &lt; n; i++)\n        {\n            char name[8]={0,0,0,0,0,0,0,0};\n            double x,y,z;\n            cin&gt;&gt;x&gt;&gt;y&gt;&gt;z&gt;&gt;name;\n            double a=x</em>y*z;\n            if(a&gt;max)\n            {\n                max=a;\n                for (int j = 0; j &lt; 8; j++)\n                {\n                    qoldor[j]=name[j];\n                }\n            }\n            if(a&lt;min)\n            {\n                min=a;\n                for (int j = 0; j &lt; 8; j++)\n                {\n                    qorbani[j]=name[j];\n                }\n            }\n        }\n        insert(qoldor,qorbani);\n        cin&gt;&gt;n;\n    }\n    show();\n    return 0;\n}</p>\n',1732,'2012-12-14 12:11:37',-1,'b90f10493749dade6e12aa050712fc56a02c36b5',0),(75,1383,'@','<p>:) :D :)) =)) ;)</p>\n',1454,'2012-12-14 14:32:52',72,'556748ab8d56dc219959a4db7e8b1dc1c80786d7',1),(76,6001,'Presentation Problem','<p>Please tell me how should I present the result?\nPlease use java syntax exactly\nI tried about for diffrent ways but got presentation error\nHelp me!!!</p>\n',1938,'2012-12-15 17:50:49',-1,'cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a',1),(77,6001,'@','<p>maybe this sentence :\nwhere the value of a and b are for you to determine. A blank line should separate output lines.\nit means you must print one empty line between outputs .(NOT after each output)</p>\n',1003,'2012-12-15 18:07:45',76,'56fb1478ccb44f188b581db9d81fda4fb8ea91cf',1),(78,6001,'@','<p>I did it but got presentation error again!!!\nI read a code that accepted but ... !</p>\n',1938,'2012-12-15 18:23:20',76,'0a169c2df5405d0c3edf033650780cbe4693ce52',1),(79,6001,'@','<p>My code:</p>\n\n<p>package Sharecode;</p>\n\n<p>//In The Name of Allah</p>\n\n<p>import java.util.Scanner;</p>\n\n<p>public class P6001 {\n    public static void main(String[] args) {\n        Scanner in<em>kb = new Scanner(System.in);\n        short n = in</em>kb.nextShort();\n        short A, B;\n        if (n != 0) {\n            boolean is = true;\n            do {\n                A = 0;\n                B = 0;\n                short[] a = new short[n];\n                for (short i = 0; i &lt; a.length; i++) {\n                    a[i] = in<em>kb.nextShort();\n                }\n                short[] b = new short[n];\n                for (short i = 0; i &lt; b.length; i++) {\n                    b[i] = in</em>kb.nextShort();\n                }\n                for (short i = 0; i &lt; n; i++) {\n                    if ((a[i] + b[i]) == 3) {\n                        if (a[i] == 1)\n                            A += 6;\n                        else\n                            B += 6;\n                    } else if ((a[i] - b[i]) == 1)\n                        B += (a[i] + b[i]);\n                    else if ((b[i] - a[i]) == 1)\n                        A += (a[i] + b[i]);\n                    else if (a[i] &gt; b[i])\n                        A += a[i];\n                    else if (b[i] &gt; a[i])\n                        B += b[i];\n                }\n                System.out.print(\"A has \" + A + \" points. B has \" + B\n                        + \" points.\");\n                n = in_kb.nextShort();\n                if (n != 0)\n                    System.out.print(\"\\n\\n\");\n            } while (n != 0);\n        }\n    }\n}</p>\n',1938,'2012-12-15 18:25:45',76,'95690285b3ec4e7e5e81a535f2563c52bd629fa5',1),(80,2026,'lotfan komak konid','<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n#include &lt;deque&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nstruct MyData\n{\n    char str[2000];\n    deque&lt;char*&gt; dq;\n\n    void calc()\n    {\n        char *p = strtok(str, \" \");\n        while ( p ) {\n            dq.push_back(p);\n            p = strtok(NULL, \" \");\n        }\n    }\n\n    void erase(const char* name) {\n        dq.erase(remove_if(dq.begin(), dq.end(), not1(bind2nd(ptr_fun(strcmp), name))), \n            dq.end());\n    }\n\n    void clear() {\n        dq.clear();\n    }\n};\n\nbool myOpr(const char* l, const char* r)\n{\n    return (strcmp(l, r) &lt; 0);\n}\n\nint main()\n{\n    freopen(\"in.txt\", \"r\", stdin);\n\n    int candidates, votes;\n    static MyData myarr[1000];\n\n    map&lt;char*, int, bool(*)(const char*, const char*)&gt; mp(myOpr);\n\n    while ( scanf(\"%i %i\", &amp;candidates, &amp;votes) != EOF &amp;&amp; candidates &amp;&amp; votes )\n    {\n        getchar();\n\n        for (int i = 0; i &lt; votes; ++i) {\n            myarr[i].clear();\n\n            gets(myarr[i].str);\n            myarr[i].calc();\n        }\n\n        while ( true )\n        {\n            int emptyVotes = 0;\n            mp.clear();\n\n            for (int i = 0; i &lt; votes; ++i) \n            {\n                if ( myarr[i].dq.empty() ) {\n                    ++emptyVotes;\n                    continue;\n                }\n\n                ++mp[myarr[i].dq.front()];\n                myarr[i].dq.pop_front();\n            }\n\n            int mx = -1, mn = 900000000;\n            map&lt;char*, int, bool(*)(const char*, const char*)&gt;::iterator mItr;\n\n            for (mItr = mp.begin(); mItr != mp.end(); ++mItr) {\n                if ( mItr-&gt;second &gt; mx )\n                    mx = mItr-&gt;second;\n                if ( mItr-&gt;second &lt; mn )\n                    mn = mItr-&gt;second;\n            }\n\n            const char* ans;\n            int counter = 0;\n\n            for (mItr = mp.begin(); mItr != mp.end(); ++mItr) {\n                if ( mItr-&gt;second == mx ) {\n                    ans = mItr-&gt;first;\n                    ++counter;\n                }\n\n                if ( mItr-&gt;second == mn ) {\n                    for (int i = 0; i &lt; votes; ++i)\n                        myarr[i].erase(mItr-&gt;first);\n                }\n            }           \n\n            if ( votes == emptyVotes ) {\n                puts(\"There is no winner\");\n                goto lbl;\n            }\n\n            if ( mx &gt; (votes - emptyVotes) / 2 &amp;&amp; counter == 1 ) {\n                puts(ans);\n                goto lbl;\n            }\n        }\n\nlbl:;\n    }\n\n    return 0;\n}\n</code></pre>\n\n<p>in code man hastesh aslan nemitunam motevajeh sham kojaye code man moshkel dare ! age kasi lotf kone va yek negahi be code man\nbendaze va komak kone besyar besyar mamnunesh misham . in maslale va inke daghighan moshkelesh kojast baraye man kheyly moheme</p>\n',1839,'2012-12-15 18:56:47',-1,'fc814f1d5e07a1d152912f0f20ff1e995a588a1f',1),(81,6003,'bad sample I think!','<p>Nuh?!</p>\n\n<p>Output:\nNumber of pairs of p and q.</p>\n\n<p>Sample Input:\n3 60\nSample Output:\n4</p>\n',1938,'2012-12-16 01:58:49',-1,'06693431b521c471a8d873b515876ceac19bb2bd',1),(82,2026,'@','<p>Reading the whole code is a little hard! Please explain your algorithm or write some comments for you code first.</p>\n',10,'2012-12-16 18:35:05',80,'f95e44acec4e1c2c4eb25eac856b7a47c6bfba8e',1),(83,6003,'@','<blockquote>\n  <p><strong>11 11</strong> said:</p>\n  \n  <p>Nuh?!</p>\n  \n  <p>Output: Number of pairs of p and q.</p>\n  \n  <p>Sample Input: 3 60 Sample Output: 4</p>\n</blockquote>\n\n<p>\"Number of pairs of p and q\" means \"how many such pairs exist\".</p>\n',10,'2012-12-16 18:36:40',81,'cd33df24ca680711e6ffe40a5b82f4d3f30b93d4',1),(84,2026,'@','<p>dadashi dorostesh kardam dastet dard nakone . rastesh enghadr STL mizanam ke khodamam bazi vaghta nemifahmam chi kardam !</p>\n',1839,'2012-12-16 20:11:13',80,'8e2ce1ef36c6847bb0a860409d6e559d14957414',1),(85,6001,'@','<p>hi 11 11 !</p>\n\n<p>I found some problems here.</p>\n\n<ol><li><p>after first testcase when the result printed you should give a blank line if the next number is (!=0).\nbut if you pay attention the cursor stay at the end of line and don\'t leave blank line...\nI suggest you use inkb.hasnextshort() in a way to determine blank line should be or no.\nsomewhere here : (n = in_kb.nextShort(); if (n != 0) System.out.print(\"\\n\\n\");)  </p></li>\n<li><p>pay attention don\'t give a blank line after last output</p></li>\n</ol>\n\n<p>if you use online compilers don\'t trust ...even your answer is right... use JDK or netbeans to see exactly what is \nhappening.</p>\n',1490,'2012-12-19 07:45:14',76,'e2554e744d8123cbd53ac43156ba40e9c35759df',1),(86,1383,'@','<p>beBn bara inke time nakhori az scanf printf StFade kon jaye cin cout! :D</p>\n',1019,'2012-12-19 16:18:49',72,'123cd1921bc7197bfe7dc24cc8328508d7d0a2b4',1),(87,6001,'@','<p>thank all!!!</p>\n\n<p>I fixed the code and got the Accepted result</p>\n\n<p>Best Regards!</p>\n',1938,'2012-12-19 19:37:36',76,'1d7d76a783a206c4eae23e00ec705cf4e66e6a6a',0),(88,6001,'@','<p>thanks all!!!</p>\n\n<p>I fixed the code and got the Accepted result</p>\n\n<p>Best Regards!</p>\n',1938,'2012-12-19 19:38:19',76,'c27f7c1363886fbc80d8e104d6c844fa8d946bb7',1),(89,6003,'Wrong Answer! Wrong Answer! and Wrong Answer!','<p>My code Is here:</p>\n\n<p>//In the Name of Allah</p>\n\n<p>import java.util.Scanner;</p>\n\n<p>public class P6003 {\n    private static boolean isReletivePrime(int a, int b) {\n        for(int c;(a%b) != 0;b = (b%a))\n        {\n            c = b;\n            b = a;\n            a = c;\n        }\n        if (b == 1)\n            return true;\n        else\n            return false;\n    }\n    private static int numPairsFinder(int p, int q) {\n        int res = 0, tmp = (q / p);\n        int sqrt = (int)(Math.sqrt(tmp));\n        for (int i = 1; i &lt;= tmp; i++)\n        {\n            if ((tmp % i) == 0)\n                if (isReletivePrime(i,(tmp/i)))\n                    res++;\n        }\n        return res;\n    }</p>\n\n<pre><code>public static void main(String[] args) {\n    Scanner in_kb = new Scanner(System.in);\n    do {\n        int p = in_kb.nextInt(), q = in_kb.nextInt();\n        System.out.print(numPairsFinder(p,q) + \"\\n\");\n    } while (in_kb.hasNextInt());\n}\n</code></pre>\n\n<p>}</p>\n\n<p>can anyone tell me what is wrong with this code?</p>\n\n<p>please don\'t correct the code just tell the point briefly. I want to code and solve the question my self</p>\n\n<p>Thanks!</p>\n\n<p>Best Regards!</p>\n',1938,'2012-12-19 19:48:35',-1,'04150508650935b2809bf57fa4a3d2378dad98c8',1),(90,6003,'@','<p>Please please please, learn how to post your codes in discussion!</p>\n\n<p>Do not just copy/paste your codes here! you must hit a tab before each line of your code!</p>\n',10,'2012-12-19 20:41:26',89,'5b6b0c1df455250c5bd0c447ebbe10075a593b93',1),(91,6001,'@','<pre><code>   FUCK !! \n</code></pre>\n',1423,'2012-12-23 12:59:52',76,'b4c3b733f791dc103bf688af203308ff749b5b0f',0),(92,8011,'Zero value cells','<p>Is it possible for final result to contain a cell which holds zero as its value?!\nProblem description clearly points that \"For each case output a matrix of non-negative integers\", but I\'m not sure if it zeroing the cost of some part a budget assignment fits in natural solution of the problem! </p>\n',761,'2012-12-25 06:18:40',-1,'3f9f3c6ea3ccb19fc81ee90a528ccb79ba143e74',0),(93,8011,'Zero value','<p>Is it possible for final result to contain a cell which holds zero as its value?! Problem description clearly points that \"For each case output a matrix of non-negative integers\", but I\'m not sure if it zeroing the cost of some part of a budget assignment fits in natural solution of the problem!</p>\n',761,'2012-12-25 06:19:52',-1,'9506ae75c027087a0491ca8c976f69a2874fc5d5',1),(94,8011,'@','<p>The solution matrix may contains zero values.</p>\n',10,'2012-12-26 09:09:11',93,'5f9162ab77bf645f4ad7c15eaf5fd6b480e16f95',1),(95,1001,'@','<p>من موندم که چرا 2 تا فارسی باید با هم انگلیسی حرف بزنن.\nراحت باشین و موفق</p>\n',2036,'2012-12-30 21:38:17',1,'b259a22043c378ae8fef77aec8b6b6ab0027bea2',1),(96,1001,'@','<p>سلام دوستان \nمن تازه کار هستم و یک مشکلی دارم\nاگه بخوام با \nC++\nتوی ورودی بین ورودی هام فاصله باشه باید چیکار کنم؟؟؟؟\nمثل\n1 5\nبرای مسئله مجموع دو عدد میخوام</p>\n',2043,'2013-01-04 15:15:52',1,'a37871432713e08127a0ebdebafc9dff7416e259',1),(97,1001,'@','<blockquote>\n  <p><strong>Dariush</strong> said:</p>\n  \n  <p>سلام دوستان من تازه کار هستم و یک مشکلی دارم اگه بخوام با C++ توی ورودی بین ورودی هام فاصله باشه باید چیکار کنم؟؟؟؟ مثل 1 5 برای مسئله مجموع دو عدد میخوام</p>\n</blockquote>\n\n<pre><code>int a, b;\nwhile (cin &gt;&gt; a &gt;&gt; b) {\n    cout &lt;&lt; a+b &lt;&lt; endl;\n}\n</code></pre>\n',10,'2013-01-05 16:28:26',1,'4aa820c0c264231dd36cbedfea610daef88e8186',1),(98,1004,'How do I right-justify numbers with more than 1 char to a column?','<p>When you say \"right-justified to a column x\", do I need to align to column x the first character of the number or the last?</p>\n\n<p>Say, my valid count and invalid count is both 10000. I need to justify them to columns 69 and 73, respectively. If I align to the\nfirst character (\'1\'), I get something like</p>\n\n<pre><code>Col:| 68 | 69 | 70 | 71 | 72 | 73 |\n    |    |  1 |  0 |  0 |  0 |  0 |\n</code></pre>\n\n<p>And there\'s no way I can align invalid count on the first digit.</p>\n\n<p>Similarly, if I align on the last digit, I either move the last \'0\' of valid count to 68 (in which case I fail the rule for valid\ncount\'s alignment) or I keep it at col 69, start invalid count at col 70 and end it at col 74, failing the rule for valid count\'s\nalignment.</p>\n',2044,'2013-01-12 18:17:57',-1,'628cba20711400b3e33f05029cb411b32e3a867d',1),(99,6011,'Big Numbers Or Unsigned Long Long Int??','<p>Hi friends</p>\n\n<p>i write my code and im sure about it . but it doesnt work for the hugvart numbers witch have more than 16 digit number in hogwart system</p>\n\n<p>becuse the position value is more than MAX of Unsigned Long Long</p>\n\n<p>should i use big numbers method for solve ?</p>\n\n<p>can anyone help ?</p>\n',1996,'2013-02-20 19:18:33',-1,'c96425a60591d6894c8b43acc67552b0ccba83bc',1),(100,1004,'@','<p>Hi Chad\nnotice that</p>\n\n<pre><code>`There will be at most 1000 unique addresses in the input file. `\n</code></pre>\n\n<p>so it can not be 10000 to over load.</p>\n\n<p>so what you should do is go on 69 column wich space before then print the valid then put (4-len(valid)) space then invalid count</p>\n\n<p>wish that helped :)</p>\n',1996,'2013-02-21 12:53:50',98,'8ea53107725ef3f98d4476ec7f5c80d803a362db',1),(101,1001,'@','<p>Hi everyone. I\'ve been having some problems submitting a Java program. Here\'s my code:</p>\n\n<pre><code>import java.util.*;\npublic class Main {\n    public static void main(String args[]) throws Exception{\n        Scanner scan = new Scanner(System.in);\n        while (scan.hasNextInt()){\n            System.out.println(scan.nextInt()+scan.nextInt());\n        }\n    }\n}\n</code></pre>\n\n<p>It works with my computer, even if I add extra lines and spaces after the numbers. But the Judge tells me he gets a RuntimeError.</p>\n\n<p>Can someone help me figure out what\'s wrong?</p>\n',2127,'2013-03-03 02:33:22',1,'22233a0287127fdecd0bcd3a10cf33d842e9798e',1),(102,1001,'@','<blockquote>\n  <p><strong>azureowl</strong> said:</p>\n  \n  <p>Hi everyone. I\'ve been having some problems submitting a Java program. Here\'s my code:</p>\n\n<pre><code>import java.util.*;\npublic class Main {\n    public static void main(String args[]) throws Exception{\n        Scanner scan = new Scanner(System.in);\n        while (scan.hasNextInt()){\n            System.out.println(scan.nextInt()+scan.nextInt());\n        }\n    }\n}\n</code></pre>\n  \n  <p>It works with my computer, even if I add extra lines and spaces after the numbers. But the Judge tells me he gets a RuntimeError.</p>\n  \n  <p>Can someone help me figure out what\'s wrong?</p>\n</blockquote>\n\n<p>Your code is working fine. The problem is you have used a package in your main file.</p>\n\n<p>You should not use any package name for your source code. Everything must be in the default package.</p>\n',10,'2013-03-03 18:58:55',1,'8530913d8f55c7653c6bde638cfd06547b7c16bb',1),(103,1333,'Presentation Error','<p>I\'ve tried many ways But still get Presentation Error!:(</p>\n\n<pre><code>    #include &lt;iostream&gt;\n    #define max 60\n\n    using namespace std;\n\n    int board[max][max];\n\n    void upward(int);\n    void downward(int);\n    void forward(int);\n    void backward(int);\n    void transpose(int);\n    void rotate(int);\n\n    int main()\n    {\n        int t, n, i, j, notfirst = 0;\n        char str[100];\n        cin &gt;&gt; t;\n        while(t--)\n        {\n            if(notfirst)\n            {\n                cout &lt;&lt; endl;\n            }\n            cin &gt;&gt; n;\n            for(i=0;i&lt;n;i++)\n            {\n                for(j=0;j&lt;n;j++)\n                {\n                    cin &gt;&gt; board[i][j];\n                }\n            }\n            cin &gt;&gt; str;\n            for(i=0;str[i];i++)\n            {\n                switch(str[i])\n                {\n                    case \'U\':\n                        upward(n);\n                        break;\n                    case \'D\':\n                        downward(n);\n                        break;\n                    case \'F\':\n                        forward(n);\n                        break;\n                    case \'B\':\n                        backward(n);\n                        break;\n                    case \'T\':\n                        transpose(n);\n                        break;\n                    case \'R\':\n                        rotate(n);\n                        break;\n                };\n            }\n            for(i=0;i&lt;n;i++)\n            {\n                for(j=0;j&lt;n;j++)\n                {\n                    cout &lt;&lt; board[i][j];\n                    if(j != n-1)\n                    {\n                        cout &lt;&lt; \" \";\n                    }\n                }\n                cout &lt;&lt; endl;\n            }\n            notfirst = 1;\n        }\n        return 0;\n    }\n\n    void upward(int n)\n    {\n        int temp[max], i, j;\n        for(i=0;i&lt;n;i++)\n        {\n            temp[i] = board[0][i];\n        }\n        for(i=0;i&lt;n;i++)\n        {\n            for(j=0;j&lt;n;j++)\n            {\n                board[i][j] = board[i+1][j];\n            }\n        }\n        for(i=0;i&lt;n;i++)\n        {\n            board[n-1][i] = temp[i];\n        }\n    }\n\n    void downward(int n)\n    {\n        int temp[max], i, j;\n        for(i=0;i&lt;n;i++)\n        {\n            temp[i] = board[n-1][i];\n        }\n        for(i=n-2;i&gt;=0;i--)\n        {\n            for(j=0;j&lt;n;j++)\n            {\n                board[i+1][j] = board[i][j];\n            }\n        }\n        for(i=0;i&lt;n;i++)\n        {\n            board[0][i] = temp[i];\n        }\n    }\n\n    void forward(int n)\n    {\n        int temp[max], i, j;\n        for(i=0;i&lt;n;i++)\n        {\n            temp[i] = board[i][n-1];\n        }\n        for(j=n-2;j&gt;=0;j--)\n        {\n            for(i=0;i&lt;n;i++)\n            {\n                board[i][j+1] = board[i][j];\n            }\n        }\n        for(i=0;i&lt;n;i++)\n        {\n            board[i][0] = temp[i];\n        }\n    }\n\n    void backward(int n)\n    {\n        int temp[max], i, j;\n        for(i=0;i&lt;n;i++)\n        {\n            temp[i] = board[i][0];\n        }\n        for(j=0;j&lt;n;j++)\n        {\n            for(i=0;i&lt;n;i++)\n            {\n                board[i][j] = board[i][j+1];\n            }\n        }\n        for(i=0;i&lt;n;i++)\n        {\n            board[i][n-1] = temp[i];\n        }\n    }\n\n    void transpose(int n)\n    {\n        int i, j, temp;\n        for(i=0;i&lt;n;i++)\n        {\n            for(j=i+1;j&lt;n;j++)\n            {\n                temp = board[i][j];\n                board[i][j] = board[j][i];\n                board[j][i] = temp;\n            }\n        }\n    }\n\n    void rotate(int n)\n    {\n        int i, j, k, temp;\n        for(i=0;i&lt;n;i++)\n        {\n            for(j=i+1;j&lt;n;j++)\n            {\n                temp = board[i][j];\n                board[i][j] = board[j][i];\n                board[j][i] = temp;\n            }\n        }\n        for(i=0;i&lt;n;i++)\n        {\n            for(j=0,k=n-1;j&lt;k;j++,k--)\n            {\n                temp = board[i][j];\n                board[i][j] = board[i][k];\n                board[i][k] = temp;\n            }\n        }\n    }\n</code></pre>\n',2090,'2013-03-10 19:00:01',-1,'970791898241cce32e4e89e77d859e07f62767fd',1),(104,1333,'@','<p>The last line of output section says</p>\n\n<blockquote>\n  <p>You should print an empty line after each test. </p>\n</blockquote>\n\n<p>There is no need to check if this is the first testcase or not. You have to print a blank line after each testcase!</p>\n\n<p>You can remove the these lines:</p>\n\n<pre><code>if(notfirst)\n{\n    cout &lt;&lt; endl;\n}\n</code></pre>\n\n<p>and in the last lines of <code>main</code> function (that prints the <code>board</code> array), instead of <code>notfirst = 1;</code> just print another blank line: <code>cout &lt;&lt; endl;</code></p>\n',10,'2013-03-11 06:25:06',103,'ffec4823623012fb29d11c49c7cb9d32e2904e17',1),(105,1333,'@','<p>Tnx So Much!</p>\n',2090,'2013-03-11 13:16:11',103,'dbd7215a9b7e52721168aa238876d63896bfd6f3',1),(106,1148,'Time Limit','<p>Hello Dear Coders</p>\n\n<p>This is my code in C ... I tried to make it optimise as i can ...</p>\n\n<p>I have troubles with the inputs like 299,999 time 1 and one 2 or 121212121212121212121212121212121212.....\nto do lexicographically comparison...</p>\n\n<p>I know my algorithm do 299,999 * 300,000 comparison at the worst input... and its too big ...</p>\n\n<p>Wish any one could help?</p>\n\n<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    long int i,j,k,len;\n    char inp[300033],last;\n    freopen(\"in.txt\",\"r\",stdin);\n    while(scanf(\"%s\",inp)!=EOF){\n        j=len=0;\n\n        while(inp[len])len++;\n        last=(inp[len-1]&gt;inp[0]?inp[0]-inp[len-1]+8:inp[0]-inp[len-1])+\'0\';\n        for(i=0;i&lt;len-1;i++){\n            inp[i]=(inp[i]&gt;inp[i+1]?inp[i+1]-inp[i]+8:inp[i+1]-inp[i])+\'0\';\n        }\n        inp[len-1]=last;\n        for(i=1;i&lt;len;i++){\n            if(inp[i]==inp[0])break;\n        }\n        if(i==len){\n            printf(\"%s\\n\",inp);\n            continue;\n        }\n        for(i=1;i&lt;len;i++){\n            if(inp[i]&lt;inp[j]){\n                j=i;\n            }else if(inp[i]==inp[j]){\n                    k=1;\n                    while(inp[(i+k)%len]==inp[(j+k)%len]){\n                        k+=1;\n                        if(k&gt;len)break;\n                    }\n                if(inp[(i+k)%len]&lt;inp[(j+k)%len])j=i;\n            }\n\n        }\n        printf(\"%s\",&amp;inp[j]);\n        inp[j]=\'\\0\';\n        printf(\"%s\\n\",inp);\n\n    }\n    return 0;\n}\n</code></pre>\n',1996,'2013-03-12 19:56:58',-1,'156423591f10a538aa3e64efd16b77b12b11d32e',1),(107,1148,'@','<p>I got accepted dudes ...</p>\n\n<p>Thanks for your all support ...</p>\n\n<p>I should only check if its on the middle of a pattern :D</p>\n\n<p>If any one need code .... Ill put it here ...</p>\n',1996,'2013-03-12 21:35:13',106,'0ad7d21e4933a91a00472cc68a67a4fe39db5472',1),(108,1365,'5 Presentation Error !!!!','<p>Hello Dear Coders ...</p>\n\n<p>Its like a bad problem ...</p>\n\n<p>Underestanding the format of output is harder than solving ...</p>\n\n<p>I did ltrim,rtrim,trim,nothing,deleting multi spaces,changing them to 1 space ... and still i didnt get accepted ...</p>\n\n<p>Wish any one could help?</p>\n',1996,'2013-03-14 07:41:04',-1,'3fae8db2d0452ca43c6db373b074da56471be983',1),(109,1365,'@','<p>read the problem again. think about the spaces after the message!! no space should print after the message and if your program do so, it gets presentation error</p>\n',2059,'2013-03-14 09:59:28',108,'f6076d11768f260f418a247f40d7595148ea75b3',1),(110,1365,'@','<p>tnx ... i did that ... in one of my submition but i got presentation error again...\nshould i print a \"\\n\" in each line ?? or not at the last one ??</p>\n',1996,'2013-03-15 19:09:57',108,'00d11affc574568196dca4b91813f708b41ecba4',1),(111,1365,'@','<p>you don\'t need \"\\n\"!! just fixed the problem that i told you before. first of all you should omit all extra charecters from the end of code. because it may have some partial charecters!!! then you should omit extra spaces from the end. if you do these two, it will be solved.</p>\n',2059,'2013-03-16 11:34:36',108,'12b71f408ee4d322ea57595dbdc3407cc42a1ea9',1),(112,1066,'I can\'t find my bug!','<p>This is my code It works fine for all problem test cases and also my own tests, but I still get wrong answer!\nWhat is my fault help me!</p>\n\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nint prime[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\n    73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\n    173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269,\n    271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379,\n    383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\n    491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\n    613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\n    733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\n    857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\n    983, 991, 997 };\n\nlong power(int b, int e)\n{\n    long p=1;\n\n    for(int i=0; i&lt;e; i++)\n        p*=b;\n\n    return p;\n}\nint getpower(int n, int p)\n{\n    int round=-1, sum=0, i=1;\n\n    while(round!=0)\n    {\n        round = n / power(p, i);\n        sum+=round;\n        i++;\n    }\n\n    return sum;\n}\nint main()\n{\n    int i=0;\n    int up[168]={0};\n    int down[168]={0};\n    int alphas[26]={0};\n    string str;\n    while(cin &gt;&gt; str)\n    {\n        int len = str.length();\n\n        for(int i=0; i&lt;len; i++)\n        {\n            alphas[str[i] -\'a\']++;\n        }           \n\n        for(int i=0; i&lt;26; i++)\n        {\n            if(alphas[i]==0)\n                continue;\n            for(int j=0; (prime[j] &lt;= alphas[i]) &amp;&amp; j&lt;168 ; j++)\n                down[j] += getpower(alphas[i], prime[j]);\n        }\n\n        for(int i=0; i&lt;168; i++)\n            up[i]=getpower(len,prime[i]);\n\n        for(int i=0;i&lt;26;i++)\n            up[i]-=down[i];\n\n        //removing 10\'s elements\n        if(up[2]&gt;up[0])\n        {\n            up[0]-=up[0];\n            up[2]-=up[0];\n        }\n        else if(up[0]&gt;up[2])\n        {\n            up[0]-=up[2];\n            up[2]-=up[2];\n        }\n        else\n            up[0]=up[2]=0;\n\n        long mod=1;\n        for(int i=0;i&lt;168;i++)\n        {\n            if(up[i]==0)\n                continue;\n            if(up[i]%4!=0)\n                mod *= power(prime[i],up[i]%4) % 10;\n            else\n                mod *= power(prime[i], up[i]) % 10;\n            mod %= 10;\n        }\n\n        cout &lt;&lt; mod &lt;&lt; endl;\n\n        memset(up, 0, sizeof(up));\n        memset(down, 0, sizeof(down));\n        memset(alphas, 0, sizeof(alphas));\n    }\n\n    return 0;\n}\n</code></pre>\n',2191,'2013-03-16 20:23:44',-1,'442c29c393e562a5e5a256a814278e01ca94fd55',1),(113,1365,'@','<p>thanks bro ...</p>\n\n<p>i underestand what you mean before ... the function i use for removing the end spaces was ::</p>\n\n<pre><code>string rtrim(const string &amp;str)\n{\n    int i;\n    size_t at = str.find_last_not_of(\" \");\n    return at == string::npos ? str : str.substr(0, at+1);\n}\n</code></pre>\n\n<p>witch doesnt return \"\" for a complete space string like str=\"     \"; i change it to </p>\n\n<pre><code>string rtrim(const string &amp;str)\n{\n    int i;\n    size_t at = str.find_last_not_of(\" \");\n    for(i=0;i&lt;str.length();i++)\n        if(str[i]!=\' \')break;\n    if(i==str.length())return \"\";\n    return at == string::npos ? str : str.substr(0, at+1);\n}\n</code></pre>\n\n<p>and it solved ...</p>\n\n<p>Thanks For Your Help ...</p>\n',1996,'2013-03-16 20:26:01',108,'6234470cc9dadf4cef5d6d23db9e7d8d7f6f7cad',1),(114,1066,'@','<p>Try this test. This is just one test, please remove <code>\\n</code>s so all the lines became single.</p>\n\n<pre><code>ggmnclfjfempfialsdmgqcsscbjbksnomlmjhgkmceiirnfjlqanjargmggbgroaqpilgbplclhcm\nkjhiigpodmpeoiaadhcscfprhchjjgnhngjlrrimkejckroniiakrdbmpoobmkrspqdacnpsebdch\nkkccmdlsmqooamnaadgnlbsmfgclmerskoeqpsfbfjppfcmdcjiibbqsgcgeeboadrdrfafjqnips\nmnfgmflgihjkekcoggeophfssrahnbirmbaqmhdkophnipjldlpmepjsqbggradmsscfddnfkjjhb\nhmdcmjbjafsdnsndsicfaqlddddnephqkosrhegbaakaffspnknmagoscgrfkhcalbkhcikrkaqck\naegeeqarglpgjlkmbffgiorffeiooejakjmcqlefngfqnhkrhemenbsldjfpnaffdesmorhhphrjs\ncieodlcgikscfobbfamempdjflbbe\n</code></pre>\n',10,'2013-03-18 05:19:00',112,'400218ca1c8174d533c1462e9d31ee1d48279c6a',1),(115,6002,'@','<p>Hi It\'s a new version of your code only 68 char !!! :D It\'s works fine. but both versions of your code give Time Limit Exceeded !!! now :|</p>\n\n<pre><code>   c;main(a){for(;c+=a=getchar()-10;c=a?c-2:printf(\"%d\\n\",--c%9+1)*0);}\n</code></pre>\n',2184,'2013-03-27 17:22:38',2,'81d3b2567992ff77498e9c9f3f0e4769016769f2',1),(116,1001,'@','<p>Hi .\nsorry to intrupt But The way you explaind in The question . it made me think that the Input data is from Some file .</p>\n\n<p>that would be mush harder ... i was trying to solve that problem and i did .</p>\n\n<p>main reason of my confusion was beacuse you said \" EOF \" = End of File .</p>\n',2269,'2013-04-19 17:20:25',1,'9222b2962e44a0e0b2d1fa1bc19d328682c8604c',1),(117,1002,'@','<p>import java.util.*;</p>\n\n<p>public class Main {</p>\n\n<pre><code>public static void main(String[] args) {\n  Scanner sc = new Scanner(System.in);     \n  while(sc.hasNextLine()){\n    int cookie= sc.nextInt();\n    int ant = 0 , sig;\n    int dist_a,dist_b;\n    if (cookie &gt;= 5280) break;\n      while(true){\n          sig= sc.nextInt(); \n          System.out.print(\"Moving from \" + ant + \" to \" + sig + \":\");\n          dist_a = Math.abs(cookie - ant);\n          dist_b = Math.abs(cookie - sig);\n          if(dist_b == 0 ){\n              System.out.print(\" found it!\");\n              System.out.println();\n              break;\n          }\n          if(dist_a == dist_b) System.out.print(\" same.\");\n          if(dist_a &gt; dist_b) System.out.print(\" warmer.\");\n          if(dist_a &lt; dist_b) System.out.print(\" colder.\");\n          System.out.println();\n\n        ant = sig;\n     }  \n\n     }\n}\n</code></pre>\n\n<p>} presentation error? why T.T</p>\n',2270,'2013-04-19 22:16:11',47,'1b1068ab924a156b9dbdef2839416264cac6b6c2',1),(118,1002,'@','<p>Have a look on my previous reply!</p>\n\n<p>You have to print a <code>newline</code> <strong>between</strong> the output for each test, not after each one!</p>\n',10,'2013-04-20 17:37:02',47,'e446f19783e77233a8c93b56da6dc9a0690db965',1),(119,1001,'@','<blockquote>\n  <p><strong>Masoud Rahmani</strong> said:</p>\n  \n  <p>Hi . sorry to intrupt But The way you explaind in The question . it made me think that the Input data is from Some file .</p>\n  \n  <p>that would be mush harder ... i was trying to solve that problem and i did .</p>\n  \n  <p>main reason of my confusion was beacuse you said \" EOF \" = End of File .</p>\n</blockquote>\n\n<p>Standard input and output are files too.</p>\n\n<p>In online judge systems, IO comes and goes to files. You can use this commands in your machine to test whether your solution works fine or not.</p>\n\n<pre><code>./my_solution_binay &lt; input.txt &gt; my_output.txt\n</code></pre>\n\n<p>It makes your standard input redirects to <code>input.txt</code> and print your standard output to <code>my_output.txt</code> :)</p>\n',10,'2013-04-20 17:40:44',1,'e879d3095cf583f885e7fa61a9169a896e8dff41',1),(120,1002,'@','<p>Hi there,</p>\n\n<p>This is my code, i submitted it many times, but it continue to say representation error, thanks for any help,</p>\n\n<p>import java.util.Scanner;</p>\n\n<p>public class Main \n{\n    public static void main(String[] args)\n    {\n        Integer place;\n        Integer lastnum;\n        Integer currentnum;//define variables\n        //Integer counter=0;</p>\n\n<pre><code>    Scanner in = new Scanner(System.in);\n\n    place = in.nextInt();\n    while (place!=5280) \n    {   \n        Integer flag = 0;\n        Integer reptime = 0;\n        currentnum = 0;\n        lastnum = 0;\n\n\n        while((flag==0)&amp;&amp;(reptime!=21))\n                {\n                    currentnum = in.nextInt();\n                    reptime++;\n\n                    if(currentnum==place)\n                    {\n                        System.out.print(\"Moving from \"+lastnum+\" to \"+currentnum+\": found it!\\n\");\n                        System.out.print(\"\\n\");\n                        flag = 1;\n                    }\n                    else\n                    {\n\n                    if(Math.abs(currentnum-place) == Math.abs(lastnum-place))\n                    {\n                         System.out.print(\"Moving from \"+lastnum+\" to \"+currentnum+\": same.\\n\");\n                         lastnum = currentnum;\n                    }\n\n                    if(Math.abs(currentnum-place) &gt; Math.abs(lastnum-place))\n                    {\n                         System.out.print(\"Moving from \"+lastnum+\" to \"+currentnum+\": colder.\\n\");\n                         lastnum = currentnum;\n                    }\n\n                    if(Math.abs(currentnum-place) &lt; Math.abs(lastnum-place))\n                    {\n                         System.out.print(\"Moving from \"+lastnum+\" to \"+currentnum+\": warmer.\\n\");\n                         lastnum = currentnum;\n                    }\n                    }\n                }\n        place = in.nextInt();\n\n    }\n}\n</code></pre>\n\n<p>}</p>\n',2261,'2013-04-27 13:02:16',47,'98675ca99f4a93e86dd7c93b9d6d472002a241d3',1),(121,1002,'@','<p>Read the previous reply :)</p>\n',10,'2013-04-28 19:32:50',47,'3fb6ec705631f0a04eba1365186377b4fecbfc04',1),(122,1002,'@','<p>Yeh, It works now ;)</p>\n',2261,'2013-04-30 11:19:25',47,'0f038a38fe33fb6c28a46866770143aab3c1ae74',1),(123,1002,'@','<p>even after I skip a blank line between test cases it says always presentation error!</p>\n',2324,'2013-05-12 16:49:47',47,'66aa4a6f3d37428eb7522156d699654a5def6fbd',1),(124,1002,'@','<blockquote>\n  <p><strong>IromY</strong> said:</p>\n  \n  <p>even after I skip a blank line between test cases it says always presentation error!</p>\n</blockquote>\n\n<p>You have to print a blank line <strong>between</strong> the output cases.</p>\n\n<p>You should not print any excess newlines after the last output case. Pay attention to the word \"Between\".</p>\n',10,'2013-05-15 06:37:44',47,'874f8b4d36877b7bf5cdd104675534066a48a048',1),(125,1001,'@','<p>سلام دوستان ایرانی\nچگونه ورودی خروجی ها رو باید ست کرددر c++\ncin&gt;&gt;\ncout&gt;&gt;\nبه من جواب بدین</p>\n\n<p>pc2 بعد کسی از دوستان با \nکار کرده به من اطلاع بده نیاز دارم به کمکش\nممنون</p>\n',2329,'2013-05-19 05:26:44',1,'a76efc7983575ad5748bbfc27b743623cf84cd95',1),(126,1001,'@','<blockquote>\n  <p><strong>bardiia</strong> said:</p>\n  \n  <p>سلام دوستان ایرانی چگونه ورودی خروجی ها رو باید ست کرددر c++ cin&gt;&gt; cout&gt;&gt; به من جواب بدین</p>\n  \n  <p>pc2 بعد کسی از دوستان با کار کرده به من اطلاع بده نیاز دارم به کمکش ممنون</p>\n</blockquote>\n\n<p>I\'ve looked at your code, you have a typo in the definition of the <code>main</code> function. It should be <code>main</code>, not <code>mian</code> ;)</p>\n\n<p>You have to read the input till <code>EOF</code>. You can do so this way:</p>\n\n<pre><code>int a, b;\nwhile (cin &gt;&gt; a &gt;&gt; b) {\n    cout &lt;&lt; a+b &lt;&lt; endl;\n}\n</code></pre>\n',10,'2013-05-21 08:54:25',1,'2782cbb045ccfc0454d27b0618eba9a83547d5da',1),(127,1001,'@','<p>You can see your compilation error just by clicking on the <code>compilation error</code> in the runs page.</p>\n',10,'2013-05-21 08:57:29',1,'c96cdcced2f0dc7d3639ec72b2cac415a547946b',1),(128,1001,'@','<p>i write my codes in c++. i dont know why all my solutions have a runtime of 0ms. does it mean the judge cant read my code.</p>\n',2332,'2013-05-24 05:18:37',1,'f78018baf9ff680a336fe6a0cbd03ff707766d4a',1),(129,1001,'@','<p>سلام ،\nیه سوال هست از سایت \nuva\nفقط میخوام یه روش برای خوندن از ورودی بهم معرفی کنید\nemail:alvadyhamed@gmail.com\nلینک ترجمه سوال\n<a href=\"http://acm-problems.blog.ir/1391/03/18/11219-How-old-are-you%3F\">http://acm-problems.blog.ir/1391/03/18/11219-How-old-are-you%3F</a></p>\n',2329,'2013-05-24 06:34:47',1,'6fb17892b902c15e57a180413b64275528f15901',1),(130,1001,'@','<blockquote>\n  <p><strong>bardiia</strong> said:</p>\n  \n  <p>سلام ، یه سوال هست از سایت uva فقط میخوام یه روش برای خوندن از ورودی بهم معرفی کنید email:alvadyhamed@gmail.com لینک ترجمه سوال <a href=\"http://acm-problems.blog.ir/1391/03/18/11219-How-old-are-you%3F\">http://acm-problems.blog.ir/1391/03/18/11219-How-old-are-you%3F</a></p>\n</blockquote>\n\n<p>You can read the input as string, then replace every <code>/</code> character with space, then use <code>stringstream</code>.</p>\n',10,'2013-05-24 20:57:26',1,'ed6efcb0f666f54ed6c14aaa08532c9906609476',1),(131,1104,'Bug bug bug','<p>Salam\nBe nazare man, ba tavajoh be tarife geraf \'Oileri\' , test case haye in soal ghalat ast.\nage barresi konid mamnoon misham.</p>\n\n<p>Siaxace\nUt.Tehran</p>\n',2163,'2013-06-09 15:43:22',-1,'b432ab53a4f4644979f46c6070616d789bd73971',1);
/*!40000 ALTER TABLE `discussions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `judge_result`
--

DROP TABLE IF EXISTS `judge_result`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `judge_result` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `label` varchar(21) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `judge_result`
--

LOCK TABLES `judge_result` WRITE;
/*!40000 ALTER TABLE `judge_result` DISABLE KEYS */;
INSERT INTO `judge_result` VALUES (0,'Judge Queue'),(1,'Pending Rejudge'),(2,'Compiling'),(3,'Running And Judging'),(4,'Accepted'),(5,'Presentation Error'),(6,'Wrong Answer'),(7,'Time Limit Exceeded'),(8,'Memory Limit Exceeded'),(9,'Output Limit Error'),(10,'Runtime Error'),(11,'Compilation Error'),(12,'Compile OK');
/*!40000 ALTER TABLE `judge_result` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `languages`
--

DROP TABLE IF EXISTS `languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `languages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(15) NOT NULL,
  `label` varchar(25) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `languages`
--

LOCK TABLES `languages` WRITE;
/*!40000 ALTER TABLE `languages` DISABLE KEYS */;
INSERT INTO `languages` VALUES (0,'C','C (gcc 4.6.2)'),(1,'C++','C++ (g++ 4.6.2)'),(2,'FPC','FPC (fpc 2.4.0)'),(3,'Java','Java (java 1.6.0)'),(6,'Python','Python (python 2.6.5)'),(7,'Php','Php (Php 5.3.2)');
/*!40000 ALTER TABLE `languages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `logs`
--

DROP TABLE IF EXISTS `logs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `logs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `src` text NOT NULL,
  `dst` text NOT NULL,
  `time` datetime NOT NULL,
  `method` varchar(8) NOT NULL,
  `ip` varchar(16) NOT NULL,
  `param` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `logs`
--

LOCK TABLES `logs` WRITE;
/*!40000 ALTER TABLE `logs` DISABLE KEYS */;
/*!40000 ALTER TABLE `logs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `notifications`
--

DROP TABLE IF EXISTS `notifications`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notifications` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `target_id` int(11) NOT NULL,
  `url` varchar(64) NOT NULL,
  `label` varchar(128) NOT NULL,
  `status` int(11) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `hash` varchar(40) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`)
) ENGINE=MyISAM AUTO_INCREMENT=2022 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `notifications`
--

LOCK TABLES `notifications` WRITE;
/*!40000 ALTER TABLE `notifications` DISABLE KEYS */;
INSERT INTO `notifications` VALUES (9,7,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(13,20,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(446,963,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',0,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(21,45,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1098,1440,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1877,16,1,1148,'discussion/problem/1148','Someone posted a topic on the problem #1148',1,'2013-03-12 19:56:58','156423591f10a538aa3e64efd16b77b12b11d32e'),(1732,641,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(26,52,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(27,54,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(28,59,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(29,62,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(30,73,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(31,74,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(32,76,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(33,91,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(34,94,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(35,96,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(36,102,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(38,104,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(39,106,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(40,109,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(42,112,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(43,113,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(44,117,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(46,139,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1026,849,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(48,141,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(49,144,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(50,148,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(51,424,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(52,428,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(53,430,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(54,431,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(55,432,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(56,433,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(57,434,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(58,437,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(59,440,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(60,444,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(61,453,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(62,454,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(63,457,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(64,463,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(65,466,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(66,482,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(67,485,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(68,486,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(69,488,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(71,490,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(72,491,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(73,493,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(74,495,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(75,497,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(76,498,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(77,500,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(78,502,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(79,503,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(80,505,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(81,508,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(82,509,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(83,511,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(84,512,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(85,513,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1066,1045,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(87,516,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(88,518,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(90,523,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(91,524,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(92,527,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(93,528,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(94,530,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(95,531,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(96,535,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(97,539,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(98,542,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(99,543,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(100,544,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(101,546,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(102,548,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(103,549,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(104,550,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(105,552,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1656,1858,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(107,559,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(108,561,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(109,562,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(110,563,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(111,569,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(112,577,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(113,580,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(979,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-02 21:04:45','894ef484395c876dc18a51dc386c08478d113bf0'),(115,592,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(116,596,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(117,601,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(118,608,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(120,614,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(121,616,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(124,636,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(125,637,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(126,640,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(127,641,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(128,643,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(129,648,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(130,649,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(131,655,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(134,665,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(136,675,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(137,679,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(138,690,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(419,117,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',1,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(140,696,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(141,699,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(142,706,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(143,707,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(144,712,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(145,713,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(146,717,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(148,723,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1024,844,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',0,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1257,436,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(439,897,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',1,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(154,734,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(155,736,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(156,748,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1132,780,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1060,1023,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(160,784,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(161,786,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1376,1731,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(165,795,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(166,796,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(975,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-02 08:54:44','1c7c878edb9f583ad0e79a0b0ec605831364bcec'),(168,812,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(170,839,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(427,727,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',1,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(172,844,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(174,849,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(175,853,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(176,856,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(177,857,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1373,1707,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(182,877,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(183,878,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1067,1112,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1858,929,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(187,889,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(188,891,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(190,897,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1027,852,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1028,856,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(194,914,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1128,478,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',0,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1919,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-19 17:20:25','9222b2962e44a0e0b2d1fa1bc19d328682c8604c'),(200,925,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(204,932,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(206,939,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(207,940,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1125,22,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1929,2270,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-04-20 17:37:02','e446f19783e77233a8c93b56da6dc9a0690db965'),(382,1292,1,1326,'discussion/problem/1326','Someone posted a topic on the problem #1326',1,'2012-09-19 18:31:26','e6d8e2be25611b2b595e92d813f88c5b33ee8fd9'),(219,987,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(220,996,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(221,997,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(223,1004,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(225,1011,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(228,1020,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(415,25,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',1,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(1380,1805,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(231,1028,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(232,1029,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(233,1033,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(234,1035,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(235,1045,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1100,1446,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1095,1436,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(238,1049,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(239,1118,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(240,1126,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1363,22,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1062,1028,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(245,1144,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(246,1150,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(247,1151,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(248,1156,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(457,1198,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',1,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(250,1179,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1339,1296,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(253,1198,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1917,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-19 17:20:25','9222b2962e44a0e0b2d1fa1bc19d328682c8604c'),(255,1202,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(256,1207,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(259,1213,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(261,1217,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',0,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(262,1219,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1790,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-04 15:15:52','a37871432713e08127a0ebdebafc9dff7416e259'),(264,1226,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(998,137,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(999,145,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(267,1240,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(442,920,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',1,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(269,1245,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(270,1246,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(271,1248,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(272,1249,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(884,25,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(275,1262,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(276,1264,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(279,1280,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(280,1282,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(282,1301,1,1001,'discussion/problem/1001','Someone posted a topic on the problem #1001',1,'2012-09-15 09:45:02','2fa09f6451cadba82c839a35cac930356e49d3d0'),(1046,940,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1009,727,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1011,730,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',0,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1936,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(294,117,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(296,523,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(380,1290,1,1326,'discussion/problem/1326','Someone posted a topic on the problem #1326',1,'2012-09-19 18:31:26','e6d8e2be25611b2b595e92d813f88c5b33ee8fd9'),(298,633,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(300,636,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(301,641,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',0,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(302,643,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(454,1035,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',1,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(447,974,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',0,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(456,1179,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',0,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(307,690,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(309,707,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(1379,1792,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1014,736,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1097,1438,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',0,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1822,847,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(315,737,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(972,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-02 08:45:00','0b516dbb8815cb628295bc9ad807a3b435898957'),(1372,1694,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(432,844,1,1007,'discussion/problem/1007','Someone posted a topic on the problem #1007',0,'2012-10-25 20:20:57','9d7fdc28012a62f343b8d875c88b006ad01effff'),(325,914,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(328,917,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',0,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(330,925,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',0,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(333,932,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(335,940,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(343,996,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(1051,963,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(346,1009,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(347,1010,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(348,1011,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(1096,1437,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',0,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(352,1158,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(353,1166,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(354,1167,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(355,1198,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(357,1202,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',1,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(359,1217,1,6002,'discussion/problem/6002','Someone posted a topic on the problem #6002',0,'2012-09-16 11:00:18','77addd98deb0dc346bb838ed6f277d6ddda2dce5'),(1359,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-11 17:36:56','ba6d55dd56bbcb03e3901eaf637e4a9ffe1763a3'),(996,111,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(997,117,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(383,1294,1,1326,'discussion/problem/1326','Someone posted a topic on the problem #1326',1,'2012-09-19 18:31:26','e6d8e2be25611b2b595e92d813f88c5b33ee8fd9'),(1018,784,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1019,786,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1020,787,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(461,44,1,1363,'discussion/problem/1363','Someone posted a topic on the problem #1363',0,'2012-10-25 20:23:59','f664aff27d767c9564622fcc3029f938ff548b18'),(1965,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1816,630,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(1007,725,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1928,1744,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-20 17:37:02','e446f19783e77233a8c93b56da6dc9a0690db965'),(471,1295,1,1363,'discussion/problem/1363','Someone posted a topic on the problem #1363',1,'2012-10-25 20:23:59','f664aff27d767c9564622fcc3029f938ff548b18'),(472,1296,1,1363,'discussion/problem/1363','Someone posted a topic on the problem #1363',0,'2012-10-25 20:23:59','f664aff27d767c9564622fcc3029f938ff548b18'),(994,96,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1063,1029,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',0,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1064,1033,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(480,25,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(1787,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-04 15:15:52','a37871432713e08127a0ebdebafc9dff7416e259'),(1826,963,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(887,59,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(485,117,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(1370,1302,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(488,633,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(490,636,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(491,641,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',0,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(1926,1744,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-19 22:16:11','1b1068ab924a156b9dbdef2839416264cac6b6c2'),(1825,929,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(496,727,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(1054,997,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1090,1318,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1057,1011,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1058,1017,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1127,437,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1534,40,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(508,954,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(509,963,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',0,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(986,25,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(514,1198,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(515,1217,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(517,1275,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',1,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(519,1364,1,6024,'discussion/problem/6024','Someone posted a topic on the problem #6024',0,'2012-10-25 20:27:54','6dad3723cc54dc5f9215b3f22652394cd9536b7d'),(869,497,1,1135,'discussion/problem/1135','Someone posted a topic on the problem #1135',1,'2012-11-04 12:54:04','1f2edc21d9746254c8ada615fca0f852ebcf331e'),(870,524,1,1135,'discussion/problem/1135','Someone posted a topic on the problem #1135',1,'2012-11-04 12:54:04','1f2edc21d9746254c8ada615fca0f852ebcf331e'),(871,611,1,1135,'discussion/problem/1135','Someone posted a topic on the problem #1135',1,'2012-11-04 12:54:04','1f2edc21d9746254c8ada615fca0f852ebcf331e'),(1101,1447,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1841,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 02:33:22','22233a0287127fdecd0bcd3a10cf33d842e9798e'),(1103,1459,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1104,1460,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1784,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-30 21:38:18','b259a22043c378ae8fef77aec8b6b6ab0027bea2'),(1398,1302,1,1383,'discussion/problem/1383','Someone posted a topic on the problem #1383',1,'2012-12-13 20:57:11','0e8a72ae850848f240a4efad95948f88a221f6bd'),(1109,1503,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1110,1504,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1808,1112,1,1004,'discussion/problem/1004','Someone posted a topic on the problem #1004',1,'2013-01-12 18:17:57','628cba20711400b3e33f05029cb411b32e3a867d'),(1227,914,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1130,642,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1005,690,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(993,54,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1065,1035,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(891,633,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1072,1158,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(893,636,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(894,641,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',0,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(895,643,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1659,1939,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1933,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(899,671,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(901,690,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(902,694,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(903,696,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(904,704,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(905,707,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(906,716,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(908,727,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1008,726,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1941,1744,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-27 13:02:16','98675ca99f4a93e86dd7c93b9d6d472002a241d3'),(1937,2269,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',0,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(1076,1198,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(914,772,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1797,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-05 16:28:26','4aa820c0c264231dd36cbedfea610daef88e8186'),(917,796,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(918,797,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(919,798,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(920,799,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(921,800,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(922,801,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(923,802,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(924,803,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(925,804,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(926,805,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(927,807,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(931,858,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',0,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1049,950,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1957,1644,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-05-15 06:37:44','874f8b4d36877b7bf5cdd104675534066a48a048'),(938,925,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',0,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(941,932,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1818,641,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(1915,40,2,2,'discussion/topic/2','Some new replies on your subscribed topic #6002',1,'2013-03-27 17:22:38','81d3b2567992ff77498e9c9f3f0e4769016769f2'),(947,963,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1966,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1658,1886,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(952,1017,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(954,1020,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1074,1179,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(958,1198,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1017,780,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(962,1217,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(964,1262,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1068,1118,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',0,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(966,1275,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',1,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(967,1364,1,6020,'discussion/problem/6020','Someone posted a topic on the problem #6020',0,'2012-11-12 09:25:29','b2499da054ec7c2df4b30d081837ccb8a1466f1f'),(1080,1217,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1081,1246,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1082,1248,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1085,1264,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1087,1275,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1088,1280,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1089,1282,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1029,858,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',0,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1131,690,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1340,1302,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1657,1876,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1034,889,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1035,897,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1036,904,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1038,914,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1739,696,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1923,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-19 17:20:25','9222b2962e44a0e0b2d1fa1bc19d328682c8604c'),(1920,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-19 17:20:25','9222b2962e44a0e0b2d1fa1bc19d328682c8604c'),(1725,38,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',0,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1126,436,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1115,1631,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1117,1681,1,1002,'discussion/problem/1002','Someone posted a topic on the problem #1002',1,'2012-12-04 13:31:03','127e7611cea0f018fe7cf642155413f3b28f127e'),(1335,436,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1366,478,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',0,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1356,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-11 17:36:56','ba6d55dd56bbcb03e3901eaf637e4a9ffe1763a3'),(1140,1296,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',0,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1141,1302,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1144,1315,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1145,1677,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1146,1693,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1147,1694,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',0,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1148,1698,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1149,1703,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1150,1704,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1378,1786,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',0,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1155,1723,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1157,1726,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1336,478,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',0,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1160,1768,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1161,1770,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1728,567,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1164,1784,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1165,1786,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',0,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1166,1789,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1167,1805,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1168,1808,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1785,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-30 21:38:18','b259a22043c378ae8fef77aec8b6b6ab0027bea2'),(1170,1820,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1171,1824,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1173,1826,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1174,1827,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1653,1826,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1176,1835,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1177,1837,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1179,1841,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1180,1844,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1181,1846,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1182,1849,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1185,1856,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1186,1858,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1187,1863,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1188,1866,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1189,1867,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1259,478,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',0,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1191,1876,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1192,1879,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',0,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1193,1882,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1194,1884,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1195,1886,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-06 20:50:21','180b9034024d9f4a2d00252afd61fa44d6a0d59c'),(1652,1825,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1651,1819,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1258,437,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1914,21,2,2,'discussion/topic/2','Some new replies on your subscribed topic #6002',0,'2013-03-27 17:22:38','81d3b2567992ff77498e9c9f3f0e4769016769f2'),(1232,963,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1342,1677,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1384,1827,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1365,436,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1238,1268,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1796,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-05 16:28:26','4aa820c0c264231dd36cbedfea610daef88e8186'),(1650,1805,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1241,1290,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1386,1858,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1243,1292,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1244,1294,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1245,1295,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1247,1305,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',0,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1905,14,1,1066,'discussion/problem/1066','Someone posted a topic on the problem #1066',1,'2013-03-16 20:23:44','442c29c393e562a5e5a256a814278e01ca94fd55'),(1377,1784,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1767,1229,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1251,1685,1,1322,'discussion/problem/1322','Someone posted a topic on the problem #1322',1,'2012-12-07 23:43:57','3d3afb49aa57b764efe88a8cd34748991d09493e'),(1256,22,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1381,1819,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1262,642,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1263,690,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1264,780,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1745,734,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1768,1305,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1383,1826,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1393,794,1,1383,'discussion/problem/1383','Someone posted a topic on the problem #1383',1,'2012-12-13 20:57:11','0e8a72ae850848f240a4efad95948f88a221f6bd'),(1763,1017,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1273,1296,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1274,1302,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1654,1827,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1277,1315,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1278,1677,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1279,1693,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1280,1694,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1281,1698,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1282,1703,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1283,1704,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1284,1707,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1648,1786,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1649,1792,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1288,1723,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1400,1518,1,1383,'discussion/problem/1383','Someone posted a topic on the problem #1383',1,'2012-12-13 20:57:11','0e8a72ae850848f240a4efad95948f88a221f6bd'),(1290,1726,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1291,1731,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1293,1768,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1294,1770,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1295,1774,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1297,1784,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1298,1786,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',0,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1299,1789,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1300,1792,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1301,1794,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1302,1805,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1303,1808,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1304,1819,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1305,1820,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1306,1824,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1353,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-11 09:43:01','79c9e6d3b0a529fa98730136cdb3e3c3a53fb1b2'),(1308,1826,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1309,1827,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1647,1784,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1311,1835,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1312,1837,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1314,1841,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1315,1844,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1316,1846,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1317,1849,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1320,1856,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1321,1858,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1322,1863,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1323,1866,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1324,1867,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1325,1870,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1326,1876,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1327,1879,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1328,1882,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1329,1884,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1330,1886,1,2021,'discussion/problem/2021','Someone posted a topic on the problem #2021',1,'2012-12-08 17:02:29','15ef970cea97ca52ed4c7ce50c16a35a7309e3dc'),(1343,1693,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1344,1694,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1345,1707,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1646,1731,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1348,1784,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1349,1827,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1351,1858,1,2025,'discussion/problem/2025','Someone posted a topic on the problem #2025',1,'2012-12-10 07:52:26','a3bf5dfd5fb326bb56940bea669d4fe3c59be611'),(1387,1876,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1388,1886,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-13 06:04:32','cc351d7b0dc6f1e4ce9583e48f23a6845f30ac95'),(1735,671,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1643,1707,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1642,1694,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1641,1303,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1640,1302,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1638,1289,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1927,1644,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-20 17:37:02','e446f19783e77233a8c93b56da6dc9a0690db965'),(1756,917,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1634,478,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1633,436,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1631,47,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1630,22,1,2026,'discussion/problem/2026','Someone posted a topic on the problem #2026',1,'2012-12-15 18:56:47','fc814f1d5e07a1d152912f0f20ff1e995a588a1f'),(1746,737,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1918,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-19 17:20:25','9222b2962e44a0e0b2d1fa1bc19d328682c8604c'),(1805,844,1,1004,'discussion/problem/1004','Someone posted a topic on the problem #1004',0,'2013-01-12 18:17:57','628cba20711400b3e33f05029cb411b32e3a867d'),(1624,1767,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1623,1736,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1620,1637,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1618,1561,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1617,1508,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1809,1198,1,1004,'discussion/problem/1004','Someone posted a topic on the problem #1004',1,'2013-01-12 18:17:57','628cba20711400b3e33f05029cb411b32e3a867d'),(1749,804,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1613,1436,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1792,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-04 15:15:52','a37871432713e08127a0ebdebafc9dff7416e259'),(1793,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-05 16:28:26','4aa820c0c264231dd36cbedfea610daef88e8186'),(1968,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1879,553,1,1148,'discussion/problem/1148','Someone posted a topic on the problem #1148',1,'2013-03-12 19:56:58','156423591f10a538aa3e64efd16b77b12b11d32e'),(1731,636,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1606,1305,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1605,1275,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1603,1238,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1602,1227,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',0,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1601,1217,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1598,1198,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1593,1021,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1591,1017,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1590,1010,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1589,1009,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1587,990,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1586,980,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1583,963,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1913,19,2,2,'discussion/topic/2','Some new replies on your subscribed topic #6002',1,'2013-03-27 17:22:38','81d3b2567992ff77498e9c9f3f0e4769016769f2'),(1943,1644,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-28 19:32:50','3fb6ec705631f0a04eba1365186377b4fecbfc04'),(1958,1744,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-05-15 06:37:44','874f8b4d36877b7bf5cdd104675534066a48a048'),(1578,940,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1577,939,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',0,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1817,635,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(1801,117,1,1004,'discussion/problem/1004','Someone posted a topic on the problem #1004',1,'2013-01-12 18:17:57','628cba20711400b3e33f05029cb411b32e3a867d'),(1855,865,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',0,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1573,925,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',0,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1572,920,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1571,917,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1922,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-19 17:20:25','9222b2962e44a0e0b2d1fa1bc19d328682c8604c'),(1738,694,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1568,914,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1821,768,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(1759,963,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1741,725,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1742,726,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1562,858,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',0,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1921,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-19 17:20:25','9222b2962e44a0e0b2d1fa1bc19d328682c8604c'),(1558,780,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1799,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',0,'2013-01-05 16:28:26','4aa820c0c264231dd36cbedfea610daef88e8186'),(1555,737,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1880,556,1,1148,'discussion/problem/1148','Someone posted a topic on the problem #1148',1,'2013-03-12 19:56:58','156423591f10a538aa3e64efd16b77b12b11d32e'),(1852,44,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1552,726,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1840,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 02:33:22','22233a0287127fdecd0bcd3a10cf33d842e9798e'),(1550,707,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1549,699,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',0,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1548,694,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1547,690,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1546,686,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1837,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 02:33:22','22233a0287127fdecd0bcd3a10cf33d842e9798e'),(1543,643,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1542,641,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1541,636,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1800,25,1,1004,'discussion/problem/1004','Someone posted a topic on the problem #1004',1,'2013-01-12 18:17:57','628cba20711400b3e33f05029cb411b32e3a867d'),(1539,633,1,6001,'discussion/problem/6001','Someone posted a topic on the problem #6001',1,'2012-12-15 17:50:50','cf89a9ee952a1d4a29ddabe90f5f849a30bb0d1a'),(1667,567,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1670,636,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1671,641,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1925,1644,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-19 22:16:11','1b1068ab924a156b9dbdef2839416264cac6b6c2'),(1781,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2012-12-30 21:38:18','b259a22043c378ae8fef77aec8b6b6ab0027bea2'),(1674,671,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1675,686,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1676,690,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1677,694,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1678,696,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1839,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 02:33:22','22233a0287127fdecd0bcd3a10cf33d842e9798e'),(1680,725,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1681,726,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1684,734,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1685,737,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1798,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-05 16:28:26','4aa820c0c264231dd36cbedfea610daef88e8186'),(1688,804,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1689,805,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1690,807,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1750,805,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1751,807,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1752,847,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1737,690,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1695,917,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1838,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 02:33:22','22233a0287127fdecd0bcd3a10cf33d842e9798e'),(1829,1017,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(1906,46,1,1066,'discussion/problem/1066','Someone posted a topic on the problem #1066',1,'2013-03-16 20:23:44','442c29c393e562a5e5a256a814278e01ca94fd55'),(1698,963,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1702,1017,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1932,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(1706,1229,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1707,1305,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-16 01:58:49','06693431b521c471a8d873b515876ceac19bb2bd'),(1791,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-01-04 15:15:52','a37871432713e08127a0ebdebafc9dff7416e259'),(1736,686,1,6003,'discussion/problem/6003','Someone posted a topic on the problem #6003',1,'2012-12-19 19:48:35','04150508650935b2809bf57fa4a3d2378dad98c8'),(1830,1364,1,6011,'discussion/problem/6011','Someone posted a topic on the problem #6011',1,'2013-02-20 19:18:33','c96425a60591d6894c8b43acc67552b0ccba83bc'),(1964,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1842,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 02:33:22','22233a0287127fdecd0bcd3a10cf33d842e9798e'),(1833,2044,2,98,'discussion/topic/98','Some new replies on your subscribed topic #1004',1,'2013-02-21 12:53:50','8ea53107725ef3f98d4476ec7f5c80d803a362db'),(1843,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 18:58:55','8530913d8f55c7653c6bde638cfd06547b7c16bb'),(1844,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 18:58:55','8530913d8f55c7653c6bde638cfd06547b7c16bb'),(1845,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 18:58:55','8530913d8f55c7653c6bde638cfd06547b7c16bb'),(1846,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 18:58:55','8530913d8f55c7653c6bde638cfd06547b7c16bb'),(1847,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 18:58:55','8530913d8f55c7653c6bde638cfd06547b7c16bb'),(1848,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 18:58:55','8530913d8f55c7653c6bde638cfd06547b7c16bb'),(1849,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-03-03 18:58:55','8530913d8f55c7653c6bde638cfd06547b7c16bb'),(1954,1744,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-05-12 16:49:47','66aa4a6f3d37428eb7522156d699654a5def6fbd'),(1860,1268,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1861,1288,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1862,1289,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1863,1296,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1864,1302,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1865,1303,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1866,1304,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1867,1305,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1868,1310,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1869,1454,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1870,1668,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1930,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(1873,2080,1,1333,'discussion/problem/1333','Someone posted a topic on the problem #1333',1,'2013-03-10 19:00:01','970791898241cce32e4e89e77d859e07f62767fd'),(1878,436,1,1148,'discussion/problem/1148','Someone posted a topic on the problem #1148',1,'2013-03-12 19:56:58','156423591f10a538aa3e64efd16b77b12b11d32e'),(1881,557,1,1148,'discussion/problem/1148','Someone posted a topic on the problem #1148',1,'2013-03-12 19:56:58','156423591f10a538aa3e64efd16b77b12b11d32e'),(1882,630,1,1148,'discussion/problem/1148','Someone posted a topic on the problem #1148',1,'2013-03-12 19:56:58','156423591f10a538aa3e64efd16b77b12b11d32e'),(1883,963,1,1148,'discussion/problem/1148','Someone posted a topic on the problem #1148',1,'2013-03-12 19:56:58','156423591f10a538aa3e64efd16b77b12b11d32e'),(1885,44,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1931,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(1967,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1888,865,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',0,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1953,1644,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-05-12 16:49:47','66aa4a6f3d37428eb7522156d699654a5def6fbd'),(1891,1268,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1892,1289,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1893,1291,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1894,1296,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1895,1303,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1896,1305,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1963,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1940,1644,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-27 13:02:16','98675ca99f4a93e86dd7c93b9d6d472002a241d3'),(1899,1969,1,1365,'discussion/problem/1365','Someone posted a topic on the problem #1365',1,'2013-03-14 07:41:04','3fae8db2d0452ca43c6db373b074da56471be983'),(1935,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(1934,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-04-20 17:40:44','e879d3095cf583f885e7fa61a9169a896e8dff41'),(1942,2270,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-04-27 13:02:16','98675ca99f4a93e86dd7c93b9d6d472002a241d3'),(1944,1744,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-28 19:32:50','3fb6ec705631f0a04eba1365186377b4fecbfc04'),(1955,2261,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-05-12 16:49:47','66aa4a6f3d37428eb7522156d699654a5def6fbd'),(1946,2270,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-04-28 19:32:50','3fb6ec705631f0a04eba1365186377b4fecbfc04'),(1956,2270,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-05-12 16:49:47','66aa4a6f3d37428eb7522156d699654a5def6fbd'),(1948,1644,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-30 11:19:25','0f038a38fe33fb6c28a46866770143aab3c1ae74'),(1949,1744,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-04-30 11:19:25','0f038a38fe33fb6c28a46866770143aab3c1ae74'),(1950,2270,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-04-30 11:19:25','0f038a38fe33fb6c28a46866770143aab3c1ae74'),(1959,2261,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-05-15 06:37:44','874f8b4d36877b7bf5cdd104675534066a48a048'),(1960,2270,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',0,'2013-05-15 06:37:44','874f8b4d36877b7bf5cdd104675534066a48a048'),(1961,2324,2,47,'discussion/topic/47','Some new replies on your subscribed topic #1002',1,'2013-05-15 06:37:44','874f8b4d36877b7bf5cdd104675534066a48a048'),(1969,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1970,2269,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',0,'2013-05-19 05:26:44','a76efc7983575ad5748bbfc27b743623cf84cd95'),(1971,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(1972,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(1973,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(1974,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(1975,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(1976,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(1977,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(1978,2269,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:54:25','2782cbb045ccfc0454d27b0618eba9a83547d5da'),(2001,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(1980,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1981,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1982,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1983,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1984,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1985,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1986,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1987,2269,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-21 08:57:29','c96cdcced2f0dc7d3639ec72b2cac415a547946b'),(1991,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1992,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1993,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1994,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1995,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1996,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1997,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1998,2269,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(1999,2329,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',0,'2013-05-24 05:18:37','f78018baf9ff680a336fe6a0cbd03ff707766d4a'),(2002,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2003,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2004,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2005,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2006,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2007,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2008,2269,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2009,2332,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 06:34:47','6fb17892b902c15e57a180413b64275528f15901'),(2010,780,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2011,1195,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2012,1691,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2013,1982,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2014,2036,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2015,2043,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2016,2127,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2017,2269,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2018,2329,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476'),(2019,2332,2,1,'discussion/topic/1','Some new replies on your subscribed topic #1001',1,'2013-05-24 20:57:26','ed6efcb0f666f54ed6c14aaa08532c9906609476');
/*!40000 ALTER TABLE `notifications` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `problems`
--

DROP TABLE IF EXISTS `problems`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `problems` (
  `code` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(128) NOT NULL,
  `statement` text NOT NULL,
  `input` text NOT NULL,
  `output` text NOT NULL,
  `sample_input` text NOT NULL,
  `sample_output` text NOT NULL,
  `hint` text NOT NULL,
  `source_id` int(11) NOT NULL,
  `special_judge` tinyint(1) NOT NULL,
  `is_visible` tinyint(1) NOT NULL,
  `memory_limit` int(11) NOT NULL,
  `time_limit` int(11) NOT NULL,
  `acc_counter` int(11) NOT NULL,
  `sub_counter` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`code`)
) ENGINE=MyISAM AUTO_INCREMENT=10000 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problems`
--

LOCK TABLES `problems` WRITE;
/*!40000 ALTER TABLE `problems` DISABLE KEYS */;
INSERT INTO `problems` VALUES (1001,'A+B','<p>Calculate a + b</p>\n<p> </p>','<p>The input will consist of <strong>a series</strong> of pairs of integers a and b,separated by a space, one pair of integers per line. you should read the input until EOF.</p>','<p>For each pair of input integers a and b you should output the sum of a \nand b in one line,and with one line of output for each line in input.</p>','1 5\n7 2','6\n9','<p>Use + operator</p>',-1,0,1,32,1,881,2382,10),(2000,'Defective Altimeter','<p>&nbsp;A passenger plane is approaching the Mehrabad airport. As the pilot started the landing procedure, he figured out that the Altimeter is defective and does not display the altitude correctly. While counting down, the altimeter skips the digit 4 in all positions of the displayed number. For example, if the altimeter is displaying 27550 and the airplane descends one foot the altimeter will display 27539 instead of 27549. (The same problem exists when the airplane ascends). In order to save the lives of people on board, the captain asked if any passenger can help. Being the only programmer in the flight, you are asked to write a program that gets the altitude displayed by the defective altimeter and outputs the actual altitude.</p>','<p>The input includes multiple cases each on a single line case containing one integer between 1 and 999,999,999 which represents the displayed number on the defective altimeter. In the last line of the input you will get a single 0.</p>','<p>For each test case, you must provide the actual altitude with the format</p>\n<pre>A: B</pre><p>where <em>A</em> is the altitude displayed on altimeter and <em>B</em> is the actual altitude.</p>','3\n17\n0\n','3: 3\n17: 15\n','<p> </p>',37,0,1,64,1,118,422,10),(1030,'Split Windows','<p>The Dotty Software Company makes software that is displayed on inexpensive \n  text based terminals. One application for this system has a main window that \n  can be subdivided into further subwindows. Your task is to take a description \n  of the screen layout after a sequence of window splits and draw the minimum \n  sized window grid that is consistent with the description.<br />\n  In this problem we will concentrate on the boundaries of windows, so all the \n  characters inside of windows will be left blank. Each window that is not further \n  subdivided has a label. Each label is a distinct uppercase letter. For a text \n  terminal the boundaries of windows must be drawn with characters, chosen as \n  follows: A capital letter label is placed in the upper left-hand corner of each \n  undivided window. Asterisks,\'*\', appear in corners of windows where there is \n  not a label. Dashes, \'-\', appear on upper and lower boundaries where there are \n  not corners. Vertical bars, \'|\', appear on side boundaries where there are not \n  corners.</p>\n<p>\n  For example, the sequence of splits below would generate Window 1: Initially \n  there could be an application window labeled M, that is split next into left \n  and right subwindows, adding label R, and the left subwindow is split into top \n  and bottom subwindows, adding the label C.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1030_a59083e080cdaf3107b6b62a5f0a14f1.jpg\" src=\"assets/problem_images/1030_a59083e080cdaf3107b6b62a5f0a14f1.jpg\" /></p>\n<p align=\"left\"><br />\n  For each pattern of splits there is a binary tree of characters that can describe \n  it. The window splitting and tree structures are described together, building \n  up from the simplest cases.<br />\n  <br />\n  1. A window may be an undivided rectangle. Such a window has a capital letter \n  as label. The tree for the window contains just the label.<br />\n  <br />\n  2. A window may either be split into left and right subwindows or into top and \n  bottom subwindows, and the corresponding trees have as root the boundary character \n  for the split: a vertical line \'|\' or a horizontal dash \'-\' respectively. The \n  root has left and right subtrees corresponding to the top and bottom or left \n  and right subwindows respectively.<br />\n  <br />\n  Tree 1, above, and Trees 2-4, below, would be consistent with Windows 1-4. Note \n  that Tree 4 contains Trees 2 and 3. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1030_e21523c3a297523f754c42b80673b86b.jpg\" src=\"assets/problem_images/1030_e21523c3a297523f754c42b80673b86b.jpg\" /></p>\n<p align=\"left\">The trees may be more succinctly expressed via a preorder traversal:<br />\n  <br />\n  1. The preorder traversal of a tree with just one node (containing a letter) \n  is that letter.<br />\n  <br />\n  2. The preorder traversal of a tree with a left and a right subtree is the character \n  from the root of the tree (\'-\' or \'|\') followed by the preorder traversal of \n  the left subtree, and then the preorder traversal of the right subtree.<br />\n  <br />\n  The preorder traversals for Trees 1 through 4 are<br />\n  <br />\n  |-MCR -|-ABC-D|E-FG -P-|Q|RST |-|-ABC-D|E-FG-P-|Q|RST<br />\n  <br />\n  Each undivided window must have space for at least one character inside. Hence \n  each tree of splits will be associated with a minimum window size. Windows 1-4 \n  are minimum sized windows for Trees 1-4. Each window illustrates the fact that \n  even in a minimum sized window, not all undivided windows contain only one character.<br />\n  <br />\n  Consider Tree 4 and Window 4. The main window is split into a left window with \n  Tree 2 and right window with Tree 3. The left window is like Window 2, but the \n  right window is not just like Window 3. The heights of left and right subwindows \n  must match, so the right window must be stretched.<br />\n  <br />\n  The stretching rule depends on a definition of the size of windows. For dimension \n  calculations it is easiest to imagine that a window contains its interior and \n  a half character wide boundary on all sides, so the total dimensions of a window \n  are one more than the dimensions of the interior. Hence the minimum dimensions \n  of a window are 2 by 2, since a window must contain one character inside, and \n  we add one for the boundary. This definition also means that the sum of the \n  widths of left and right subwindows is the width of their enclosing window. \n  The sum of the heights of top and bottom subwindows is the height of their enclosing \n  window.<br />\n  <br />\n  The right window in Window 4 must be stretched to match the height 10 of the \n  left window. The right window is split into a top with tree P having minimum \n  height 2 and a bottom with tree -|Q|RST having minimum height 4. The rule for \n  the dimensions in the stretched window is that the heights of the subwindows \n  expand in proportion to their minimum heights, if possible. Some symbols may \n  help here: Let D = 10 be the height of the combined stretched window. We want \n  to determine D1 and D2, the stretched heights of the top and bottom subwindow. \n  Call the corresponding minimum dimensions d = 6, d1 = 2, and d2 = 4. If the \n  window were expanded from a total height d to D in proportion, we would have \n  D1 = d1*(D/d) = 2*(10/6) = 3.333...and D2 = d2*(D/d) = 6.666.... Since the results \n  are not integers we increase D1 to 4 and decrease D2 to 6.<br />\n  <br />\n  There is a similar calculation for the bottom window with tree -|Q|RST. It is \n  further subdivided into a top with tree |Q|RS and a bottom with tree T, each \n  having minimum height 2 = d1 = d2. The heights need to add up to D = 6, so they \n  are increased proportionally to D1 = D2 = 2*(6/4) = 3 (exact integers).<br />\n  <br />\n  The final dimensions of an enclosing window are always determined before the \n  final dimensions of its subwindows. In this example only heights needed to be \n  apportioned. If all horizontal and vertical splits were interchanged in this \n  example, producing a tree -|-|ABC|D-E|FG|P|-Q-RST, then widths would be apportioned \n  correspondingly, as shown in the third part of the sample output below. If the \n  proportion calculations do not work out to integers, it is always the top or \n  left subwindow whose dimension is increased to the next integer.</p>','<p>The first line of input contains one integer, which is the total number of preorder \n  traversals describing window structures. This line is followed by one line for \n  each preorder traversal. Each preorder traversal will contain appropriate dividers \n  \'|\' and \'-\' and from 1 to 26 uppercase letters.</p>','<p>For each preorder traversal, print the number of the preorder traversal on one \n  line followed by the minimum sized window grid that the traversal could represent.</p>','3\n|-MCR\n|-|-ABC-D|E-FG-P-|Q|RST\n-|-|ABC|D-E|FG|P|-Q-RST\n','1\nM-R-*\n| | |\nC-* |\n| | |\n*-*-*\n2\nA-C-P-----*\n| | |     |\nB-* |     |\n| | |     |\nD-*-Q-R-S-*\n|   | | | |\nE-F-* | | |\n| | T-*-*-*\n| G-*     |\n| | |     |\n*-*-*-----*\n3\nA-B-D-E---*\n| | | |   |\nC-*-* F-G-*\n|   | | | |\nP---Q-*T*-*\n|   |  |  |\n|   R--*  |\n|   |  |  |\n|   S--*  |\n|   |  |  |\n*---*--*--*\n','<p> </p>',26,0,1,64,2,0,2,10),(1027,'High and Dry','<p>You are planning a canoe trip through a tidal estuary (a network of waterways \nsubject to tides). You can paddle only by day (sunrise to sunset). A particular \ndifficulty is that many of the places you can consider stopping will only have \nenough water to float your canoe when the tide is sufficiently high, and getting \nstuck offshore in the mud for several hours is not your idea of a good time!\n</p>\n<p>You have a list of the available docks, in the order you will encounter them. \n  For each dock you know how many miles it is from your starting point and for \n  how many hours before and after low tide it cannot be reached. You need not \n  stop at each dock, and the main channel of the waterway will always have enough \n  water for you to make progress if you wish to bypass one or more docks. You \n  want to be sure, however, that you put in to an accessible dock by sunset on \n  each day. You also cannot depart from a dock in the morning until enough water \n  is available.</p>\n<p>The time of sunrise, sunset, and low tides for each day will change slightly. \n  So successive sunrises will not be exactly 24 hours apart nor sunsets, nor will \n  successive low tides occur exactly 12 hours apart. Over the limited number of \n  days for your trip, we can approximate these changes as a fixed number of minutes \n  per day away from the ideal.</p>\n<p>Write a program to prepare itineraries for such trips, indicating at which \n  docks you will stop at end of each day\'s paddling. Each itinerary should require \n  as few days as possible. Given a choice of itineraries with the same number \n  of days, choose the one in which you make the most progress in the earlier days.</p>\n<p> </p>','<p>Input consists of a series of trip descriptions. All time inputs will be presented \n  in the form HH:MM:SS, where HH is a two digit integer indicating hours from \n  00-23, MM is a two-digit integer indicating minutes from 00-59, and SS is a \n  two-digit integer indicating seconds from 00-59.</p>\n<p>For each trip description:</p>\n<p>Line 1 Maximum number of days for the trip (integer 1-10)<br />\n  Line 2 Average paddling speed in miles per hour (positive real number)<br />\n  Line 3 &lt;sunrise&gt; &lt;interval&gt;<br />\n  Time of sunrise on day 1 of the trip (05:00:00-08:00:00)<br />\n  Time between successive sunrises (23:45:00-24:15:00)<br />\n  Line 4 &lt;sunset&gt; &lt;interval&gt;<br />\n  Time of sunset on day 1 (17:00:00-20:00:00)<br />\n  Time between successive sunsets (23:45:00-24:15:00)<br />\n  Line 5 &lt;lowtide&gt; &lt;interval&gt;<br />\n  Time of 1st low tide on day 1 (any time)<br />\n  Time between successive low tides (11:00:00-13:00:00)<br />\n  Line 6 Number of docks available along the way, not counting your trip starting \n  point but<br />\n  including your final destination (positive integer)<br />\n  7-end &lt;distance&gt; &lt;inaccessible&gt;<br />\n  One line for each dock (including the starting dock at distance 0.0), containing:<br />\n  Distance of that dock, in miles, from your trip starting point (real)<br />\n  Number of hours before and after low tide when dock is inaccessible(integer \n  0-12)</p>\n<p>The final dataset is followed by a 0.</p>','<p>For each trip description, print a single line:</p>\n<p>NO ITINERARY POSSIBLE</p>\n<p>if the trip cannot be completed in the indicated number of days. If the trip \n  can be completed, print a single line containing the numbers of the docks at \n  which you would stop on each day, each number separated from the others by a \n  single space.</p>\n<p> </p>','4\n5.0\n07:22:00 23:54:00\n18:16:00 23:58:30\n05:21:00 12:24:00\n9\n0.0 0\n15.0 1\n30.0 2\n45.0 3\n60.0 2\n75.0 1\n90.0 1\n105.0 2\n125.0 3\n140.0 2\n0','2 5 7 9','',25,0,1,64,2,1,2,12),(1026,'Three Sides Make a Triangle','<p>You work for an art store that has decided to carry every style and size of drafting \ntriangle in existence. Unfortunately, sorting these has become a problem. The \nmanager has given you the task of organizing them. You have decided to classify \nthem by edge length and angles. To measure each triangle, you set it on a large \nsheet of very accurate graph paper and record the coordinate of each point. You \nthen run these three points through a computer program to classify the triangles \naccording to:\n</p>\n<p>Scalene: no equal sides<br />\n  Isosceles: two equal sides<br />\n  Equilateral: three equal sides</p>\n<p>and</p>\n<p>Acute: all angles under 90<br />\n  Right: one angle equal 90<br />\n  Obtuse: one angle over 90</p>\n<p>Of course, sometimes you make mistakes entering the data, so if you input points \n  that do notform a valid triangle, your program should tell you.</p>','<p>One triangle is described per line. Each line has six measurements taken to \n  the nearest 0.001 in the order:</p>\n<p>x<sub>1</sub> y<sub>1</sub> x<sub>2</sub> y<sub>2</sub> x<sub>3</sub> y<sub>3</sub></p>\n<p>The final line of input will contain only a -1.</p>\n<p>None of the test sets contain non-right angles in the range 88-92 degrees, \n  nor do any of the test sets include any non-equal side lengths for one triangle \n  within 0.01 of one another.</p>','<p>You will output one line for each triangle, which will contain two words:</p>\n<p>&lt;length classification&gt; &lt;angle classification&gt;</p>\n<p>or</p>\n<p>Not a Triangle</p>\n<p>The final line of your output file will be:</p>\n<p>End of Output</p>\n<p> </p>','10.000 10.000 10.000 20.000 20.000 10.000\n0.000 0.000 4.000 0.000 2.000 3.464\n-1','Isosceles Right\nEquilateral Acute\nEnd of Output','',25,0,1,64,2,11,87,12),(1025,'Helping Florida','<p>While Florida\'s difficulties electing presidents are well known, a lesser known \nproblem is electing committee chairs within the state\'s House of Delegates. The \nprocess used is a runoff election, where each committee member submits a ballot \nwith a ranked list of other members for the position of chair. Unfortunately, \nthose responsible for tabulating the votes keep losing track of which ballots \nstill have countable votes, and so no one trusts the results.\n</p>\n<p>Each committee member submits a ballot. Each ballot contains a ranked list \n  of votes. Tabulating the votes proceeds in rounds. For the first round, the \n  first vote on each ballot is counted. If any candidate has more than half of \n  the votes, they win.</p>\n<p>After each round, the candidate receiving the fewest votes (or candidates, \n  in the case of a tie for fewest votes) is eliminated. Votes are then re-tabulated \n  with each ballot\'s highest vote for a remaining candidate being counted. If \n  all of the candidates voted for on a ballot are eliminated, then that ballot \n  is considered \"non-viable,\" and it is no longer counted toward the \n  total number of ballots when calculating majority.</p>\n<p>The process is repeated until you have a single winner, or a tie between the \n  remaining candidates. The rules of the election guarantee you will have a tie \n  or a winner.</p>','<p>For each dataset:</p>\n<p>Line 1 &lt;candidates&gt; &lt;ballots&gt;</p>\n<p>The number of candidates receiving votes<br />\n  The number of ballots, b</p>\n<p>b Lines One line per ballot. For each ballot, the names of the candidates are \n  listed in order of preference. A candidate name is a string with no whitespace \n  in it. A ballot may not contain votes for all candidates. No candidate will \n  be repeated on a single ballot.</p>\n<p>After the last dataset, a line of 0 0 will indicate the end of the input.</p>\n<p> </p>','<p>For each dataset a single line is output:</p>\n<p>For a winner:<br />\n  &lt;candidate&gt; won</p>\n<p>For a tie:<br />\n  it is a tie between &lt;candidate&gt; and &lt;candidate&gt; [ and &lt;candidate&gt; \n  [...]]</p>\n<p>Each candidate name is separated by \"and\". They should be printed \n  in lexicographic order.</p>\n<p> </p>','3 9\nBuchanan Bush\nBuchanan Bush\nBuchanan Gore\nGore Bush\nGore Bush\nGore Bush\nGore Bush\nBush Buchanan\nBush Buchanan\n0 0','Buchanan won','',25,0,1,64,2,4,23,12),(1024,'A Round Peg in a Ground Hole','<p>The DIY Furniture company specializes in assemble-it-yourself furniture kits. \nTypically, the pieces of wood are attached to one another using a wooden peg that \nfits into pre-cut holes in each piece to be attached. The pegs have a circular \ncross-section and so are intended to fit inside a round hole.\n</p>\n<p>A recent factory run of computer desks were flawed when an automatic grinding \n  machine was mis-programmed. The result is an irregularly shaped hole in one \n  piece that, instead of the expected circular shape, is actually an irregular \n  polygon. You need to figure out whether the desks need to be scrapped or if \n  they can be salvaged by filling a part of the hole with a mixture of wood shavings \n  and glue.</p>\n<p>There are two concerns. First, if the hole contains any protrusions (i.e., \n  if there exist any two interior points in the hole that, if connected by a line \n  segment, that segment would cross one or more edges of the hole), then the filled-in-hole \n  would not be structurally sound enough to support the peg under normal stress \n  as the furniture is used. Second, assuming the hole is appropriately shaped, \n  it must be big enough to allow insertion of the peg. Since the hole in this \n  piece of wood must match up with a corresponding hole in other pieces, the precise \n  location where the peg must fit is known.</p>\n<p>Write a program to accept descriptions of pegs and polygonal holes and determine \n  if the hole is ill-formed and, if not, whether the peg will fit at the desired \n  location. Each hole is described as a polygon with vertices (x1, y1), (x2, y2), \n  . . . , (xn, yn). The edges of the polygon are (xi, yi) to (xi+1, yi+1) for \n  i = 1 . . . n - 1 and (xn, yn) to (x1, y1).</p>','<p>Input consists of a series of piece descriptions. Each piece description consists \n  of the following data:</p>\n<p>Line 1 &lt;nVertices&gt; &lt;pegRadius&gt; &lt;pegX&gt; &lt;pegY&gt;</p>\n<p>number of vertices in polygon, n (integer)<br />\n  radius of peg (real)<br />\n  X and Y position of peg (real)</p>\n<p>n Lines &lt;vertexX&gt; &lt;vertexY&gt;</p>\n<p>On a line for each vertex, listed in order, the X and Y position of vertex</p>\n<p>The end of input is indicated by a number of polygon vertices less than 3.</p>','<p>For each piece description, print a single line containing the string:</p>\n<p>HOLE IS ILL-FORMED if the hole contains protrusions</p>\n<p>PEG WILL FIT if the hole contains no protrusions and the peg fits in the hole \n  at the indicated position</p>\n<p>PEG WILL NOT FIT if the hole contains no protrusions but the peg will not fit \n  in the hole at the indicated position</p>','5 1.5 1.5 2.0\n1.0 1.0\n2.0 2.0\n1.75 2.0\n1.0 3.0\n0.0 2.0\n5 1.5 1.5 2.0\n1.0 1.0\n2.0 2.0\n1.75 2.5\n1.0 3.0\n0.0 2.0\n1','HOLE IS ILL-FORMED\nPEG WILL NOT FIT','',25,0,1,64,2,2,2,12),(1023,'Choose Your Words Carefully','<p>Let\'s face it, most students who do a good job on programming contest problems \naren\'t the best writers. However, there is no artistic process that a good programmer \ncan\'t improve with a little program to automate the process.\n</p>\n<p>In this case, your writing problem is a tendency to use words too often. To \n  help check for this, you are going to write a program that will search your \n  papers for the word or words you use most often.</p>\n<p> </p>','<p>The input consists entirely of your paper. Each line will be under 80 characters \n  and will contain words, punctuation, and numbers. Words consist of the characters \n  {a-z,A-Z,0-9}. Words are separated by whitespace, end-of-line, and punctuation. \n  The punctuation that may be found includes the characters ,.;\\\'\'\\\"()/:-. \n  No other characters will be found in the input.</p>\n<p>The input ends at end-of-file.</p>\n<p>Word comparisons are case-insensitive.</p>','<p>Your output begins with the line:</p>\n<p>&lt;n&gt; occurrences</p>\n<p>where n is the number of times the most frequently appearing word occurs.</p>\n<p>Following that line will be the words that occurred n times, one per line. \n  The words may be listed in lexicographic order.</p>','Fourscore and seven years ago our fathers brought forth on this\ncontinent a new nation, conceived in liberty and dedicated to\nthe proposition that all men are created equal. Now we are engaged\nin a great civil war, testing whether that nation or any nation\nso conceived and so dedicated can long endure.','3 occurrences\nand\nnation','',25,0,1,64,2,54,283,12),(1022,'Which Way Do I Go?','<p>You\'ve decided that the time is right for the next Internet map startup. Your \ninspiration for this venture is your directionally impaired spouse, who doesn\'t \ncare for the shortest or quickest routes generated by current online map systems-instead, \neasier is better.\n</p>\n<p>The backbone of your operation is, of course, your algorithm for calculating \n  directions. Your algorithm must accept the map from your massive database of \n  the entire country and produce the best route that meets the customer\'s query. \n  Queries consist of an origin, destination, and the optimization goal, which \n  can be for the shortest route, fastest route, or route with the fewest turns. \n  You are guaranteed that there will be a path between source and destination \n  for any query asked.</p>','<p>There are three sections for each test case in the input file, the first lists \n  the cities, the second lists the roads, and the third lists the queries.</p>\n<p>The first line of input is the number of cities, c, followed by c lines each \n  containing the name of a city. There is no whitespace in a city name.</p>\n<p>The next line is the number of roads, r, followed by r lines describing a road. \n  Each road description has the following form:</p>\n<p>&lt;RoadName&gt; &lt;CityA&gt; &lt;ABDistance&gt; &lt;ABTime&gt; &lt;CityB&gt; \n  [&lt;BCDist&gt; &lt;BCTime&gt; &lt;CityC&gt; [...]]</p>\n<p>There is no whitespace in a road\'s name. Roads may pass through any number \n  of cities. The cities appear in the order the road passes through them. No road \n  passes through the same city multiple times. Roads are bidirectional. The distance \n  and time (both real numbers) it takes to follow a road between each pair of \n  cities is the distance and time listed between those two names. When following \n  a road between multiple cities (A to C, for example), the distance and time \n  is cumulative for all steps along the path.</p>\n<p>The next line is the number of queries, q, followed by q lines each containing \n  one query. Queries are of the form:</p>\n<p>&lt;querytype&gt; &lt;origin&gt; &lt;destination&gt;</p>\n<p>Querytype is one of time, distance, or turns and the origin and destination \n  are the names of cities.</p>\n<p>The test cases end at end-of-file.</p>','<p>For each query, your output will begin with a line:</p>\n<p>from &lt;origin&gt;</p>\n<p>Each following line will be of the form:</p>\n<p>&lt;roadName&gt; to &lt;cityname&gt;</p>\n<p>which lists the road to turn onto from the previous city, and the city to take \n  that road to. If a single road is followed between multiple cities, only the \n  final city reached on that road before turning onto another road is listed. \n  The final city listed will be the destination city. If there are several rounds\n  to choose at a spot, use the one that appears earlier on the input list.</p>\n<p> Separately subsequent test cases with a single blank line.</p>\n<p> </p>','5\nChicago\nDesMoines\nOklahomaCity\nDallas\nLosAngeles\n4\nI80 Chicago 300 4 DesMoines\nI35 DesMoines 550 7.3 OklahomaCity 205 3 Dallas\nI40 OklahomaCity 1330 20.5 LosAngeles\nRt66 Chicago 2448 46 LosAngeles\n2\ntime Chicago LosAngeles\nturns Chicago LosAngeles\n\n\n','from Chicago\nI80 to DesMoines\nI35 to OklahomaCity\nI40 to LosAngeles\nfrom Chicago\nRt66 to LosAngeles','',25,0,1,64,2,0,1,12),(1021,'A Contesting Decision','<p>Judging a programming contest is hard work, with demanding contestants, tedious \ndecisions, and monotonous work. Not to mention the nutritional problems of spending \n12 hours with only donuts, pizza, and soda for food. Still, it can be a lot of \nfun.\n</p>\n<p>Software that automates the judging process is a great help, but the notorious \n  unreliability of some contest software makes people wish that something better \n  were available. You are part of a group trying to develop better, open source, \n  contest management software, based on the principle of modular design.</p>\n<p>Your component is to be used for calculating the scores of programming contest \n  teams and determining a winner. You will be given the results from several teams \n  and must determine the winner.</p>\n<p>Scoring</p>\n<p>There are two components to a team\'s score. The first is the number of problems \n  solved. The second is penalty points, which reflects the amount of time and \n  incorrect submissions made before the problem is solved. For each problem solved \n  correctly, penalty points are charged equal to the time at which the problem \n  was solved plus 20 minutes for each incorrect submission. No penalty points \n  are added for problems that are never solved.</p>\n<p>So if a team solved problem one on their second submission at twenty minutes, \n  they are charged 40 penalty points. If they submit problem 2 three times, but \n  do not solve it, they are charged no penalty points. If they submit problem \n  3 once and solve it at 120 minutes, they are charged 120 penalty points. Their \n  total score is two problems solved with 160 penalty points.</p>\n<p>The winner is the team that solves the most problems. If teams tie for solving \n  the most problems, then the winner is the team with the fewest penalty points.</p>','<p>For the programming contest your program is judging, there are four problems. \n  You are guaranteed that the input will not result in a tie between teams after \n  counting penalty points.</p>\n<p>Line 1 &lt;nTeams&gt;<br />\n  Line 2-n+1 &lt;Name&gt; &lt;p<sub>1</sub>Sub&gt; &lt;p<sub>1</sub>Time&gt; &lt;p<sub>2</sub>Sub&gt; &lt;p<sub>2</sub>Time&gt; \n  ... &lt;p<sub>4</sub>Time&gt;<br />\n  <br />\n  The first element on the line is the team name, which contains no whitespace. \n  Following that, for each of the four problems, is the number of times the team \n  submitted a run for that problem and the time at which it was solved correctly \n  (both integers). If a team did not solve a problem, the time will be zero. The \n  number of submissions will be at least one if the problem was solved.</p>\n<p> </p>','<p>The output consists of a single line listing the name of the team that won, \n  the number of problems they solved, and their penalty points.</p>','4\nStars 2 20 5 0 4 190 3 220\nRockets 5 180 1 0 2 0 3 100\nPenguins 1 15 3 120 1 300 4 0\nMarsupials 9 0 3 100 2 220 3 80\n\n\n','Penguins 3 475','',25,0,1,64,2,97,180,12),(1020,'A Simple Question of Chemistry','<p>Your chemistry lab instructor is a very enthusiastic graduate student who clearly \nhas forgotten what their undergraduate Chemistry 101 lab experience was like. \nYour instructor has come up with the brilliant idea that you will monitor the \ntemperature of your mixture every minute for the entire lab. You will then plot \nthe rate of change for the entire duration of the lab.\n</p>\n<p>Being a promising computer scientist, you know you can automate part of this \n  procedure, so you are writing a program you can run on your laptop during chemistry \n  labs. (Laptops are only occasionally dissolved by the chemicals used in such \n  labs.) You will write a program that will let you enter in each temperature \n  as you observe it. The program will then calculate the difference between this \n  temperature and the previous one, and print out the difference. Then you can \n  feed this input into a simple graphing program and finish your plot before you \n  leave the chemistry lab.</p>','<p>The input is a series of temperatures, one per line, ranging from -10 to 200. \n  The temperatures may be specified up to two decimal places. After the final \n  observation, the number 999 will indicate the end of the input data stream. \n  All data sets will have at least two temperature observations.</p>','<p>Your program should output a series of differences between each temperature \n  and the previous temperature. There is one fewer difference observed than the \n  number of temperature observations (output nothing for the first temperature). \n  Differences are always output to two decimal points, with no leading zeroes \n  (except for the ones place for a number less than 1, such as 0.01) or spaces.</p>\n<p>After the final output, print a line with \"End of Output\"</p>','10.0\n12.05\n30.25\n20\n999','2.05\n18.20\n-10.25\nEnd of Output','',25,0,1,64,2,191,546,12),(1019,'Tournament Brackets','<p>Programmer\'s University (PU) sponsors a number of intramural sports tournaments \nthroughout the year. The brackets showing the competing teams and the winners \nare displayed on a metal board using magnetic signs containing the team names. \nOne such bracket is shown below. Every so often though, a prankster takes all \nthe team names off the board, carefully laying them on the floor in pairs in column-major \norder, starting at the top of Round 1 and then progressing down through Round \n1, then back to the top of Round 2, down that column, and so on. This prankster \nalways leaves a taunting note saying any programmer ought to be able to recreate \nthe exact tournament bracket with just this information. Your task is to write \na program that takes as input the names of teams from a tournament bracket and \ndraws that bracket using simple ASCII characters. \n</p>\n<p>One factor complicating your task is that there may not be enough teams in \n  any tournament to completely fill a bracket. This means that some teams don\'t \n  have to play a first round match. It is your job to deduce which teams actually \n  played in the first round. </p>\n<pre>Round    Round      Round       Winner\n  1        2          3_BIG__\n      \\_BIG_____\n_DIGS_/         \\\n                 \\_FIGURES_\n                 /         \\\n       _FIGURES_/           \\\n                             \\\n                              \\_TIGGER_\n                              /\n       _TIGGER__             /\n                \\           /\n                 \\_TIGGER__/\n_WIG__           /\n      \\_WIG_____/\n_ZIG__/\n</pre>\n<p><strong><br /></strong></p>','<p>The input file contains data for one or more touraments. Tournaments are implicitly \n  numbered starting at 1. Each tournament begins with a line containing a positive \n  odd integer n, 3 &lt;= n &lt;= 31, which is the total number of name signs in \n  the tournament bracket. Following this are (n + 1)/2 lines of team pairings. \n  All lines except the last one contain exactly two team names, separated by a \n  single space. The first name is always immediately above the second name in \n  the output. The last line contains a single team name, the winner of the tournament. \n  All team names are between 3 and 7 upper case characters in the range (A-Z). \n  A value of -1 for n signals the end of all the tournaments. </p>','<p> For each tournament bracket, write a line indicating which bracket it is, \n  \"Tournament 1\", \"Tournament 2\", etc., followed by the bracket \n  itself. Team names are always printed left justified with one leading underscore \n  \'_\' and one or more trailing underscores. The width of each round is the width \n  of the longest team name in that round, plus a leading and trailing underscore. \n  Teams that play in the first round are printed 2 lines apart. Those in the second, \n  third and fourth rounds, if the bracket is so big, are 4, 8, and 16 lines apart, \n  respectively. Contrary to our general guidelines, there will be spaces at the \n  beginning of any line not containing a team playing in the first round. There \n  will also be consecutive spaces in your output as necessary for formatting. \n  However, there must never be trailing spaces at the end of any line, nor any \n  lines with only spaces, nor any completely empty lines. The only special symbols \n  you need to use to construct the bracket are the forward slash \'/\', the backward \n  slash \'\\\', and the underscore \'_\'. Note that the last example below shows the \n  largest bracket possible for this problem.</p>','11\nBIG DIGS\nWIG ZIG\nBIG FIGURES\nTIGGER WIG\nFIGURES TIGGER\nTIGGER\n5\nLARGE RAGE\nZEN RAGE\nRAGE\n31\nANT BOA\nCOW DUCK\nEEL FROG\nGOOSE HEN\nIGUANA JACKEL\nKITE LLAMA\nMOUSE NIT\nOCTOPUS PIG\nBOA COW\nFROG GOOSE\nIGUANA KITE\nMOUSE OCTOPUS\nCOW GOOSE\nIGUANA OCTOPUS\nGOOSE OCTOPUS\nOCTOPUS\n-1','Tournament 1\n_BIG__\n      \\_BIG_____\n_DIGS_/         \\\n                 \\_FIGURES_\n                 /         \\\n       _FIGURES_/           \\\n                             \\\n                              \\_TIGGER_\n                              /\n       _TIGGER__             /\n                \\           /\n                 \\_TIGGER__/\n_WIG__           /\n      \\_WIG_____/\n_ZIG__/\nTournament 2\n        _ZEN__\n              \\\n               \\_RAGE_\n_LARGE_        /\n       \\_RAGE_/\n_RAGE__/\nTournament 3\n_ANT_____\n         \\_BOA_____\n_BOA_____/         \\\n                    \\_COW_____\n_COW_____           /         \\\n         \\_COW_____/           \\\n_DUCK____/                      \\\n                                 \\_GOOSE___\n_EEL_____                        /         \\\n         \\_FROG____             /           \\\n_FROG____/         \\           /             \\\n                    \\_GOOSE___/               \\\n_GOOSE___           /                          \\\n         \\_GOOSE___/                            \\\n_HEN_____/                                       \\\n                                                  \\_OCTOPUS_\n_IGUANA__                                         /\n         \\_IGUANA__                              /\n_JACKEL__/         \\                            /\n                    \\_IGUANA__                 /\n_KITE____           /         \\               /\n         \\_KITE____/           \\             /\n_LLAMA___/                      \\           /\n                                 \\_OCTOPUS_/\n_MOUSE___                        /\n         \\_MOUSE___             /\n_NIT_____/         \\           /\n                    \\_OCTOPUS_/\n_OCTOPUS_           /\n         \\_OCTOPUS_/\n_PIG_____/','',24,0,1,64,2,2,5,12),(1018,'Fax Regions','<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1018_32f80bf5b3bed02f648bff484c7aa8d5.jpg\" src=\"assets/problem_images/1018_32f80bf5b3bed02f648bff484c7aa8d5.jpg\" /><br /><div align=\"left\"><p>A fax image is a rectangular array of dark and white pixels. Three small examples \n  are shown above much magnified so individual pixels are clearly visible. Your \n  task is to write a program that will count the connected dark components in \n  fax images. We assume that two dark pixels that are directly adjacent vertically \n  or horizontally are in the same component. Pixels along a diagonal, touching \n  only at a corner, are not directly connected. The two components in Fax 1 and \n  three components in Fax 2 are shown below in different shadings. In Fax 3, all \n  32 dark pixels are in separate components, because the dark pixels only touch \n  at corners.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1018_3afe326faa92dbf487833313272ca99f.jpg\" src=\"assets/problem_images/1018_3afe326faa92dbf487833313272ca99f.jpg\" /></p>\n<p>Fax images are encoded to save transmission bandwidth. If you imagine a blank \n  row above the actual fax, then each pixel in the fax can be labeled as being \n  the same (S) as the pixel above it or different (D) from the pixel above it, \n  as illustrated below. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1018_02a5dd368702ec472fd4315a251a4ab4.jpg\" src=\"assets/problem_images/1018_02a5dd368702ec472fd4315a251a4ab4.jpg\" /></p>\n<p>If the S and D labels are read in row major order (from left to right across \n  rows and then down to further rows), then the labels for the pixels in the three \n  faxes are </p>\n<p>Fax 1: SDDSDDSSSDDDSDD<br />\n  Fax 2: DDDDDDDSSDDDDSSSDSDSSSDSSDSSSSSSDSSSSSSSSSSSSSDSSSDSDDDS<br />\n  Fax 3: DSDSDSDSDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD </p>\n<p>If we count the repetitions, always starting with S<sub>i</sub>s (even if there are 0 \n  S<sub>i</sub>s at the beginning), then we get </p>\n<p>Fax 1: 1S 2D 1S 2D 3S 3D 1S 2D<br />\n  Fax 2: 0S 7D 2S 4D 3S 1D 1S 1D 3S 1D 2S 1D 6S 1D 13S 1D 3S 1D 1S 3D 1S<br />\n  Fax 3: 0S 1D 1S 1D 1S 1D 1S 1D 1S 56D </p>\n<p>Since the runs of S and D always alternate, we can omit the S and D labels, \n  and get the final encodings.</p>\n<p>Fax 1: 1 2 1 2 3 3 1 2<br />\n  Fax 2: 0 7 2 4 3 1 1 1 3 1 2 1 6 1 13 1 3 1 1 3 1<br />\n  Fax 3: 0 1 1 1 1 1 1 1 1 56 </p>\n<p>Starting from fax widths and encodings, your task is to calculate the number \n  of components in the faxes. To make things more interesting, the faxes may be \n  very large.</p>\n<br /></div></div>','<p>There are from one to 24 data sets, followed by a final line containing only \n  -1. A data set starts with a line containing three integers w, r, and g: the \n  width of the fax in pixels, the total number of runs, and the number of run \n  lengths grouped on one line, respectively. All three numbers are positive: w \n  &lt;= 1,000,000,000, r &lt;= 1000, and g &lt;= 40. The rest of the dataset consists \n  of r run lengths, with a new line starting after each group of g run lengths. \n  The last line (possibly the only line) of run lengths may contain fewer than \n  g run lengths. The numbers on each line are blank separated. The first run length \n  may be 0. All others run lengths are positive. No run length may be greater \n  than 1,000,000,000. The total number of pixels in each fax will be a multiple \n  of w, so the pixels form a rectangle. Though commas are shown in the long numbers \n  above for human readability, the integers in the input and output files include \n  no commas.</p>','<p>For each dataset the output contains a line with one integer: the number of \n  components in the fax. No fax encoded in the input will have more than 1,000,000,000 \n  components. Caution: a solution that examines each pixel individually will not \n  finish within the one-minute time limit. </p>','5 8 4\n1 2 1 2\n3 3 1 2\n7 21 8\n0 7 2 4 3 1 1 1\n3 1 2 1 6 1 13 1\n3 1 1 3 1\n8 10 10\n0 1 1 1 1 1 1 1 1 56\n-1 ','2\n3\n32','',24,0,1,32,5,0,7,12),(1017,'Doubles','<p>As part of an arithmetic competency program, your students will be given randomly \ngenerated lists of from 2 to 15 unique positive integers and asked to determine \nhow many items in each list are twice some other item in the same list. You will \nneed a program to help you with the grading. This program should be able to scan \nthe lists and output the correct answer for each one. For example, given the list \n</p>\n<p>1 4 3 2 9 7 18 22<br />\n  <br />\n  your program should answer 3, as 2 is twice 1, 4 is twice 2, and 18 is twice \n  9. </p>\n<p> </p>','<p> The input file will consist of one or more lists of numbers. There will be \n  one list of numbers per line. Each list will contain from 2 to 15 unique positive \n  integers. No integer will be larger than 99. Each line will be terminated with \n  the integer 0, which is not considered part of the list. A line with the single \n  number -1 will mark the end of the file. The example input below shows 3 separate \n  lists. Some lists may not contain any doubles.</p>','<p> The output will consist of one line per input list, containing a count of \n  the items that are double some other item.</p>','1 4 3 2 9 7 18 22 0\n2 4 8 10 0\n7 5 11 13 1 3 0\n-1 ','3\n2\n0','<p> </p>',24,0,1,64,2,252,444,12),(1016,'Data Mining?','<p>A variation of the minesweeper game is available for almost every computer platform. \nYour employer wants to create yet another version that is targeted toward casual, \nas opposed to expert, players. Your task is to write a program that takes a minesweeper \nboard and returns the minimum number of covered, unmined cells that remain after \na casual player has tried his/her best. The details of the game and program are \ndecribed below. \n</p>\n<p>A minesweeper board consists of a rectangular grid of cells, with one or more \n  cells containing a mine. The entire board is initially presented with all the \n  cells covered, i.e., blank. The object of the game is to uncover all the cells \n  that do not contain a mine. If a mine in uncovered, the game is over and the \n  player loses. A cell can be in one of 3 states: covered, cleared/uncovered, \n  or flagged as a mine. </p>\n<p>When a player clears a cell that does not contain a mine, that cell displays \n  the number of mines in cells that are adjacent to it. These numbers help the \n  player determine where the mines are located. The adjacent cells are the cells \n  that form a 3x3 square with the cleared cell in the center. Depending on a cell\'s \n  location, it will have between 3 and 8 adjacent cells. The board in Figure 1 \n  below shows two mines at locations (3,1) and (3,2), and the numbers of adjacent \n  mines for each of the remaining cells. </p>\n<p>A casual player makes use of this information in the following way. First the \n  player selects one cell from a totally covered board. If it\'s a mine, the game \n  is over. Otherwise, the player clears the cell and then applies the following \n  two rules to cleared cells on the board until no further progress can be made. \n  Let (x,y) be the location of a cleared cell, and let f, c, and m be the number \n  of flagged, covered, and mined cells adjacent to (x,y). </p>\n<p>If f = m, then clear all covered cells adjacent to (x,y). <br />\n  If f + c = m, then flag all covered cells adjacent to (x,y). <br />\n  Note that after successfully clearing the first cell, a casual player never \n  clears or flags a cell except as dictated by rule 1 or 2, which means that the \n  player may get \"stuck\". When a casual player is stuck, the game is \n  over; no further guesses are made, and the player will not use more sophisticated \n  rules that might allow him/her to safely clear additional cells. </p>\n<p>Figure 2 below shows an application of these rules using the board from Figure \n  1. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1016_9caa1bfc5e06f3a32ba9a22e889ddb5d.jpg\" src=\"assets/problem_images/1016_9caa1bfc5e06f3a32ba9a22e889ddb5d.jpg\" /></p>\n<p>Figure 2a shows the board after a player initially clears cell (1,2). Rule \n  1 applies, since (0 flagged = 0 mined neighbors), so the player clears the adjacent \n  cells at (1,1), (1,3), (2,1), (2,2), and (2,3), which leads to Figure 2b. </p>\n<p>From the board in Figure 2b, the player can consider cell (2,1) and apply rule \n  2 (0 flagged + 2 covered = 2 mined) to flag cells (3,1) and (3,2) as mines. \n  This generates Figure 2c. </p>\n<p>Finally, by looking at cell (2,3), the player can again apply rule 1 to clear \n  cell (3,3), since cell (2,3) has exactly 1 adjacent mine, and cell (3,2) is \n  already flagged as a mine. Now, all the cells without mines have been cleared, \n  so the game stops with the player winning. </p>\n<p>As indicated above, these two rules are not sufficient to solve every game \n  board from every starting position, so the player might get stuck. Again, considering \n  the board in Figure 1, if the player instead first cleared cell (2,2), the resulting \n  board appears as Figure 3. The player cannot make any further progress, since \n  neither rule 1 nor rule 2 clears or flags any new cells. In this case the player \n  is stuck with 6 covered cells that do not contain mines. </p>\n<p>You must write a program that looks at a game board and determines the smallest \n  number of covered, unmined cells that could possibly remain when a casual player \n  plays the game as described. For the game board in Figure 1, the answer is 0. \n</p>','<p>The input file contains one or more game boards, followed by a final line containing \n  only two zeros. A game board starts with a line containing two integers, r and \n  c, the number of rows and columns in the game board; r and c will always be \n  at least 3. The total number of cells in any board will never be greater than \n  40. The rest of the data set consists of a graphical representation of the game \n  board, where an upper case \'M\' represents a mine and a period \'.\' represents \n  an empty cell. There will always be at least one \'M\' and at least one \'.\' on \n  each game board. </p>\n<p> </p>','<p>For each data set write one line with a single integer indicating the smallest \n  number of covered, unmined cells for that board.</p>','3 3\n...\n...\nMM.\n3 4\nM.M.\n.M.M\nM.M.\n7 5\n.....\n.....\nMMM..\nM.M..\nMMM..\n.....\n.....\n4 4\n...M\n....\n....\nM...\n0 0\n\n\n','0\n5\n1\n0','',24,0,1,64,2,1,8,12),(1015,'Treadmill','<p>The You\'reFat treadmill company has decided to enhance its treadmills to allow \nusers to run workout programs from an audio program (either online streaming audio \nor from a CD). The program will have upbeat music and encouragement from an instructor. \nChirps can be inserted into the audio program to indicate changes in speed and \ninclination. For example, when it is time to increase the treadmill speed, the \nmusic will temporarily stop while the treadmill gets the new speed from the chirp, \nand then the music resumes. The treadmill can handle speeds from 0 to 7 miles \nper hour, and inclinations of 0 to 7 degrees.\n</p>\n<p>A program consists of a sequence of samples. Each sample will range from 0 \n  (minimum value) to 9 (maximum value). There will be three samples per second. \n  Each chirp consists of a sequence of bits. A 0 bit consists of two samples of \n  either 4 or 5. A 1 bit consists of two samples, the first being either 0 or \n  1, and the second one being either 8 or 9. The chirp starts with the bits \"01\". \n  The next three bits represent the new speed (least significant bit first). This \n  is followed by three bits for the new inclination (also least significant bit \n  first). Note that every chirp includes both speed and inclination, even if one \n  or the other doesn\'t change. A chirp representing a speed of 3 miles per hour, \n  and an inclination of 6 degrees would look like:</p>\n  <table border=\"1\" width=\"75%\"><tbody><tr> \n    <td> \n      <div align=\"center\">Samples</div>\n    </td>\n    <td> \n      <div align=\"center\">5</div>\n    </td>\n    <td> \n      <div align=\"center\">5</div>\n    </td>\n    <td> \n      <div align=\"center\">1</div>\n    </td>\n    <td> \n      <div align=\"center\">9</div>\n    </td>\n    <td> \n      <div align=\"center\">1</div>\n    </td>\n    <td> \n      <div align=\"center\">9</div>\n    </td>\n    <td> \n      <div align=\"center\">1</div>\n    </td>\n    <td> \n      <div align=\"center\">9</div>\n    </td>\n    <td> \n      <div align=\"center\">4</div>\n    </td>\n    <td> \n      <div align=\"center\">5</div>\n    </td>\n    <td> \n      <div align=\"center\">5</div>\n    </td>\n    <td> \n      <div align=\"center\">4</div>\n    </td>\n    <td> \n      <div align=\"center\">0</div>\n    </td>\n    <td> \n      <div align=\"center\">9</div>\n    </td>\n    <td> \n      <div align=\"center\">1</div>\n    </td>\n    <td> \n      <div align=\"center\">8</div>\n    </td>\n  </tr>\n  <tr> \n    <td> \n      <div align=\"center\">Bits</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">0</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">1</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">1</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">1</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">0</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">0</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">1</div>\n    </td>\n    <td colspan=\"2\"> \n      <div align=\"center\">1</div>\n    </td>\n  </tr>\n  <tr> \n    <td> \n      <div align=\"center\">Meaning</div>\n    </td>\n    <td colspan=\"4\"> \n      <div align=\"center\">Start bits</div>\n    </td>\n    <td colspan=\"6\"> \n      <div align=\"center\">Speed: 3 mph</div>\n    </td>\n    <td colspan=\"6\"> \n      <div align=\"center\">Inclination: 6 degrees</div></td></tr></tbody></table>','<p>The input file consists of one or more programs. Each program is implicitly \n  numbered starting at 1. The first line contains a single integer n, which is \n  the number of programs that follow. Each program is a sequence of samples. Each \n  line of a program will contain exactly 30 samples, except the last line, which \n  may contain fewer. The end of each program will be represented by a sample with \n  the value 10.</p>\n<p>Note that:</p>\n<ul>\n	<li>Any value from 0 to 9 may be a sample in the background music, but the starting \n    bit sequence for a chirp \"01\" (middle, middle, low, high) will not \n    occur in the background music. </li>\n	<li>Chirps consume time. </li>\n	<li>Each workout is less than 60 minutes long. </li>\n	<li>A chirp with speed 0 does not imply the end of the workout. </li>\n	<li>A chirp may be preceded by one or more samples with the value 4 or 5. </li>\n	<li>Chirps do not necessarily begin on an even second boundary. </li>\n	<li>Each chirp is well-formed (only proper 0 or 1 bits will occur)</li>\n</ul>','<p>For each audio program, you should first print a line \"Program n\" \n  where n is the program number. Then, you should print the time, speed and inclination \n  of each chirp in that audio program. Each chirp should produce one line of output \n  in the form \"mm:ss Speed S Inclination I\". Both minutes and seconds \n  should be printed with a leading zero (\"00\" to \"59\"). The \n  time of a chirp is the time for the first sample of the start bits, ignoring \n  any fractional seconds. Both speed S and inclination I should be printed as \n  single decimal digits. There should be a single space between each item in the \n  output.</p>','2\n7 1 2 3 3 6 9 1 1 5 5 1 9 1 9 1 9 4 5 5 4 0 9 1 8 0 1 0 1 3\n3 5 4 0 9 4 5 4 4 1 9 5 4 4 4 5 5 5 3 2 7 8 10\n5 2 6 5 5 3 4 4 5 1 9 5 4 0 9 5 4 1 8 5 5 4 4 3 5 4 6 4 7 6\n4 4 6 4 4 4 5 5 4 4 5 6 4 6 4 4 4 1 8 5 5 0 8 4 5 5 5 1 8 4\n4 4 4 6 4 5 4 4 6 4 6 2 4 5 6 4 6 5 4 5 4 5 4 5 2 6 4 4 5 5\n7 7 3 4 4 5 5 5 6 6 5 5 5 0 9 0 9 1 9 5 4 1 8 4 5 4 5 6 4 4\n4 8 7 5 3 4 4 2 4 6 8 7 5 4 6 5 7 6 10','Program 1\n00:03 Speed 3 Inclination 6\n00:10 Speed 4 Inclination 0\nProgram 2\n00:02 Speed 2 Inclination 1\n00:15 Speed 2 Inclination 2\n00:33 Speed 3 Inclination 1','',24,0,1,64,2,15,43,12),(1014,'Bright Bracelet','<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1014_e349aa610a08822ad7debb6373f9d495.jpg\" src=\"assets/problem_images/1014_e349aa610a08822ad7debb6373f9d495.jpg\" /><br />figure 1<br />\n<img alt=\"http://sharecode.ir/assets/problem_images/1014_641e814a1aa9269c181f8b2e493eaf7f.jpg\" src=\"assets/problem_images/1014_641e814a1aa9269c181f8b2e493eaf7f.jpg\" /><br />figure 2<br /><div align=\"left\"><p>Bracelets can be made from a collection of octagonal pieces, with two opposite \n  sides of an octagon attached to octagons on either side. The colors of the edges \n  of the octagons vary. The different colors are labeled with different letters \n  in the diagrams. Bracelets only look good if the connecting sides of two adjacent \n  octagons are the same color. Above are two possible bracelets. (The ends also \n  get fastened together.) These two bracelets could be made from the same four \n  octagons, reordered and rotated. Assume that the octagons are never flipped \n  over.</p>\n<p>It happens that the better selling bracelets are those with the darker colors \n  on the edges connecting the bracelet. The brightness of each lettered color \n  is a positive integer, with higher numbers being brighter. Suppose the brightness \n  of the labeled colors are:</p>\n<table border=\"1\" width=\"3%\">\n  <tbody><tr>\n    <td width=\"3%\">A</td>\n    <td width=\"3%\">B</td>\n    <td width=\"3%\">C</td>\n    <td width=\"3%\">D</td>\n    <td width=\"3%\">E</td>\n    <td width=\"3%\">F</td>\n    <td width=\"1%\">G</td>\n    <td width=\"81%\">H</td>\n  </tr>\n  <tr>\n    <td width=\"3%\">70</td>\n    <td width=\"3%\">90</td>\n    <td width=\"3%\">10</td>\n    <td width=\"3%\">50</td>\n    <td width=\"3%\">60</td>\n    <td width=\"3%\">30</td>\n    <td width=\"1%\">20</td>\n    <td width=\"81%\">40</td>\n  </tr>\n</tbody></table>\n<p>We can compare the desirability of these two arrangements of the octagons by \n  adding the brightness of the colors at each joint (including the connection \n  of the two ends). For Bracelet 1, colors A, A, E, and E have sum 70 + 70 + 60 \n  + 60 = 260. For Bracelet 2, colors C, C, G, and E have sum 10 + 10 + 20 + 60 \n  = 100. Bracelet 2 is preferable, having the smaller sum. In fact, Bracelet 2 \n  provides the best possible result among all rearrangements and rotations of \n  these four octagons. </p>\n<br /></div></div>','<p>There are from one to 20 data sets, followed by a final line containing only \n  0. A data set starts with a line containing nine blank-separated integers. The \n  first is the number, n, of octagons that form the bracelet, where 4 &lt;= n \n  &lt;= 11. The remaining eight numbers are the brightness for colors A through \n  H, in order. Each brightness is positive and less than 256. </p>\n<p>The next n lines each contain eight letters, all in the range from A through \n  H. Each gives the edge colors for one octagon, in clockwise order. Individual \n  colors may appear zero or more times in the octagons. Different colors may have \n  the same brightness, but that does not make them the same color. </p>','<p>The output contains one line for each data set: If no bracelet can be constructed \n  using all the octagons, the line contains \"impossible\". Otherwise \n  the line contains the minimal sum of the brightness for the connections. Caution: \n  If your solution considers all possible orderings and rotations individually, \n  it will run out of time.</p>','4 70 90 10 50 60 30 20 40\nACACACAC\nABCDEFGH\nEEEEECCC\nEECCAGGG\n5 1 2 3 4 5 6 7 8\nAAAABBBB\nBBBBCCCC\nCCCCDDDD\nDDDDEEEE\nEEEEAAAA\n6 50 50 50 50 100 1 2 3\nHHHHHHHH\nBBBBCCCC\nCDCDDDDD\nDEDEEEEE\nEFEFEFEF\nFFFFFFFF\n0 ','100\n15\nimpossible','',24,0,1,64,2,0,2,12),(1012,'Clay Bully','<p>Ms. Terry is a pre-school art teacher who likes to have her students work with \nclay. One of her assignments is to form a lump of clay into a block and then measure \nthe dimensions of the block. However, in every class, there is always one child \nwho insists on taking some clay from some other child. Since Ms. Terry always \ngives every child in a class the same amount of clay to begin with, you can write \na program that helps Ms. Terry find the bully and victim after she measures each \nchild\'s finished block.</p>','<p> There are one or more classes of students, followed by a final line containing \n  only the value -1. Each class starts with a line containing an integer, n, which \n  is the number of students in the class, followed by n lines of student information. \n  Each line of student information consists of three positive integers, representing \n  the dimensions of the clay block, followed by the student\'s first name. There \n  can never be more than 9 students nor less than 2 students in any class. Each \n  student\'s name is at most 8 characters. Ms. Terry always gives each student \n  at most 250 cubic units of clay. There is exactly one bully and one victim in \n  each class. </p>','<p>For each class print a single line exactly as shown in the sample output.</p>','3\n10 10 2 Jill\n5 3 10 Will\n5 5 10 Bill\n4\n2 4 10 Cam\n4 3 7 Sam\n8 11 1 Graham\n6 2 7 Pam\n-1','Bill took clay from Will.\nGraham took clay from Cam.','',24,0,1,64,2,190,445,12),(1013,'Robots','<p>Your company provides robots that can be used to pick up litter from fields after \nsporting events and concerts. Before robots are assigned to a job, an aerial photograph \nof the field is marked with a grid. Each location in the grid that contains garbage \nis marked. All robots begin in the Northwest corner and end their movement in \nthe Southeast corner. A robot can only move in two directions, either to the East \nor South. Upon entering a cell that contains garbage, the robot will pick it up \nbefore proceeding. Once a robot reaches its destination at the Southeast corner \nit cannot be repositioned or reused. Since your expenses are directly proportional \nto the number of robots used for a particular job, you are interested in finding \nthe minimum number of robots that can clean a given field. For example, consider \nthe field map shown in Figure 1 with rows and columns numbered as shown and garbage \nlocations marked with a \'G\'. In this scheme, all robots will begin in location \n1,1 and end in location 6, 7</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1013_009a51b4c3d5d63163632d8c3de5b407.jpg\" src=\"assets/problem_images/1013_009a51b4c3d5d63163632d8c3de5b407.jpg\" /></p>\n<p>Figure 2 below shows two possible solutions, the second of which is preferable \n  since it uses two robots rather than three. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1013_07cd650f787f7ce2b0917cc9a88d7d5b.jpg\" src=\"assets/problem_images/1013_07cd650f787f7ce2b0917cc9a88d7d5b.jpg\" /></p>\n<p>Your task is to create a program that will determine the minimum number of \n  robots needed to pick up all the garbage from a field. </p>\n<p align=\"left\"> \n</p>','<p>An input file consists of one or more field maps followed by a line containing \n  -1 -1 to signal the end of the input data. A field map consists of one or more \n  lines, each containing one garbage location, followed by a line containing 0 \n  0 to signal the end of the map. Each garbage location consists of two integers, \n  the row and column, separated by a single space. The rows and columns are numbered \n  as shown in Figure 1. The garbage locations will be given in row-major order. \n  No single field map will have more than 24 rows and 24 columns. The sample input \n  below shows an input file with two field maps. The first is the field map from \n  Figure 1. </p>','<p>The output will consist of a single line for each field map containing the \n  minimum number of robots needed to clean the corresponding field.</p>','1 2\n1 4\n2 4\n2 6\n4 4\n4 7\n6 6\n0 0\n1 1\n2 2\n4 4\n0 0\n-1 -1','2\n1','',24,0,1,64,2,103,385,12),(1011,'Who Wants to Have the Fastest Fingers?','<p>A television game show host begins each new game by selecting a player, as \n  follows. The host asks candidate players to order four items. The first candidate \n  to order the items correctly wins. If there is a tie for the fastest time, or \n  if no one correctly answers, the host poses a new question. The producers air \n  only questions that select a player. They are unhappy with their current player \n  selection software and are seeking a replacement.<br />\n  <br />\n  The candidates have at most 30 seconds to answer the question. During this time, \n  they press buttons A, B, C, or D, indicating how to order the items. Pressing \n  a special rub out button marked X erases the last selection (this has no effect \n  if there are no characters to rub out). For example, after pressing BXXACXDXBDC, \n  the candidate has selected the answer ABDC. Each candidate\'s selection is sent \n  to the software along with a timestamp (from 0 to 300, in tenths of a second) \n  and a number identifying the candidate. A candidate cannot make simultaneous \n  selections (i.e., with the same timestamp), but two different candidates might \n  make selections at the same time. Although the software receives the messages \n  in time sequence for a particular candidate, messages from two different candidates \n  may arrive out of time sequence. For example, the software might receive the \n  following sequence:</p>\n<table width=\"91%\" border=\"1\">\n  <tbody><tr>\n    <td width=\"14%\">Candidate</td>\n    <td width=\"15%\">Timestamp</td>\n    <td width=\"15%\">Selection</td>\n    <td width=\"56%\">Interpretation</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">1</td>\n    <td width=\"15%\">20</td>\n    <td width=\"15%\">B</td>\n    <td width=\"56%\">Candidate 1 selected B at time 20 (answer: B)</td>\n  </tr>\n  <tr>\n    <td height=\"2\" width=\"14%\">2</td>\n    <td height=\"2\" width=\"15%\">10</td>\n    <td height=\"2\" width=\"15%\">B</td>\n    <td height=\"2\" width=\"56%\">Candidate 2 selected B at time 10 (answer: B)</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">1</td>\n    <td width=\"15%\">50</td>\n    <td width=\"15%\">C</td>\n    <td width=\"56%\">Candidate 1 selected C at time 50 (answer: BC)</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">2</td>\n    <td width=\"15%\">40</td>\n    <td width=\"15%\">D</td>\n    <td width=\"56%\">Candidate 2 selected D at time 40 (answer: BD)</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">1</td>\n    <td width=\"15%\">70</td>\n    <td width=\"15%\">X</td>\n    <td width=\"56%\">Candidate 1 erased C at time 70 (answer: B)</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">1</td>\n    <td width=\"15%\">110</td>\n    <td width=\"15%\">D</td>\n    <td width=\"56%\">Candidate 1 selected D at time 110 (answer: BD)</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">1</td>\n    <td width=\"15%\">120</td>\n    <td width=\"15%\">A</td>\n    <td width=\"56%\">Candidate 1 selected A at time 120 (answer: BDA)</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">2</td>\n    <td width=\"15%\">100</td>\n    <td width=\"15%\">A</td>\n    <td width=\"56%\">Candidate 2 selected A at time 100 (answer: BDA) </td>\n  </tr>\n  <tr>\n    <td width=\"14%\">2</td>\n    <td width=\"15%\">150</td>\n    <td width=\"15%\">C</td>\n    <td width=\"56%\">Candidate 2 selected C at time 150 (answer: BDAC)</td>\n  </tr>\n  <tr>\n    <td width=\"14%\">1</td>\n    <td width=\"15%\">170</td>\n    <td width=\"15%\">C</td>\n    <td width=\"56%\">Candidate 1 selected C at time 170 (answer: BDAC)</td>\n  </tr>\n</tbody></table><p>\nSuppose that the correct item order is BDAC. To be considered correct, a candidate\'s \n  final answer must exactly match the correct item order. In this example, both \n  candidates have the correct answer, but Candidate 2 has the faster time (15.0 \n  seconds), and is the player for the next round. </p>\n<p> </p>','<p>The input contains several player selection rounds. Each round begins with a \n  line containing two integers m and n separated by whitespace, where 2 &lt;= \n  m &lt;= 10 is the number of candidates and n is the number of messages. The \n  next line contains only the letters A, B, C, and D, in the correct order for \n  that round; each letter appears exactly once and in upper case. The next n lines \n  contain the messages in the following format:<br /><br />\n  candidate timestamp selection<br /><br />\n  where candidate is an integer between 1 and m inclusive that identifies the \n  candidate sending the message, timestamp is an integer between 0 and 300 inclusive \n  representing the time in tenths of a second, and selection is either A, B, C, \n  D, or X (in upper case) as explained above. Your program must stop processing \n  input when it encounters a data set in which n is 0.</p>','<p>Begin the output of each player selection round by summarizing the results. \n  List the candidates in order of candidate number and state whether the candidate \n  was correct or incorrect. If the candidate was correct, indicate the time at \n  which the candidate completed data entry. If a player is selected, indicate \n  which player. If no player is selected, indicate that this question should not \n  be aired and a new question is needed. Leave a blank line between the output \n  for different player selection rounds. Follow the format shown in the Sample \n  Output.</p>','2 10\nBDAC\n1 20 B\n2 10 B\n1 50 C\n2 40 D\n1 70 X\n1 110 D\n1 120 A\n2 100 A\n2 150 C\n1 170 C\n2 8\nABCD\n1 20 A\n1 25 B\n1 78 D\n2 15 C\n2 59 D\n2 105 A\n2 189 B\n1 187 C\n2 0\n\n\n','Round #1:  2 candidates\nCandidate 1:  Correct in 17.0 seconds\nCandidate 2:  Correct in 15.0 seconds\nCandidate 2 is selected as the player for this round.\n\nRound #2:  2 candidates\nCandidate 1:  Incorrect\nCandidate 2:  Incorrect\nDon\'t air this one...we need a new question.','',23,0,1,64,2,14,110,10),(9005,'Monkey and Banana','<p>\nA group of researchers are designing an experiment to test the IQ of a \nmonkey.  They will hang a banana at the roof of a building, and at the \nmean time, provide the monkey with some blocks.  If the monkey is clever\n enough, it shall be able to reach the banana by placing one block on \nthe top another to build a tower and climb up to get its favorite food.</p>\n<p>\nThe researchers have <em>n</em> types of blocks, and an unlimited supply of\nblocks of each type. Each type-<em>i</em> block was a rectangular solid with\nlinear dimensions (<em>x<sub>i</sub>, y<sub>i</sub>, z<sub>i</sub></em>). \nA block could be reoriented so that any two of its three dimensions \ndetermined the dimensions of the base and the other\ndimension was the height.\n</p>\n<p>They want to make sure that the tallest tower possible by stacking \nblocks can reach the roof.  The problem is that, in building a tower, \none block could only be placed\non top of another block as long as the two base dimensions of the\nupper block were both strictly smaller than the corresponding base\ndimensions of the lower block because there has to be some space for the\n monkey to step on.\n This meant, for example, that blocks oriented to have equal-sized bases\ncouldn\'t be stacked.\n</p>\n<p>Your job is to write a program that determines the height of the tallest tower the \nmonkey can build with a given set of blocks.</p>','<p>The input file will contain one or more test cases. The first line of each test case contains\nan integer <em>n</em>,<br />\nrepresenting the number of different blocks in the following data set.\nThe maximum value for <em>n</em> is 30.<br />\nEach of the next <em>n</em> lines contains three integers\nrepresenting the values <em>x<sub>i</sub></em>, <em>y<sub>i</sub></em> and <em>z<sub>i</sub></em>.<br />\nInput is terminated by a value of zero (0) for <em>n</em>.</p>\n.','<p>For each test case, print one line containing the case number\n(they are numbered sequentially starting from 1) \nand the height of the tallest possible tower in the format\n\"Case <em>case</em>: maximum height = <em>height</em>\"</p>\n\"','1\n10 20 30\n2\n6 8 10\n5 5 5\n7\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n5\n31 41 59\n26 53 58\n97 93 23\n84 62 64\n33 83 27\n0','Case 1: maximum height = 40\nCase 2: maximum height = 21\nCase 3: maximum height = 28\nCase 4: maximum height = 342\n','<p> </p>',-1,0,0,64,2,8,29,10),(1010,'The Plane Problem','<p>Air transportability is concerned with the packing of cargo on aircraft. In \n  order to ensure safe takeoffs and landings, cargo must be packed according to \n  rigorous rules, which can vary from airplane to airplane. Rules for packing \n  aircraft are:</p>\n<ul>\n	<li>All aircraft will have weight limits. They cannot hold more than their weight \n    limit, and for the sake of efficiency, no plane may carry less than 50% of \n    its weight limit.</li>\n	<li>Cargo items are rectangular and have uniform weight distribution. Two adjacent \n    items must be at least 1 foot apart to allow for tie downs. </li>\n	<li>All aircraft will have a rectangular area for cargo, the cargo hold. No \n    cargo can be placed within one foot of the edge of the cargo hold to allow \n    space to tie it down.</li>\n	<li>At least 60% of the cargo weight must be put in the front half of the cargo \n    hold.</li>\n	<li>The weight on the left side of the center line must be no more than 5% more \n    or less than the weight on the right hand side of the center line.</li>\n	<li>If a piece of cargo can be moved toward the rear of the plane and still \n    meet the other constraints, then it should be moved toward the rear of the \n    plane because all loading and unloading takes place at the rear of the plane.</li>\n	<li>To allow for speedy loading and unloading, no plane may hold more than 10 \n    items.</li>\n</ul>\n<p> You are to write a program to help allocate cargo to aircraft efficiently.</p>','<p>The input will consist of one or more input sets. The first line of each input \n  set will be an integer 0 &lt;= p &lt;= 10 which represents the number of planes \n  to be loaded. There will then be p sets of plane information. Each set of plane \n  information has two lines. The first has a string of 1 to 25 characters representing \n  the name of the aircraft. No two different aircraft in an input set will have \n  the same name. The second line will have four integers, 0 &lt; x &lt;= 100, \n  0 &lt; y &lt;= 30, 0 &lt; w &lt;= 100000, 0 &lt; c &lt;= 20000 where:\n</p>\n<ul>\n	<li>x represents the length of the cargo hold (from the front of the plane to \n    the rear of the plane) in feet, </li>\n	<li>y represents the width of the plane (from left to right) in feet, </li>\n	<li>w represents the weight limit of the plane in pounds, </li>\n	<li>c represents the cost of the plane in dollars. </li>\n</ul>\n<p> After the plane information will be the information about the cargo to be \n  loaded. The first line will have a single integer 0 &lt; n &lt;= 10, representing \n  the number of pieces of cargo to be loaded. There will then be n sets of cargo \n  item information. Each line of cargo information will consist of 4 integers \n  0 &lt; i &lt;= 1000, 0 &lt; len &lt;= 20, 0 &lt; wid &lt;= 20, 0 &lt; wt &lt;= \n  10000, where:</p>\n<ul>\n	<li>i is a unique value that identifies the cargo item and gives its relative \n    priority (where the higher the value, the more important the item)</li>\n	<li>len is the length of the item in feet</li>\n	<li>wid is the width of the item in feet</li>\n	<li>wt is the weight of the item in pounds</li>\n</ul>\n<p> Items cannot be turned when they are loaded on the aircraft, so the lengthwise \n  side of the cargo item must be loaded lengthwise along the aircraft. The end \n  of input will be a set with p = 0. This set should not be processed.</p>','<p>If it is possible to load all of the cargo meeting the constraints, you should \n  load the cargo using the most inexpensive collection of planes, given the constraints \n  above. If all of the cargo cannot be loaded, you should load as many items as \n  possible without regard for cost. If two configurations load the same number \n  of items, select the configuration with the highest total priority. If two configurations \n  have the same number of items loaded and the same priority and meet all of the \n  above constraints, print either one. \n</p>\n<p> The first line of output for each input set should include the number of the \n  set (starting with 1) and the total cost of the planes used to transport the \n  set. Then, for each plane used, give the name of the plane on a line by itself \n  followed by one line for each of the cargo items on the plane (in ascending \n  numerical order of priority), giving the cargo item number, and the distance \n  of its leftmost front corner from the front of the cargo hold and the left edge \n  of the cargo hold (because of the position of tie downs, these must be integer \n  values). Finally, on the last line of the output, if there are pieces of cargo \n  that cannot be loaded, list them, in numerical order of priority. </p>\n<p> Have a blank line after each input set and use the format in the sample output.</p>','2\nC-5A, first\n100 30 100000 20000\nCessna\n10 5 1000 200\n5\n400 20 20 56000\n300 20 20 4000\n80 20 10 30000\n900 20 10 10000\n5 5 3 400\n0','Plane loading 1:\nC-5A, first\n    80 loaded at 79 back, 1 from left\n    300 loaded at 30 back, 5 from left\n    400 loaded at 9 back, 9 from left\n    900 loaded at 79 back, 19 from left\n\nUnloaded: 5','<p> </p>',23,1,1,32,10,1,2,10),(1009,'Rectangular Rectitude','<p>Starting with an initial colorless background, we will paint a sequence of \n  potentially overlapping, horizontally-aligned rectangles of various colors. \n  The problem is to determine the exposed area of a given color.</p>','<p>The input data file contains a collection of independent datasets.<br /><br />\n  The first line of each dataset contains two numbers. The first number is an \n  integer 0 &lt;= n &lt;= 1000 specifying the number of rectangles that follow. \n  The second number is a positive integer 0 &lt; c &lt; 8, representing the color \n  whose exposed area we want to determine. \n</p>\n<p> Each of the next n lines of the dataset contains information about a rectangle, \n  and the lines are given in order of the painting sequence. The first number \n  on the line is an integer 0 &lt; c\' &lt; 8, representing the rectangle\'s color. \n  The next two integer values on the line are respectively the x- and y-coordinates \n  of any corner of the rectangle. The last two integer values are respectively \n  the x- and y-coordinates of the diagonally opposite corner of the rectangle. \n  All coordinates lie in the range from -100 to +100 inclusively.</p>\n<p> The end of input will be indicated by a dataset with n = 0. This dataset should \n  not be processed.</p>','<p>For each dataset, the output of your program will be a single line containing \n  the string \"The area of color x in dataset y is: \" followed by a single \n  integer representing the area (in square units) of the exposed color specified \n  in the dataset.</p>','4 2\n2 6 0 0 4\n4 1 -4 3 -1\n2 3 3 8 7\n5 2 -2 4 6\n1 5\n7 0 0 1 1\n2 3\n3 0 0 2 2\n4 0 0 1 1\n0 1\n\n\n','The area of color 2 in dataset 1 is: 31\nThe area of color 5 in dataset 2 is: 0\nThe area of color 3 in dataset 3 is: 3','',23,0,1,32,5,50,84,12),(1007,'The Party\'s in Dolores\'s Driveway','<p>Dolores\'s house has an unusual semi-circular driveway that can accommodate \n  26 cars in a single file, with exits at the front and the back. This is nice \n  because when she hosts a party because everyone can park in the driveway. However, \n  it causes complications when a guest wants to leave, because other guests with \n  cars blocking that person must move their cars temporarily. Her guests take \n  this in stride, and make a game out of the nuisance. When someone leaves, those \n  cars that must move return to the driveway in reverse order. Since there are \n  two ways for the leaving car to exit (through the front or rear exit), the cars \n  on the shorter path to an exit must move (and return in reverse order). If the \n  car that wants to leave is exactly in the middle, the front cars (on the left) \n  must move.</p>\n<p>For example, suppose the initial driveway configuration is represented as ABCDEFG. \n  Suppose further that the owner of car E decides to leave. Then the owners of \n  cars F and G must move (since they\'re on the shorter path to an exit) to make \n  room for E to leave, and then return to the driveway in reverse order. The new \n  driveway configuration will be ABCDGF. Suppose now C wants to leave. Here, A \n  and B have to move (since they\'re on the shorter path to an exit) , with the \n  resulting configuration BADGF. Let\'s say that now D wants to leave. In this \n  case, B and A must move (since both exit paths are of equal length, and A and \n  B are on the path to the front exit). The resulting configuration is ABGF.</p>\n<p> Write a program to simulate this party game.</p>','<p>Each data set begins with a line containing only a string of uppercase letters, \n  representing the initial order of cars in the driveway as described above. The \n  string will contain at least one letter, and no letter is duplicated. The next \n  line contains an integer n &gt;= 0. The next n lines each contain only a single \n  uppercase letter, indicating the next car to leave the party; this letter is \n  guaranteed to represent one of the remaining cars at the party. Your program \n  should stop processing data sets when it reaches an initial driveway order of \n  STOP.</p>','<p>Begin the output for each data set by indicating the data set number and the \n  initial order of cars in the driveway. As each car leaves, output the new car \n  order. Follow the output format indicated in the Sample Output. Leave a blank \n  line between the output for different data sets.</p>','ABCDEFG\n3\nE\nC\nD\nHIWORLD\n1\nH\nSTOP','Dataset #1:  The initial order is ABCDEFG.\nAfter E leaves, the order is ABCDGF.\nAfter C leaves, the order is BADGF.\nAfter D leaves, the order is ABGF.\n\nDataset #2:  The initial order is HIWORLD.\nAfter H leaves, the order is IWORLD.','',23,0,1,64,2,112,492,12),(1008,'Programming Olympiad','<p>The judges at the programming contest have been watching the Olympics, and are \nconsidering using style judging at next year\'s contest. Particularly, they like \nthe model used in the diving competition where each problem is given a degree \nof difficulty and then six judges will give it a score on a scale from 0.0 to \n10.0. The high and low score will be discarded, the other four scores added up, \nand then the sum is multiplied by the degree of difficulty. The team with the \nhighest total score for all their problems is declared the winner.<br /><br />\nYour job for this problem is to write a program that will read in the number of \nteams and problems, each problem\'s degree of difficulty, and the problems that \nare submitted by each team at an actual competition along with each of the six \njudges\' scores for those problems. The program will then print a summary showing \neach team\'s score on each of the problems along with the winning team number and \ntheir score. A team is allowed to submit a problem more than once without penalty, \nbut the judges\' scores for the most recent submission are the ones that are used. \nIn case more than one team has an overall score within three hundredths of a point \nof the high score, your program should indicate there is a tie and list the teams \nwith multiple high scores.</p>\n<p> </p>','<p>The input file will consist of data sets for one or more contests. Each data set \nwill begin with a single integer 0 &lt;= n &lt;= 9, representing the total number \nof teams competing in the contest. This will be followed by a line that begins \nwith an integer 0 &lt; p &lt;= 9 indicating the number of problems at the competition, \nand then p numbers representing the judges\' difficulty ratings for each of the \nproblems. Each of the difficulty ratings is a non-negative fixed point value with \nexactly one digit after the decimal point. All judges\' scores are fixed point \nnumbers in the range from 0.0 to 10.0 with one digit after the decimal point. \nThe next lines contain a team\'s submission and the six judges\' scores for that \nsubmission in the following format :<br /><br />\nTeam-Number Problem-Number Score1 Score2 Score3 Score4 Score5 Score6<br /><br />\nThe end of input for a given contest is indicated by the string \"TIME\'S UP\" \nstarting in column 1. A line of \"END\" starting in column 1 indicates \nend of input and should not be processed.</p>','<p>The first line of output for each contest should be the number of the contest, \n  where contest numbering starts with 1. The program should then print a summary \n  showing the problem numbers, followed by a blank line, and then the team number \n  of each team starting with the first team along with their total scores for \n  each of the respective problems in a tabular format as shown below. All team \n  and problem numbers are numbered with positive integers starting at 1 and continuing \n  with each consecutive integer thereafter. The score for each team should be \n  rounded to one digit to the right of the decimal point. This should be followed \n  by a blank line, the team number(s) with the most points, and the overall winning \n  point total.<br /><br />\n  Prob1 Prob2 Prob3 ... Probj<br /><br />\n  Team1 Score1 Score2 Score3 ... Scorej<br />\n  Team2 Score1 Score2 Score3 ... Scorej<br />\n  Team3 Score1 Score2 Score3 ... Scorej<br />\n  ... <br />\n  Teami Score1 Score2 Score3 ... Scorej<br /><br />\n  Team x wins with xxx.x points<br /><br />\n  In case of a tie between two teams, the final line should be written in the \n  following format:<br /><br />\n  Tie for first with xxx.x points among these teams : x x<br /><br />\n  If the tie is between more than two teams, simply continue listing your team \n  numbers with a single space between each.<br /><br />\n  Have two blank lines after each contest.</p>','4\n3 2.1 1.9 1.8\n2 2 6.0 2.1 6.5 7.0 8.0 7.5\n1 2 1.9 5.0 6.5 7.0 7.0 5.5\n3 3 1.8 5.5 8.5 7.0 6.0 6.0\n4 3 2.3 7.0 7.0 7.0 7.0 7.0\n2 3 2.3 7.0 7.0 7.0 7.0 7.0\n2 1 1.9 5.0 6.5 7.0 7.0 5.5\n1 1 1.9 5.0 6.5 7.0 7.0 5.5\n3 1 1.9 5.0 6.5 7.0 7.0 5.5\n2 3 8.0 7.5 7.5 8.0 7.5 7.0\n1 3 6.9 5.5 6.5 7.5 7.0 8.5\n4 2 5.5 7.5 7.0 7.0 8.0 7.5\nTIME\'S UP\nEND','Contest 1:\n           1       2       3\n\n1       50.4    45.6    50.2\n2       50.4    51.3    54.9\n3       50.4     0.0    44.1\n4        0.0    55.1    50.4\n\nTeam 2 wins with 156.6 points','',23,0,1,64,2,1,45,10),(1006,'If it\'s a Javelin, Duck!','<p>The coaches for the US Olympic Track Team, Pierre A. Noid and Ada Noid, fear \n  that their 16-year-old, 7\'2\" javelin thrower, Moven van Driver, has not \n  been given a \"fair go\" by the Olympic referees. They have purchased \n  two distance measuring devices (DMD) to help them check on the accuracy of the \n  measurements made by the referees. There are several elimination rounds for \n  which each coach positions him/herself in either coaches area (which includes \n  the boundaries), such that the two coaches are on opposite sides of the throwing \n  zone. At the beginning of each round the coaches measure their separation from \n  each other and the distance of each from the launching point. During a round \n  the coaches do not move. For each throw in each round they record their distances \n  from the landing point, and calculate the distance that should have been awarded \n  to Moven. You may assume that the javelin will always land somewhere in the \n  landing area (which includes its boundary). </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1006_ab1b90ee1948135a4b8e61f059928113.jpg\" src=\"assets/problem_images/1006_ab1b90ee1948135a4b8e61f059928113.jpg\" /></p>\n<p align=\"left\">The following measurements are made, as indicated in the figure above:<br />\n  <br />\n  x Pierre\'s distance from the launching point<br />\n  y Ada\'s distance from the launching point<br />\n  z distance between Ada and Pierre<br />\n  a Pierre\'s distance from the javelin\'s landing point.<br />\n  c Ada\'s distance from the javelin\'s landing point.<br />\n  <br />\n  Your program is to determine b, the actual distance traveled by the javelin \n  (in meters, to the nearest hundredth of a meter) from the other measurements \n  (given in meters to the nearest hundredth of a meter).</p>','<p>There will be several groups of input data, each representing a round. The first \n  line of each group will have an integer and three real numbers, n, x, y, and \n  z separated by white space. The first number n is the number of throws in the \n  current round, such that 0 &lt;= n &lt;= 5. The other distance limits are 10 \n  &lt;= x &lt;= 100, 10 &lt;= y &lt;= 100, and 5 &lt;= z &lt;= 100. The next n \n  lines will have pairs of real numbers, representing measurements a and c, such \n  that 0 &lt;= a &lt;= 100, and 0 &lt;= c &lt;= 100. The input data is terminated \n  by a value of n = 0, followed by three zeros, and this data is not processed.</p>','<p>The output should be labeled by the number of the round, and followed by the \n  distance of each throw for that round (each on a separate line). Formatting \n  should be as in the sample output.</p>','3 50.00 50.00 75.00\n50.00 50.00\n60.00 40.00\n30.00 75.00\n2 30.00 60.00 87.50\n55.55 66.66\n33.33 88.88\n0 0 0 0','Round 1\n1.   66.14\n2.   66.30\n3.   69.96\n\nRound 2\n1.   52.77\n2.   48.81','',23,0,1,64,2,24,116,12),(1005,'Hey, You\'re Not Marion Jones!','<p>The Olympic committee has hired American Code Masters (ACM) to verify the IDs \n  issued to all the athletes, reserves, judges, staff, and the press. Each badge \n  has a barcode written on it in base-5, encoding the ID number. The system of \n  ID numbers uses a check-digit scheme to detect errors and reduce forgeries. \n  You are to write a program to help ACM detect invalid ID numbers.</p>\n<p> The devices that security uses to read the barcodes produce strings of the \n  letters V,W,X,Y,Z. Each letter represents a base-5 digit: V represents 4, W \n  represents 3, X represents 2, Y represents 1, and Z represents 0. So, WXZ=320 \n  (base-5), which is 85 (base-10). The base-5 number is first converted to a base-10 \n  number. Any number with more than 8 (base-10) digits is considered invalid. \n  Numbers with less than 8 digits are padded on the left with zeroes. IDs are \n  allocated based on the most significant digit (in base-10):</p>\n<p> 0, 1 athletes; <br />\n  2, 3 reserves, <br />\n  4, 5 judges; <br />\n  6, 7 staff; and <br />\n  8, 9 press.</p>\n<p> Consider the ID number d7 d6 ... d1 d0 expressed in base-10, where di (0 &lt;= \n  i &lt;= 7) is a single digit of the ID number. For this ID to be valid the following \n  checksum value must be 0:</p>\n<p> F(0,d0) x F(1,d1) x F(2,d2) x ... x F(6,d6) x F(7,d7)</p>\n<p> We will define the function F(i,j) and the operator next. The function F is \n  defined as: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1005_13831d59a5f861667ab9a9a78a52f6a5.jpg\" src=\"assets/problem_images/1005_13831d59a5f861667ab9a9a78a52f6a5.jpg\" /></p>\n<p>The definition of the function F depends on a permutation of the decimal digits \n  we call G:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1005_5afcafafc5f1c3dd22c1f514083d7946.jpg\" src=\"assets/problem_images/1005_5afcafafc5f1c3dd22c1f514083d7946.jpg\" /></p>\n<p> That is, G(0)=1, G(1)=5, etc. </p>\n<p>The function i j is based on dihedral groups and has the nice property that \n  transposing digits in the ID creates a checksum error. It is defined as follows:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1005_ae41822b4e3833ecb9cfde2d9358ff1f.jpg\" src=\"assets/problem_images/1005_ae41822b4e3833ecb9cfde2d9358ff1f.jpg\" /></p>\n<p>Note that -4 mod 5 = 1. </p>\n<p>The operator is left-associative, so for example i x j x k = (i x j) x k.</p>','<p>The first line of the input contains an integer n &gt;= 1. Each of the next \n  n lines contains a single scanned barcode representing a potential ID number. \n  Each scanned barcode will consist only of the characters \'V\', \'W\', \'X\', \'Y\', \n  and \'Z\' and will be at least 1 and at most 12 letters long.</p>','<p>You should output the ID number as read, its corresponding base-10 number, and \n  a message telling either that the ID is invalid or, if it is valid, the type \n  of participant that the ID belongs to. Use the wording and format in the sample \n  output below.</p>','6\nWYYXWVZXX\nYWYWYYXWVZYY\nYWYWYYXWVZYX\nYYZWYYXWVZYX\nYXXWYYXWVZXW\nXYXWYYXWXYY\n\n\n','WYYXWVZXX/01274262 is valid athlete id number\nYWYWYYXWVZYY/81352381 is valid press id number\nYWYWYYXWVZYX/81352382 is invalid id number\nYYZWYYXWVZYX/59868007 is valid judge id number\nYXXWYYXWVZXW/73539888 is valid staff id number\nXYXWYYXWXYY/22520431 is valid reserve id number','',23,0,1,64,2,35,70,12),(1004,'Charity Begins at Home-page','<p>Dozens of charity WWW sites have appeared recently. These sites donate advertising \n  payments they receive to charitable organizations. But advertisers don\'t want \n  to pay for people who come to the WWW site dozens of time a day, so require \n  a list of unique visitors to the site. Some sites, such as The Hunger Site (thehungersite.com), \n  the original \"Click for Charity\" site, allow only one donation per \n  address per day. Others, such as the Meals On Wheels site (givemeals.com), allow \n  donations as frequently as every 6 hours.</p>\n<p> You are to write a program to take a list of visits for a month and list the \n  visitors to the site and the number of visits, both valid and invalid, they \n  made in that month.</p>','<p>The input data file contains zero or more records of visitors to a charity WWW \n  site, where each record appears on single line. Each visit will be in the following \n  format:<br /><br />\n  dd:hh:mm:ss:address<br /><br />\n  where:<br /><br />\n  dd is an integer that represents the day of the visit, with 01 &lt;= dd &lt;= \n  32<br />\n  hh is an integer that represents the hour of the visit, with 00 &lt;= hh &lt;= \n  23<br />\n  mm is an integer that represents the minute of the visit, with 00 &lt;= mm &lt;= \n  59<br />\n  ss is an integer that represents the second of the visit, with 00 &lt;= ss &lt;= \n  59<br />\n  address is a string that represents the email address of the visitor. The address \n  will consist of the upper and lower case letters, digits, periods (\'.\'), and \n  the at sign (\'@\') only. It will have exactly one \'@\' in it (that will not be \n  the first character) and at least one period after the \'@\'. The \'@\' and \'.\' \n  will not appear next to each other. An address will not end with a \'.\'. There \n  will be at most 65 characters in the address. Case is not significant in addresses, \n  so a@b.c and A@B.C should be considered to be the same address.\n</p>\n<p> The visits will be arranged in time order, from earliest to latest. While \n  there may be two or more visits at a given time, there will not be two visits \n  for the same address at the same time.</p>\n<p> There will be at most 1000 unique addresses in the input file. </p>\n<p> The end of input will be indicated by an entry for day 32. This line should \n  not be processed.</p>','<p>Output the number of valid and invalid visits for each address in the file. \n  A visit is valid if it is the first visit in the file for the address or if \n  it is 6 hours or more since the most recent previous valid visit for that address. \n  A visit is invalid if it is not valid (that is, if it is less than 6 hours since \n  the last valid visit for that email address in the file). \n</p>\n<p>Output should be grouped by top-level domain, and within a top-level domain \n  by the second-level domain. The top-level domain of the address is the character \n  or characters after the last period in the address. The second-level domain \n  is the collection of letters and digits immediately before the last period. \n  For example, the address programmer@acm.cs.gcsu.edu has the top-level domain \n  edu and the second-level domain gcsu . Top-level domains should be alphabetized, \n  then the second-level domains alphabetized under them. For each second-level \n  domain, all the donors in that domain should be listed in ASCII order of address, \n  followed by the number of valid donations(right-justified to column 69) and \n  invalid donations(right justified to column 73). There should be one blank line \n  between second-level domains and two blank lines between top-level domains. \n  Use the format in the sample output.</p>\n<p> All email addresses in the output should be in lower case. </p>','01:00:24:18:joe@gcsu.edu\n01:00:24:18:jane3@cobra.cs.mercer.edu\n01:01:00:29:joe@gcsu.edu\n01:07:00:29:JOE@GCSU.EDU\n01:08:30:15:JANE3@COBRA.CS.MERCER.EDU\n01:12:02:19:THOMAS@USA.EDU\n02:08:30:15:jane@cobra.cs.mercer.edu\n04:07:20:00:bob@ist.ucf.EDU\n04:08:18:39:mickey@disney.com\n04:13:19:59:bob@ist.ucf.edu\n04:18:20:19:thomas@usa.EDU\n05:19:19:45:rudy@survivor.cbs.tv\n06:00:18:24:jane3@cobra.cs.mercer.edu\n06:01:19:45:Rudy@Survivor.CBS.TV\n10:00:24:18:joe@gcsu.edu\n32:01:02:03:last.name@the.list','TOP-LEVEL DOMAIN = com\nSecond level domain = disney\nmickey@disney.com                                                   1   0\n\n\nTOP-LEVEL DOMAIN = edu\nSecond level domain = gcsu\njoe@gcsu.edu                                                        3   1\n\nSecond level domain = mercer\njane3@cobra.cs.mercer.edu                                           3   0\njane@cobra.cs.mercer.edu                                            1   0\n\nSecond level domain = ucf\nbob@ist.ucf.edu                                                     1   1\n\nSecond level domain = usa\nthomas@usa.edu                                                      2   0\n\n\nTOP-LEVEL DOMAIN = tv\nSecond level domain = cbs\nrudy@survivor.cbs.tv                                                2   0','',23,0,1,64,5,12,82,12),(1028,'Transmitters','<p>In a wireless network with multiple transmitters sending on the same frequencies, \n  it is often a requirement that signals don\'t overlap, or at least that they \n  don\'t conflict. One way of accomplishing this is to restrict a transmitter\'s \n  coverage area. This problem uses a shielded transmitter that only broadcasts \n  in a semicircle.</p>\n<p>\n  A transmitter T is located somewhere on a 1,000 square meter grid. It broadcasts \n  in a semicircular area of radius r. The transmitter may be rotated any amount, \n  but not moved. Given N points anywhere on the grid, compute the maximum number \n  of points that can be simultaneously reached by the transmitter\'s signal. Figure \n  1 shows the same data points with two different transmitter rotations. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1021_d8d61ff9110c83c3f31469de121ba1fa.jpg\" src=\"assets/problem_images/1021_d8d61ff9110c83c3f31469de121ba1fa.jpg\" height=\"125\" width=\"333\" /></p>\n<p align=\"left\"></p>','<p>All input coordinates are integers (0-1000). The radius is a positive \n  real number greater than 0. Points on the boundary of a semicircle are considered \n  within that semicircle. There are 1-150 unique points to examine per transmitter. \n  No points are at the same location as the transmitter.</p>\n<p>Input consists of information for one or more independent transmitter problems. \n  Each problem begins with one line containing the (x,y) coordinates of the transmitter \n  followed by the broadcast radius, r. The next line contains the number of points \n  N on the grid, followed by N sets of (x,y) coordinates, one set per line. The \n  end of the input is signaled by a line with a negative radius; the (x,y) values \n  will be present but indeterminate. Figures 1 and 2 represent the data in the \n  first two example data sets below, though they are on different scales. Figures \n  1a and 2 show transmitter rotations that result in maximal coverage.</p>','<p>For each transmitter, the output contains a single line with the maximum number \n  of points that can be contained in some semicircle.</p>','25 25 3.5\n7\n25 28\n23 27\n27 27\n24 23\n26 23\n24 29\n26 29\n350 200 2.0\n5\n350 202\n350 199\n350 198\n348 200\n352 200\n995 995 10.0\n4\n1000 1000\n999 998\n990 992\n1000 999\n100 100 -2.5\n','3\n4\n4','',26,0,1,64,2,6,11,10),(1029,'W\'s Cipher','<p>Weird Wally\'s Wireless Widgets, Inc. manufactures an eclectic assortment of \n  small, wireless, network capable devices, ranging from dog collars, to pencils, \n  to fishing bobbers. All these devices have very small memories. Encryption algorithms \n  like Rijndael, the candidate for the Advanced Encryption Standard (AES) are \n  demonstrably secure but they don\'t fit in such a tiny memory. In order to provide \n  some security for transmissions to and from the devices, WWWW uses the following \n  algorithm, which you are to implement.<br /><br />\n  Encrypting a message requires three integer keys, k1, k2, and k3. The letters \n  [a-i] form one group, [j-r] a second group, and everything else ([s-z] and underscore) \n  the third group. Within each group the letters are rotated left by ki positions \n  in the message. Each group is rotated independently of the other two. Decrypting \n  the message means doing a right rotation by ki positions within each group.</p>\n<p>\n  Consider the message the_quick_brown_fox encrypted with ki values of 2, 3 and \n  1. The encrypted string is _icuo_bfnwhoq_kxert. The figure below shows the decrypting \n  right rotations for one character in each of the three character groups. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1028_58a39ab40ffc9a411cf8797829f679df.jpg\" src=\"assets/problem_images/1028_58a39ab40ffc9a411cf8797829f679df.jpg\" width=\"494\" height=\"113\" /></p>\n<p align=\"left\">Looking at all the letters in the group [a-i] we see {i,c,b,f,h,e} \n  appear at positions {2,3,7,8,11,17} within the encrypted message. After a right \n  rotation of k1=2, these positions contain the letters {h,e,i,c,b,f}. The table \n  below shows the intermediate strings that come from doing all the rotations \n  in the first group, then all rotations in the second group, then all the rotations \n  in the third group. Rotating letters in one group will not change any letters \n  in any of the other groups.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1028_ae798a99705e4531ac6e860dccef9635.jpg\" src=\"assets/problem_images/1028_ae798a99705e4531ac6e860dccef9635.jpg\" /></p>','<p>All input strings contain only lowercase letters and underscores(_). \n  Each string will be at most 80 characters long. The ki are all positive integers \n  in the range 1-100.<br /><br />\n  Input consists of information for one or more encrypted messages. Each problem \n  begins with one line containing k1, k2, and k3 followed by a line containing \n  the encrypted message. The end of the input is signalled by a line with all \n  key values of 0.</p>','<p>For each encrypted message, the output is a single line containing the decrypted \n  string.</p>','2 3 1\n_icuo_bfnwhoq_kxert\n1 1 1\nbcalmkyzx\n3 7 4\nwcb_mxfep_dorul_eov_qtkrhe_ozany_dgtoh_u_eji\n2 4 3\ncjvdksaltbmu\n0 0 0\n','the_quick_brown_fox\nabcklmxyz\nthe_quick_brown_fox_jumped_over_the_lazy_dog\najsbktcludmv\n','<p> </p>',26,0,1,64,2,7,18,12),(1003,'Bob\'s Bingo Bonanza','<p>Bingo is a game played on a 5 by 5 board called a card. There are many variations, \n  but Bob\'s Bingo uses the following rules:</p>\n<ul>\n	<li>Each card will have the 25 positive integers, where each value is less than \n    or equal to 75.</li>\n	<li>No value will appear in more than one position on a card.</li>\n	<li>During the game, numbers are selected and if they are on a card, they are \n    covered.</li>\n	<li>To be a winner, all the numbers on a card in a given pattern must be covered. \n    The pattern can change from game to game. Some sample patterns (marked by \n    the Xs) include:\n</li>\n</ul>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1003_c45e281c33575cb5025f2e15a84047bb.jpg\" src=\"assets/problem_images/1003_c45e281c33575cb5025f2e15a84047bb.jpg\" /></p>\n<p>Two different cards may both be winners for a given pattern. Consider the \n  cards and pattern below:</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1003_f935aedb1543d40a3fab2d447062b47e.jpg\" src=\"assets/problem_images/1003_f935aedb1543d40a3fab2d447062b47e.jpg\" /><br /><p align=\"left\"> Both of these cards are winners when the numbers 1, 2, 7, 8, 13, 14, 19, 20, \n  and 25 are selected. These are considered to be equivalent cards.</p>\n<div align=\"left\">\n</div><p align=\"left\"> Bob\'s Bingo players get mad when they have two equivalent cards (since it \n  reduces their chance to win) or when one of their cards is equivalent to a card \n  of another player (since they have to share the prize). Bob wants you to write \n  a program to go through his stack of cards and identify the equivalent cards.</p>\n</div><p> </p>','<p>The input data file contains a collection of one or more independent datasets \n  where each represents the cards for one game.\n</p>\n<p> Each dataset begins with the winning pattern for the game. This will be entered \n  as 5 lines, with 5 characters (either \'X\' or \'_\') on each line. Each line will \n  be one row of the pattern with an \'X\' representing a position that is part of \n  the pattern and an \'_\' representing a position that is not part of the pattern. \n  Each pattern will have at least one \'X\'.</p>\n<p> After the pattern will be a line containing a single integer n, with 0 n 100. \n  Then there will be n cards, where each card is represented by 5 lines of 5 integers \n  each, with at least one space between the integers on a line. Each line of input \n  represents one row of the card.<br />\n  The end of input will be marked by a dataset with 0 cards to check. This dataset \n  should not be processed.</p>','<p>For each dataset, first output the number of the dataset (starting at 1). Then, \n  for each card that is equivalent to a previous card, output a line stating \"Card \n  k is equivalent to card m\" where k is the number of the current card in \n  the set and m is the earlier card that is equivalent to card k (where card numbering \n  starts at 1). If the current card is equivalent to more than one other card \n  in the set, print the lowest numbered one. If there is no earlier card equivalent \n  to the current card, you should not print any output for the card.<br />\n  Have one blank line between outputs for consecutive datasets.</p>','X____\nXX___\n_XX__\n__XX_\n___XX\n4\n1 6 11 16 21\n2 7 12 17 22\n3 8 13 18 23\n4 9 14 19 24\n5 10 15 20 25\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n7 18 60 64 65\n14 19 4 21 50\n40 20 25 52 5\n49 75 13 2 43\n74 63 9 8 1\n1 3 4 5 6\n2 7 31 32 33\n34 13 8 35 36\n37 38 19 14 39\n40 41 42 20 25\n_XXX_\nX_X_X\nXXXXX\nX_X_X\n_XXX_\n2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n25 24 23 22 21\n20 19 18 17 16\n15 14 13 12 11\n10 9 8 7 6\n5 4 3 2 1\nX____\nXX___\n_XX__\n__XX_\n___XX\n0','Game 1\nCard 3 is equivalent to card 1\nCard 4 is equivalent to card 1\n\nGame 2\nCard 2 is equivalent to card 1','',23,0,1,64,2,82,277,10),(1342,'Range','<p>Some automobiles display the estimated driving range, that is, the distance you can expect to drive it (without adding fuel) before running out of fuel. Here is how it works: periodically, the vehicle\'s computer records the odometer reading and the weight of fuel in the fuel tank. From this data, the fuel consumption over a certain distance can be computed. From the fuel consumption and the most recent measurement of fuel tank contents (which we assume is current for all practical purposes), the range can be calculated.</p>\n<p>Intervals over which the quantity of fuel increased (fuel was added to the tank) will not be used in the computations. For example, in the first problem instance of the sample input, the interval where the fuel weight increased from 29.9 kilograms to 34.2 kilograms will not be used. In this example, 16.3 kilograms of fuel were consumed over a distance of 228.6 kilometers. Therefore, the most recently measured fuel contents of 31.2 kilograms will enable you to drive another 438 kilometers (rounded to the nearest integer). The input will always contain at least one interval (two consecutive lines of input) where no fuel was added to the tank.</p>','<p>The input contains data for a number of problem instances. Each problem instance consists of three or more (odometer reading, fuel weight) pairs, one pair per line. Distances are measured in kilometers and fuel weight in kilograms. All input numbers will be given to one decimal place.</p>\n<p>The end of each problem instance will be signaled by a (0.0, 0.0) pair. The last problem instance will be followed by a (-1.0, -1.0) pair.</p>','<p>For each problem instance, print the range, rounded to the nearest integer.<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p>\n<p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p>','18400.5 43.2\n18440.4 40.4\n18482.7 37.0\n18540.2 33.1\n18585.3 29.9\n18620.8 34.2\n18664.6 31.2\n0.0 0.0\n18400.5 43.2\n18440.4 40.4\n18482.7 37.0\n18540.2 33.1\n18585.3 29.9\n0.0 0.0\n-1.0 -1.0','438\n415','',-1,0,1,64,10,22,72,12),(1002,'Are We There Yet?','<p>Laurie\'s little brother Joey has been playing Find the Cookie with her. However, \nafter the 32,767th time, Laurie is tired of it. She wants to write a program to \nkeep the boy occupied. Write a program to simulate a game of Find the Cookie. \nThe game takes place in a long narrow hall, so Joey can only move forward and \nbackward, not right or left. At the beginning of each game, a cookie is placed \nin the hall (not at the center of the hall) and Joey starts at the center of the \nhall. Joey attempts to find the cookie. He does this by moving to another point in the hall, whereupon the computer tells him whether he is \"warmer\" \n(he has moved closer to the cookie than his last position), \"colder\" \n(he has moved farther away from the cookie than his last position), \"same\" \n(he has not moved closer or farther away from the cookie), or he has reached the \ncookie. Joey continues until he exactly reaches the location of the cookie, which \nalways happens within 20 moves.</p>','<p>Each input line represents a new game. Each input line contains at least two and \nat most 21 integers separated by whitespace. The integers represent locations \nalong the hall, expressed in units of feet. Joey begins each game at location \n0 feet. The first integer on an input line is the location of the cookie. This \ninteger is guaranteed to be different from 0. The remaining integers represent \nlocations Joey moves to, in order. Joey will never move more than 5280 feet from \nhis original location. Joey will always reach the cookie in each game, and this \nwill be the last move on the input line. Your program should stop processing input \nlines when the cookie is located at 5280 feet (a mile from the center of the hall \nis way too far for Joey to go for only one cookie).</p>','<p>For each location that Joey moves to, determine whether he is warmer, colder, \nthe same, or has reached the cookie. Have a blank line between the output for \ndifferent input lines. Follow the format in the Sample Output.</p>','5 10 11 12 3 4 5\n3 10 10 7 3\n12 5 -3 1 4 6 7 8 9 12\n5280 10','Moving from 0 to 10: same.\nMoving from 10 to 11: colder.\nMoving from 11 to 12: colder.\nMoving from 12 to 3: warmer.\nMoving from 3 to 4: warmer.\nMoving from 4 to 5: found it!\n\nMoving from 0 to 10: colder.\nMoving from 10 to 10: same.\nMoving from 10 to 7: warmer.\nMoving from 7 to 3: found it!\n\nMoving from 0 to 5: warmer.\nMoving from 5 to -3: colder.\nMoving from -3 to 1: warmer.\nMoving from 1 to 4: warmer.\nMoving from 4 to 6: warmer.\nMoving from 6 to 7: warmer.\nMoving from 7 to 8: warmer.\nMoving from 8 to 9: warmer.\nMoving from 9 to 12: found it!','',23,0,1,64,2,254,1590,12),(1031,'Index Generation','<p>Most nonfiction and reference books have an index to help readers find references \n  to specific terms or concepts in the text. Here is a sample index.<br />\n  <br />\n  larch, 4, 237, 238, 414<br />\n  + Monty Python and, 64, 65, 66<br />\n  + planting of, 17<br />\n  Lenny Kravitz, 50<br />\n  + going his way, 53<br />\n  lumbago, 107<br />\n  mango<br />\n  + Chris Kattan, 380<br />\n  + storage of, 87, 90<br />\n  + use in Nethack, 500, 501<br />\n  + Vitamin C content, 192<br />\n  <br />\n  Each index entry contains a primary entry followed by zero or more secondary \n  entries, which begin with a \'+\'. Entries will normally be followed by a list \n  of page references, but a primary entry might not be if at least one secondary \n  entry is present (as is the case with mango, above). Primary entries are sorted, \n  and secondary entries following a primary entry are also sorted. Sorting is \n  case-insensitive. Page references for an entry are in ascending order and do \n  not include duplicates. (A duplicate could occur if there are two or more identical \n  entries on the same page.) </p>\n<p>Your task is to read a document that has index information embedded within \n  it and produce the index. Documents consist of one or more lines of ASCII text. \n  The page number starts at 1, and the character \'&amp;\' indicates the start of \n  a new page (which adds 1 to the current page number). Index entries are indicated \n  by a marker, which in its most elaborate form has the following syntax:<br />\n  <br />\n  {text%primary$secondary}<br />\n  <br />\n  Here text is the text to be indexed, primary is an alternative primary entry, \n  and secondary is a secondary entry. Both \'%primary\' and \'$secondary\' are optional, \n  but if both are present they must appear in the order given. If primary is present \n  then it is used as the primary entry, and if not then text is used as the primary \n  entry. If secondary is present then the marker adds a page reference for that \n  secondary entry; otherwise it adds a page reference for the primary entry. A \n  single marker cannot add a page reference for both a primary and secondary entry. \n  Here are examples of each of the four possible types of marker, which correspond \n  to four of the entries in the sample index above.<br />\n  <br />\n  ... his {lumbago} was acting up, so ...<br />\n  ... {Lenny%Lenny Kravitz} lit up the crowd with his version of ... <br />\n  ... Monty Python often used the {larch$Monty Python and} in ...<br />\n  ... when storing {mangos%mango$storage of}, be sure to ...</p>\n<p>The input consists of one or more documents, followed by a line containing \n  only \'**\' that signals the end of the input. Documents are implictly numbered \n  starting with 1. Each document consists of one or more lines of text followed \n  by a line containing only \'*\'. Each line of text will be at most 79 characters \n  long, not counting end-of-line characters. For document i, output the line \'DOCUMENT \n  i\' followed by the sorted index using the exact output format shown in the examples.<br />\n  <br />\n  Be sure to read Notes to Teams, which has general formatting guidelines that \n  pertain to all problem input files, including this one. Also note:<br />\n  <br />\n  A document will contain at most 100 markers, with at most 20 primary entries.<br />\n  <br />\n  A primary entry will have at most 5 secondary entries.<br />\n  <br />\n  An entry will have at most 10 unique page references (not including duplicates).<br />\n  <br />\n  The character \'&amp;\' will not appear anywhere within a marker, and will appear \n  at most 500 times within a document.<br />\n  <br />\n  The character \'*\' is used only to signal the end of a document or the end of \n  the input.<br />\n  <br />\n  The characters \'{\', \'}\', \'%\', and \'$\' will only be used to define markers, and \n  will not appear in any text or entries.<br />\n  <br />\n  A marker may span one or more lines. Every end-of-line within a marker must \n  be converted to a single space.<br />\n  <br />\n  A space within a marker (including a converted end-of-line) is normally included \n  in the text/entry, just like any other character. However, any space that immediately \n  follows \'{\', immediately precedes \'}\', or is immediately adjacent to \'%\' or \n  \'$\' must be ignored.<br />\n  <br />\n  The total length of a marker, measured from the opening \'{\' to the closing \'}\', \n  and in which all embedded end-of-lines are converted to spaces, will be at most \n  79 characters.</p>','','','Call me Ishmael.\n*\nOne {fish $unary}, two {fish$ binary},&red {fish $ scarlet}, blue {fish$\nazure}. & By { Dr. Seuss }.\n*\nThis is a {simple } & & { document} that &{\nsimply %simple\n$adverb\n} & {illustrates %vision} &&&&& one {simple-minded% simple} {Judge}\'s {vision}\nfor what a {document } might { look % vision} like.\n*\n**','DOCUMENT 1\nDOCUMENT 2\nDr. Seuss, 3\nfish\n+ azure, 2\n+ binary, 1\n+ scarlet, 2\n+ unary, 1\nDOCUMENT 3\ndocument, 3, 10\nJudge, 10\nsimple, 1, 10\n+ adverb, 4\nvision, 5, 10','<p> </p>',26,0,1,64,2,1,2,10),(1032,'HangOver','<p>How far can you make a stack of cards overhang a table? If you have one card, \n  you can create a maximum overhang of half a card length. (We\'re assuming that \n  the cards must be perpendicular to the table.) With two cards you can make the \n  top card overhang the bottom one by half a card length, and the bottom one overhang \n  the table by a third of a card length, for a total maximum overhang of 1/2 + \n  1/3 = 5/6 card lengths. In general you can make n cards overhang by 1/2 + 1/3 \n  + 1/4 + ... + 1/(n + 1) card lengths, where the top card overhangs the second \n  by 1/2, the second overhangs tha third by 1/3, the third overhangs the fourth \n  by 1/4, etc., and the bottom card overhangs the table by 1/(n + 1). This is \n  illustrated in the figure below.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1032_50ac13c53158fd843d1884e8afa962dd.jpg\" src=\"assets/problem_images/1032_50ac13c53158fd843d1884e8afa962dd.jpg\" /></p>\n<p align=\"left\"></p>','<p>The input consists of one or more test cases, followed by a line \n  containing the number 0.00 that signals the end of the input. Each test case \n  is a single line containing a positive floating-point number c whose value is \n  at least 0.01 and at most 5.20; c will contain exactly three digits.</p>','<p>For each test case, output the minimum number of cards necessary to achieve \n  an overhang of at least c card lengths. Use the exact output format shown in \n  the examples.</p>','1.00\n3.71\n0.04\n5.19\n0.00','3 card(s)\n61 card(s)\n1 card(s)\n273 card(s)','',26,0,1,64,2,214,320,10),(1033,'Double Vision','<p>The DoubleVision company designs inks and fonts that can be easily read by \n  both humans and machines. They design their fonts on a rectangular grid. Shown \n  below is a very simple 5x3 design for the first five digits.</p>\n<pre align=\"center\">.o. .o. oo. oo. o.o\no.o .o. ..o ..o o.o\no.o .o. .o. oo. ooo\no.o .o. o.. ..o ..o\n.o. .o. ooo oo. ..o</pre>\n<p align=\"left\">The ink appears to be normal black ink, but just underneath the \n  surface DoubleVision adds a special polymer that can be detected by an infrared \n  scanner. A human sees the black ink but not the polymer, and a machine sees \n  the polymer but not the black ink. The only problem is that the polymer is much \n  more expensive than the ink, so DoubleVision wants to use as little of it as \n  possible. They have discovered that with many fonts, each symbol can be uniquely \n  identified by at most two pixels. By only adding the polymer to one or two pixels \n  per symbol, they drastically lower costs while still ensuring 100% accuracy \n  in their scanners. The font shown above has this property; pixels that uniquely \n  identify each letter are highlighted with \'#\'. (There are other choices that \n  would work as well.)</p>\n<pre align=\"center\">.#. .o. #o. oo. o.#\n#.o .#. ..o ..o o.o\no.o .o. .o. #o. ooo\no.o .o. #.. ..o ..o\n.o. .o. ooo #o. ..o</pre>\n<p align=\"left\">Your job is to write a program to determine if a given font has \n  this property, and if so highlight the pixels.</p>','<p>The input consists of one or more test cases, followed by a line containing \n  \'0 0 0\' (three zeros) that signals the end of the input. Each test case begins \n  with a line containing three positive integers n, r, and c, separated by a space: \n  n is the number of symbols in the font, r is the number of rows in each grid, \n  and c is the number of columns in each grid. The next r lines contain the image \n  of each symbol, using the exact format shown in the examples: a dot \'.\' represents \n  an empty part of the grid, a lowercase \'o\' represents a pixel, and adjacent \n  grids are separated by a space. The total width of each line will be at most \n  79 characters (not counting end-of-line characters), and r will be at most 10. \n  The test cases are implicitly numbered starting with 1.</p>','<p>For test case i, first output a line that says \'Test i\'. Then determine if each \n  symbol can be uniquely identified with one or two pixels. If not, output a line \n  with the word \'impossible\'. Otherwise, output the font in the same format except \n  that the identifying pixels for each symbol are replaced with \'#\'.<br /><br />\n  In general there may be several different pixels or pixel pairs that uniquely \n  identify a symbol. To ensure that the output is unique, we add the following \n  definition and rules. When comparing two pixels, the topmost-leftmost pixel \n  is the one closest to the top of the grid. If both pixels are on the same row, \n  then the topmost-leftmost is the one closest to the left of the grid.<br /><br />\n  If one pixel will work, highlight the topmost-leftmost pixel that works. Never \n  highlight a two-pixel solution if a one-pixel solution is possible. If two pixels \n  are needed, highlight the pair with the topmost-leftmost pixel. If two or more \n  pairs have the same topmost-leftmost pixel, highlight the one with the topmost-leftmost \n  other pixel.</p>','3 2 2\noo oo .o\no. .o o.\n3 2 2\noo oo .o\no. .o oo\n5 5 3\n.o. .o. oo. oo. o.o\no.o .o. ..o ..o o.o\no.o .o. .o. oo. ooo\no.o .o. o.. ..o ..o\n.o. .o. ooo oo. ..o\n1 2 4\n.o..\n...o\n0 0 0','Test 1\nimpossible\nTest 2\n#o #o .o\n#. .# ##\nTest 3\n.#. .o. #o. oo. o.#\n#.o .#. ..o ..o o.o\no.o .o. .o. #o. ooo\no.o .o. #.. ..o ..o\n.o. .o. ooo #o. ..o\nTest 4\n.#..\n...o','',26,0,1,64,2,2,6,12),(1034,'Image Perimeters','<p>Technicians in a pathology lab analyze digitized images of slides. Objects \n  on a slide are selected for analysis by a mouse click on the object. The perimeter \n  of the boundary of an object is one useful measure. Your task is to determine \n  this perimeter for selected objects.</p>\n<p>\n  The digitized slides will be represented by a rectangular grid of periods, \'.\', \n  indicating empty space, and the capital letter \'X\', indicating part of an object. \n  Simple examples are </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1034_4ee80c2f74937008ed8b2acdb89e7ea5.jpg\" src=\"assets/problem_images/1034_4ee80c2f74937008ed8b2acdb89e7ea5.jpg\" /></p>\n<p align=\"left\">An X in a grid square indicates that the entire grid square, including its \n  boundaries, lies in some object. The X in the center of the grid below is adjacent \n  to the X in any of the 8 positions around it. The grid squares for any two adjacent \n  X\'s overlap on an edge or corner, so they are connected.<br />\n  <br />\n  XXX<br />\n  XXX Central X and adjacent X\'s<br />\n  XXX<br />\n  <br />\n  An object consists of the grid squares of all X\'s that can be linked to one \n  another through a sequence of adjacent X\'s. In Grid 1, the whole grid is filled \n  by one object. In Grid 2 there are two objects. One object contains only the \n  lower left grid square. The remaining X\'s belong to the other object.<br />\n  <br />\n  The technician will always click on an X, selecting the object containing that \n  X. The coordinates of the click are recorded. Rows and columns are numbered \n  starting from 1 in the upper left hand corner. The technician could select the \n  object in Grid 1 by clicking on row 2 and column 2. The larger object in Grid \n  2 could be selected by clicking on row 2, column 3. The click could not be on \n  row 4, column 3.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1034_22ee1c5db2c15c636d442ff8f9f5e823.jpg\" src=\"assets/problem_images/1034_22ee1c5db2c15c636d442ff8f9f5e823.jpg\" /></p>\n<p align=\"left\">\n  One useful statistic is the perimeter of the object. Assume each X corresponds \n  to a square one unit on each side. Hence the object in Grid 1 has perimeter \n  8 (2 on each of four sides). The perimeter for the larger object in Grid 2 is \n  illustrated in the figure at the left. The length is 18.<br />\n  <br />\n  Objects will not contain any totally enclosed holes, so the leftmost grid patterns \n  shown below could NOT appear. The variations on the right could appear: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1034_42aca342a965916cc3bfd7a7845ae8c3.jpg\" src=\"assets/problem_images/1034_42aca342a965916cc3bfd7a7845ae8c3.jpg\" /></p>','<p>The input will contain one or more grids. Each grid is preceded \n  by a line containing the number of rows and columns in the grid and the row \n  and column of the mouse click. All numbers are in the range 1-20. The rows of \n  the grid follow, starting on the next line, consisting of \'.\' and \'X\' characters.<br /><br />\n  The end of the input is indicated by a line containing four zeros. The numbers \n  on any one line are separated by blanks. The grid rows contain no blanks.</p>\n  The end of the input is indicated by a line containing four zeros. The numbers \n  on any one line are separated by blanks. The grid rows contain no blanks.','<p>For each grid in the input, the output contains a single line with the perimeter \n  of the specified object.</p>','2 2 2 2\nXX\nXX\n6 4 2 3\n.XXX\n.XXX\n.XXX\n...X\n..X.\nX...\n5 6 1 3\n.XXXX.\nX....X\n..XX.X\n.X...X\n..XXX.\n7 7 2 6\nXXXXXXX\nXX...XX\nX..X..X\nX..X...\nX..X..X\nX.....X\nXXXXXXX\n7 7 4 4\nXXXXXXX\nXX...XX\nX..X..X\nX..X...\nX..X..X\nX.....X\nXXXXXXX\n0 0 0 0','8\n18\n40\n48\n8\n','',26,0,1,64,2,12,13,10),(1042,'Oh, Those Achin\' Feet','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p>In recent days, a number of people have been injured after being pushed off the sidewalks due to overcrowding. City Hall is interested in figuring out how much pedestrian traffic its sidewalks receive every day. The results of this study will be used to determine whether the city needs to fund more sidewalks. The city has surveyed various buildings in several blocks to determine the traffic patterns they generate. Your job is to take this survey data and convert it into sidewalk utilization information.&nbsp;<br /><br />Your program will read in the size of the map and a map of several city blocks. Buildings, streets, and building entrance/exits will be marked on the map. You will also be given a list of pedestrian load between several pairs of exits and entrances. Your program will determine the paths used by pedestrians between each source and destination, add up the total pedestrian load from all paths using each street, and output a table of the total pedestrian load on each square.</p>\n<p>Notes:&nbsp;<br /><br />- The map is divided into squares. Each square of the map can be a street square, a building square, or an entrance/exit square. An entrance/exit square serves as both entrance and exit for that building. There will be no more than 90 street squares in the map.&nbsp;<br /><br />- People will always follow the shortest path between their origin and destination. No shortest path will exceed 75 squares.&nbsp;<br /><br />- If there are multiple equal-length shortest paths, the load will be divided equally amongst the paths. For shortest paths, there will be fewer than 50000 equallength path combinations.&nbsp;<br /><br />- If a building entrance/exit has multiple sides facing a street (for example, a corner of a building), the pedestrians may enter or exit through any street-facing side.&nbsp;<br /><br />- All movement will be strictly N, E, S, or W. No diagonal movement is permitted.&nbsp;<br /><br />- Pedestrians cannot move through buildings or off the edge of the map.&nbsp;</p>\n<p>- For convenience, you may ignore the fact that each street section may have two sidewalks.&nbsp;<br /><br />- Traffic load is not applied to the actual exit/entrance squares themselves.&nbsp;<br /><br />- If an origin and destination are adjacent on the map, pedestrians may move directly between them. In this case, there is no resulting load placed on any portion of the map because no streets are used.&nbsp;</p>\n<p> </p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br />Line 1: X Y&nbsp;<br />X is the number of columns in the map, Y is the number of rows. Each is a positive integer less than 20.&nbsp;<br /><br />Line 2-(Y+1):&nbsp;<br />Each line contains exactly X symbols indicating the contents of that square on the map. The symbols are:&nbsp;<br />X: building, non-entrance/exit&nbsp;<br />.: (period) street&nbsp;<br />{A-O}: letter indicating exit/entrance. Each letter may occur at most once.&nbsp;<br /><br />Lines (Y+2)-?:&nbsp;<br />Each line indicates a pedestrian route and specifies a source, destination, and pedestrian load. Source and destination will each be a letter {A-O} with no spaces in between. The load factor will be a nonnegative integer, separated from the destination by whitespace. Source and destination will never be equal. At most 25 routes will be given. There will be a valid path in the map for each requested route.&nbsp;<br /><br />The file will terminate with the line:&nbsp;<br />XX 0</span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The output consists of Y lines, each with X space-separated fields indicating the load factor. Each load factor is printed to two decimal places with 3 spaces for integer digits (C 6.2 format).</span></p>','4 4 \n.... \nA.X. \nXXX. \nB... \nAB 2 \nBA 1 \nXX 0','1.50   3.00   3.00   3.00 \n0.00   1.50   0.00   3.00 \n0.00   0.00   0.00   3.00 \n0.00   3.00   3.00   3.00','',27,0,1,64,2,0,1,12),(1041,'For the Porsche','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p>The Cash Cow Consulting Company is challenging the Vice Presidents to increase the profitability of their departments. In an effort to provide proper incentive, the Vice President whose department has the highest Profitability Index (PI) will win a brand new Porsche. The contest rules are as follows:&nbsp;<br /><br />. The winning department will have the maximum Profitability Index (sales / development cost)&nbsp;<br /><br />. Each department must stay within the minimum and maximum cost range.&nbsp;<br /><br />. In the case of equal profitability indexes, the higher profit margin will win (sales - development cost).&nbsp;<br /><br />. If two departments are still tied, the winning department will develop the smaller number of features.&nbsp;<br /><br />. If two departments are still tied, the winning department will satisfy the most customers.&nbsp;<br /><br />Mike Miser is still driving his high school moped and has determined this is his chance to upgrade. He has instructed the engineering department to determine what it will cost for each feature to be developed. He then instructed the sales force to determine what features each customer requires, and what sales that will generate. (To make a sale to a customer all features required must be provided).&nbsp;<br /><br />Mike will then determine which feature combination his division should complete to maximize his chances of winning the contest.</p>\n<p>Notes:&nbsp;<br /><br />1. Because of the type of product the Cash Cow Consulting Company creates, the production costs are negligible, and do not need to be considered. Only the development costs should be considered.&nbsp;<br />2. The tie breakers listed will result in the selection of exactly one feature set.&nbsp;<br />3. At least one feature set will satisfy the requirements.&nbsp;<br />4. The Profitability Index should be rounded to three decimal places. The values 3.4566 and 3.4574 will be considered equal.</p>\n<p> </p>\n<p> </p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">All input will be positive integers.&nbsp;<br /><br />The first line of input will indicate the number of data sets.&nbsp;<br /><br />The first line of each data set will contain 4 integers separated by white-space. In order they are the minimum cost, maximum cost, number of potential features (N) and number of potential customers (M). N and M will be no larger than 20.&nbsp;<br /><br />The next N lines (one for each feature) indicate the cost of each feature.&nbsp;<br /><br />The next M lines will contain the following (one line for each customer):&nbsp;<br />Number of required features Feature number (for each required feature) Total Sales for that customer.&nbsp;<br />For instance, if a given customer wanted 3 features, number 1,2 and 5 and would provide sales of 50, the line would read: \"3 1 2 5 50\"&nbsp;<br /><br />The next data set, if more remain, will begin on the next line.&nbsp;</span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p>The first line of output for each data set should indicate which Feature Set is being considered. These should print \"Feature Set N\" where N is the feature set number, counting from 1.&nbsp;<br /><br />The next line of output for each data set should indicate the profitability index to 3 decimal places.&nbsp;<br /><br />The next line of output for each data set should indicate the sales dollars&nbsp;<br /><br />The next line of output for each data set should indicate the cost&nbsp;<br /><br />The next line of output for each data set should indicate which features are implemented.&nbsp;<br />The first feature is feature number 1. They must be listed in order, white-space separated.&nbsp;<br /><br />The final line of output for each data set should indicate the customers who were satisfied. The first customer is customer #1. They must be listed in order, white-space separated.&nbsp;<br /><br />No extra output should appear.</p>\n<p> </p>\n<p> </p>','1 \n100 2000 7 6 \n250 \n350 \n400 \n250 \n250 \n250 \n500 \n4 1 4 5 6 4000 \n4 1 4 5 6 500 \n4 1 4 5 6 60 \n3 1 4 5 7 \n4 1 2 3 5 5 \n4 1 2 3 7 6','Feature Set 1 \n4.567 \n4567 \n1000 \n1 4 5 6 \n1 2 3 4','',27,0,1,32,10,1,1,12),(1040,'FDNY to the Rescue!','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The Fire Department of New York (FDNY) has always been proud of their response time to fires in New York City, but they want to make their response time even better. To help them with their response time, they want to make sure that the dispatchers know the closest firehouse to any address in the city. You have been hired to write this software and are entrusted with maintaining the proud tradition of FDNY. Conceptually, the software will be given the address of the fire, the locations of the firehouses, street intersections, and the time it takes to cover the distance between each intersection. It will then use this information to calculate how long it takes to reach an address from each firehouse.&nbsp;<br /><br />Given a specific fire location in the city, the software will calculate the time taken from all the fire stations located in the city to reach the fire location. The list of fire stations will be sorted from shortest time to longest time. The dispatcher can then pick the closest firestation with available firefighters and equipment to dispatch to the fire.</span></p>','','','','','',27,0,1,64,2,0,2,12),(1039,'Algernon\'s Noxious Emissions','<p>One of the greatest alchemists of the lower Middle Renaissance, Algernon da Vinci (one of Leonardo\'s lesserknown cousins), had the foresight to construct his chemical works directly over a fast-running stream. Through a series of clever pipes and sluices, he routed portions of the stream past each of the tables where his alchemists prepared their secret brews, allowing them to dispose of their chemical byproducts into the waters flowing by the table.&nbsp;<br /><br />As Algernon\'s business grew, he even added additional floors to his factory, with water lifted to the higher floors by treadmill-powered pumps (much to the dismay of the apprentices who found themselves assigned to pump duty). The pipework for the entire disposal system became quite complex. It was even rumored by some that the pipes actually circled back in some places, so that a particularly odorous compound flushed away from one table might return to that very same spot a few minutes later.&nbsp;<br /><br />All was not well, however. Algernon\'s factory suffered from a series of mishaps, minor explosions, gas clouds, etc. It became obvious that chemicals dumped at one table might react violently with other chemicals dumped from another table downstream. Algernon realized that he needed to trace the possible chemical flows through his factory.&nbsp;<br /><br />Write a program to aid Algernon in this task. To preserve the secrecy of the chemical processes that are Algernon\'s stock in trade, all chemicals will be identified by a single upper-case letter. All tables are identified by positive numbers in the range 1..N, where N is the number of tables.&nbsp;</p>\n<p style=\"text-align: center;\" align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1039_090138aa358307c305c00ef56f6980b2.jpg\" /></p>','<p><strong>This problem contains multiple test cases!</strong></p>\n<p>The first line of a multiple input is an integer N, then a blank line followed by N input blocks. Each input block is in the format indicated in the problem description. There is a blank line between input blocks.</p>\n<p>Line 1:&nbsp;<br /># of work tables, integer (henceforth referred to as N). N &lt; 50&nbsp;<br /><br />Lines 2..N+1&nbsp;<br />For each table:&nbsp;</p>\n<ul>\n	<li>a list of chemicals dumped into the stream at that table, followed by&nbsp;</li>\n	<li>a list of chemicals that, if they appeared at that table, would be harmlessly neutralized by the reactions at that table, allowing no further trace of that chemical to flow downstream (we will assume that the rate of work at each table can be adjusted as necessary to guarantee total neutralization of whatever amount of these chemicals arrive from upstream).&nbsp;</li>\n</ul>\n<p>Each of these lists is given as a series of upper-case alphabetic characters. The only exception is that a special list, consisting of a single \'.\' character, will be used to denote an empty list. The two lists are separated from one other by one or more blanks. The same chemical will never appear in both lists.&nbsp;<br /><br />Lines N+2..?&nbsp;<br />These lines provide a description of the pipeworks. Each line contains a pair of integers in the range 1..N, separated by one or more blanks:&nbsp;<br />I J&nbsp;<br />meaning that the table number I is upstream of table number J - anything dumped into the stream at table I or that arrives in the stream at table I and is not neutralized can then be counted on to arrive at table J.</p>\n<p> </p>\n<p>No (I,J) pair will be listed more than once, but the pairs may occur in any order. I and J will never be the same number.&nbsp;<br /><br />The end of input is signaled by a pair of zeros:&nbsp;<br />0 0&nbsp;<br /><br />Note that if a table only receives water directly from the stream entering the building, that table will never occur in the second position of a pair. Similarly, any table that discharges only into the stream leaving the building will never occur in the first position of a pair.</p>','<p>The output format consists of N output blocks. There is a blank line between output blocks.</p>\n<p>\nThere will be N lines of output, one for each table, in the same order as they appeared in the program input. Each line will contain the list of chemicals that can be expected at that table\'s output. This list will be printed as a (possibly empty) list of upper-case alphabetic characters between two colons (:). No empty spaces should be printed on the line. The characters in the list should be sorted in alphabetic order.</p>\n<p> </p>','1\n\n4 \nAB C \nC BDA \nBCD . \n. A \n1 2 \n2 4 \n3 1 \n1 3 \n3 4 \n0 0',':ABD: \n:C: \n:ABCD: \n:BCD:','',27,0,1,64,2,1,1,10),(1053,'Balanced Number','<div align=\"left\"><p>\nA balanced number is a non-negative integer that can be balanced if a pivot is placed at some digit. \nMore specifically, imagine\neach digit as a box with weight indicated by the digit. When a pivot is placed at some digit of the number, \nthe distance from a digit to the pivot is the offset between it and the pivot.\nThen the torques of left part and right part can be calculated. It is balanced if they are the same.\nA balanced number must be balanced with the pivot at some of its digits. For example, 4139 is a balanced number\nwith pivot fixed at 3. The torqueses are 4*2 + 1*1 = 9 and 9*1 = 9, for left part and right part, respectively.\nIt\'s your job to calculate the number of balanced numbers in a given range [<em>x</em>, <em>y</em>].\n</p>\n</div>','<p>\nThe input contains multiple test cases. The first line is the total number of cases <em>T</em> (0 &lt; <em>T</em> ≤ 30).\nFor each case, there are two integers separated by a space in a line, <em>x</em> and <em>y</em>. (0 ≤ <em>x</em> ≤ <em>y</em> ≤ 10<sup>18</sup>).\n</p>','<p>\nFor each case, print the number of balanced numbers in the range [<em>x</em>, <em>y</em>] in a line.\n</p>','2\n0 9\n7604 24324','10\n897','<p> </p>',30,0,1,64,5,1,8,10),(1038,'A New Growth Industry','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">A biologist experimenting with DNA modification of bacteria has found a way to make bacterial colonies sensitive to the&nbsp;<br />surrounding population density. By changing the DNA, he is able to \"program\" the bacteria to respond to the varying densities in their immediate neighborhood.&nbsp;<br /><br />The culture dish is a square, divided into 400 smaller squares (20x20). Population in each small square is measured on a four point scale (from 0 to 3). The DNA information is represented as an array D, indexed from 0 to 15, of integer values and is interpreted as follows:&nbsp;<br /><br />In any given culture dish square, let K be the sum of that square\'s density and the densities of the four squares immediately to the left, right, above and below that square (squares outside the dish are considered to have density 0). Then, by the next day, that dish square\'s density will change by D[K] (which may be a positive, negative, or zero value). The total density cannot, however, exceed 3 nor drop below 0.&nbsp;<br /><br />Now, clearly, some DNA programs cause all the bacteria to die off (e.g., [-3, -3, ..., -3]). Others result in immediate population explosions (e.g., [3,3,3, ..., 3]), and others are just plain boring (e.g., [0, 0, ... 0]). The biologist is interested in how some of the less obvious DNA programs might behave.&nbsp;<br /><br />Write a program to simulate the culture growth, reading in the number of days to be simulated, the DNA rules, and the initial population densities of the dish.&nbsp;</span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p align=\"left\"><strong>This problem contains multiple test cases!</strong></p>\n<p>The first line of a multiple input is an integer N, then a blank line followed by N input blocks. Each input block is in the format indicated in the problem description. There is a blank line between input blocks.</p>\n<p> </p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br /></span></p>\n<p>\nInput to this program consists of three parts:&nbsp;</p>\n<p>1. The first line will contain a single integer denoting the number of days to be simulated.&nbsp;<br /><br />2. The second line will contain the DNA rule D as 16 integer values, ordered from D[0] to D[15], separated from one another by one or more blanks. Each integer will be in the range -3...3, inclusive.&nbsp;<br /><br />3. The remaining twenty lines of input will describe the initial population density in the culture dish. Each line describes one row of squares in the culture dish, and will contain 20 integers in the range 0...3, separated from one another by 1 or more blanks.</p>\n<p> </p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The output format consists of N output blocks. There is a blank line between output blocks.</span><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p>The program will produce exactly 20 lines of output, describing the population densities in the culture dish at the end of the simulation. Each line represents a row of squares in the culture dish, and will consist of 20 characters, plus the usual end-of-line terminator.&nbsp;<br /><br />Each character will represent the population density at a single dish square, as follows:</p>\n<p> </p>\n<p style=\"text-align: center;\">\n<img src=\"http://sharecode.ir/assets/problem_images/1038_48fe03994d8e9774318f64bf7b8e4899.jpg\" /></p>\n<p> </p>\n<p align=\"left\">No other characters may appear in the output.&nbsp;</p>\n<p> </p>\n<p><span style=\"font-family: Arial,Helvetica,Verdana,sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"></span></p>\n<p>The program will produce exactly 20 lines of output, describing the population densities in the culture dish at the end of the simulation. Each line represents a row of squares in the culture dish, and will consist of 20 characters, plus the usual end-of-line terminator.&nbsp;<br /><br />Each character will represent the population density at a single dish square, as follows:</p>\n<p> </p>\n<p style=\"text-align: center;\">\n<img src=\"http://sharecode.ir/assets/problem_images/1038_48fe03994d8e9774318f64bf7b8e4899.jpg\" /></p>\n<p> </p>\n<p align=\"left\">No other characters may appear in the output.&nbsp;</p>\n<p> </p>','1\n2\n0 1 1 1 2 1 0 -1 -1 -1 -2 -2 -3 -3 -3 -3\n3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0','##!.................\n#!..................\n!...................\n....................\n....................\n....................\n....................\n.........!..........\n........!#!.........\n.......!#X#!........\n........!#!.........\n.........!..........\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................','',27,0,1,64,2,3,5,12),(1037,'Start Up the Startup','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">Clearly the economy is bound to pick up again soon. As a forward-thinking Internet entrepreneur, you think that the \'Net will need a new search engine to serve all the people buying new computers. Because you\'re frustrated with the poor results most search engines produce, your search engine will be better.&nbsp;<br /><br />You\'ve come up with what you believe is an innovative approach to document matching. By giving weight to the number of times a term appears in both the search string and in the document being checked, you believe you can produce a more accurate search result.&nbsp;<br /><br />Your program will be given a search string, followed by a set of documents. You will calculate the score for each document and print it to output in the order the document appears in the input. To calculate the score for a document you must first calculate the term score for each term appearing in the search string. A term score is the number of times a term occurs in the search string multiplied by the number of times it occurs in the document. The document score is the sum of the square roots of each term score.&nbsp;</span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p><strong>This problem contains multiple test cases!</strong></p>\n<p>The first line of a multiple input is an integer N, then a blank line followed by N input blocks. Each input block is in the format indicated in the problem description. There is a blank line between input blocks.</p>\n<p> </p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br /></span></p>\n<p>\nThe input consists of a set of documents separated by single lines containing only ten dashes, \"----------\". No line will be longer than 250 characters. No document will be longer than 100 lines. The first document is the search string. The input terminates with two lines of ten dashes in a row.&nbsp;</p>\n<p>The input documents will use the full ASCII character set. You must parse each document into a set of terms.&nbsp;<br /><br />Terms are separated by whitespace in the input document. Comparisons between terms are case-insensitive. Punctuation is removed from terms prior to comparisons, e.g. \"don\'t\" becomes \"dont\". The resulting terms should contain only the characters {[a-z],[0-9]}. A term in the input consisting only of punctuation should be ignored. You may assume the search string and each document will have at least one valid term.</p>\n<p> </p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The output format consists of N output blocks. There is a blank line between output blocks.<br /></span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br /></span></p>\n<p>\nThe output is a series of scores, one per line, printed to two decimal places. The scores are printed in the order the documents occur in the input. No other characters may appear in the output.</p>\n<p> </p>','1\n\nfee fi fo fum \n---------- \nfee, fi, fo! fum!! \n---------- \nfee fee fi, me me me \n---------- \n---------- ','4.00 \n2.41','',27,0,1,64,2,1,3,12),(1036,'I Think I Need a Houseboat','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">Fred Mapper is considering purchasing some land in Louisiana to build his house on. In the process of investigating the land, he learned that the state of Louisiana is actually shrinking by 50 square miles each year, due to erosion caused by the Mississippi River. Since Fred is hoping to live in this house the rest of his life, he needs to know if his land is going to be lost to erosion.&nbsp;<br /><br />After doing more research, Fred has learned that the land that is being lost forms a semicircle. This semicircle is part of a circle centered at (0,0), with the line that bisects the circle being the X axis. Locations below the X axis are in the water. The semicircle has an area of 0 at the beginning of year 1. (Semicircle illustrated in the Figure.)</span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br /></span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">\n<img src=\"http://sharecode.ir/assets/problem_images/1036_ed4cf2781de9302d3f913850d1176f0c.jpg\" /><br /></span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The first line of input will be a positive integer indicating how many data sets will be included (N).&nbsp;<br /><br />Each of the next N lines will contain the X and Y Cartesian coordinates of the land Fred is considering. These will be floating point numbers measured in miles. The Y coordinate will be non-negative. (0,0) will not be given.</span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"></span></p>\n<p align=\"left\">For each data set, a single line of output should appear. This line should take the form of:&nbsp;<br /><br />��Property N: This property will begin eroding in year Z.��&nbsp;<br /><br />Where N is the data set (counting from 1), and Z is the first year (start from 1) this property will be within the semicircle AT THE END OF YEAR Z. Z must be an integer.&nbsp;<br /><br />After the last data set, this should print out ��END OF OUTPUT.��</p>\n<p align=\"left\">Notes:&nbsp;<br /><br />1. No property will appear exactly on the semicircle boundary: it will either be inside or outside.&nbsp;<br /><br />2. This problem will be judged automatically. Your answer must match exactly, including the capitalization, punctuation, and white-space. This includes the periods at the ends of the lines.<br /><br />3. All locations are given in miles.&nbsp;</p>\n<p> </p>','2 \n1.0 1.0 \n25.0 0.0 ','Property 1: This property will begin eroding in year 1. \nProperty 2: This property will begin eroding in year 20. \nEND OF OUTPUT.','',27,0,1,64,2,22,41,12),(1035,'Financial Management','\n<p>Larry graduated this year and finally has a job. He\'s making a lot of money, but somehow never seems to have enough. Larry has decided that he needs to grab hold of his financial portfolio and solve his financing problems. The first step is to figure out what\'s been going on with his money. Larry has his bank account statements and wants to see how much money he has. Help Larry by writing a program to take his closing balance from each of the past twelve months and calculate his average account balance.</p>\n','<p>The input will be twelve lines. Each line will contain the closing balance of his bank account for a particular month. Each number will be positive and displayed to the penny. No dollar sign will be included.</p>','<p>The output will be a single number, the average (mean) of the closing balances for the twelve months. It will be rounded to the nearest penny, preceded immediately by a dollar sign, and followed by the end-of-line. There will be no other spaces or characters in the output.</p>','100.00 \n489.12 \n12454.12 \n1234.10 \n823.05 \n109.20 \n5.27 \n1542.25 \n839.18 \n83.99 \n1295.01 \n1.75','$1581.42','',27,0,1,64,2,243,474,10),(1098,'Bridging Signals','<p>\'Oh no, they\'ve done it again\', cries the chief designer at the Waferland chip \n  factory. Once more the routing designers have screwed up completely, making \n  the signals on the chip connecting the ports of two functional blocks cross \n  each other all over the place. At this late stage of the process, it is too \n  expensive to redo the routing. Instead, the engineers have to bridge the signals, \n  using the third dimension, so that no two signals cross. However, bridging is \n  a complicated operation, and thus it is desirable to bridge as few signals as \n  possible. The call for a computer program that finds the maximum number of signals \n  which may be connected on the silicon surface without crossing each other, is \n  imminent. Bearing in mind that there may be thousands of signal ports at the \n  boundary of a functional block, the problem asks quite a lot of the programmer. \n  Are you up to the task? </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1101_297a6866c35625dee9735a145b3776ee.jpg\" src=\"assets/problem_images/1101_297a6866c35625dee9735a145b3776ee.jpg\" /></p>\n<p>Figure 1. To the left: The two blocks\' ports and their signal mapping (4, 2, \n  6, 3, 1, 5). To the right: At most three signals may be routed on the silicon \n  surface without crossing each other. The dashed signals must be bridged.</p>\n<p>A typical situation is schematically depicted in figure 1. The ports of the \n  two functional blocks are numbered from 1 to p, from top to bottom. The signal \n  mapping is described by a permutation of the numbers 1 to p in the form of a \n  list of p unique numbers in the range 1 to p, in which the ith number specifies \n  which port on the right side should be connected to the ith port on the left \n  side. Two signals cross if and only if the straight lines connecting the two \n  ports of each pair do.</p>','<p>On the first line of the input, there is a single positive integer n, telling \n  the number of test scenarios to follow. Each test scenario begins with a line \n  containing a single positive integer p &lt; 40000, the number of ports on the \n  two functional blocks. Then follow p lines, describing the signal mapping:</p>\n<p>On the ith line is the port number of the block on the right side which should \n  be connected to the ith port of the block on the left side.</p>','<p>For each test scenario, output one line containing the maximum number of signals \n  which may be routed on the silicon surface without crossing each other.</p>','4\n6\n4\n2\n6\n3\n1\n5\n10\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n8\n8\n7\n6\n5\n4\n3\n2\n1\n9\n5\n8\n9\n2\n3\n1\n7\n4\n6','3\n9\n1\n4','',39,0,1,64,10,10,22,10),(1044,'Common Subexpression Elimination','<p>\n	Common Subexpression Elimination\n	Let the set Σ consist of all words composed of 1-4 lower case \n	letters, such as the words \"a\", \"b\", \"f\", \"aa\", \"fun\" and \"kvqf\". \n	Consider expressions according to the grammar with the two rules:\n	</p>\n	<p align=\"center\">\n		<var>E</var> → <var>f</var><br />\n		<var>E</var> → <var>f</var>(<var>E</var>, <var>E</var>)\n		</p>\n<p>\n	for every symbol <var>f</var> ∈ Σ. Any expression can easily \n	be represented as a tree according to its syntax. For example, the \n	expression \"<var>a</var>(<var>b</var>(<var>f</var>(<var>a</var>,\n	<var>a</var>), <var>b</var>(<var>f</var>(<var>a</var>, <var>a</var>),\n	<var>f</var>)), <var>f</var>(<var>b</var>(<var>f</var>(<var>a</var>, \n	<var>a</var>), <var>b</var>(<var>f</var>(<var>a</var>, <var>a</var>), \n	<var>f</var>)), <var>f</var>))\" is represented by the tree on the left \n	in the following figure: \n	</p>\n	\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/%DB%B1%DB%B0%DB%B4%DB%B7_a187f421398dbdfc4c2fd6862ec796d4.jpg\" /></p>\n	<p>\n	Last night you dreamt of a great invention which considerably reduces \n	the size of the representation:\n	use a graph instead of a tree, to share common subexpressions. For \n	example, the expression above can be represented by the graph on the \n	right in the figure. While the tree contains 21 nodes, the graph just \n	contains 7 nodes.\n	</p>\n	<p>\n	Since the tree on the left in the figure is also a graph, the \n	representation using graphs is not necessarily unique. Given an \n	expression, find a graph representing the expression with as few nodes \n	as possible!\n	</p>','<p>\n	The first line of the input contains the number <var>c</var> (1 ≤ \n	<var>c</var> ≤ 200), the number of expressions. Each of the \n	following <var>c</var> lines contains an expression according to the \n	given syntax, without any whitespace.\n	</p>\n	<p>Its tree representation contains at most 50 000 nodes.</p>','<p>\n	For each expression, print a single line containing a graph \n	representation with as few nodes as possible.\n	</p>\n	<p>\n	The graph representation is written down as a string by replacing the \n	appropriate subexpressions with numbers. Each number points to the root \n	node of the subexpression which should be inserted at that position. \n	Nodes are numbered sequentially, starting with 1; this numbering \n	includes just the nodes of the graph (not those which have been \n	replaced by numbers). Numbers must point to nodes written down before \n	(no forward pointers). For our example, we obtain \n	\"<var>a</var>(<var>b</var>(<var>f</var>(<var>a</var>,4), \n	<var>b</var>(3, <var>f</var>)), <var>f</var>(2, 6))\".\n	</p>','3\nthis(is(a,tiny),tree)\na(b(f(a,a),b(f(a,a),f)),f(b(f(a,a),b(f(a,a),f)),f))\nz(zz(zzzz(zz,z),zzzz(zz,z)),zzzz(zz(zzzz(zz,z),zzzz(zz,z)),z))','this(is(a,tiny),tree)\na(b(f(a,4),b(3,f)),f(2,6))\nz(zz(zzzz(zz,z),3),zzzz(2,5))','<p> </p>',29,0,1,64,5,2,4,12),(1046,'Fractal','<p>\n	Fractals are really cool mathematical objects. They have a lot of \n	interesting properties, often in-cluding:\n	</p>\n	<ul>\n	<li>fine structure at arbitrarily small scales;</li>\n	<li>self-similarity, i.e., magnified it looks like a copy of \n		itself;</li>\n	<li>a simple, recursive definition.</li>\n</ul>\n	<p>\n	Approximate fractals are found a lot in nature, for example, in \n	structures such as clouds, snow flakes, mountain ranges, and river \n	networks.\n	</p>\n	\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1049_50c2cb12495ff7becff39afd06d93308.jpg\" /></p>\n	<p>\n	In this problem, we consider fractals generated by the following \n	algorithm: we start with a polyline, i.e., a set of connected line \n	segments. This is what we call a fractal of depth one (see leftmost\n	picture). To obtain a fractal of depth two, we replace each line \n	segment with a scaled and rotated version of the original polyline \n	(see middle picture). By repetitively replacing the line segments with\n	the polyline, we obtain fractals of arbitrary depth and very fine \n	structures arise. The rightmost picture shows a fractal of depth three.\n	</p>\n	<p>\n	The complexity of an approximate fractal increases quickly as its depth \n	increases. We want to know where we end up after traversing a certain \n	fraction of its length.\n	</p>','<p>\n	The input starts with a single number <var>c</var> (1 ≤ <var>c</var> \n	≤ 200) on one line, the number of test cases. Then each test case \n	starts with one line with <var>n</var> (3 ≤ <var>n</var> ≤ 100), \n	the number of points of the polyline. Then follow <var>n</var> lines \n	with on the ith line two integers <var>x<sub>i</sub></var> and \n	<var>y<sub>i</sub></var> (-1 000 ≤ <var>x<sub>i</sub></var>, \n	<var>y<sub>i</sub></var> ≤ 1 000), the consecutive points of the \n	polyline. Next follows one line with an integer <var>d</var> (1 ≤ \n	<var>d</var> ≤ 10), the depth of the fractal.\n	</p>\n	<p>\n	Finally, there is one line with a floating point number <var>f</var> \n	(0 ≤ <var>f</var> ≤ 1), the fraction of the length that\n	is traversed.\n	</p>\n	<p>\n	The length of each line segment of the polyline is smaller than the \n	distance between the first point (<var>x</var><sub>1</sub> , \n	<var>y</var><sub>1</sub>) and the last point (<var>x<sub>n</sub></var>, \n	<var>y<sub>n</sub></var> ) of the polyline. The length of the complete \n	polyline is smaller than twice this distance</p>','<p>\n	Per test case, the output contains one line with the coordinate where \n	we end up. Format it as (<var>x</var>, <var>y</var>),\n	</p>\n	<p>\n	with two floating point numbers <var>x</var> and <var>y</var>. The \n	absolute error in both coordinates should be smaller than \n	10<sup>-6</sup>.\n	</p>','1\n4\n-2 -2\n0 0\n0 2\n2 2\n3\n0.75','(0.4267766953,2)','<p> </p>',29,0,1,64,1,2,7,10),(1047,'Mountain Road','<p>\n	In the Franconian Switzerland, there is a narrow mountain road. With \n	only a single lane, this is a bottleneck for two-way traffic. Your job \n	is to schedule incoming cars at both ends so that the last car leaves \n	the road as early as possible.\n	</p>\n	<p>\n	Each car is specified by three values: the direction in which it is \n	going, the arrival time at the corresponding beginning of the road, and \n	the driving time this car needs to get through, provided it is not \n	slowed down by other cars in front. Cars cannot overtake each other on \n	the mountain road, and reordering cars in the queues at the ends of the \n	road is not allowed. For safety reasons, two successive cars going in \n	the same direction may not pass any point of the road within less than \n	10 seconds. This ensures that the second car will not crash into the \n	first car if the latter brakes hard. However, if another car passes in \n	the other direction in between, it will be clear that the road is \n	empty, so in this case, this rule does not apply.\n	</p>','<p>\n	The first line of the input consists of a single integer <var>c</var> \n	(1 ≤ <var>c</var> ≤ 200), the number of test cases.\n	</p>\n	<p>\n	Then follow the test cases, each beginning with a single line \n	consisting of an integer <var>n</var> (1 ≤ <var>n</var> ≤ 200),\n	the number of cars you are to consider in this test case. The remainder \n	of each test case consists of <var>n</var> lines, one line per car, \n	starting with a single upper case letter (\"A\" or \"B\"), giving the \n	direction in which the car is going. Then follow, on the same line, two \n	integers <var>t</var> (0 ≤ <var>t</var> ≤ 100 000) and \n	<var>d</var> (1 ≤ <var>d</var> ≤ 100 000), giving the arrival \n	time at the beginning of the road and the minimum travel time, \n	respectively, both in seconds. \n	</p>\n	<p>\n	Within a test case, the cars are given in order of increasing arrival \n	time, and no two cars will arrive at the same time.\n	</p>','<p>\n	For each test case, print a single line consisting of the point in time \n	(in seconds) the last car leaves the road when the cars are scheduled \n	optimally.\n	</p>','2\n4\nA 0 60\nB 19 10\nB 80 20\nA 85 100\n4\nA 0 100\nB 50 100\nA 100 1\nA 170 100','200\n270','<p> </p>',29,0,1,64,1,1,1,10),(1048,'Moving to Nuremberg','<p>\n	One of the most important inventions for modern-day city life is the \n	public transportation. However, most people probably do not think of it \n	that way - even though it makes travel in the city a lot easier, we \n	generally want to spend as little time as possible on the subway.\n	</p>\n	<p>\n	After your experience in NWERC 2009, Nuremberg holds a special place in \n	your heart, and some years later you decide to move here. Your only \n	problem is to figure out which part of Nuremberg to move to. Naturally, \n	you want to move to a nice neighborhood, but since most parts of the \n	city are nice there are still a lot of choices. Being naturally averse \n	to spending hours each day on commuting, you instead decide to choose a \n	place based on the amount of time you will have to spend on the subway.\n	</p>\n	<p>\n	Now, if you were only going to go to one place, it would be easy to \n	find the best place to live. But of course, there are several places \n	where you anticipate that you will go regularly, such as work, friends,\n	and the occasional Christkindlesmarkt. In order to be able to work this \n	out, you have written a list of all the places which you want to visit \n	regularly, along with estimates of how often you want to go there. For \n	simplicity, you assume that you will always go somewhere and then back \n	home, e.g., if you are going to Christkindlesmarkt after work you will \n	drop by your house on the way from work before going to the markt, \n	rather than going to the markt directly from work. Now, you have to \n	find the place to live for which the total travel time is minimal.\n	</p>\n	<p>\n	Because Nuremberg has an extensive public transportation system, you \n	will be using the subway for traveling. The subway net is quite big, \n	but is still fairly easily maneuvered because it is shaped like a tree. \n	In other words, there is always a unique path between any pair of \n	subway stations. (This is not quite true for the Nuremberg subway of \n	today, but when you move here in a few years, we anticipate that it \n	will be true.)\n	</p>','<p>\n	The input consists of several test cases. The first line of input \n	contains an integer <var>c</var> (1 ≤ <var>c</var> ≤ 200),\n	giving the number of test cases. Then, each test case starts with an \n	integer <var>n</var> (1 ≤ <var>n</var> ≤ 50 000), giving the \n	number of subway stations in Nuremberg. Then follow <var>n</var> - 1 \n	lines, describing the subway net. Each of these lines contains three \n	integers <var>a</var>, <var>b</var>, and <var>t</var> (1 ≤ \n	<var>a</var>, <var>b</var> ≤ <var>n</var>, and 1 ≤ <var>t</var> \n	≤ 300), indicating that stations a and b are adjacent and that it \n	takes t seconds to travel between them. This is followed by a line \n	containing an integer <var>m</var> (0 ≤ <var>m</var> ≤ \n	<var>n</var>), denoting the number of stations which you want to\n	go to regularly. Then follow <var>m</var> lines. Each of these lines \n	contains two integers <var>a</var> and <var>f</var> (1 ≤ \n	<var>a</var> ≤ <var>n</var>, 1 ≤ <var>f</var> ≤ 500), where a \n	is the station you want to visit and <var>f</var> is the number of \n	times you want to visit this station in a year. No station will occur \n	in this list more than once.\n	</p>','<p>\n	For each test case, first output a line containing the number of \n	seconds spent in traffic during a year, provided you choose an optimal \n	place to live. Following this line, output a line giving all optimal\n	choices of subway stations, separated by single spaces and in \n	increasing order.\n	</p>','2\n2\n1 2 17\n2\n1 5\n2 10\n5\n1 3 10\n2 3 20\n3 4 30\n4 5 30\n3\n1 10\n2 10\n5 20','170\n2\n3000\n3 4 5','',29,0,1,64,3,1,12,12),(1049,'Room Assignments','<p>\n	Once there was an inventor congress, where inventors from all over the \n	world met in one place. The organizer of the congress reserved exactly \n	one hotel room for each inventor. Each inventor, however, had its own \n	preference regarding which room he would like to stay in. Being a \n	clever inventor himself,\n	</p>\n	<p>\n	the organizer soon found an objective way of doing the room assignments \n	in a fair manner: each inventor wrote two different room numbers on a \n	fair coin, one room number on each side. Then, each inventor threw his \n	coin and was assigned the room number which was shown on the upper side\n	of his coin. If some room had been assigned to more than one inventor, \n	all inventors had to throw their coins again. \n	</p>\n	<p>\n	As you can imagine, this assignment process could take a long time \n	or even not terminate at all. It has the advantage, however, that among \n	all possible room assignments, one assignment is chosen randomly \n	according to a uniform distribution. In order to apply this method in \n	modern days, you should write a program which helps the organizer.\n	</p>\n	<p>\n	The organizer himself needs a hotel room too. As the organizer, he \n	wants to have some advantage: he should be able to rate each of the \n	rooms (the higher the rating, the better), and the program should \n	tell him which two room numbers he should write on his coin in order to \n	maximize the expected rating of the room he will be assigned to. The \n	program also has access to the choices of the other inventors before \n	making the proposal. It should never propose two rooms for the \n	organizer such that it is not possible to assign all inventors to the \n	rooms, if a valid assignment is possible at all.\n	</p>','<p>\n	The input starts with a single number <var>c</var> (1 ≤ <var>c</var> \n	≤ 200) on one line, the number of test cases. Each test case starts \n	with one line containing a number <var>n</var> (2 ≤ <var>n</var> ≤\n	50 000), the number of inventors and rooms. The following <var>n</var> \n	- 1 lines contain the choices of the <var>n</var> - 1 guests (excluding \n	the organizer).\n	</p>\n	<p>\n	For each inventor, there is a line containing two numbers <var>a</var> \n	and <var>b</var> (1 ≤ <var>a</var> &lt; <var>b</var> ≤ \n	<var>n</var>), the two room numbers which are selected by the inventor. \n	The last line of each test case consists of <var>n</var> integers \n	<var>v</var><sub>1</sub>, ..., <var>v<sub>n</sub></var> (1 ≤ \n	<var>v<sub>i</sub></var> ≤ 1 000 000), where \n	<var>v<sub>i</sub></var> is the organizer\'s rating for room \n	<var>i</var>.\n	</p>','<p>\n	For each test case, print a single line containing the two different \n	room numbers <var>a</var> and <var>b</var> which should be selected by \n	the organizer in order to maximize the expected rating of the room he \n	will be assigned to. If there is more than one optimal selection, break \n	ties by choosing the smallest <var>a</var> and, for equal <var>a</var>, \n	the smallest <var>b</var>. If there is no way for the organizer to \n	select two rooms such that an assignment of inventors to rooms is \n	possible, print \"impossible\" instead.\n	</p>','3\n4\n1 2\n2 3\n1 3\n2 3 4 1\n3\n1 2\n2 3\n100 40 70\n5\n1 2\n1 2\n1 2\n3 4\n1 1 1 1 1','1 4\n1 3\nimpossible','',29,0,1,64,1,0,1,10),(1050,'Settlers of Catan','<p>\n	The popular board game \"Settlers of Catan\" starts by creating a random \n	board. This board consists of hexagonal resource tiles containing five \n	different resources: clay, lumber, wool, grain, and ore. For \n	simplicity, we will denote these by the numbers 1 to 5. Random boards, \n	however, often have multiple equal resource tiles next to each other. \n	This annoys some players. Therefore, we have invented a new way of \n	creating the playing board. Starting in the middle and spiraling \n	outwards, each time we add a new tile to the board we choose the \n	resource of the tile according to the following rules:\n	</p>\n	<ul>\n	<li>the new tile must be different from its neighboring tiles \n		on the board so far;</li>\n	<li>in case multiple tiles are possible, we choose a resource \n		that occurs the least number of times on the board so far;</li>\n	<li>in case multiple tiles are still possible, the new resource \n		must have the lowest number possible.</li>\n</ul>\n	<p>\n	The figure underneath shows how to spiral outwards and which resource \n	tiles are chosen first. We are curious what the number of the resource \n	is on the nth tile that is added to the board (starting with \n	<var>n</var> = 1).\n	</p>\n	\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1053_883e411e9a47fe0cb7612dbd41ae9c95.jpg\" /></p>','<p>\n	On the first line of the input there is one integer <var>c</var> \n	(1 ≤ <var>c</var> ≤ 200), the number of test cases. Each\n	following test case consists of a single line with one integer \n	<var>n</var> (1 ≤ <var>n</var> ≤ 10 000), the number of the\n	tile we are curious about.\n	</p>','<p>\n	For each test case, print a single line with one integer, specifying \n	the resource of the nth tile.\n	</p>','4\n1\n4\n10\n100','1\n4\n5\n5','',29,0,1,64,1,9,19,10),(1051,'Simple Polygon','<p>\n	Write a program that constructs a polygon from a given set of points in \n	the plane. Each point of the set has to be a vertex of the polygon, and \n	the polygon must not have any other vertices. No two line segments of \n	the polygon may have any point in common, except for the middle vertex \n	of two consecutive line segments. For example, given the points on the \n	left-hand side, a valid polygon is shown on the right-hand side:\n	</p>\n	\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1054_a7141a62eded07c2b852894fa60b27e4.jpg\" /></p>\n	<p>\n	A valid polygon is guaranteed to exist, and any valid polygon will be \n	accepted as a correct answer. Moreover, no two points will share the \n	same location, and not all points will be collinear.\n	</p>','<p>\n	The first line of the input consists of an integer <var>c</var> \n	(1 ≤ <var>c</var> ≤ 200), the number of test cases. Then\n	follow the test cases, one per line.\n	</p>\n	<p>\n	Each test case starts with an integer <var>n</var> (3 ≤ <var>n</var> \n	≤ 2 000), the number of given points. Then follow, on the same line, \n	the coordinates of the points. Each point is specified by two integers \n	<var>x</var> and <var>y</var> in the range -10 000 to 10 000, \n	inclusively.\n	</p>','<p>\n	For each test case, print a single line containing a permutation of the \n	numbers 0 to <var>n</var> - 1. Each of these numbers represents the \n	index of a point, in the same order as given in the input. When drawing \n	line segments between consecutive points in the order given by this \n	permutation, the result must be a valid polygon.\n	</p>','2\n4 0 0 2 0 0 1 1 0\n5 0 0 10 0 10 5 5 -1 0 5','0 3 1 2\n3 1 2 4 0','',29,1,1,64,1,1,11,10),(1052,'Wormholes','<p>\n	A friend of yours, an inventor, has built a spaceship recently and \n	wants to explore space with it. During his first voyages, he discovered \n	that the universe is full of wormholes created by some alien race. \n	These wormholes allow one to travel to places far, far away, but \n	moreover, they can also send you to times long ago or in the distant \n	future.\n	</p>\n	<p>\n	Having mapped these wormholes and their respective end points, you and \n	your friend boldly decide to board his spaceship and go to some distant \n	place you\'d like to visit. Of course, you want to arrive at your \n	destination as early as possible. The question is: what is this \n	earliest arrival time?\n	</p>','<p>\n	The first line of input contains an integer <var>c</var> (1 ≤ \n	<var>c</var> ≤ 200), the number of test cases. Each test case\n	starts with a line containing two coordinate triples \n	<var>x</var><sub>0</sub>, <var>y</var><sub>0</sub>, \n	<var>z</var><sub>0</sub> and <var>x</var><sub>1</sub>, \n	<var>y</var><sub>1</sub> , <var>z</var><sub>1</sub>, the space \n	coordinates of your departure point and destination. The next line \n	contains an integer <var>n</var> (0 ≤ <var>n</var> ≤ 50), the \n	number of wormholes. Then follow <var>n</var> lines, one for each \n	wormhole, with two coordinate triples <var>x<sub>s</sub></var> , \n	<var>y<sub>s</sub></var>, <var>z<sub>s</sub></var> and \n	<var>x<sub>e</sub></var>, <var>y<sub>e</sub></var>, \n	<var>z<sub>e</sub></var>, the space coordinates of the wormhole entry \n	and exit points, respectively, followed by two integers <var>t</var>, \n	<var>d</var> (-1 000 000 ≤ <var>t</var>, <var>d</var> ≤ \n	1 000 000), the creation time <var>t</var> of the wormhole and the time \n	shift <var>d</var> when traveling through the wormhole.\n	</p>\n	<p>\n	All coordinates are integers with absolute values smaller than or equal \n	to 10 000 and no two points are the same.\n	</p>\n	<p>\n	Note that, initially, the time is zero, and that tunneling through a \n	wormhole happens instantly. For simplicity, the distance between two \n	points is defined as their Euclidean distance (the square root of the \n	sum of the squares of coordinate differences) rounded up to the nearest \n	integer. Your friend\'s spaceship travels at speed 1.\n	</p>','<p>\n	For each test case, print a single line containing an integer: the \n	earliest time you can arrive at your destination.\n	</p>','2\n0 0 0 100 0 0\n2\n1 1 0 1 2 0 -100 -2\n0 1 0 100 1 0 -150 10\n0 0 0 10 0 0\n1\n5 0 0 -5 0 0 0 0','-89\n10','',29,0,1,64,3,1,2,12),(1054,'Battle over Cities','<p>\nIt is vitally important to have all the cities connected by highways in a\n war, but some of them are destroyed now because of the war. \nFurthermore, if a city is conquered, all the highways from/toward that \ncity will be closed by the enemy, and we must repair some destroyed \nhighways to keep other cities connected, with the minimum cost if \npossible. \n</p>\n<p>\nGiven the map of cities which have all the destroyed and remaining \nhighways marked, you are supposed to tell the cost to connect other \ncities if each city is conquered by the enemy.\n</p>','<p>\nThe input contains multiple test cases. The first line is the total number of cases <em>T</em> (<em>T</em> ≤ 10). \nEach case starts with a line containing 2 numbers <em>N</em> (0 &lt; <em>N</em> ≤ 20000), and <em>M</em> (0 ≤ <em>M</em> ≤ 100000), which are the total number of cities, and the number of highways, respectively.  Then <em>M</em> lines follow, each describes a highway by 4 integers:<br />\n<em>City1 City2 Cost Status</em><br />\nwhere <em>City1</em> and <em>City2</em> are the numbers of the cities the highway connects (the cities are numbered from 1 to <em>N</em>), <em>Cost</em> (0 &lt; <em>Cost</em> ≤ 20000) is the effort taken to repair that highway if necessary, and <em>Status</em> is either 0, meaning that highway is destroyed, or 1, meaning that highway is in use. \n</p>\n<p>\nNote: It is guaranteed that the whole country was connected before the \nwar and there is no duplicated high ways between any two cities.\n</p>','<p>\nFor each test case, output <em>N</em> lines of integers.  \nThe integer in the <em>i</em>-th line indicates the cost to keep the cities connected if the <em>i</em>-th city is conquered by the enemy.\nIn case the cities cannot be connected after the <em>i</em>-th city is conquered by the enemy, output \"inf\" instead in the corresponding place.\n</p>','3\n4 5\n1 2 1 1\n1 3 1 1\n2 3 1 0\n2 4 1 1\n3 4 2 0\n4 5\n1 2 1 1\n1 3 1 1\n2 3 1 0\n2 4 1 1\n3 4 1 0\n3 2\n1 2 1 1\n1 3 1 1','1\n2\n0\n0\n1\n1\n0\n0\ninf\n0\n0','',30,0,1,64,5,0,10,12),(1055,'Binary Number','<p>\nFor 2 non-negative integers <em>x</em> and <em>y</em>, f(<em>x</em>, <em>y</em>) is defined as the number of different bits in the binary format of <em>x</em> and <em>y</em>.\nFor example, f(2, 3)=1, f(0, 3)=2,  f(5, 10)=4.\n  \n </p>\n<p>\n     \n        Now given 2 sets of non-negative integers <strong>A</strong> and <strong>B</strong>, for each integer <em>b</em> in <strong>B</strong>, you should find an integer <em>a</em> in <strong>A</strong> such that f(<em>a</em>, <em>b</em>) is minimized.\n        If there are more than one such integers in set <em>A</em>, choose the smallest one.\n</p>','<p>\nThe first line of the input is an integer <em>T</em> (0 &lt; <em>T</em> ≤ 100), indicating the number of test cases.\nThe first line of each test case contains 2 positive integers <em>m</em> and <em>n</em> (0 &lt; <em>m</em>, <em>n</em> ≤ 100), indicating the numbers of integers of the 2 sets <strong>A</strong> and <strong>B</strong>, respectively.\nThen follow (<em>m</em> + <em>n</em>) lines, each of which contains a non-negative integers no larger than 1000000. The first <em>m</em> lines are the integers in set <strong>A</strong> and the other <em>n</em> lines are the integers in set <strong>B</strong>.\n  \n \n</p>','<p>\nFor each test case you should output <em>n</em> lines, each of which contains the result for each query in a single line.\n</p>','2\n2 5\n1\n2\n1\n2\n3\n4\n5\n5 2\n1000000\n9999\n1423\n3421\n0\n13245\n353','1\n2\n1\n1\n1\n9999\n0','',30,0,1,64,2,76,184,10),(1056,'Detector Placement','<p>\nDr. Gale is testing his laser system. He uses a detector to collect the signals from a fixed laser generator. \nHe also puts a special prism in the system so that he can filter the noise. \nBut he is not very sure where to put the detector to collect the signals. \nCan you help him with this problem? </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1059_7a11628b304c5ed3a7c17e11edc2f024.jpg\" src=\"assets/problem_images/1059_7a11628b304c5ed3a7c17e11edc2f024.jpg\" /></p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1059_ab3e5b2b6123d4b5d09e16c0f2d8ccb5.jpg\" src=\"assets/problem_images/1059_ab3e5b2b6123d4b5d09e16c0f2d8ccb5.jpg\" /></p>\n<p>\nHere <em>n<sub>1</sub></em> and <em>n<sub>2</sub></em> are the refractive indices of the two media.\n</p>\n<p>\nIn order to simplify the problem, here we assume the prism is a triangle.\nThe laser generator will not be placed on the surface of the prism or inside the prism.\nThe laser goes in one direction and the detector can receive signals from any direction.\nThe detector is place on the ground where the y-coordinate is zero.\nThere is no energy lost in the refraction. \nThat is to say, there is no reflection in the signal transmission.\nYou can assume that there is no total reflection or the situation that the laser passes the vertex of the prism.</p>\n<p>\nGiven the position and the direction of the laser generator and the \nprism, you are asked to find the position of detector so that it can \nreceive the signals from the laser generator.\n</p>\n<p> </p>','<p>\nThe input contains multiple test cases. The first line is the total number of cases <em>T</em> (<em>T</em> ≤ 30).\nThe first line of each test case contains 2 integers, indicating the coordinates of the laser generator.\nThe second line contains 2 integers describing a point the laser will go through when the prism is not placed.\nThe third line contains 6 integers describing the three vertices of the prism.\nThe fourth line contains a real number <em>u</em>, the refractive index of the prism (1 &lt; <em>u</em> ≤ 10).\nWe assume the refractive index of the air is always 1.0.\nThe absolute value of the coordinates will not exceed 1000.\nThe y coordinates are all nonnegative.\nThe prism and the laser generator are strictly above the ground and the laser generator will not be inside the prism.\n</p>','<p>\nIf there is no place in the ground that can receive the signals output \"Error\".\nOtherwise, output the x coordinate of the place accurate to 0.001.\n</p>','2\n0 10\n0 0\n-1 3 1 2 -1 1\n1.325\n0 10\n0 20\n-1 3 1 2 -1 1\n1.325','-0.658\nError','<p> </p>',30,0,1,64,2,1,4,10),(1057,'Double Maze','<p>\nUnlike single maze, double maze requires a common sequence of commands \nto solve both mazes. See the figure below for a quick understanding.\n</p>\n<div style=\"text-align: center;\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1060_68f696a627b57b38f4afdaee45412e76.jpg\" src=\"assets/problem_images/1060_68f696a627b57b38f4afdaee45412e76.jpg\" /></div>\n<p>\nA maze is made up of 6*6 cells. A cell can be either a hole or a square.\n Moreover, a cell may be surrounded by barriers. There is ONLY one start\n cell\n(with a ball) and ONLY one end cell (with a star)\nin a single maze. These two cells are both squares. It is possible that \nthe start cell and the end\ncell are the same one. The goal of a single maze is to move the ball \nfrom the start cell to the end cell.\nThere are four commands in total, \'L\', \'D\',\n\'R\' and \'U\' corresponding to moving the ball left, down, right and up \none cell, respectively. The barriers may make the commands take no \neffect,\ni.e., the ball does NOT move if there is a barrier on the way. When the \nball gets to a hole or outside of the maze, it fails.\n</p>\n<p>\nA double maze is made up of two single mazes. The commands control two \nballs simultaneously, and the movements of two balls are according to \nthe\nrules described above independently. Both balls will continue to move \nsimultaneously if at least one of the balls has not got to the end cell.\nSo, a ball may move out of the end cell since the other ball has not \nbeen to the target.\nA double maze passes when both balls get to their end cells, or fails if\n either of the two mazes fails.\nThe goal of double maze is to get the shortest sequence of commands to \npass. If there are multiple solutions, get the lexicographically minimum\none.\n</p>\n<p>\nTo simplify the input, a cell is encoded to an integer as follows. The \nlowest 4 bits signal the existence of the barriers around a cell.\nThe fifth bit indicates whether a cell is a hole or not. The sixth and \nseventh bits are set for the start cell and end cell.\nDetails are listed in the following table with bits counted from lowest \nbit. For a barrier, both of the two adjacent cells will have the \ncorresponding barrier bit set.\nNote that the first two mazes in the sample input is the encoding of two\n mazes in the figure above, make sure you understand the encoding right.\n</p>\n \n<table style=\"margin-left:10px\" width=\"250\" align=\"center\" bgcolor=\"#FFFFFF\" border=\"1\" cellpadding=\"1\"><tbody><tr><th>Bit</th> <th>Value</th> <th>Description</th>\n</tr><tr> <td rowspan=\"2\" align=\"center\">1</td> <td align=\"center\">0</td> <td>No barrier to the left</td> </tr>\n<tr> <td align=\"center\">1</td> <td>A barrier to the left</td> </tr>\n<tr> <td rowspan=\"2\" align=\"center\">2</td> <td align=\"center\">0</td> <td>No barrier to the bottom</td> </tr>\n<tr> <td align=\"center\">1</td> <td>A barrier to the bottom</td> </tr>\n<tr> <td rowspan=\"2\" align=\"center\">3</td> <td align=\"center\">0</td> <td>No barrier to the right</td> </tr>\n<tr> <td align=\"center\">1</td> <td>A barrier to the right</td> </tr>\n<tr> <td rowspan=\"2\" align=\"center\">4</td> <td align=\"center\">0</td> <td>No barrier to the up</td> </tr>\n<tr> <td align=\"center\">1</td> <td>A barrier to the up</td> </tr>\n<tr> <td rowspan=\"2\" align=\"center\">5</td> <td align=\"center\">0</td> <td>A hole</td> </tr>\n<tr> <td align=\"center\">1</td> <td>A square</td> </tr>\n<tr> <td rowspan=\"2\" align=\"center\">6</td> <td align=\"center\">0</td> <td>Not start cell</td> </tr>\n<tr> <td align=\"center\">1</td> <td>A start cell</td> </tr>\n<tr> <td rowspan=\"2\" align=\"center\">7</td> <td align=\"center\">0</td> <td>Not end cell</td> </tr>\n<tr> <td align=\"center\">1</td> <td>An end cell</td></tr></tbody></table>','<p>\nThe first line of input gives the total number of mazes, <em>T</em> (1 &lt; <em>T</em> ≤ 20). Then follow <em>T</em> mazes.\nEach maze is a 6*6 matrix, representing the encoding of the original maze.\nThere is a blank line between mazes. \n</p>','<p>\nFor every two consecutive mazes, you should treat them as a double maze and output the answer. So there\nare actually <em>T</em>-1 answers. For each double maze, output the shortest sequence of commands to pass.\nIf there are multiple solutions, output the lexicographically minimum one. If there is no way to pass, output -1 instead.\n</p>','3\n16 0 18 16 18 24\n20 19 24 16 28 1\n18 28 17 0 22 17\n25 20 17 18 88 20\n2 16 48 28 17 16\n24 16 16 20 23 1\n\n16 0 18 16 18 24\n20 19 24 20 29 1\n18 28 17 16 22 17\n8 20 1 18 24 20\n19 80 48 24 16 0\n24 16 16 16 22 19\n\n18 16 18 16 18 80\n24 18 24 16 24 18\n18 24 0 0 18 24\n24 18 0 0 24 18\n18 24 18 16 18 24\n56 18 24 18 24 18','RRLULLLRRDLU\nRURDRLLLURDULURRRRRDDU','<p> </p>',30,0,1,64,2,19,48,10),(1058,'Error Curves','<p>Josephina is a clever girl and addicted to Machine Learning recently.\n She pays much attention to a method called Linear Discriminant \nAnalysis, which has many interesting properties.</p>\n<p>In order to test the algorithm\'s efficiency, she collects many \ndatasets. What\'s more, each data is divided into two parts: training \ndata and test data. She gets the parameters of the model on training \ndata and test the model on test data.</p>\n<p>To her surprise, she finds each dataset\'s test error curve is \njust a parabolic curve. A parabolic curve corresponds to a quadratic \nfunction. In mathematics, a quadratic function is a polynomial function \nof the form <em>f(x) = ax<sup>2</sup> + bx + c</em>. The quadratic will degrade to linear function if <em>a = 0</em>. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1061_68bd9914396b70b1de1accc49fcdfea0.jpg\" src=\"assets/problem_images/1061_68bd9914396b70b1de1accc49fcdfea0.jpg\" /></p>\n<p> </p>\n<p>It\'s very easy to calculate the minimal error if there is only one \ntest error curve. However, there are several datasets, which means \nJosephina will obtain many parabolic curves. Josephina wants to get the \ntuned parameters that make the best performance on all datasets. So she \nshould take all error curves into account, i.e., she has to deal with \nmany quadric functions and make a new error definition to represent the \ntotal error. Now, she focuses on the following new function\'s minimal \nwhich related to multiple quadric functions.</p>\n<p>\nThe new function <em>F(x)</em> is defined as follow: </p>\n<center>\n<p><em>F(x) = max(S<sub>i</sub>(x))</em>, <em>i</em> = 1...<em>n</em>. The domain of <em>x</em> is [0, 1000]. <em>S<sub>i</sub>(x)</em> is a quadric function.\n</p>\n</center><p>Josephina wonders the minimum of <em>F(x)</em>. Unfortunately, it\'s too hard for her to solve this problem. As a super programmer, can you help her?</p>','<p>\nThe input contains multiple test cases. The first line is the number of cases <em>T</em> (<em>T</em> &lt; 100). Each case begins with a number <em>n</em>(<em>n</em> ≤ 10000). Following <em>n</em> lines, each line contains three integers <em>a</em> (0 ≤ <em>a</em> ≤ 100), <em>b</em> (|<em>b</em>| ≤ 5000), <em>c</em> (|<em>c</em>| ≤ 5000), which mean the corresponding coefficients of a quadratic function.\n</p>','<p>\nFor each test case, output the answer in a line. Round to 4 digits after the decimal point.\n</p>','2\n1\n2 0 0\n2\n2 0 0\n2 -4 2','0.0000\n0.5000','<p> </p>',30,0,1,64,10,6,41,30),(1059,'Go Deeper','<p>\n	Here is a procedure\'s pseudocode:\n	</p>\n<pre>	   go(int <em>dep</em>, int <em>n</em>, int <em>m</em>)  \n	   begin  \n	      output the value of <em>dep</em>. \n	      if <em>dep</em> &lt; <em>m</em> and <em>x</em>[<em>a</em>[<em>dep</em>]] + <em>x</em>[<em>b</em>[<em>dep</em>]] != <em>c</em>[<em>dep</em>] then go(<em>dep</em> + 1, <em>n</em>, <em>m</em>)\n	   end \n	 </pre>\n	    	      <p>\n	In this code <em>n</em> is an integer.  <em>a</em>, <em>b</em>, <em>c</em> and <em>x</em> are 4 arrays of integers.\n	The index of array always starts from 0.\n	Array <em>a</em> and <em>b</em> consist of non-negative integers smaller than <em>n</em>.\n	Array <em>x</em> consists of only 0 and 1.\n	Array <em>c</em> consists of only 0, 1 and 2.\n	The lengths of array <em>a</em>, <em>b</em> and <em>c</em> are <em>m</em> while\n	the length of array <em>x</em> is <em>n</em>.\n</p>\n<p>\n	Given the elements of array <em>a</em>, <em>b</em>, and <em>c</em>, when we call the procedure  \n	go(0, <em>n</em> , <em>m</em>) what is the maximal possible value does the procedure output?</p>','<p>\nThere are multiple test cases. The first line of input is an integer <em>T</em> (0 &lt; <em>T</em> ≤ 100), indicating the number of test cases.\nThen <em>T</em> test cases follow. Each case starts with a line of 2 integers <em>n</em> and <em>m</em> (0 &lt; <em>n</em> ≤ 200, 0 &lt; m ≤ 10000). \nThen m lines of 3 integers follow.\nThe <em>i</em>-th(1 ≤ <em>i</em> ≤ <em>m</em>) line of them are <em>a<sub>i-1</sub></em> ,<em>b<sub>i-1</sub></em> and <em>c<sub>i-1</sub></em>  (0 ≤ <em>a<sub>i-1</sub></em>, <em>b<sub>i-1</sub></em> &lt; <em>n</em>, 0 ≤  <em>c<sub>i-1</sub></em> ≤ 2).\n</p>','<p>\nFor each test case, output the result in a single line.  </p>','3\n2 1\n0 1 0\n2 1\n0 0 0\n2 2\n0 1 0\n1 1 2\n','1\n1\n2','',30,0,1,64,2,3,12,10),(1060,'Jenga','<p>In their spare time of training, Alice and Charles often play Jenga together. \nAs they\'ve played the game together so many times, they both know each others\' performance \nas well as themselves\'. Now with their success rate of each move provided, can you \ntell in what probability each of them will win? And of course, Alice and Charles, \nas well as other ACM-ICPC contestants such as you, are very clever.</p>\n<p>Jenga is a game of physical and mental skill. In Jenga, players take turns to \nremove a block from a tower and balance it on top, creating a taller and increasingly \nunstable structure as the game progresses.</p>\n<p>Jenga is played with 54 wooden blocks. Each block is three times as long as it \nis wide. To set up the game, the included loading tray is used to stack the initial \ntower which has 18 levels of three blocks placed adjacent to each other along their \nlong side and perpendicular to the previous level (so, for example, if the blocks \nin the first level lie lengthwise north-south, the second level blocks will lie \neast-west).</p>\n<p>Once the tower is built, the players take turns to move. Moving in Jenga consists \nof taking one and only one block from any level (except those mentioned later) of \nthe tower, and placing it on the topmost level in order to complete it. The blocks \nin the top level, and the level below it if the top level is not completed, cannot \nbe removed. However, if the top level is completed, the blocks in the one below \nit can be removed. The removed block should be placed to make the top level as same \nas the other levels (with no block removed). The move is successful if the tower \ndoes not fall. </p>\n<p>The game ends when the tower falls, or no block can be removed without making \nthe tower fall (rarely happened). And the loser is the player who made the tower \nfall (i.e., whose turn it was when the tower fell), or who cannot make the move.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1063_3284f778c14d271b9974a4054fffe71f.jpg\" src=\"assets/problem_images/1063_3284f778c14d271b9974a4054fffe71f.jpg\" /></p>\n<p> </p>\n<p>Now let\'s consider each level of the tower, there\'re only four types of valid \narrangement of wooden blocks, as illustrated above. At the beginning of the game, \nthey\'re all of the type <strong>A</strong> (or rotated by 90 degrees). And by removing \na block from type <strong>A</strong>, one will get either type <strong>B</strong> \nor type <strong>C</strong> (or the mirrored equivalent of type <strong>C</strong>). \nNo block from type <strong>B</strong> can be removed without making the tower fall. \nFrom type <strong>C</strong> we can only remove a block and result in type\n<strong>D</strong>. Then no block can be removed further. So there are only three \ntypes of moves: (1) <strong>A</strong> -&gt; <strong>B</strong>, (2) <strong>A</strong> \n-&gt; <strong>C</strong> and (3) <strong>C</strong> -&gt; <strong>D</strong>, \nwhile the removed block is added to the top level in addition.</p>\n<p>As Alice and Charles have played Jenga so many times, their success rate of each \nmove is very stable and can be formulated as <em><strong>P</strong></em> = <em>\n<strong>b</strong></em> - <em><strong>d*n</strong></em>, where <em><strong>b</strong></em> \nis the player\'s base success rate of this type of move, <em><strong>d</strong></em> \nis the decrease of success rate for each additional level, and <em><strong>n</strong></em> \nis the number of levels in the tower before this move. The incomplete top level \nalso counts as one level. For example, if the game begins with 18 levels, and both \nplayers have the same performance with <em><strong>b</strong></em> = 2.8 and <em>\n<strong>d</strong></em> = 0.1, then <em><strong>P</strong></em> will be 1.0 for \nthe first turn, and become 0.9 between the 2nd and the 4th turns. If <em>\n<strong>P</strong></em> does not lie in the range [0, 1], the nearest number in \nthe range is indicated. (E.g. when a player cannot fail the first several moves,\n<em><strong>P</strong></em> will be more than 1 until <em><strong>n</strong></em> \nis a bit larger.)</p>','<p>The input file contains multiple test cases. The first line of the input file \nis a single integer <em><strong>T </strong></em>(<em><strong>T</strong></em> ≤ \n500), the number of test cases.</p>\n<p>Each test cases begins with a line of <em><strong>n<sub>0</sub></strong></em> \n(3 ≤ <em><strong>n<sub>0</sub></strong></em> ≤ 18), the number of levels in the \ntower when the game starts. (When <em><strong>n</strong></em><sub>0</sub> is not \n18, the rules are the same.) The second line contains 6 real numbers <em>\n<strong>b<sub>a1</sub></strong></em>, <em><strong>d<sub>a1</sub></strong></em>,\n<em><strong>b<sub>a2</sub></strong></em>, <em><strong>d<sub>a2</sub></strong></em>,\n<em><strong>b<sub>a3</sub></strong></em>, <em><strong>d<sub>a3</sub></strong></em>, \nindicating Alice\'s base success rates and the decreases of success rates for each \nof the three moves: (1) <strong>A</strong> -&gt; <strong>B</strong>, (2) <strong>A</strong> \n-&gt; <strong>C</strong> and (3) <strong>C</strong> -&gt; <strong>D</strong>. The third \nline also contains 6 real numbers <em><strong>b<sub>c1</sub></strong></em>, <em>\n<strong>d<sub>c1</sub></strong></em>, <em><strong>b<sub>c2</sub></strong></em>,\n<em><strong>d<sub>c2</sub></strong></em>, <em><strong>b<sub>c3</sub></strong></em>,\n<em><strong>d<sub>c3</sub></strong></em>, those of Charles. (0 ≤ <em><strong>b\n</strong></em>-<em><strong> d</strong></em><strong><em>*</em></strong><em><strong>n<sub>0</sub></strong></em> \n≤ 2 and 0 &lt; <em><strong>d</strong></em> ≤ 0.5 for all the 6 pairs of parameters. \nNo real number will have more than 4 digits after the decimal point.)</p>','<p>For each test case, print a line with Alice\'s winning probability, assume that \nshe always moves first. Your answer should be rounded to the 4th digit after the \ndecimal point.</p>','2\n3\n1.3 0.1 1.3 0.1 1.3 0.1\n1.3 0.1 1.3 0.1 1.3 0.1\n4\n1.5 0.1 1.5 0.1 1.5 0.1\n1.5 0.1 1.5 0.1 1.5 0.1','0.1810\n0.8190','<p><em>Reference: </em>\n<a href=\"http://en.wikipedia.org/wiki/Jenga\"><em>http://en.wikipedia.org/wiki/Jenga</em></a></p>',30,0,1,64,2,1,2,10),(1061,'Rescue','<p>\nThe princess is trapped in a magic place. In this place, there are <em>N</em> magic stones.\nIn order to rescue the princess, you should destroy all the stones.\n</p>\n<p>\nThe <em>N</em> stones are in a straight line. We number them as <em>s<sub>1</sub></em>,\n<em>s<sub>2</sub></em>, ... <em>s<sub>n</sub></em> from left to right. Each stone has a\nmagic strength <em>m<sub>1</sub></em>, <em>m<sub>2</sub></em>, ... <em>m<sub>n</sub></em>.\nYou have a powerful skill that can do some damage to the stones. To release the skill, you\nshould stand to the right of some stone (<em>s<sub>i</sub></em>).\nThen you throw a power ball towards left. Initially, this ball has a power of <em>p</em>.\nWhen it hits a stone, it will do some damage to the stone and its power will be decreased,\nand the ball will continue to fly left to the next stone if its power is still positive.\nFormally, if you stand to the right of <em>s<sub>i</sub></em> and the power ball\'s initial\npower is <em>p</em>, then the ball will do Max(0, <em>p</em> - (<em>i</em> - <em>j</em>) *\n(<em>i</em> - <em>j</em>)) damage to <em>s<sub>j</sub></em>, for each <em>j</em> &lt;= <em>i</em>.\nSo from this formula, we can see that the damage to stone <em>s<sub>j</sub></em> is only\ndetermined by the initial power of the ball and the number of stones between <em>s<sub>i</sub></em> and <em>s<sub>j</sub></em>.\n</p>\n<p>\nA stone is destroyed if the accumulated damage you do is larger than its magic strength. Note that even if\na stone is destroyed, it will not disappear; your magic ball will do damage to it and\nthe power will be decreased by that stone. You are not strong enough so that you can release\nat most <em>k</em> magic balls. It will cost a lot of energy if the power of the magic ball is too high.\nSo what is the minimum value of <em>p</em> with which you can destroy all the magic stones,\nwith no more than <em>k</em> magic balls? You can choose where to release each magic ball as your will,\nand the power of the ball <strong>must be a positive integer</strong>.\n</p>','<p>\nThe first line is the number of cases <em>T</em> (<em>T</em> ≤ 100).\nFor each case, the first line gives two integers <em>n</em>, <em>k</em> (1 ≤ <em>n</em> ≤ 50000,\n1 ≤ <em>k</em> ≤ 100000).\nThe second line are <em>n</em> integers, giving <em>m<sub>1</sub></em>, <em>m<sub>2</sub></em>, ... <em>m<sub>n</sub></em>\n(1 ≤ <em>m<sub>i</sub></em> ≤ 10<sup>9</sup>).\n</p>','<p>\nPrint minimum possible <em>p</em> in a line.\n</p>','2\n1 1\n1\n3 1\n1 4 5','2\n6','',30,0,1,64,3,0,0,10),(1062,'Similarity','<p>When we were children, we were always asked to do the classification \nhomework. For example, we were given words {Tiger, Panda, Potato, Dog, \nTomato, Pea, Apple, Pear, Orange, Mango} and we were required to \nclassify these words into three groups. As you know, the correct \nclassification was {Tiger, Panda, Dog}, {Potato, Tomato, Pea} and \n{Apple, Pear, Orange, Mango}. We can represent this classification with a\n mapping sequence {A,A,B,A,B,B,C,C,C,C}, and it means Tiger, Panda, Dog \nbelong to group A, Potato, Tomato, Pea are in the group B, and Apple, \nPear, Orange, Mango are in the group C. </p>\n<p>But the <strong>LABEL</strong> of group doesn\'t make sense and the <strong>LABEL</strong>\n is just used to indicate different groups. So the representations \n{P,P,O,P,O,O,Q,Q,Q,Q} and {E,E,F,E,F,F,W,W,W,W} are equivalent to the \noriginal mapping sequence. However, the representations \n{A,A,A,A,B,B,C,C,C,C} and {D,D,D,D,D,D,G,G,G,G} are not equivalent. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1065_c5a6b123ce6871893171ac0a56577a77.jpg\" src=\"assets/problem_images/1065_c5a6b123ce6871893171ac0a56577a77.jpg\" /></p>\n<p>The pupils in class submit their mapping sequences and the teacher \nshould read and grade the homework. The teacher grades the homework by \ncalculating the maximum similarity between pupils\' mapping sequences and\n the answer sequence. The definition of similarity is as follow.</p>\n<p> </p>\n<center>\n<p>Similarity(S, T) = sum(S<sub>i</sub> == T<sub>i</sub>) / L\n</p>\n<p>L = Length(S) = Length(T), i = 1, 2,... L, where sum(S<sub>i</sub> == T<sub>i</sub>) indicates the total number of equal labels in corresponding positions. \n</p>\n</center><p>The maximum similarity means the maximum similarities between S and \nall equivalent sequences of T, where S is the answer and fixed.</p>\n<p>Now given all sequences submitted by pupils and the answer sequence, you should calculate the sequences\' maximum similarity.\n</p>','<p>\nThe input contains multiple test cases. The first line is the total number of cases <em>T</em> (<em>T</em> &lt; 15). The following are <em>T</em> blocks. Each block indicates a case. A case begins with three numbers <em>n</em> (0 &lt; <em>n</em> &lt; 10000), <em>k</em> (0 &lt; <em>k</em> &lt; 27), <em>m</em> (0 &lt; <em>m</em> &lt; 30), which are the total number of objects, groups, and students in the class. The next line consists of <em>n</em> labels and each label is in the range [<em>A</em>...<em>Z</em>]. You can assume that the number of different labels in the sequence is exactly <em>k</em>. This sequence represents the answer. The following are <em>m</em> lines, each line contains <em>n</em> labels and each label also is in the range [<em>A</em>...<em>Z</em>]. These <em>m</em> lines represent the <em>m</em> pupils\' answer sequences. You can assume that the number of different labels in each sequence doesn\'t exceed <em>k</em>.\n</p>','<p>\nFor each test case, output <em>m</em> lines, each line is a floating number (Round to 4 digits after the decimal point). You should output the <em>m</em> answers in the order of the sequences appearance.\n</p>','2 \n10 3 3\nA A B A B B C C C C\nF F E F E E D D D D\nX X X Y Y Y Y Z Z Z\nS T R S T R S T R S\n3 2 2\nA B A\nC D C\nF F E','1.0000\n0.7000\n0.5000\n1.0000\n0.6667','',30,0,1,64,2,8,13,10),(1063,'Snooker Referee','<p>Snooker is a cue sport that is played on a large baize-covered table with pockets \nin each of the four corners and in the middle of each of the long side cushions. \nIt is played using a cue and snooker balls: one white cue ball, 15 red balls worth \none point each, and six balls of different colors: yellow (2 points), green (3), \nbrown (4), blue (5), pink (6) and black (7). A player (or team) wins a frame (individual \ngame) of snooker by scoring more points than the opponent(s), using the cue ball \nto pot the red and colored balls.</p>\n<p>In this problem, your job is the referee of snooker. You should score both players, \nask the correct player to play next, as well as place some of the balls back to \nthe table if necessary. The rules of snooker needed for this problem are following. \n(We ignore some fouls about incorrectly hitting the cue ball here. We assume that \nthe cue ball is never snookered after a foul, so <em>free ball</em> will never occur. \nWe also assume that both players will make their best attempts to hit the ball on, \nso you do not need to declare a <em>miss</em> when they do not hit the ball on first.)</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1066_6d9a54a80d88267b9d9bf3c782a27226.jpg\" src=\"assets/problem_images/1066_6d9a54a80d88267b9d9bf3c782a27226.jpg\" /></p>\n<p>At the beginning of each frame the balls are set up by the referee as illustrated \nabove. This will be followed by a <em>break-off shot</em>, the white cue ball can \nbe placed anywhere inside the D (it is called <em>in-hand</em>, which also happens \nwhen the cue ball is potted).</p>\n<p>Players take turns in visiting the table. A <em>break</em> is the number of points \nscored by a player in one single visit to the table. A player\'s turn and break end \nwhen he fails to pot a ball, when he does something against the rules of the game, \nwhich is called a <em>foul</em>, or when a frame has ended.</p>\n<p>The ball or balls that can be hit first by the white are called the ball(s) \"on\" \nfor that particular stroke. The ball(s) \"on\" differ from shot to shot: a red ball, \nif potted, must be followed by a color, and so on until a break ends; if a red is \nnot potted, any red ball remains the ball \"on\". Only a ball or balls \"on\" may be \npotted legally by a player. If a ball not \"on\" is potted, this is a foul.</p>\n<p>The game of snooker generally consists of two phases. The first phase is the \nsituation in which there are still red balls on the table. In the first phase, at \nthe beginning of a player\'s turn, the balls \"on\" are all remaining red balls. The \nplayer must therefore attempt to first hit and pot one or more red balls. For every \nred ball potted, the player will receive 1 point. When a red has been potted, it \nwill stay off the table and the player can continue his break. If no red has been \npotted or a foul has been made, the other player will come into play.</p>\n<p>In case one or more red balls have been potted, the player can continue his break. \nThis time one of the six colors (yellow, green, brown, blue, pink and black) is \nthe ball \"on\". Only one of these can be the ball \"on\" and the rules of the game \nstate that a player must nominate his desired color to the referee, although it \nis often clear which ball the striker is playing and it is not necessary to nominate.</p>\n<p>When the nominated color is potted, the player will be awarded the correct number \nof points (yellow, 2; green, 3; brown, 4; blue, 5; pink, 6; black, 7). The color \nis then taken out of the pocket by the referee and placed on its original spot.</p>\n<p>Because only one of the colors is the ball \"on\", it is a foul to first hit multiple \ncolors at the same time, or pot more than one color.</p>\n<p>If a player fails to pot a ball \"on\", it being a red or nominated color, the \nother player will come into play and the balls \"on\" are always the reds, as long \nas there are still reds on the table.</p>\n<p>The alternation between red balls and colors ends when all reds have been potted \nand a color is potted after the last red, or a failed attempt to do so is made. \nThen the second phase begins. All six colors have to be potted in ascending order \nof their points value (yellow, green, brown, blue, pink, black). Each becomes the \nball \"on\" in that order. During this phase, when potted, the colors stay down and \nare not replaced on the table, unless a foul is made when potting the color, in \nwhich case the color is respotted.</p>\n<p>When only the black is left, the first score or foul ends the frame, and the \nplayer who has scored most points has won it. However, if the score is tied after \nthat, the black is respotted, the players draw lots for choice of playing, the next \nplayer plays from in-hand, and the next score or foul ends the frame.</p>\n<p>When a foul is made during a shot, the player\'s turn is ended and he will receive \nno points for the foul shot. The other player will receive penalty points. Colors \nillegally potted are respotted (while reds are not), and if the cue ball is potted, \nthe next player will play from in-hand. Fouls concerned in this problem are:</p>\n<ul>\n	<li>failing to hit any other ball with the cue ball</li>\n	<li>first hitting a ball \"not-on\" with the cue ball</li>\n	<li>potting a ball \"not-on\"</li>\n	<li>potting the white (in-off)</li>\n</ul>\n<p>Penalty points are at least 4 points and at most 7 points. The number of penalty \npoints is the value of the ball \"on\", or any of the \"foul\" balls, whichever is highest. \nWhen more than one foul is made, the penalty is not the added total - only the most \nhighly valued foul is counted. As players usually do not nominate a color explicitly \nwhen hitting the colors, please be tolerant and assume that he always nominate the \nball with the lowest score when it cannot be deduced from the ball first hit (i.e. \nwhen the cue ball does not hit any ball or hit a red first).</p>\n<p>If a player commits a foul, and his opponent considers that the position left \nis unattractive, he may request that the offender play again from the resulting \nposition.</p>','<p>The input file contains multiple test cases. The first line of the input file \nis a single integer <em><strong>T</strong></em> (<em><strong>T</strong></em> ≤ 200), \nthe number of test cases. </p>\n<p>For each test case (frame), the first line contains the names of the two players \nseparated by a whitespace. The first player will take the break-off shot. Each name \nis made up of no more than 20 English letters, and the two names are different.</p>\n<p>After that, the input mainly consists of lines that describe a stroke each (with \ntwo exceptions stated later). A stroke is described by the color of the ball first \nhit by the cue ball (or \"None\" if the cue ball does not hit any ball), followed \nby zero or more colors of the balls potted, all separated by whitespaces. For example, \na line \"Red Red White Red\" means the cue ball first hit a red ball, and 2 reds are \npotted as well as the cue ball itself; and a line \"None\" means the cue ball does \nnot hit any ball thus no ball is potted. You can assume that all strokes are legal \naccording to the balls remain on the table, and the cue ball will not hit two or \nmore ball first simultaneously.</p>\n<p>A line \"Play again\" may appear if and only if the last stroke is a foul. It means \nthe other player request that the offender play again from the resulting position.</p>\n<p>If a score or foul occurs when only the black is left, and the score is tied \nafter that, a line with either player\'s name will follow. That means the player \nwill play next as a result of the lot.</p>\n<p>The case end when the frame ends. There is a blank line before every test case.</p>','<p>For each frame, print a line in the format \"Frame <em>K</em>\" first, where\n<em>K</em> is the index of this case starts from 1. Then use the output to indicate \nthe referee\'s behaviors:</p>\n<ul>\n	<li>\n				<p>When a frame begins, print a line in the format \"<em>PlayerName</em>\'s \n				turn, in-hand\", where <em>PlayerName</em> is the name of the player \n				who take the break-off shot.</p>\n				</li>\n	<li>\n				<p>After each stroke, print a line \"Foul!\" first if it is a foul. \n				Then print a line with current score in the format \"<em>ScoreA</em> \n				: <em>ScoreB</em>\", where <em>ScoreA</em> is the score of the player \n				who take the break-off shot, and <em>ScoreB</em> is the other player\'s \n				score.</p>\n				<p>After that, if the frame continue fairly (i.e. not only black \n				is left before the stroke, or it is not a score or foul when only \n				black is left), and some ball(s) should be respotted. Print a line \n				with the word \"Respot\" following by the color(s) of the ball(s), \n				all separated by whitespace. If more than one ball should be respotted, \n				print their colors in ascending order of their values. Do not print \n				anything if no ball needed to be respotted.</p>\n				<p>At last (when the frame continue fairly and any necessary ball \n				has been respotted), if the last player\'s break ends, print a line \n				in the format \"<em>PlayerName</em>\'s turn\" to ask the other player \n				to play next, where <em>PlayerName</em> is the next player\'s name. \n				If the next player should play from in-hand, print \"<em>PlayerName</em>\'s \n				turn, in-hand\" instead.</p>\n				</li>\n	<li>\n				<p>After a foul, if the other player request that the offender play \n				again, just print a line \"<em>PlayerName</em>\'s turn\" or \"<em>PlayerName</em>\'s \n				turn, in-hand\" according to whether the cue ball is in-hand, where\n				<em>PlayerName</em> is the offender\'s name. Note that the requester \n				is actually requesting in his turn, after you asked him to play \n				next.</p>\n				</li>\n	<li>\n				<p>If a score or foul occurs when only the black is left, and the \n				score is tied after that, print a line \"Tie\" after the score. Then \n				print two lines \"Respot Black\" and \"<em>PlayerName</em>\'s turn, \n				in-hand\" to respot the black and play from in-hand, where <em>PlayerName</em> \n				is the next player\'s name (determined by the lot).</p>\n				</li>\n	<li>\n				<p>When the frame ends, print a line \"<em>PlayerName</em> wins\" \n				after the score, where <em>PlayerName</em> is the winner\'s name.</p>\n				</li>\n</ul>\n<p>Print a blank line between every two successive cases.</p>','1\n\nZero Maxbreak\nRed White\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nRed Red\nBlack Black\nYellow Yellow\nGreen Green\nBrown Brown\nBlue Blue\nPink Pink\nBlack Black','Frame 1\nZero\'s turn, in-hand\nFoul!\n0 : 4\nMaxbreak\'s turn, in-hand\n0 : 5\n0 : 12\nRespot Black\n0 : 13\n0 : 20\nRespot Black\n0 : 21\n0 : 28\nRespot Black\n0 : 29\n0 : 36\nRespot Black\n0 : 37\n0 : 44\nRespot Black\n0 : 45\n0 : 52\nRespot Black\n0 : 53\n0 : 60\nRespot Black\n0 : 61\n0 : 68\nRespot Black\n0 : 69\n0 : 76\nRespot Black\n0 : 77\n0 : 84\nRespot Black\n0 : 85\n0 : 92\nRespot Black\n0 : 93\n0 : 100\nRespot Black\n0 : 101\n0 : 108\nRespot Black\n0 : 109\n0 : 116\nRespot Black\n0 : 117\n0 : 124\nRespot Black\n0 : 126\n0 : 129\n0 : 133\n0 : 138\n0 : 144\n0 : 151\nMaxbreak wins','<p><em>Reference:</em></p>\n<ul>\n	<li><a href=\"http://en.wikipedia.org/wiki/Rules_of_snooker\"><em>\n				http://en.wikipedia.org/wiki/</em><em>Rules_of_snooker</em></a><em> \n				(source of image)</em></li>\n	<li><a href=\"http://www.worldsnooker.com/rules_of_snooker.htm\">\n				<em>http://www.worldsnooker.com/rules_of_snooker.htm</em></a></li>\n	<li><a href=\"http://www.billiardworld.com/snooker.html\"><em>http://www.billiardworld.com/snooker.html</em></a></li>\n</ul>',30,0,1,64,3,0,0,10),(1043,'An Industrial Spy','<p>Industrial spying is very common for modern research labs. I am such an industrial spy - don\'t tell anybody! My recent job was to steal the latest inventions from a famous math research lab. It was hard to obtain some of their results but I got their waste out of a document shredder.<br /><br />I have already reconstructed that their research topic is fast factorization. But the remaining paper snippets only have single digits on it and I cannot imagine what they are for. Could it be that those digits form prime numbers? Please help me to find out how many prime numbers can be formed using the given digits. </p>','<p>\n	The first line of the input holds the number of test cases <var>c</var> \n	(1 ≤ <var>c</var> ≤ 200). Each test case consists of a single \n	line. This line contains the digits (at least one, at most seven) that \n	are on the paper snippets.\n</p>','<p>For each test case, print one line containing the number of different primes that can be reconstructed by shuffling the digits. You may ignore digits while reconstructing the primes (e.g., if you get the digits 7 and 1, you can reconstruct three primes 7, 17, and 71). Reconstructed numbers that (regarded as strings) differ just by leading zeros, are considered identical (see the fourth case of the sample input). </p>','4\n17\n1276543\n9999999\n011','3\n1336\n0\n2','',29,0,1,64,1,28,68,10),(1045,'Divisible Subsquences','<p>\n	Given a sequence of positive integers, count all contiguous \n	subsequences (sometimes called substrings, in contrast to subsequences, \n	which may leave out elements) the sum of which is divisible by a given\n	number. These subsequences may overlap. For example, the sequence (see \n	sample input)\n	</p>\n	<p align=\"center\">\n		2, 1, 2, 1, 1, 2, 1, 2\n	</p>\n	<p>\n	contains six contiguous subsequences the sum of which is divisible by \n	four: the first to eighth number, the second to fourth number, the \n	second to seventh number, the third to fifth number, the fourth to\n	sixth number, and the fifth to seventh number.\n	</p>','<p>\n	The first line of the input consists of an integer <var>c</var> (1 ≤ \n	<var>c</var> ≤ 200), the number of test cases. Then follow two lines \n	per test case.\n	</p>\n	<p>\n	Each test case starts with a line consisting of two integers \n	<var>d</var> (1 ≤ <var>d</var> ≤ 1 000 000) and <var>n</var> (1 \n	≤ <var>n</var> ≤ 50 000), the divisor of the sum of the \n	subsequences and the length of the sequence, respectively. The second \n	line of a test case contains the elements of the sequence, which are \n	integers between 1 and 1 000 000 000, inclusively.\n	</p>','<p>\n	For each test case, print a single line consisting of a single integer, \n	the number of contiguous subse-quences the sum of which is divisible \n	by <var>d</var>.\n	</p>','2\n7 3\n1 2 3\n4 8\n2 1 2 1 1 2 1 2','0\n6','<p> </p>',29,0,1,64,1,25,168,10),(1064,'Remedial Forecast','<p>\nThe Academic Development Department of  the University of Hidalgo \npretends to implement a remedial program to reduce the fail index in the\n Mathematics V course. With this purpose, the Department does a future \nperformance forecast of  the  students with  base on  historical  data. \nThis data  record  includes  the  Id number  (IN),  average  (A),  \nnumber  of  study  hours  per week  (SH),  number  of class  hours  per \n week  (CH),  and  the  result  indicator  obtained  (R);  when  a \nstudent fails R = 0, otherwise R = 1. Students who obtain a failing \nforecast must take a remedial workshop on extra class hours.\n</p>\n<p>\nThe  next  table  is  an  example  of  the  historical  results  of  \nstudents  who  have taken a Mathematics V courses before. The number of \nhistorical results is HR.\n</p>\n<table border=\"1\">\n	<tbody><tr>\n		<td><pre>Id Number\n    IN</pre></td>\n		<td><pre>Average of\n  studied\n  subjects\n     A</pre></td>\n		<td><pre> Number of\nstudy hours\n  per week\n     SH</pre></td>\n		<td><pre> Number of\nclass hours\n  per week\n     CH</pre></td>\n		<td><pre>Result\n  R</pre></td>\n	</tr>\n	<tr>\n		<td>735</td>\n		<td>8</td>\n		<td>13</td>\n		<td>25</td>\n		<td>1</td>\n	</tr>\n	<tr>\n		<td>724</td>\n		<td>7</td>\n		<td>10</td>\n		<td>28</td>\n		<td>0</td>\n	</tr>\n	<tr>\n		<td>532</td>\n		<td>9</td>\n		<td>20</td>\n		<td>22</td>\n		<td>1</td>\n	</tr>\n	<tr>\n		<td>677</td>\n		<td>6</td>\n		<td>10</td>\n		<td>22</td>\n		<td>0</td>\n	</tr>\n	<tr>\n		<td>665</td>\n		<td>9</td>\n		<td>23</td>\n		<td>25</td>\n		<td>1</td>\n	</tr>\n	<tr>\n		<td>512</td>\n		<td>8</td>\n		<td>15</td>\n		<td>20</td>\n		<td>0</td>\n	</tr>\n</tbody></table>\n<p>\nThe characteristic vector of any student is represented by:\n</p>\n<p>\nS<sub>IN</sub> =  &lt;A<sub>IN</sub> ,  SH<sub>IN</sub> ,  CH<sub>IN</sub> &gt;, for example:\n</p>\n<p>\nS<sub>735</sub>  = &lt;8,  13,  25&gt;, S<sub>677</sub>  = &lt;6,  10,  22&gt;\n</p>\n<p>\nThe Manhattan distance is  given by:  Md<sub>(S<sub>i</sub>, S<sub>j</sub>)</sub> =|A<sub>i</sub>-A<sub>j</sub>| +|SH<sub>i</sub>-SH<sub>j</sub>|+|CH<sub>i</sub>-CH<sub>j</sub>| </p>\n \n<p>\nHere is an example:  Md<sub>S677,S512</sub> =|6-8| +|10-15|+|22-20| = 9  \n</p>\n<p>\nThe  next  procedure  is  used  in  forecasts,  with  base  on  \nstatistics,  and  the possibility that a new student in a mathematics V \ncourse could fail.\n</p>\n<p>\nStep 1. Measure  the Manhattan distance between  the characteristic \nvector of the  student  and  the  characteristic  vectors  of  all  the \n students  in  the  historical table (without considering the result \nparameter R).\n</p>\n<p>\nStep 2. Sort the students table based on their distance; in case of tie,\n take the order as  it appears  in  the original  table. Once sorted,  \ntake  the  first k  (an odd integer number), 1 &lt;= k &lt;= HR/2  to   \ndetermine  the value of  the more  frequent  indicator result and assign\n  it  to  the  student  who  the  forecast  is  being  done  to,  as  \nseen  in  the example for the NC= 300 student.\n</p>\n<table border=\"1\" width=\"45%\">\n	<tbody><tr>\n		<td width=\"10%\">S(735,300)</td>\n		<td align=\"CENTER\" width=\"35%\">Md = |8-8| + |13-20| + |25-20| = 12</td>\n	</tr>\n	<tr>\n		<td>S(724,300)</td>\n		<td align=\"CENTER\" width=\"35%\">Md = |7-8| + |10-20| + |28-20| = 19</td>\n	</tr>\n	<tr>\n		<td>S(532,300)</td>\n		<td align=\"CENTER\" width=\"35%\">Md = |9-8| + |20-20| + |22-20| = 3</td>\n	</tr>\n	<tr>\n		<td>S(677,300)</td>\n		<td align=\"CENTER\" width=\"35%\">Md = |6-8| + |10-20| + |22-20| = 14</td>\n	</tr>\n	<tr>\n		<td>S(665,300)</td>\n		<td align=\"CENTER\" width=\"35%\">Md = |9-8| + |23-20| + |25-20| = 9</td>\n	</tr>\n	<tr>\n		<td>S(512,300)</td>\n		<td align=\"CENTER\" width=\"35%\">Md = |8-8| + |15-20| + |20-20| = 5</td>\n	</tr>\n</tbody></table><p> </p>\n<table border=\"1\">\n	<tbody><tr>\n		<td width=\"15%\">S(532,300)</td>\n		<td width=\"15%\">S(512,300)</td>\n		<td width=\"15%\">S(665,300)</td>\n		<td width=\"15%\">S(735,300)</td>\n		<td width=\"15%\">S(677,300)</td>\n		<td width=\"15%\">S(724,300)</td>\n	</tr>\n	<tr>\n		<td>3</td>\n		<td>5</td>\n		<td>9</td>\n		<td>12</td>\n		<td>14</td>\n		<td>19</td>\n	</tr>\n	<tr>\n		<td>1</td>\n		<td>0</td>\n		<td>1</td>\n		<td>1</td>\n		<td>0</td>\n		<td>0</td>\n	</tr>\n</tbody></table><p>\nLike k =3, the indicator result forecasted is 1.\n</p>','<p>\nThe  Input  to  this problem will consist of a  (non-empty) series of up\n  to 50 data sets. Each data set will be formatted according to the \nfollowing description, and there will be a blank space separating data \nsets.\n</p>\n<p>\nThe first data set contains historical data of up to 100 students who \nhave taken this course before. The first number in each line is an \ninteger for the Id Number, followed  by  three  integers  corresponding \n to  the  characteristic  vector  of  that student.\n</p>\n<p>\nThe following data sets contain an integer in the first line, \ncorresponding to the k value and in the lines to follow a table with the\n data of new students to whom the forecast has to be done.\n</p>','<p>\nThe output consists of a list of pairs of integers that correspond to \nthe students Id Number and the forecasted result, separated by a blank \nspace.\n</p>','214 8 13 25 1\n315 7 10 28 0\n550 9 20 22 1\n120 6 10 22 0\n335 8 11 20 0\n220 10 20 22 1\n450 7 15 21 0\n180 10 14 20 1\n250 7 12 23 0\n300 8 16 23 0\n\n3\n300 8 20 20\n320 7 15 24\n\n5\n340 8 15 25\n365 10 25 20\n440 9 30 20','300 1\n320 0\n340 0\n365 1\n440 1','<p> </p>',31,0,1,32,1,3,3,12),(1065,'Counting Squares','\n            <p>\nNancy  is  the  best  babysitter  of  the  block  and  today  she  faces\n  her  greater challenge:  little John and his anxious box of markers. \nBut Nancy has prepared herself  for  this  eventuality  with  an  \nactivity  that  it  will maintain  occupied  little John.  In a paper  \nsheet with  squares  John will have  to put his blue marker  in some \ncorner of a square and at  the order of  \"right\"  (or  left, or up or \ndown) he will have to be draw a segment that unites the present position\n with next point to  its  right  (or  left, or up, or down);  the marker\n will be placed  in  that  last point hoping the following instruction.\n</p>\n<p>\nThe  idea  is  that  John  follows  the  instructions,  draws  a  simple\n  polygon  and counts  the  number  of  squares  that  are within  the  \nfigure. Remember  that  the boundary of a simple polygon does not cross \nitself.\n</p>','<p>\nIn  the  first  line  is a  integer number n,  that  represents  the \nnumber of  tests.  In following n lines there will be a statement \ncontaining the instructions: U - up, D - down, R - right, L - left. The \nlength of the statement will less than 100.\n</p>','<p>\nFor each test it\'s necessary to indicate the number of squares that the polygon contains.\n</p>','2\nDLULDDRRRUUULD\nUUUULLLLDDDDRRRR\n\n','case 1: 6\ncase 2: 16','',31,0,1,32,1,17,35,10),(1066,'Last Digit','<p>\nThe number of permutation without repetition that has a string S is so \nbig, but in this problem you just need to print the last nonzero digit \nof it.\n</p>','<p>\nIn each  test case you have a string S (1 &lt;=  |S| &lt;= 1000000), all characters  in the string are lowercase.\n</p>','<p>\nFor each test case print the last nonzero digit.\n</p>','aaba\naaabababababa\nabbzazzazzalzalzzaaaaazlalzaazlalzla\nw','4\n7\n8\n1\n','',31,0,1,32,2,4,42,12),(1067,'Decode Message','<p>\nBeing  in  charge  of  the  computer  department  of  the  Agency  of  \nInternational Espionage,  you are asked  to write a program  that will \nallow a  spy  to decode their messages.\n</p>\n<p>\nYou  can  assume  a  spy\'s  message  is  at  most  400  characters  \nlong,  and  it includes all  the uppercase  letters of  the English \nalphabet plus  the space, any digit, and any of the following \ncharacters: !  ,  .  :  ;  ? - The algorithm that the department will \nuse to encode all their messages will be following:\n</p>\n<p>\nThey first encode the message with a simple code key. This simple code \nkey is a  one  for  one  character  substitution  based  upon  a single \n arithmetic manipulation of  the  printable  portion  of  the ASCII  \ncharacter  set  (0-126).  This single arithmetic manipulation is the \nsame for each character of the message.\n(We assume the code is 7, please see sample for more detail.)\n</p>\n<p>\nAfter,  they agree secretly on  two numbers  that will be used as  the number of rows (R) and columns (C) in a matrix.\n</p>\n<p>\nThe department then enters the letters of the message encode in spiral pattern along the matrix.\n</p>\n<p>\nFor example, if the message is:\n</p>\n<p>\n-CDC IS THE TRADEMARK OF THE CONTROL DATA CORPORATION.\n</p>\n<p>\nand there R=9 and C=6, the department would write down.\n</p>\n<p>\nMessage encode:\n</p>\n<p>\n4JKJ\'PZ\'[OL\'[YHKLTHYR\'VM\'[OL\'JVU[YVS\'KH[H\'JVYWVYH[PVU5\n</p>\n<p>\nThe matrix would be filled in as follows:\n</p>\n	<table border=\"1\" width=\"20%\"><tbody><tr>\n		<td>4</td>\n		<td>J</td>\n		<td>K</td>\n		<td>J</td>\n		<td>\'</td>\n		<td>P</td>\n	</tr>\n	<tr>\n		<td>[</td>\n		<td>O</td>\n		<td>L</td>\n		<td>\'</td>\n		<td>J</td>\n		<td>Z</td>\n	</tr>\n	<tr>\n		<td>\'</td>\n		<td>V</td>\n		<td>Y</td>\n		<td>W</td>\n		<td>V</td>\n		<td>\'</td>\n	</tr>\n	<tr>\n		<td>M</td>\n		<td>J</td>\n		<td>5</td>\n		<td>V</td>\n		<td>U</td>\n		<td>[</td>\n	</tr>\n	<tr>\n		<td>V</td>\n		<td>\'</td>\n		<td>U</td>\n		<td>Y</td>\n		<td>[</td>\n		<td>O</td>\n	</tr>\n	<tr>\n		<td>\'</td>\n		<td>H</td>\n		<td>V</td>\n		<td>H</td>\n		<td>Y</td>\n		<td>L</td>\n	</tr>\n	<tr>\n		<td>R</td>\n		<td>[</td>\n		<td>P</td>\n		<td>[</td>\n		<td>V</td>\n		<td>\'</td>\n	</tr>\n	<tr>\n		<td>Y</td>\n		<td>H</td>\n		<td>K</td>\n		<td>\'</td>\n		<td>S</td>\n		<td>[</td>\n	</tr>\n	<tr>\n		<td>H</td>\n		<td>T</td>\n		<td>L</td>\n		<td>K</td>\n		<td>H</td>\n		<td>Y</td></tr></tbody></table>','<p>\nThere will be multiple datasets. Each dataset consist of two lines. The \nfirst line contain  R  (2&lt;=R&lt;=20),  a  space,  C  \n(2&lt;=C&lt;=20).  The  next  line  is  a  string  of characters  that  \nrepresent  the  contents  of  the matrix  (R X C  characters). The \ncharacters  are  in  row  major  order.  The  last  input  set  is  \nfollowed  by  a  line containing two zeros (0 0). This line should not \nbe processed.\n</p>','<p>\nFor each dataset, you should one line of output, giving the decoded message.\n</p>','9 6\n4JKJ\'P[OL\'JZ\'VYWV\'MJ5VU[V\'UY[O\'HVHYLR[P[V\'YHK\'S[HTLKHY\n0 0','-CDC IS THE TRADEMARK OF THE CONTROL DATA CORPORATION.','',31,0,1,32,1,28,62,12),(1068,'Geophysics Prospection','<p>\nThe geophysics prospection is a tool that permits to predict the subsoil\n characteristics, working at variable deeps with multiple targets such \nas rock differentiation, identification of freatic surfaces and \nidentification of contaminated areas.\n</p>\n<p>\nA Geo-exploitation company determines the capacity of exploitation of a \nterrain in  terms of  the analysis of geophysics prospection of a sample\n of m adjacent longitudinal  layers. Each  layer  is  represented  by  a\n matrix  of p  x k materials.\n</p>\n<p>\nMaterials are  identified by a code. The set of  layers  form a  \nthree-dimensional matrix  that models the characteristics of  the \nsubsoil studied. The problem  is to identify  the  grouping  patterns  \nof  a  same  exploitable  material.  A  group  of material  is  that \nwhich  is contained  in adjacent boxes of  the  layer matrix. Two boxes \nare adjacent if they share four sides in common.\n</p>\n<p>\nThe material codes and their meaning are described in the following table.\n</p>\n	<table border=\"1\"><tbody><tr>\n		<td>Code</td>\n		<td>Meaning</td>\n	</tr>\n	<tr>\n		<td>a</td>\n		<td>A mix of sad and gravel</td>\n	</tr>\n	<tr>\n		<td>b</td>\n		<td>Clay</td>\n	</tr>\n	<tr>\n		<td>c</td>\n		<td>Mineral</td>\n	</tr>\n	<tr>\n		<td>d</td>\n		<td>Gravel</td>\n	</tr>\n	<tr>\n		<td>*</td>\n		<td>Material without interest</td></tr></tbody></table>','<p>\nThere will be multiple datasets separated by a blank line. Each dataset \nconsist of two parts. The first part is a line with three positive \nintegers to define the matrix dimensions: p (2 &lt;=p &lt;= 50), space, k\n (2&lt;=k&lt;=50), space, m (2&lt;=m&lt;=50).\n</p>\n<p>\nThe second part contains the m layers separated by a blank line. Each \nlayer consists of p lines and each line contains k characters \nrepresenting material codes.\n</p>','<p>\nThe  output  consists  of  the  grouping  pattern  of  each  dataset  \nseparated  by  a blank  line.   For each dataset, a  line with:  the \nstring Case, a space, an  integer representing the progressive number of\n dataset (start counting at one), and an ending colon. The next  four  \nlines correspond  to  the materials with exploitation interest, with the\n same order that they appear in the input. Each line consists of a \ncharacter  that  represents a material code,  followed by a variable \nnumber of integers  that  correspond  to  the  elements  of  identified \n groups,  in  descending order. All data in the line are separated by a \nspace.\n</p>','5 6 2\n*a***c\n**aa*c\n***aa*\ncbb*ad\n*bb*a*\n\na****c\na**a*c\n***aa*\n*b**a*\n*b****\n\n4 6 3\n*a***c\n**aa*c\n***aa*\ncbb*ad\n\na****c\na**a*c\n***aa*\n*b**a*\n\na****c\na**a*c\n***aa*\n*b**ad','Case 1:\na 10 2 1\nb 6\nc 4 1\nd 1\n\nCase 2:\na 13 4 1\nb 4\nc 6 1\nd 1 1','',31,0,1,32,1,6,15,12),(1069,'Domino Art','<p>Lawliet is a very intelligent person, he is often seen solving puzzles \nor painting beautiful  landscapes,  in his new challenge he  is  trying \n to make some art with dominoes, he will draw a figure on a rectangular \ngrid consisting of 1x1 squares by marking  some of  these  squares, \nafter  that he will  try  to  cover  the marked squares with dominoes. \nAs you probably know dominoes consist of pieces of size  2x1,  for  \nsimplicity  we  assume  that  the  dominoes  can  only  be  put \nhorizontally  or  vertically  and  that  you  have  an  unlimited  \namount  of  dominoes available. The cover has to be perfect, meaning \nthat the dominoes must cover only the marked positions and the dominoes \nmust cover all of them, also all the dominoes  must  lie  strictly  \ninside  the  rectangular  grid.  Below  are  shown  two examples of \npossible  figures, which  corresponds  to  the  two  first  inputs  in  \nthe sample  input,  the  first  is possible  to cover with dominoes, \nwhile  the second  is not: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1072_744a77dd06ee89a27382fc1baef50b78.jpg\" src=\"assets/problem_images/1072_744a77dd06ee89a27382fc1baef50b78.jpg\" /></p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1072_74a3828c4b73d56630e64948d0cde872.jpg\" src=\"assets/problem_images/1072_74a3828c4b73d56630e64948d0cde872.jpg\" /></p>\n<p>\nNow your  task  is  this: given a  figure of marked squares on a  \nrectangular grid, you must help Lawliet  to determine  if  it  is \npossible  to exactly cover  the  figure with dominoes.\n</p>','<p>\nThe  input consists of several  test cases separated by blank  lines. \nFirst  line of each  test  case  contains  two  positive  integers  R  \nand  C  (1&lt;=R,C&lt;=60)  the number  of  rows  and  columns  of  the \n rectangular  grid,  respectively.  On  the following R  lines  there  \nis  the actual configuration consisting of a grid of dots  \'.\'\n</p>\n<p>\nand sharps \"#\". Each character  represents a square of  the  rectangular\n grid. A dot  \".\"  represents  a  square  which  is  unmarked  and  a  \nsharp \"#\" represents  a square marked  to be part of  the desired  \nfigure. A case when R=C=0 denotes the end of the input, this case should\n not be processed.\n</p>','<p>\nFor each test case output a line containing the number of  the case \n(starting at 1) and only one of  the  following  two messages:  If  it  \nis  impossible  to cover  the marked squares with dominoes configuration\n output a single word \"Impossible\".\n</p>\n<p>\nIf  it  is possible print  the single word  \"Possible\". See examples below  for more details.\n</p>','4 4\n..##\n.##.\n.###\n.###\n\n4 4\n####\n##.#\n###.\n.#.#\n\n4 16\n###.###.###.###.\n.#..#...#.#.#...\n.#..#...###.#...\n###.###.#...###.\n\n0 0','Case 1: Possible\nCase 2: Impossible\nCase 3: Impossible','',31,0,1,32,1,8,45,12),(1070,'Friend Number','<p>\nFriend numbers are those who are composed of the same digits, for \nexample 3123 and 11233233 are friend numbers, but 1233432 and 123331 are\n not friend numbers because in the second number the 4 is missing.\n</p>\n<p>\nYour task is this: given an integer closed range [A, B], an integer \nnumber N and an integer K, you must find the Kth friend number of N in \nthat range.\n</p>','<p>\nInput will consist of several test cases each of them in a separate \nline. For each test case you will receive four (with no leading zeroes) \nintegers A, B , N and K (  0 &lt; A&lt;= B &lt; 10^100 , 0 &lt;= N &lt;=\n 10^100 , 0 &lt; K &lt;= 10^17).\n</p>','<p>\nFor each test case you must print a line containing a number \nrepresenting the Kth friend number in the given range, or \"-1\" if  it is\n not possible to obtain the Kth friend number.\n</p>','1 191010100333 1003 20000\n1 200 1 3\n1 200 1 4\n1 200 211 1\n1 200 211 2\n1 200 211 3\n','1010110131\n111\n-1\n12\n21\n112\n\n','',31,0,1,32,2,0,2,12),(1071,'Phone List','<p>\nGiven a list of phone numbers, determine if it is consistent in the \nsense that no number is the prefix of another. Let\'s say the phone \ncatalogue listed these numbers:</p>\n<pre>- Emergency 911\n- Alice 97 625 999\n- Bob 91 12 54 26\n</pre><p>In this case, it\'s not possible to call Bob, because the central would \ndirect your call to the emergency line as soon as you had dialled the \nfirst three digits of Bob\'s phone number. So this list would not be \nconsistent.</p>','<p>\nThe first line of input gives a single integer, 1 &lt;= <em>t</em> &lt;= 40, the number of test cases. Each test case starts with <em>n</em>, the number of phone numbers, on a separate line, 1 &lt;= <em>n</em> &lt;= 10000.Then follows <em>n</em> lines with one unique phone number on each line. A phone number is a sequence of at most ten digits.</p>','<p>\nFor each test case, output \"YES\" if the list is consistent, or \"NO\" otherwise.\n</p>','2\n3\n911\n97625999\n91125426\n5\n113\n12340\n123440\n12345\n98346','NO\nYES','',32,0,1,32,5,41,249,10),(1072,'Cuckoo Hashing','<p>One of the most fundamental data structure problems is the dictionary problem: given a set <em>D</em> of words you want to be able to quickly determine if any given query string <em>q</em> is present in the dictionary <em>D</em> or not. Hashing is a well-known solution for the problem. The idea is to create a function</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1075_ea8c1c9b668efd1e03f6e33c80ad933a.jpg\" src=\"assets/problem_images/1075_ea8c1c9b668efd1e03f6e33c80ad933a.jpg\" /></p>\n<p align=\"left\">from all strings to the integer range 0, 1, .., <em>n</em> - 1, i.e. you describe a fast deterministic program which takes a string as input and outputs an integer between 0 and <em>n</em> - 1. Next you allocate an empty hash table <em>T</em> of size <em>n</em> and for each word <em>w</em> in <em>D</em>, you set <em>T</em>[<em>h</em>(<em>w</em>)] = <em>w</em>. Thus, given a query string <em>q</em>, you only need to calculate <em>h</em>(<em>q</em>) and see if <em>T</em>[<em>h</em>(<em>q</em>)] equals <em>q</em>, to determine if <em>q</em> is in the dictionary. Seems simple enough, but aren\'t we forgetting something? Of course, what if two words in <em>D</em>\n map to the same location in the table? This phenomenon, called \ncollision, happens fairly often (remember the Birthday paradox: in a \nclass of 24 pupils there is more than 50% chance that two of them share \nbirthday). On average you will only be able to put roughly pn-sized \ndictionaries into the table without getting collisions, quite poor space\n usage!</p>\n<p>\nA stronger variant is Cuckoo Hashing. The idea is to use two hash functions <em>h</em><sub>1</sub> and <em>h</em><sub>2</sub>. Thus each string maps to two positions in the table. A query string <em>q</em> is now handled as follows: you compute both <em>h</em><sub>1</sub>(<em>q</em>) and <em>h</em><sub>2</sub>(<em>q</em>), and if T[<em>h</em><sub>1</sub>(<em>q</em>)] = <em>q</em>, or T[<em>h</em><sub>2</sub>(<em>q</em>)] = <em>q</em>, you conclude that <em>q</em> is in <em>D</em>.\n The name \"Cuckoo Hashing\" stems from the process of creating the table.\n Initially you have an empty table. You iterate over the words <em>d</em> in <em>D</em>, and insert them one by one. If T[<em>h</em><sub>1</sub>(<em>d</em>)] is free, you set T[<em>h</em><sub>1</sub>(<em>d</em>)] = <em>d</em>. Otherwise if T[<em>h</em><sub>2</sub>(<em>d</em>)] is free, you set T[<em>h</em><sub>2</sub>(<em>d</em>)] = <em>d</em>. If both are occupied however, just like the cuckoo with other birds\' eggs, you evict the word <em>r</em> in T[<em>h</em><sub>1</sub>(<em>d</em>)] and set T[<em>h</em><sub>1</sub>(<em>d</em>)] = <em>d</em>. Next you put <em>r</em>\n back into the table in its alternative place (and if that entry was \nalready occupied you evict that word and move it to its alternative \nplace, and so on). Of course, we may end up in an infinite loop here, in\n which case we need to rebuild the table with other choices of hash \nfunctions. The good news is that this will not happen with great \nprobability even if <em>D</em> contains up to <em>n</em>/2 words!</p>','<p>\nOn the first line of input is a single positive integer 1 &lt;= <em>t</em> &lt;= 50 specifying the number of test cases to follow. Each test case begins with two positive integers 1 &lt;= <em>m</em> &lt;= <em>n</em> &lt;= 10000 on a line of itself, <em>m</em> telling the number of words in the dictionary and <em>n</em> the size of the hash table in the test case. Next follow <em>m</em> lines of which the <em>i</em>:th describes the <em>i</em>:th word <em>d</em><sub>i</sub> in the dictionary <em>D</em> by two non-negative integers <em>h</em><sub>1</sub>(<em>d</em><sub>i</sub>) and <em>h</em><sub>2</sub>(<em>d</em><sub>i</sub>) less than <em>n</em> giving the two hash function values of the word <em>d</em><sub>i</sub>. The two values may be identical.\n</p>','<p>\nFor each test case there should be exactly one line of output either \ncontaining the string \"successful hashing\" if it is possible to insert \nall words in the given order into the table, or the string \"rehash \nnecessary\" if it is impossible.\n</p>','2\n3 3\n0 1\n1 2\n2 0\n5 6\n2 3\n3 1\n1 2\n5 1\n2 5','successful hashing\nrehash necessary','',32,0,1,64,2,9,18,10),(1073,'Parking','<p>\nWhen shopping on Long Street, Michael usually parks his car at some \nrandom location, and then walks to the stores he needs. Can you help \nMichael choose a place to park which minimises the distance he needs to \nwalk on his shopping round? Long Street is a straight line, where all \npositions are integer. You pay for parking in a specific slot, which is \nan integer position on Long Street. Michael does not want to pay for \nmore than one\nparking though. He is very strong, and does not mind carrying all the \nbags around.\n</p>','<p>\nThe first line of input gives the number of test cases, 1 &lt;= <em>t</em> &lt;= 100. There are two lines for each test case. The first gives the number of stores Michael wants to visit, 1 &lt;= <em>n</em> &lt;= 20, and the second gives their <em>n</em> integer positions on Long Street, 0 &lt;= <em>x</em><sub>i</sub> &lt;= 99.\n</p>','<p>\nOutput for each test case a line with the minimal distance Michael must walk given optimal parking.\n</p>','2\n4\n24 13 89 37\n6\n7 30 41 14 39 42','152\n70','',32,0,1,64,2,276,392,10),(1074,'Copying DNA','<p>\nEvolution is a seemingly random process which works in a way which \nresembles certain approaches we use to get approximate solutions to hard\n combinatorial problems. You are now to do something completely \ndifferent.\n</p>\n<p>\nGiven a DNA string S from the alphabet {A,C,G,T}, find the minimal number of copy operations needed to create another string <em>T</em>. You may reverse the strings you copy, and copy both from <em>S</em> and the pieces of your partial <em>T</em>. You may put these pieces together at any time. You may only copy contiguous parts of your partial <em>T</em>, and all copied strings must be used in your final <em>T</em>. Example: From <em>S</em> = \"ACTG\" create <em>T</em> = \"GTACTATTATA\"</p>\n<pre>&nbsp;&nbsp;&nbsp;1. Get GT......... by copying and reversing \"TG\" from <em>S</em>.\n&nbsp;&nbsp;&nbsp;2. Get GTAC....... by copying \"AC\" from <em>S</em>.\n&nbsp;&nbsp;&nbsp;3. Get GTAC...TA.. by copying \"TA\" from the partial <em>T</em>.\n&nbsp;&nbsp;&nbsp;4. Get GTAC...TAAT by copying and reversing \"TA\" from the partial <em>T</em>.\n&nbsp;&nbsp;&nbsp;5. Get GTACAATTAAT by copying \"AAT\" from the partial <em>T</em>.\n</pre>','<p>\nThe first line of input gives a single integer, 1 &lt;= <em>t</em> &lt;= 100, the number of test cases. Then follow, for each test case, a line with the string <em>S</em> of length 1 &lt;= <em>m</em> &lt;= 18, and a line with the string <em>T</em> of length 1 &lt;= <em>n</em> &lt;= 18.\n</p>','<p>\nOutput for each test case the number of copy operations needed to create <em>T</em> from <em>S</em>, or \"impossible\" if it cannot be done.\n</p>','5\nACGT\nGTAC\nA\nC\nACGT\nTGCA\nACGT\nTCGATCGA\nA\nAAAAAAAAAAAAAAAAAA','2\nimpossible\n1\n4\n6','',32,0,1,32,3,1,3,10),(1075,'Circle of Debt','<p>\nThe three friends Alice, Bob, and Cynthia always seem to get in \nsituations where there are debts to be cleared among themselves. Of \ncourse, this is the \"price\" of hanging out a lot: it only takes a few \nresturant visits, movies, and drink rounds to get an unsettled balance. \nSo when they meet as usual every Friday afternoon they begin their \nevening by clearing last week\'s debts. To satisfy their mathematically \ninclined minds they prefer clearing their debts using as little money \ntransaction as possible, i.e. by exchanging as few bank notes and coins \nas necessary. To their surprise, this can sometimes by harder than it \nsounds. Suppose that Alice owes Bob 10 crowns and this is the three \nfriends\' only uncleared debt, and Alice has a 50 crown note but nothing \nsmaller, Bob has three 10 crown coins and ten 1 crown coins, and Cynthia\n has three 20 crown notes. The best way to clear the debt is for Alice \nto give her 50 crown note to Cynthia, Cynthia to give two 20 crown notes\n to Alice and one to Bob, and Bob to give one 10 crown coin to Cynthia, \ninvolving a total of only five notes/coins changing owners. Compare this\n to the straightforward solution of Alice giving her 50 crown note to \nBob and getting Bob\'s three 10 crown notes and all his 1 crown coins for\n a total of fourteen notes/coins being exchanged!\n</p>','<p>\nOn the first line of input is a single positive integer, 1 &lt;= <em>t</em> &lt;= 50, specifying the number of test cases to follow. Each test case begins with three integers <em>ab</em>, <em>bc</em>, <em>ca</em> &lt;= 1000 on a line of itself. <em>ab</em> is the amount Alice owes Bob (negative if it is Bob who owes Alice money), <em>bc</em> the amount Bob owes Cynthia (negative if it is Cynthia who is in debt to Bob), and <em>ca</em>\n the amount Cynthia owes Alice (negative if it is Alice who owes \nCynthia). Next follow three lines each with six non-negative integers <em>a</em><sub>100</sub>, <em>a</em><sub>50</sub>, <em>a</em><sub>20</sub>, <em>a</em><sub>10</sub>, <em>a</em><sub>5</sub>, <em>a</em><sub>1</sub>, <em>b</em><sub>100</sub>, . . . , <em>b</em><sub>1</sub>, and <em>c</em><sub>100</sub>, . . . <em>c</em><sub>1</sub>, respectively, where <em>a</em><sub>100</sub> is the number of 100 crown notes Alice got, <em>a</em><sub>50</sub> is the number of her 50 crown notes, and so on. Likewise, <em>b</em><sub>100</sub>, . . . , <em>b</em><sub>1</sub> is the amount of notes/coins of different value Bob got, and <em>c</em><sub>100</sub>, . . . , <em>c</em><sub>1</sub> describes Cynthia\'s money. Each of them has at most 30 coins (i.e. <em>a</em><sub>10</sub>+<em>a</em><sub>5</sub>+<em>a</em><sub>1</sub>, <em>b</em><sub>10</sub>+<em>b</em><sub>5</sub>+<em>b</em><sub>1</sub>, and <em>c</em><sub>10</sub>+<em>c</em><sub>5</sub>+<em>c</em><sub>1</sub>\n are all less than or equal to 30) and the total amount of all their \nmoney together (Alice\'s plus Bob\'s plus Cynthia\'s) is always less than \n1000 crowns.\n</p>','<p>\nFor each test case there should be one line of output containing the \nminimum number of bank notes and coins needed to settle the balance. If \nit is not possible at all, output the string \"impossible\".\n</p>','3\n10 0 0\n0 1 0 0 0 0\n0 0 0 3 0 10\n0 0 3 0 0 0\n-10 -10 -10\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n-10 10 10\n3 0 0 0 2 0\n0 2 0 0 0 1\n0 0 1 1 0 3','5\n0\nimpossible','',32,0,1,32,10,7,9,10),(1076,'Full Tank?','<p>\nAfter going through the receipts from your car trip through Europe this \nsummer, you realised that the gas prices varied between the cities you \nvisited. Maybe you could have saved some money if you were a bit more \nclever about where you filled your fuel? To help other tourists (and \nsave money yourself next time), you want to write a program for finding \nthe cheapest way to travel between cities, filling your tank on the way.\n We assume that all cars use one unit of fuel per unit of distance, and \nstart with an empty gas tank.\n</p>','<p>\nThe first line of input gives 1 &lt;= <em>n</em> &lt;= 1000 and 0 &lt;= <em>m</em> &lt;= 10000, the number of cities and roads. Then follows a line with <em>n</em> integers 1 &lt;= <em>p</em><sub>i</sub> &lt;= 100, where <em>p</em><sub>i</sub> is the fuel price in the <em>i</em>th city. Then follow <em>m</em> lines with three integers 0 &lt;= <em>u</em>, <em>v</em> &lt; <em>n</em> and 1 &lt;= <em>d</em> &lt;= 100, telling that there is a road between <em>u</em> and <em>v</em> with length <em>d</em>. Then comes a line with the number 1 &lt;= <em>q</em> &lt;= 100, giving the number of queries, and <em>q</em> lines with three integers 1 &lt;= <em>c</em> &lt;= 100, <em>s</em> and <em>e</em>, where <em>c</em> is the fuel capacity of the vehicle, <em>s</em> is the starting city, and <em>e</em> is the goal.\n</p>','<p>\nFor each query, output the price of the cheapest trip from <em>s</em> to <em>e</em> using a car with the given capacity, or \"impossible\" if there is no way of getting from <em>s</em> to <em>e</em> with the given car.\n</p>','5 5\n10 10 20 12 13\n0 1 9\n0 2 8\n1 2 1\n1 3 11\n2 3 7\n2\n10 0 3\n20 1 4','170\nimpossible','',32,0,1,32,2,3,3,10),(1077,'Nested Dolls','<p>\nDilworth is the world\'s most prominent collector of Russian nested \ndolls: he literally has thousands of them! You know, the wooden hollow \ndolls of different sizes of which the smallest doll is contained in the \nsecond smallest, and this doll is in turn contained in the next one and \nso forth. One day he wonders if there is another way of nesting them so \nhe will end up with fewer nested dolls? After all, that would make his \ncollection even more magnificent! He unpacks each nested doll and \nmeasures the width and height of each contained doll. A doll with width <em>w<sub>1</sub></em> and height <em>h<sub>1</sub></em> will fit in another doll of width <em>w<sub>2</sub></em> and height <em>h<sub>2</sub></em> if and only if <em>w<sub>1</sub></em> &lt; <em>w<sub>2</sub></em> and <em>h<sub>1</sub></em> &lt; <em>h<sub>2</sub></em>. Can you help him calculate the smallest number of nested dolls possible to assemble from his massive list of measurements?\n</p>','<p>\nOn the first line of input is a single positive integer 1 &lt;= <em>t</em>\n &lt;= 20 specifying the number of test cases to follow. Each test case \nbegins with a positive integer 1 &lt;= m &lt;= 20000 on a line of itself\n telling the number of dolls in the test case. Next follow 2<em>m</em> positive integers <em>w</em><sub>1</sub>, <em>h</em><sub>1</sub>,<em>w</em><sub>2</sub>, <em>h</em><sub>2</sub>, . . . ,<em>w<sub>m</sub></em>, <em>h<sub>m</sub></em>, where <em>w<sub>i</sub></em> is the width and <em>h<sub>i</sub></em> is the height of doll number <em>i</em>. 1 &lt;= <em>w<sub>i</sub></em>, <em>h<sub>i</sub></em> &lt;= 10000 for all <em>i</em>.\n</p>','<p>\nFor each test case there should be one line of output containing the minimum number of nested dolls possible.\n</p>','4\n3\n20 30 40 50 30 40\n4\n20 30 10 10 30 20 40 50\n3\n10 30 20 20 30 10\n4\n10 10 20 30 40 50 39 51','1\n2\n3\n2','',32,0,1,64,2,3,14,10),(1078,'Shopaholic','<p>\nLindsay is a shopaholic. Whenever there is a discount of the kind where \nyou can buy three items and only pay for two, she goes completely mad \nand feels a need to buy all items in the store. You have given up on \ncuring her for this disease, but try to limit its effect on her wallet.\n</p>\n<p>\nYou have realized that the stores coming with these offers are quite \nselective when it comes to which items you get for free; it is always \nthe cheapest ones. As an example, when your friend comes to the counter \nwith seven items, costing 400, 350, 300, 250, 200, 150, and 100 dollars,\n she will have to pay 1500 dollars. In this case she got a discount of \n250 dollars. You realize that if she goes to the counter three times, \nshe might get a bigger discount. E.g. if she goes with the items that \ncosts 400, 300 and 250, she will get a discount of 250 the first round. \nThe next round she brings the item that costs 150 giving no extra \ndiscount, but the third round she takes the last items that costs 350, \n200 and 100 giving a discount of an additional 100 dollars, adding up to\n a total discount of 350.\n</p>\n<p>\nYour job is to find the maximum discount Lindsay can get.\n</p>','<p>\nThe first line of input gives the number of test scenarios, 1 &lt;= <em>t</em> &lt;= 20. Each scenario consists of two lines of input. The first gives the number of items Lindsay is buying, 1 &lt;= <em>n</em> &lt;= 20000. The next line gives the prices of these items, 1 &lt;= <em>p<sub>i</sub></em> &lt;= 20000.\n</p>','<p>\nFor each scenario, output one line giving the maximum discount Lindsay \ncan get by selectively choosing which items she brings to the counter at\n the same time.\n</p>','1\n6\n400 100 200 350 300 250','400','<p> </p>',32,0,1,64,2,141,387,10),(1079,'Moogle','<p>\nYou got the original idea of making map software, called Moogle Maps, \nfor the new cool Maple mPhone. It will even be capable of indicating the\n location of a house address like \"Main Street 13\". However, since the \nmPhone has limited storage capacity, you need to reduce the data amount.\n You don\'t want to store the exact location of every single house \nnumber. Instead only a subset of the house numbers will be stored \nexactly, and the others will be linearly interpolated. So you want to \nselect house numbers that will minimise the average interpolation error,\n given how many house locations you have capacity to store. We view the \nstreet as a straight line, and you will always store the first and the \nlast house location.\n</p>\n<p>\nGiven that you\'ve stored the locations <em>x<sub>i</sub></em> and <em>x<sub>j</sub></em> for the houses with numbers <em>i</em> and <em>j</em> respectively, but no other house in between, the interpolated value for a house with number <em>k</em> with <em>i</em> &lt; <em>k</em> &lt; <em>j</em> is</p>\n<div align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1082_737c8d6e980b28cb181e8437c0a69bb2.jpg\" /></div>','<p>\nThe first line of input gives a single integer, 1 &lt;= <em>t</em> &lt;= 50, the number of test cases. For each test case, there are two lines. The first contains 2 &lt;= <em>h</em> &lt;= 200 and 2 &lt;= <em>c</em> &lt;= <em>h</em>, where <em>h</em> is the number of houses in the street and <em>c</em> is the number of house locations that can be stored. The second contains <em>h</em> integers in increasing order giving the location of the <em>h</em> houses. Each location is in the interval [0, 1000000].</p>','<p>\nFor each test case, output the average interpolation error over all the <em>h</em> houses for the optimal selection of <em>c</em> house locations to store. The output should be given with four decimal places, but we will accept inaccuracies of up to 0.001.\n</p>','2\n4 3\n0 9 20 40\n10 4\n0 10 19 30 40 90 140 190 202 210','0.2500\n0.3000','<p> </p>',32,1,1,32,5,4,17,10),(1080,'BEATBIT','<p>A software company is very much concerned that its software engineers\n do not write equivalent procedures into the new version of its main \nproduct BEATBIT. The BEATBIT system is written in the assembly language \nBITE, recently introduced by MacroSoft, in its .DOTFramework. So far, no\n one has invented a more powerful language to program complex digital \ncircuits. The BITE assembly language operates on a stack ofbits, and is \ndefined by the following four kinds of instructions:</p>\n<dl><dt><em>label BRTRUE destlabel</em>\n</dt><dd>Pops a bit from the top of the stack, and tests it. If the value is <em>1</em> continues execution at the instruction with label destlabel. If the value is <em>0</em> continues at the next program instruction.</dd><dt><em>label JMP destlabel</em>\n</dt><dd>Continues execution at the instruction with label destlabel.</dd><dt><em>label RET1</em>\n</dt><dd>Stops execution and returns <em>1</em>.</dd><dt><em>label RET0</em>\n</dt><dd>Stops execution and returns <em>0</em>.\n</dd></dl><p>Here, <em>label</em> and <em>destlabel</em> are positive integers. A <em>n-ary</em> procedure of BITE is a sequence of instructions that expects <em>N</em> bit values on the stack as input, and produces one bit value, as the result of a <em>RET0</em> or <em>RET1</em>\n instruction. The instructions in the sequence are always labelled in \nincreasing label sequence, and it is known that, for every possible \ninput, the procedures always terminate. The program starts at the \ninstruction with the lowest label.</p>\n<p>Write a program that checks whether two BITE procedures compute the \nsame boolean function for any sequence of the values, stored in the \nstack, provided as input.</p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em>\n pairs of BITE procedures. Each pair of BITE procedures is preceded by \nthe number of bits expected in the stack (the arity of the procedures), \nrepresented by a positive integer, not greater than 128, in a single \nline. Next, for each BITE procedure there is a sequence of lines, each \none containing a BITE instruction, and terminated by a single line \ncontaining <em>END</em>. Programs do not have more than 10,000 lines of code.</p>','<p>A sequence of lines, the <em>i-th</em> line containing either <em>1</em> or <em>0</em> depending on whether the <em>i-th</em> pair of BITE procedures in the input compute the same boolean function or not.</p>','2\n2\n10 BRTRUE 30\n20 RET0\n30 BRTRUE 50\n40 RET0\n50 RET1\nEND\n20 BRTRUE 50\n30 BRTRUE 40\n40 RET0\n50 BRTRUE 70\n60 JMP 40\n70 RET1\nEND\n1\n10 BRTRUE 30\n20 RET0\n30 RET1\nEND\n50 RET0\nEND\n','1\n0','',33,0,1,32,2,0,0,12),(1081,'Prester John','<p>Where was the Kingdom of Prester John? There are many maps showing \nthe way to it, but unfortunately it seems hard to establish a sensible \nagreement. India? Ethiopia? Mongolia? Syria? Puzzling,Well, what would \none expect from the descendant of the Three Wise Men?</p>\n<p>An idea is to follow the directions in two maps at the same time, and\n if the directions lead to the same place, we can find Prester. Well, \n\"information technology\" may help here. Write a program that, given two \nmedieval maps of the world indicating the location of the Mythical \nKingdom, finds the length of the common shortest path to the location \nwhere the Prester was seen.</p>\n<p>Given two maps, compute the minimum length of a common path to the Prester location.</p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em> pairs of maps. Each map is given by a positive integer <em>L</em>,\n not greater than 50,000, in a single line, indicating the number of \nlocations in the map. Next, there is an integer in the range <em>[0, L-1]</em> indicating the location, in a single line, where the Prester was seen. Next, there is a positive integer <em>P</em>,\n not greater than 100,000, in a single line, indicating the number of \npaths in the description of the map. Then, the description of the map \nfollows. Each path in the map is listed in a separate line, and has the \nform</p>\n<p><em>L1 description L2</em></p>\n<p>where <em>L1</em> and <em>L2</em> are integers in the range <em>[0, L-1]</em>\n indicating a location, and description is a string with no more than 8 \ncharacters, indicating the name of a unidirectional path from location <em>L1</em> to location <em>L2</em>. It is known that location 0 represents the same place in all maps. The <em>descriptions</em> of paths in each map will be distinct.</p>','<p>An integer in a single line indicating the length of the shortest \nsequence of path descriptions that is common to both maps, and that, in \nboth maps, lead to a location of the Prester. If there is no common path\n leading to the Prester location, your program should write -1 as \nresult.</p>','1\n2\n1\n2\n0 tunnel 1\n1 bridge 1\n3\n2\n3\n0 tunnel 1\n1 bridge 2\n2 river 2','2\n','',33,0,1,32,10,0,0,12),(1082,'Robotruck','<p>This problem is about a robotic truck that distributes mail packages \nto several locations in a factory. The robot sits at the end of a \nconveyer at the mail office and waits for packages to be loaded into its\n cargo area. The robot has a maximum load capacity, which means that it \nmay have to perform several round trips to complete its task. Provided \nthat the maximum capacity is not exceeded, the robot can stop the \nconveyer at any time and start a round trip distributing the already \ncollected packages. The packages must be delivered in the incoming \norder.</p>\n<p>The distance of a round trip is computed in a grid by measuring the \nnumber of robot moves from the mail office, at location (0,0), to the \nlocation of delivery of the first package, the number of moves between \npackage delivery locations, until the last package, and then the number \nof moves from the last location back to the mail office. The robot moves\n a cell at a time either horizontally or vertically in the factory plant\n grid. For example, consider four packages, to be delivered at the \nlocations (1,2),(1,0), (3,1), and (3,1). By dividing these packages into\n two round trips of two packages each, the number of moves in the first \ntrip is 3+2+1=6, and 4+0+4=8 in the second trip. Notice that the two \nlast packages are delivered at the same location and thus the number of \nmoves between them is 0.</p>\n<p>Given a sequence of packages, compute the minimum distance the robot must travel to deliver all packages.</p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em> test cases. Each test case consists of a line containing one positive integer <em>C</em>, not greater than 1,000,000, indicating the maximum capacity of the robot, a line containing one positive integer <em>N</em>, not greater than 100,000, which is the number of packages to be loaded from the conveyer. Next, there are <em>N</em>\n lines containing, for each package, two non-negative integers to \nindicate its delivery location in the grid, and a non-negative integer \nto indicate its weight. The weight of the packages is always smaller \nthan the robot\'s maximum load capacity. The order of the input is the \norder of appearance in the conveyer.</p>','<p>One line containing one integer representing the minimum number of moves the robot must travel to deliver all the packages.</p>','1\n10\n4\n1 2 3\n1 0 3\n3 1 4\n3 1 4','14\n','',33,0,1,32,5,1,25,12),(1083,'Jumping Hero','<p>A software house has decided to create a computer game, where the \nhero must find its way from a start position to the end position, \nthrough a labyrinth. In the labyrinth, some cells contain magic \nfountains that can be used to get super-powers an infinite number of \ntimes. Whenever the hero enters a cell with a magic fountain, he gets \nsuper-powers.</p>\n<p>Usually, our hero moves in the labyrinth one cell left/right/up/down \nat a time (to an empty cell). With super-powers, the hero jumps to an \nempty cell N positions to the left/right/up/down. The super-power lasts \nfor M jumps, and the hero can change its jumping direction after each \njump. A jump is allowed if the end cell of the jump is within the map \nand it is not a wall,thus, the hero can jump over walls. If the hero \njumps to a cell with a new magic fountain, the hero gets the \nsuper-powers of the new magic fountain, and the remaining effect of the \nprevious magic fountain is cancelled. If the hero jumps to the cell \nwhere he obtained its current super-powers, no effect occurs (i.e., the \nhero gets no additional super-powers). When the current super-power \nends, the hero proceeds its normal one-cell movement. If, after getting \nsuper-powers in some fountain, the hero cannot move to any cell, he \nlooses his super-powers and returns to his previous cell. To reach the \nend position, the hero must move to the end cell or finish one jump in \nthe end cell. </p>\n<p>Given the labyrinth map compute the minimum number of moves/jumps from the start position to the end position.</p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em> labyrinth maps. The first line of each labyrinth map contains two positive integers, <em>L</em> and <em>C</em>, separated by an empty space, with <em>L</em> the number of lines and <em>C</em> the number of columns in the map. <em>L</em> and <em>C</em> are both lesser than 300. The following <em>L</em> lines of the input contain <em>C</em> integers each that define the cells of the map (separated by a empty space). Each integer, <em>i</em>, must be interpreted as follows: <em>i</em> = 0 represents a wall; <em>i</em> = 1 represents an empty cell (where the hero can move into); <em>i</em> = <em>M</em>*10+<em>N</em> represents an empty cell with a magic fountain that makes the hero jump <em>M</em> times to the cell that is <em>N</em> positions to the left/right/up/down of the current cell. <em>M</em> ranges from 1 to 5 and <em>N</em>\n ranges from 2 to 6. The maximum number of magic fountains in a map is \n5,000. The two last lines of the input define the coordinates of the \nstart position and end position (coordinates consist of two integers, \ndenoting the line and column respectively, starting from 0). </p>','<p>The output consists of one single line that contains an integer with \nthe minimum number of moves/jumps, from the start position to the end \nposition. If it is impossible to reach the end position, the output \nshould be a single line containing <em>IMPOSSIBLE</em>. </p>','1\n8 8\n0  1  1  1  1  1  1  1\n0  1  0  0  1  13 1  1\n0  1  32 1  1  1  0  0\n0  1  1  0  1  1  1  0\n0  1  1  0  0  0  0  0\n0  1  1  1  1  1  1  0\n0  1  0  0  1  1  1  0\n0  1  1  1  1  1  1  0\n1 7\n5 4','14\n','',33,0,1,32,5,0,0,10),(1084,'Board Games','<p>You have been hired by the quality control division of a world famous\n board game company. Their creative and design division comes up, on a \ndaily basis, with great ideas for board games, but sometimes the scoring\n of the proposed games does not match the story board or leads the \nplayer to impossible or undesirable situations.</p>\n<p>Most of the games this company produces can be described loosely as \nrace games. Race games are games where the players need to go from an \ninitial square to a final square, performing along the way, a series of \nmoves, gaining or losing score points for each of those moves. Moves can\n be influenced by player\'s decisions, drawing of cards, rolling of \ndices, etc.</p>\n<p>Your task is to check the description of a given game, stating the \nlowest possible score, or if it can lead to an infinitely high (there\'s \nno way the player can win the game), or to an infinitely low score. </p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em> game descriptions. The first line of the game description contains a positive integer <em>N</em> not greater than 300, indicating the number of squares in the game. The second line contains two non-negative integers, <em>I</em> and <em>F</em>, defining the initial and final squares for this game, where <em>I</em> and <em>F</em> are lesser than <em>N</em>. The third line contains an integer <em>M</em>, indicating the number of possible moves of the game. The following <em>M</em>\n lines describe all the possible moves of the game. Each line, \ndescribing one possible move, consists of three integers, respectively, \nthe initial square and final square of the move, in the range [0, <em>N</em>-1],and the corresponding score.</p>','<p>The output consists of a single line with an integer, indicating the \nlowest possible score for the proposed game. If the scores are \ninfinitely high or low then your program should output <em>infinity</em>.</p>','2\n4\n0 3\n4\n0 1 5\n0 2 7\n2 1 -3\n1 3 2\n4\n0 3\n3\n0 1 5\n0 2 7\n2 1 -3','6\ninfinity','',33,0,1,32,5,10,36,12),(1085,'The Bridges of Kolsberg','<p>King Beer has a very hard region to rule, consisting of lots of cities \nwith very sectarian operating system beliefs and high levels of trade. \nThese cities are placed along a river, the Kolsberg, along its Northern \nand Southern banks. The cities are economically separated from each \nother, since the river is wide and dangerous.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1085_d7cd1fba38e525d72bf2f8892fa9df4b.jpg\" src=\"http://sharecode.ir/assets/problem_images/1085_d7cd1fba38e525d72bf2f8892fa9df4b.jpg\" /></p>\n<p>King Beer would like to build some bridges connecting opposite banks \nof the river. He was strongly advised against making bridges between \ncities with different operating systems beliefs (those guys really hate \neach other). So, he is just going to build bridges between cities \nsharing the same operating system belief (even if the resulting bridges \nare quite long and strangely shaped). However, it is technical \nimpossible to build bridges that cross other bridges.</p>\n<p>The economical value of a bridge is the sum of the trade values the \ntwo cities it connects. The King wants to maximize the sum of all \npossible bridge values while minimizing the number of bridges to build. </p>\n<p>Given two sets of cities, return the maximum possible sum of all \nbridge values and the smallest number of valid bridges necessary to \nachieve it.</p>','<p>The first line is an integer with the number of samples. For each \nsample, the next line has a non-negative integer, not greater than \n1,000, indicating the number of cities on the Northern riverbank. Then, \non each line, comes the city information with the form</p>\n<p><em>Cityname ostype tradevalue</em></p>\n<p>where, separated by empty spaces, there are two strings, <em>cityname</em> and <em>ostype</em>, with no more than 10 characters each, and <em>tradevalue</em> which is a non-negative integer not greater than 10<sup>6</sup>.\n The sequence of lines represents the cities from left to right along \nthe riverbank. Next, there is the same kind of information to describe \nthe Southern riverbank.</p>','<p>For each sample, a line consisting of the maximum possible sum of all bridge values, one empty space, the number of bridges.</p>','1\n3\nmordor Vista 1000000\nxanadu Mac 1000\nshangrila OS2 400\n4\natlantis Mac 5000\nhell Vista 1200\nrivendell OS2 100\nappleTree Mac 50','1002250 2','',33,0,1,32,5,28,143,10),(1086,'The Finest Chef','<p>The World Finest Young Chef Competition welcomes young chefs from \naround the world. Making resources available for them to work is a very \ndifficult job, because we cannot know, beforehand, what kind of \nequipment they are going to need. Each chef will be aiming to cook his \nbest dish, but this can involve a stove, a fridge, a freezer, a \nmicrowave oven, etc. Each dish will only need one of these equipments \nonce, for a limited period of time, but this period will vary, depending\n on the equipment used. For example, it is possible that one dish can be\n accomplished either using a fridge (using 30 minutes of the fridge\'s \ntime) or a freezer (using only 5 minutes). Moreover, each equipment can \nonly be used by one chef, for the duration of the competition, as after \nbeing used, it will need cleaning.</p>\n<p>The aim is to find, for each chef, an equipment that will suit their \ndish, minimizing the sum of the cooking times of all of the dishes in \ncompetition.</p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em>\n competitions. The input begins with a line containing two positive \nintegers to indicate the number of chefs in the competition, not greater\n than 250, and the number of facilities available to cook, not greater \nthan 350. The next line contains a single integer, the number of lines \nto be read next. The following lines describe how long one chef\'s dish \ntakes to cook in a specific facility, in the following way: one \nnon-negative integer identifying the chef, one non-negative integer \nidentifying the facility and a third positive integer for the cooking \ntime. It is guarantied that there are enough facilities to cook all \ndishes.</p>','<p>The output is one single line, which contains an integer with the sum\n of the cooking times for all the dishes in the competition.</p>','2\n4 5\n9\n0 2 5\n0 3 3\n1 1 20\n1 4 10\n2 1 25\n2 4 30\n3 0 2\n3 2 10\n3 3 12\n3 3\n9\n0 0 3\n0 1 2\n0 2 1\n1 0 1\n1 1 7\n1 2 9\n2 0 3\n2 1 7\n2 2 5','40\n8\n','',33,0,1,32,5,0,2,12),(1087,'IP-TV','<p>A consortium of European Internet providers manages a large backbone \nnetwork, with direct links (connections) between a large number of \nEuropean cities. A link between a pair of cities is bidirectional. The \ntransmission of a message in a link has an associated cost. As it is \ncommon in the Internet, it is possible to use a(unbounded) sequence of \ndirect links to indirectly transfer data between any pair of cities.</p>\n<p>For allowing the broadcast of TV programs using this backbone, it is \nnecessary to continuously send data to all nodes in the network. For \nhelping to minimize costs, it is necessary to select the network links \nthat will be used for transmitting data. The set of selected links must \nbe connected and include all nodes in the network.</p>\n<p>For helping the consortium to manage its network, you have been asked\n to create a program that computes the minimum cost for transmitting \ndata to all cities of the backbone.</p>\n<p>Given a set of network links, compute the minimum transmission cost for reaching all nodes.</p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em> test cases. The first line of the each test case contains a positive integer <em>M</em>, not greater than 2,000, with the number of cities that have network connections. The second line contains an integer <em>N</em> not greater than 50,000, with the number of existing links. Each of the following <em>N</em> lines contains the representation of a link. Each line contains two strings and one integer, separated by empty spaces, <em>B</em> <em>E</em> <em>C</em>, where <em>B</em> and <em>E</em> are the city names of the endpoints of the network link, with no more than 8 characters, and <em>C</em> is a positive integer, not greater than 30, representing the cost of transmitting in the link.</p>','<p>The output consists of one single line that contains an integer with \nthe minimum transmission cost for sending data to all cities.</p>','1\n4\n5\nlisbon london 6\nlisbon paris 5\nlondon paris 1\nlondon berlin 2\nparis berlin 10','8\n','',33,0,1,32,5,19,77,12),(1088,'Ladies\' Choice','<p>Teenagers from the local high school have\nasked you to help them with the organization of next year\'s Prom. The idea is\nto find a suitable date for everyone in the class in a fair and civilized way.\nSo, they have organized a web site where all students, boys and girls, state\ntheir preferences among the class members, by ordering all the possible\ncandidates. Your mission is to keep everyone as happy as possible. Assume that\nthere are equal numbers of boys and girls.</p>\n<p>\nGiven a set of preferences, set up the blind dates such that there are \nno other two people of opposite sex who would both rather have each \nother than their current partners. Since it was decided that the Prom \nwas Ladies\' Choice, we want to produce the best possible choice for the \ngirls.\n</p>','<p>A positive integer <em>P</em> in a single line followed by a sequence of <em>P</em> test cases. Each test case consists of a positive integer <em>N</em>, not greater than 1,000, indicating the number of couples in the class. Next, there are <em>N</em> lines, each one containing the all the integers from 1 to <em>N</em>, ordered according to the girl\'s preferences. Next, there are <em>N</em> lines, each one containing all the integers from 1 to <em>N</em>, ordered according to the boy\'s preferences.</p>','<p>The output consists of a sequence of <em>N</em> lines, where the <em>i-th</em> line contains the number of the boy assigned to the <em>i-th</em> girl (from 1 to <em>N</em>).</p>','1\n5\n1 2 3 5 4\n5 2 4 3 1\n3 5 1 2 4\n3 4 2 1 5\n4 5 1 2 3\n2 5 4 1 3\n3 2 4 1 5\n1 2 4 3 5\n4 1 2 5 3\n5 3 2 4 1\n','1\n2\n5\n3\n4\n','',33,0,1,32,5,9,57,12),(2004,'First Blood, Part III','<p>There is a computer game called First Blood, Part III, which is getting increasingly popular in gaming forums. First Blood, Part III is a two player game, in which players compete to kill a big monster. Ali and Reza decided to play this game. Starting with Ali, he can choose a weapon, and deal damage to the monster. Then it will be turn for Reza to choose its own weapon, and deal damage to the monster. The game continues until the monster is killed, and the player who has killed the monster is the winner.</p>\n<p>The monster has an initial hit-point 1&lt; <em>H</em> &lt; 10000, . Each time a player hits the monster with a weapon, monster’s hit-point is reduced. At the end, when the monster’s hit-point becomes less than or equal to 1, the monster dies, and the player with the last hit wins the game.</p>\n<p>There are 1 &lt;= <em>W</em> &lt;= 6&nbsp; kind of weapons which players can choose in each turn. Each weapon is characterized by a value 0 &lt;= <em>R<sub>i</sub></em> &lt;= 0.9. Assuming the monster has the hit-point <em>H</em>, hitting it with the <em>i<sup>th</sup></em> weapon reduces its hit-point to <em>H</em>×<em>R<sub>i </sub></em>. For example, if we hit a monster with&nbsp;<em>H</em> = 10 with a weapon with <em>R<sub>i = 0.2 </sub></em>, the remaining hit-point of the monster would be 2.</p>\n<p>Ali always starts the game. Determine the winner, assuming that the players do their best to win the game (i.e., they choose optimal weapon in each turn in order to win if possible). Note that in order to avoid rounding problems, we would guarantee that the rounding errors do not change the correct answer.</p>','<p>The first line of the input contains the number of test cases <em>t</em> &lt;= 200, . Each of the following&nbsp;<em>t</em> lines contain the numbers&nbsp;<em>H</em> (the initial hit-point of the monster), <em>W</em> (the number of weapons), and then&nbsp;<em>n</em> numbers <em>R<sub>1</sub>, R<sub>2</sub>, ..., R_w, </em> each of them with up to 6 decimals.</p>','<p>For each test case, output the winner according to the format given in the Sample Output.</p>','2\n5.1 2 0.25 0.5\n9.25 2 0.25 0.5\n','Reza\nAli\n','',37,0,1,64,1,3,208,30),(2006,'Recurs','<p>\nConsider the recursive relation <em>f<sub>n</sub></em> = <em>af<sub>n-1</sub></em> + <em>bf<sub>n-2</sub></em>.</p>\n<p>Given <em>f<sub>0</sub></em>, <em>f<sub>1</sub></em>, <em>n</em> and <em>X</em>, you must find positive integers <em>a</em> and <em>b</em> such that <em>f<sub>n</sub></em> = <em>X</em>.</p>','<p>There are multiple test cases in the input. Each test case is a line with four integers <em>f<sub>0</sub></em>, <em>f<sub>1</sub></em>, <em>n</em>, and \n(1 &lt;=  <em>f<sub>0</sub></em>, <em>f<sub>1</sub></em>, <em>X</em> &lt;= 10<sup>9</sup> and 4 &lt;= <em>n</em> &lt;= 10<sup>9</sup>). The input terminates with a line of the form \"0 0 0 0\" (without quotation marks) which should not be processed as a test case.</p>','<p>For each test case, write a single line containing the two required integers <em>a</em> and <em>b</em>. If there are \nmultiple solutions, write the one with the minimum value of <em>a</em>. If there is no solution, print \"No solution\" (without quotation marks).</p>','1 2 4 29\n1 2 4 7\n0 0 0 0\n','2 1\nNo solution\n','',37,0,1,64,2,22,158,10),(1137,'Analyze','<p>&nbsp;In this problem set, there is another problem (vigenere) asking you to implement the Vigen`re<br />Cipher encryption algorithm. This time, we will demonstrate one of the caveats of that cipher. A secret organization Amateur Codebreakers Movement has a strong suspicion that bank robbers are planning another strike soon. Unfortunately, we do not know neither the name of the bank nor the exact day and time. ACM is able to eavesdrop the communication between robbers and their driver but the communication is encrypted using the Vigen`re Cipher.<br />Your task is to try to break the cipher. You are given two words that are likely to appear in the original plaintext — so-called cribs (such words played an important role, for example, in breaking the famous Enigma code).</p>','<p>(For the specification of the Vigen`re cipher, please refer to the vigenere problem.)<br />The input contains several instances. Each instance consists of four lines — the first line is an integer number K, 1 ≤ K ≤ 100, the maximum length of the encryption key to be considered. The second and third lines contain the cribs W<sub>1</sub> and W<sub>2</sub> , 1 ≤ K ≤ length(W<sub>i</sub> ) ≤ 100. The fourth line is the ciphertext C, 1 ≤ length(C) ≤ 100 000. Both the cribs W1 , W2 and the ciphertext C consist only of uppercase letters of the standard English alphabet {A, B, C, ..., Z}. The input is terminated by a line containing one zero.</p>','<p>Your program must determine how many different plaintexts there exist that contain both of the given cribs simultaneously inside the same message and that will result into the given ciphertext using the Vigen`re Cipher with some key Q, 1 ≤ length(Q) ≤ K.<br />Print one line for each input instance:<br />• If there is exactly one plaintext satisfying all conditions, output that plaintext with no additional spaces.<br />• If two or more such plaintexts exist, print the word “ambiguous”.<br />• If there is no such plaintext, print “impossible”.</p>','4\nBANK\nMONEY\nFTAGUAVMKILCKPRIJCHRJZIYUAXFNBSLNNXMVDVPXLERWDSL\n5\nSECOND\nPARSEC\nSUKCTZHYYES\n3\nACM\nIBM\nJDNCOFBEN\n4\nABCD\nEFGH\nOPQRHKLMN\n0\n','WEWILLROBTHEBANKANDTAKEALLTHEMONEYTOMORROWATNOON\nimpossible\nambiguous\nEFGHXABCD\n','',45,0,1,128,11,1,6,12),(1138,'Cards','<p>The Neal Stephenson’s novel Cryptonomicon includes a cryptographic algorithm based on a deck of playing cards. It is emphasized that a proper shuffling is crucial for the cipher security. In this problem, we want to demonstrate the importance of randomness in cryptography by describing a card game that does not employ shuffling and is therefore foreseeable.<br />The game is a modification of poker, where not only all the cards are visible to everyone, but the players have no influence on the course of the game at all. Pretty boring, isn’t it? A game session is composed of (possibly) many games and is played by N players. For simplicity, we will assume that the players are sitting in a row and are numbered 1 . . . N from left to right. The deck contains exactly 5 × N cards numbered 1, 2, . . . , 5N .<br />At the beginning of each game, cards are dealt in three dealing rounds. First, two cards are dealt to each player in the left-to-right order. That is, player 1 gets the two top-most cards, then player 2 gets the next 2 cards and so on until the last player N gets his/her cards. In the second round, this step is repeated and every player gets another two cards in the same manner. Finally, each player gets one more card.<br />The player who receives all the five cards with the smallest numbers (1, 2, 3, 4, 5, not necessarily in this order) is the winner of the whole game session. If nobody wins, the cards are collected and a new game is started. The cards are collected from the players from right to left and the cards of one player are always collected one-by-one in the reverse order then they were dealt. Each card is placed on top of the deck, another card onto it, and so on. That is, the top of the deck will contain cards of player number 1 and the six top-most cards will be the cards at positions 1, 2, 2N + 1, 2N + 2, 4N + 1, 3 in the original deck. For example, in the game of two players the initial deck contains ten cards: A, B, C, D, E, F, G, H, I, J. In the first dealing round, player 1 gets the cards A and B, player 2 gets C and D. Then E and F is dealt to player 1, G and H to player 2, then I to player 1, and finally J to player 2.<br />When collecting, the cards of the player 2 go first in the order J, H, G, D, C. Then we continue with player 1’s cards I, F, E, B, and A. Since the cards are put onto the deck bottom-top, the final order of the cards after one game is A, B, E, F, I, C, D, G, H, and J.<br />Write a program that will determine the outcome of a game session so that you can spoil the game to its players.</p>','<p>The input contains several game sessions. Each session is described by two lines. The first line contains the number N , 1 ≤ N ≤ 1000. The second line contains the card numbers 1 . . . 5N in the order from the top of the deck to the bottom. Every two consecutive numbers on this line are separated by a single space. Each number will occur exactly once on that line.<br />The last decription is followed by a line containing one zero.</p>','<p>For each game session, output exactly one line. If no player ever wins, print “Neverending<br />game.”, otherwise output the sentence “Player P wins game number G.”, where P is the<br />player number and G is the number of the first game won (the first game is numbered 1). Please<br />note that the result may exceed 2<sup>32</sup> but it will always be less than 2<sup>63</sup> .</p>','2\n2 3 9 7 4 8 5 1 10 6\n2\n2 6 9 7 4 8 5 1 10 3\n5\n16 12 18 11 20 15 19 24 8 6 25 1 7 22 14 2 3 10 13 17 4 5 21 9 23\n0\n','Player 1 wins game number 3.\nNeverending game.\nPlayer 2 wins game number 153.\n','',45,0,1,128,11,2,22,12),(1139,'Execute','<p>Many ciphers can be computed much faster using various machines and automata. In this problem, we will focus on one particular type of machines called stack machine. Its name comes from the fact that the machine operates with the well-known data structure — stack. The later-stored values are on the top, older values at the bottom. Machine instructions typically manipulate the top of the stack only.<br />Our stack machine is relatively simple: It works with integer numbers only, it has no storage beside the stack (no registers etc.) and no special input or output devices. The set of instructions is as follows:<br />• NUM X, where X is a non-negative integer number, 0 ≤ X ≤ 109 . The NUM instruction stores the number X on top of the stack. It is the only parametrized instruction.<br />• POP: removes the top number from the stack.<br />• INV: changes the sign of the top-most number. (42 → −42)<br />• DUP: duplicates the top-most number on the stack.<br />• SWP: swaps (exchanges) the position of two top-most numbers.<br />• ADD: adds two numbers on the top of the stack.<br />• SUB: subtracts the top-most number from the “second one” (the one below).<br />• MUL: multiplies two numbers on the top of the stack.<br />• DIV: integer divison of two numbers on the top. The top-most number becomes divisor, the one below dividend. The quotient will be stored as the result.<br />• MOD: modulo operation. The operands are the same as for the division but the remainder is stored as the result.<br />All binary operations consider the top-most number to be the “right” operand, the second number the “left” one. All of them remove both operands from the stack and place the result on top in place of the original numbers.<br />If there are not enough numbers on the stack for an instruction (one or two), the execution of such an instruction will result into a program failure. A failure also occurs if a divisor becomes zero (for DIV or MOD) or if the result of any operation should be more than 109 in absolute value. This means that the machine only operates with numbers between −1 000 000 000 and 1 000 000 000, inclusive.<br />To avoid ambiguities while working with negative divisors and remainders: If some operand of a division operation is negative, the absolute value of the result should always be computed with absolute values of operands, and the sign is determined as follows: The quotient is negative if (and only if) exactly one of the operands is negative. The remainder has the same sign as the dividend. Thus, 13 div −4 = −3, −13 mod 4 = −1, −13 mod −4 = −1, etc.<br />If a failure occurs for any reason, the machine stops the execution of the current program and no other instructions are evaluated in that program run.</p>','<p>The input contains description of several machines. Each machine is described by two parts:<br />the program and the input section.<br />The program is given by a series of instructions, one per line. Every instruction is given by three uppercase letters and there must not be any other characters. The only exception is the NUM instruction, which has exactly one space after the three letters followed by a non-negative integer number between 0 and 109 . The only allowed instructions are those defined above. Each program is terminated by a line containing the word “END” (and nothing else).<br />The input section starts with an integer N (0 ≤ N ≤ 10 000), the number of program executions. The next N lines contain one number each, specifying an input value Vi , 0 ≤ Vi ≤ 109 . The program should be executed once for each of these values independently, every execution starting with the stack containing one number — the input value Vi .<br />There is one empty line at the and of each machine description. The last machine is followed by a line containing the word “QUIT”. No program will contain more than 100 000 instructions and no program requires more than 1 000 numbers on the stack in any moment during its execution. </p>','<p>For each input value, print one line containing the output value for the corresponding execution, i.e., the one number that will be on the stack after the program executes with the initial stack containing only the input number.<br />If there is a program failure during the execution or if the stack size is incorrect at the end of the run (either empty or there are more numbers than one), print the word “ERROR” instead.<br />Print one empty line after each machine, including the last one.</p>','DUP\nMUL\nNUM 2\nADD\nEND\n3\n1\n10\n50\n\nNUM 1\nNUM 1\nADD\nEND\n2\n42\n43\nNUM 600000000\nADD\nEND\n3\n0\n600000000\n1\nQUIT\n','3\n102\n2502\nERROR\nERROR\n600000000\nERROR\n600000001\n','',45,0,1,128,11,13,69,12),(1140,'Grille','<p>In the 16th century, there were no computers as we have today. On the other hand, even at that time it was necessary to protect messages from being read by inappropriate people. Old methods, like shaving a head of a slave, writing the message on his head, waiting until his hair grows back and then sending him through the area full of enemies, might work well but they took a long time. That is why new methods had to be invented. For example, an Italian mathematician Girolamo Cardano was the first one who described the Grille cipher.<br />For both enciphering and deciphering, you need a tool (basically, it is the cipher key) called the “grille”. It is necessary that both parties (Alice and Bob) have the same grille. The grille looks like a rectangular grid of N × N unit squares with some of the squares being solid and some cut out to form “holes”.</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1143_3e3c8e5d6e1c6fb2158da3abd5789fcf.jpg\" src=\"assets/problem_images/1143_3e3c8e5d6e1c6fb2158da3abd5789fcf.jpg\" height=\"199\" width=\"236\" /><br /></div>','<p>The input contains several test cases. Each test case contains description of a grille and a ciphertext. Your task is to decipher the message and write the plaintext to output. Each test case starts with a line containing number N (1 ≤ N ≤ 1000), where N is the size of the grille. Then there are N lines containing the grille description. Each of those lines contains exactly N characters which are either the “hash” character “#” (solid/opaque material) or the uppercase letter “O” (hole).<br />Note: In praxis, the grille holes would be arranged in such a way that no position of the ciphertext is used more than once. In our problem, this is not guaranteed. Some grilles may contain holes that match the same position/letter of the ciphertext (after rotations). However, the deciphering algorithm is still the same.<br />After the grille description, there are another N lines with the enciphered message. Each of them contains exactly N characters — uppercase letters of alphabet.<br />The last test case is followed by a line containing one zero.</p>','<p>For each test case, output the deciphered message (plaintext) on one line with no spaces.</p>','4\n##O#\n#O#O\n####\n###O\nARAO\nPCEM\nLEEN\nTURC\n3\nO#O\n###\nO#O\nABC\nDEF\nGHI\n0\n','ACMCENTRALEUROPE\nACGIACGIACGIACGI\n','',45,0,1,128,11,51,111,10),(1141,'Program','<p>Many ciphers can be computed much faster using various machines and automata. The trouble with such machines is that someone has to write programs for them. Just imagine, how easy it would be if we could write a program that would be able to write another programs. In this contest problem, we will (for a while) ignore the fact that such a “universal program” is not possible. And also another fact that most of us would lose our jobs if it existed. Your task is to write a program that will automatically generate programs for the stack machine defined in problem execute.</p>','<p>The input contains several test cases. Each test case starts with an integer number N (1 ≤ N ≤ 5), specifying the number of inputs your program will process. The next N lines contain two integer numbers each, Vi and Ri . Vi (0 ≤ Vi ≤ 10) is the input value and Ri (0 ≤ Ri ≤ 20) is the required output for that input value. All input values will be distinct. Each test case is followed by one empty line. The input is terminated by a line containing one zero in place of the number of inputs.</p>','<p>For each test case, generate any program that produces the correct output values for all of the inputs. It means, if the program is executed with the stack initially containing only the input value Vi , after its successful execution, the stack must contain one single value Ri . Your program must strictly satisfy all conditions described in the specification of the problem execute, including the precise formatting, amount of whitespace, maximal program length, limit on numbers, stack size, and so on. Of course, the program must not generate a failure. <br />Print one empty line after each program, including the last one.</p>','3\n1 3\n2 6\n3 11\n1\n1 1\n2\n2 4\n10 1\n0\n','DUP\nMUL\nNUM 2\nADD\nEND\nEND\nNUM 3\nMOD\nDUP\nMUL\nEND\n','',45,0,1,128,11,0,0,12),(1142,'Regulate','<p>Thank to cryptography, we are able to encrypt messages such that noone (except the intended recipient) is able to read them. However, encrypted messages are of no use if they do not actually reach the recipient. These days, computer network is the most typical mean to send such messages. In this problem, we will study the issues the networking providers have to solve. And remember: since the message is encrypted, we do not need to care about the network privacy anymore.<br />The network cables joining computers (servers) belong to different companies. A new antimonopoly legislation prevents any company from owning more than two cables from each server. Furthermore, to avoid wasting resources, there is also a law specifying that the cable system owned by any single company cannot be redundant, i.e., removal of any of the cables will disconnect some two previously connected servers. Since the companies buy and sell the cables all the time, it is quite difficult to enforce these regulations. Your task is to write a program that does so.</p>','<p>The input contains several instances. The first line of each instance contains four integers N , M , C and T separated by spaces — the number of servers (1 ≤ N ≤ 8 000), the number of cables (0 ≤ M ≤ 100 000), the number of companies (1 ≤ C ≤ 100), and the number of cable-selling transactions (0 ≤ T ≤ 100 000), respectively.<br />The following M lines describe the cables. Each of them contains three integers S<sub>j1</sub> , S<sub>j2</sub> and K<sub>j</sub> , separated by spaces, giving the numbers of the servers S<sub>j1</sub> and S<sub>j2</sub> (1 ≤ S<sub>j1</sub> &lt; S<sub>j2</sub> ≤ n) joined by that cable and the number of the company K<sub>j</sub> (1 ≤ K<sub>j</sub> ≤ C) initially owning the cable. For each pair of servers, there is at most one cable joining them. The initial state satisfies the regulations, i.e., each company owns at most two cables incident with each server, and the system of cables owned by a single company has no cycles.<br />Finally, each of the next T lines contains integers S<sub>i1</sub> , S<sub>i2</sub> and K<sub>i</sub> describing one transaction in which the company K<sub>i</sub> (1 ≤ K<sub>i</sub> ≤ C) tries to buy a cable between servers S<sub>i1</sub> and S<sub>i2</sub> (1 ≤ S<sub>i1</sub> &lt; S<sub>i2</sub> ≤ N ).<br />The last instance is followed by a line containing four zeros.</p>','<p>For each input instance, output T lines describing the outcome of the transactions. The possible<br />outcomes are<br />• “No such cable.” if the pair of servers is not joined by a cable,<br />• “Already owned.” if the cable is already owned by the company K<sub>i</sub> ,<br />• “Forbidden:<br />monopoly.” if the company K<sub>i</sub> already owns two cables at S<sub>i1</sub> or S<sub>i2</sub> ,<br />• “Forbidden: redundant.” if K<sub>i</sub> owns at most one cable at each of S<sub>i1</sub> and S<sub>i2</sub> , but<br />granting the ownership would create a cycle of cables owned by K<sub>i</sub> ,<br />• “Sold.” if none of the above restrictions apply. In this case, the ownership of the cable<br />between S<sub>i1</sub> and S<sub>i2</sub> changes to K<sub>i</sub> for the purpose of further transactions.<br />Print one empty line after each instance.</p>','4 5 3 5\n1 2 1\n2 3 1\n3 4 2\n1 4 2\n1 3 3\n1 2 3\n1 2 3\n1 4 3\n2 3 3\n2 4 3\n2 1 1 1\n1 2 1\n1 2 1\n0 0 0 0','Sold.\nAlready owned.\nForbidden: monopoly.\nForbidden: redundant.\nNo such cable.\n\nAlready owned.\n','',45,0,1,128,11,0,14,12),(1143,'Trail','<p>Have you ever read any description of some encryption algorithm? These descriptions almost always include messages being sent between Alice and Bob. We (the people organizing the 2011 Central Europe Regional Contest) think that those descriptions are too impersonal — considering these two people are probably the most famous cryptographers in the whole world, we know so little about them. They deserve more attention, don’t you think? We can learn about their hobbies, for instance.</p>\n<p>In their free time, Alice and Bob like to play a game inspired by Tron. In this game, you race a car through a square grid and you need to avoid hitting obstacles placed in the grid. Furthermore, the car leaves a permanent trail, which you also need to avoid. The car only moves in the four cardinal directions (east, west, north, or south). In their version of the game, Alice and Bob alternate in controling the car—Alice starts, moves the car from its initial position to one of the adjacent positions in the grid, then Bob takes over and moves the same car to another adjacent position, etc.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1146_41d524e9e817e09a7187698d9a3923cd.jpg\" src=\"assets/problem_images/1146_41d524e9e817e09a7187698d9a3923cd.jpg\" height=\"146\" width=\"234\" /></p>\n<p align=\"left\">The player who crashes the car (i.e., moves it to a position occupied by an obstacle, or to one of the previously visited positions) loses. Both Alice and Bob are incredibly skilled players and never make mistakes; in particular, they only crash if there is no possible move from their current position that would avoid it. Given the map of the obstacles, your task is to determine which player wins from which initial position.</p>','<p>The input contains descriptions of several game fields. The first line of each description contains two integers N and E (1 ≤ N, E ≤ 100) — the size of the grid in the north-south and in the east-west directions. The following N lines describe the map. Each of the lines contains a string of E characters, where the j-th character on the i-th line determines the state of the position with coordinates (j, i). The possible characters are “.” (a dot) if the position is empty and the uppercase letter “X” if there is an obstacle. All positions not covered by the map (i.e., with coordinates (j, i) such that i ≤ 0 or j ≤ 0 or i &gt; N or j &gt; E) are forbidden and not used in the game, they work as if there were obstacles.<br />The last game field is followed by a line containing two zeros.</p>','<p>For each game field, output N lines of strings of length E, showing whether Alice or Bob wins when the game starts from the given location. The j-th character on the i-th line should be “A” if Alice wins when starting from the position (j, i), “B” if Bob wins, or “X” if the position contains an obstacle.<br />After each output, print one empty line.</p>','1 1\n.\n3 3\n...\n.X.\n...\n1 4\n....\n3 3\nX.X\n...\nX.X\n5 8\n........\n.XX.XXX.\n.X..X...\n.X.XX.X.\n........\n0 0\n','B\n\nAAA\nAXA\nAAA\n\nAAAA\n\nXBX\nBAB\nXBX\n\nBABABABA\nAXXBXXXB\nBXBAXABA\nAXAXXBXB\nBABABABA\n','',45,0,1,128,10,3,9,10),(1144,'Unchange','<p>Steganography is a special way to protect messages — instead of encryption, the message is somehow hidden. Historically, it was quite a popular technique, but nowadays it is superseded by ciphers, especially those based on keys. However, sometimes it may still be in use. One of the digital steganographic techniques is to hide small pieces of information into a digital image. The image modification is so small that it cannot be spotted by a human eye, but the information (such as a text message) is there and readable by computers. Your task is to compare two images and find such (possibly small) differences.<br />In this problem, we will focus on vector pictures. Your program is given two pictures and it should decide whether they contain the same image. Geometrically speaking, decide whether the two picture are similar, that means whether they can be transformed into each other using translation, rotation, and uniform scaling (but not mirroring). An example of two similar pictures follows.</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1147_3ec91b1ee8d0533eae1390d158cbcfb0.jpg\" src=\"assets/problem_images/1147_3ec91b1ee8d0533eae1390d158cbcfb0.jpg\" height=\"152\" width=\"409\" /><br /><div align=\"left\"><br /></div></div>','<p>The input file consists of several test cases, each of them containing two vector pictures. Each picture is described by a sequence of instructions for a plotter device, one instruction per row. Every instruction begins with an uppercase letter followed by one space character and two integer coordinates separated by another space. The letter is either “L” (draw a line) or “M” (move without drawing). The coordinates specify the place to which the line is to be drawn or the current position moved. Coordinates are always given relatively to the end position of the previous instruction. The first instruction is relative to some (unspecified) starting point.<br />The last instruction of each picture is followed by a row containing the letter “E” (end) and an empty line. The last test case will be followed by a row containing the letter “Q” (quit). The number of instructions for any picture is between 0 and 1000, inclusive. No instruction has both coordinates equal to zero. The absolute value of all (relative) coordinates is at most 1000. </p>','<p>For each test case, print one line containing either the word “YES” (two pictures are similar) or “NO” (pictures are not similar).</p>','L 3 1\nL 3 1\nM 3 1\nL -3 -1\nE\n\nL 1 0\nL -1 0\nE\n\nL 1 0\nL 0 1\nE\n\nL 1 0\nL -1 -1\nE\n\nL 2 0\nL 1 1\nL 0 1\nL 2 3\nL 0 1\nL -1 1\nL -2 0\nL -1 -1\nL 0 -1\nL 2 -3\nM 1 0\nL -2 0\nM 2 0\nL 0 -1\nL -1 1\nL -1 -1\nL 0 1\nE\n\nL 2 -4\nL 3 -1\nL 2 1\nL 1 -2\nL -2 -1\nL 1 3\nL -3 1\nL 2 1\nL 1 -2\nL 8 -1\nL 2 1\nL 1 3\nL -2 4\nL -3 1\nL -2 -1\nL -4 -7\nE\n\nQ','YES\nNO\nYES','',45,0,1,128,11,3,8,10),(1145,'Unique','<p>&nbsp;The security of many ciphers strongly depends on the fact that the keys are unique and never re-used. This may be vitally important, since a relatively strong cipher may be broken if the same key is used to encrypt several different messages. In this problem, we will try to detect repeating (duplicate) usage of keys. Given a sequence of keys used to encrypt messages, your task is to determine what keys have been used repeatedly<br />in some specified period.</p>','<p>The input contains several cipher descriptions. Each description starts with one line containing two integer numbers M and Q separated by a space. M (1 ≤ M ≤ 1 000 000) is the number of encrypted messages, Q is the number of queries (0 ≤ Q ≤ 1 000 000). Each of the following M lines contains one number Ki (0 ≤ Ki ≤ 230 ) specifying the identifier of a key used to encrypt the i-th message. The next Q lines then contain one query each. Each query is specified by two integer numbers Bj and Ej , 1 ≤ Bj ≤ Ej ≤ M , giving the interval of<br />messages we want to check.<br />There is one empty line after each description. The input is terminated by a line containing two zeros in place of the numbers M and Q.</p>','<p>For each query, print one line of output. The line should contain the string “OK” if all keys used to encrypt messages between Bj and Ej (inclusive) are mutually different (that means, they have different identifiers). If some of the keys have been used repeatedly, print one identifier of any such key.<br />Print one empty line after each cipher description.</p>','10 5\n3\n2\n3\n4\n9\n7\n3\n8\n4\n1\n1 3\n2 6\n4 10\n3 7\n2 6\n5 2\n1\n2\n3\n1\n2\n2 4\n1 5\n0 0\n','3\nOK\n4\n3\nOK\n\nOK\n1\n','',45,0,1,128,11,5,29,12),(1146,'Vignere','<p>&nbsp;One of the oldest and most common encryption algorithms is Vigen`re Cipher. It is quite an old thing — a similar encryption was first described in 1553 by Giovan Battista Bellaso and improved in 1586 by Blaise de Vigen`re.<br />Vigen`re encryption produces a single letter of ciphertext for each letter of plaintext, combining one plaintext letter with one single letter of a key on the corresponding position. If the key is shorter than the plaintext, it is simply repeated as needed, e.g. for a key of length 3 and plaintext of length 7, letters will be combined like this (K<sub>i</sub> is the key letter, P<sub>i </sub>is the plaintext letter, and Ci is the resulting ciphertext letter).</p>\n<p align=\"center\">K<sub>1</sub> K<sub>2</sub> K<sub>3 </sub>K<sub>1</sub> K<sub>2</sub> K<sub>3 </sub>K<sub>1</sub><br />P<sub>1</sub> P<sub>2</sub> P<sub>3</sub> P<sub>4</sub>&nbsp; P<sub>5</sub> P<sub>6</sub> P<sub>7 <br /></sub>C<sub>1</sub> C<sub>2</sub> C<sub>3</sub> C<sub>4</sub> C<sub>5</sub> C<sub>6</sub> C<sub>7</sub></p>\n<p>The letter of the key specifies how many positions should be the plaintext letter “shifted forward” in the alphabet. If a key letter is A, the correspoding plaintext letter will be shifted by one character, B means two positions, etc. The alphabet is considered circular, so if the last letter (Z) should be shifted, it becomes A again. Please note that A (key) combined with another A (plaintext) will result in B, which may be a little unusual for the common Vigen`re cipher. The Vigen`re square at the end of this problem statement gives an overview how letters of a plaintext get combined with letters of a key to produce the ciphertext.<br />Your task is to write a program that will encrypt messages using the Vigen`re cipher with a given key.</p>','<p>The input contains several instances. Each instance consists of two lines, the first line is the encryption key and the second line is the plaintext. Both key and plaintext consist of uppercase letters of the English alphabet {A, B, C, ..., Z}. The length of the key will be between 1 and 1000, the length of the plaintext between 1 and 100 000, inclusive. Input is terminated by a line containing one zero.</p>','<p>For each input instance, output the ciphertext — the encrypted version of the message.</p>','ICPC\nTHISISSECRETMESSAGE\nACM\nCENTRALEUROPEPROGRAMMINGCONTEST\nLONGKEY\nCERC\n0\n','CKYVRVIHLUUWVHIVJJU\nDHAUUNMHHSRCFSEPJEBPZJQTDRAUHFU\nOTFJ\n','',45,0,1,128,11,63,87,12),(1131,'Logic','<p>\nThe Department of Computer Science and Engineering runs courses dealing \nnot only with algorithms but also with computer hardware. One such \nintroductory course explains basic principles of integrated circuits \n(\"chips\"), binary logic, boolean algebra, etc. As you may know, the very\n basic units of logical circuits are called <em>gates</em>. A gate is an element performing one simple logical operation. It can be connected to other gates using <em>lines</em>. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1132_167f609888cefe9a9a9ad5ecf3847c39.jpg\" src=\"assets/problem_images/1132_167f609888cefe9a9a9ad5ecf3847c39.jpg\" /></p>\n<p> </p>\n<p>\nLogical circuits may be drawn as pictures with the gates represented as \nsquares with inputs on the left and outputs on the right. In each \nsquare, there is a symbol that determines the gate type: Number 1 \ndenotes an OR gate (its outputs are 0 if and only if there is no input \nwith the value of 1), &amp; is an AND gate (outputs are 1 if and only if\n there is no 0 input), and = is a XOR gate (outputs are 1 if and only if\n there is an odd number inputs that have the value of 1).\n</p>\n<p>\nYour task is to scan such a \"picture\" and compute values of all named \ncircuit outputs. The lines may split and join again but you may assume \nthat each \"value consumer\" (input port of a gate or a named output) will\n be connected to exactly one \"value source\" (output port of a gate or an\n input value). There will be no feedback loops, i.e., there exists no \ncycle that would lead through the same gate twice.\n</p>','<p>\nThe input contains several pictures. Each picture consists of at least one and at most 200 rows\ncomposed of the following characters:\n</p>\n<p> </p>\n<ul>\n	<li><strong>Space</strong> (\" \"). Empty space in the picture. Spaces are used to \nindent other characters to appropriate locations, because the exact \nposition of characters is often important. Trailing spaces at the end of\n input rows may be present but may also be left out.</li>\n	<li><strong>Dash</strong> (\"-\"). Horizontal line. It connects characters on its \nleft and right together, those characters will always exist and be able \nto \"accept\" the connection.</li>\n	<li><strong>Pipe</strong> (\"|\"). Vertical line, connects characters that are \ndirectly above and below. Like with the horizontal line, those \ncharacters will always accept the connection.</li>\n	<li><strong>Plus sign</strong> (\"+\"). Line connection or a bend. Connects \ncharacters on all four sides. All characters that are able to accept the\n connection are considered connected (there will always be at least \ntwo). However, there may be sides that contain a non-empty character \nthat is not connected. For example, if a dash is present on a position \ndirectly below the plus sign, they are not considered connected.</li>\n	<li>Lowercase letter x (\"x\"). Crossing of two lines without a \nconnection. All four neighboring characters will accept the connection. \nThe character above is connected to the one below and the character to \nthe left with the one on the right, but there is no mutual connection \nbetween these two pairs.</li>\n	<li><strong>Equal sign</strong> (\"=\"). Represents an input or output port. It \nalways connects characters on its left and right, at least one of these \ncharacters is the port. If there is a port on the left, it may only be a\n value source. If there is a port on the right, it may only be a value \nconsumer.</li>\n	<li><strong>Lowercase letter o</strong> (\"o\"). Negation. There will always be a \ngate on the left and a port on the right of this character. It makes the\n particular gate output negated.</li>\n	<li><strong>Hash mark</strong> (\"#\"). Gate, which has always a rectangular shape \nwith two vertical and two horizontal sides. The left vertical side may \nbe connected to input ports, the right side to output ports (possibly \nnegated). No two gates will touch each other\'s side, which means that \nany two vertically or horizontally neighboring hash marks are always \nparts of the same gate. <br />\nThe rectangle size will always be at least 3 characters in both \ndirections, which means there is at least one character inside. All \ninner characters are empty (spaces), with exactly one exception. That \nsingle non-empty character denotes the gate type (note that it may have \ndifferent meaning than outside the gate area) and will be a digit \"one\" \n(\"1\"), ampersand (\"&amp;\"), or an equal sign (\"=\").\n</li>\n	<li><strong>Binary digit</strong> (\"0\" and \"1\"). Input value of the circuit. It is connected to the character on its right, which is always an equal sign.</li>\n	<li><strong>Uppercase letter</strong> (\"A\" through \"Z\"). Named output of the \ncircuit. It accepts connection from its left, which is always an equal \nsign. Each letter will appear at most once, which means the number of \ncircuit outputs is between 0 and 26, inclusive.</li>\n</ul>\n<p>\nEach picture will be terminated by a row consisting solely of asterisk \n(\"*\") characters (at least one). The last picture will be followed by \ntwo such rows. No row in the input will be longer than 200 characters.\n</p>','','  0=+\n       |\n       | #######\n       +=#     #\n         # &   #o=--+\n1=------=#     #    |\n         #     #    |\n         #######    +--=### ###\n                    |   #=#=#1#o==X\n       1=-----------x--=# # ###\n               1=---x--=###\n                    +------------=Y\n***********************************\n1=A\n***\n*','X=0\nY=1\n\nA=1','',40,0,1,32,2,0,0,12),(1132,'Weird Numbers','<p>\nBinary numbers form the principal basis of computer science. Most of you\n have heard of other systems, such as ternary, octal, or hexadecimal. \nYou probably know how to use these systems and how to convert numbers \nbetween them. But did you know that the system base (radix) could also \nbe negative? One assistant professor at the Czech Technical University \nhas recently met negabinary numbers and other systems with a negative \nbase. Will you help him to convert numbers to and from these systems?\n</p>\n<p>\nA number <em>N</em> written in the system with a positive base <em>R</em> will always appear as a string of digits between 0 and R - 1, inclusive. A digit at the position <em>P</em> (positions are counted from right to left and starting with zero) represents a value of <em>R<sup>P</sup></em>. This means the value of the digit is multiplied by <em>R<sup>P</sup></em> and values of all positions are summed together. For example, if we use the octal system (radix <em>R</em> = 8), a number written as 17024 has the following value:\n</p>\n<center>1*8<sup>4</sup> + 7*8<sup>3</sup> + 0*8<sup>2</sup> + 2*8<sup>1</sup> + 4*8<sup>0</sup> = 1*4096 + 7*512 + 2*8 + 4*1 = 7700</center><p>\nWith a negative radix <em>-R</em>, the principle remains the same: each digit will have a value of <em>(-R)<sup>P</sup></em>. For example, a negaoctal (radix <em>R</em> = -8) number 17024 counts as:\n</p>\n<center>1*(-8)<sup>4</sup> + 7*(-8)<sup>3</sup> + 0*(-8)<sup>2</sup> + 2*(-8)<sup>1</sup> +4*(-8)<sup>0</sup> = 1*4096 - 7*512 - 2*8 + 4*1 = 500</center><p>\nOne big advantage of systems with a negative base is that we do not need a minus sign to express\nnegative numbers. A couple of examples for the negabinary system (<em>R</em> = -2):\n</p>\n<table align=\"center\" border=\"1\">\n	<tbody><tr>\n		<th align=\"center\">decimal\n		</th><th align=\"center\">negabinary\n		</th><th align=\"center\">decimal\n		</th><th align=\"center\">negabinary\n		</th><th align=\"center\">decimal\n		</th><th align=\"center\">negabinary\n	</th></tr>\n	<tr>\n		<td align=\"right\">-10</td>\n		<td align=\"right\">1010</td>\n		<td align=\"right\">-3</td>\n		<td align=\"right\">1101</td>\n		<td align=\"right\">4</td>\n		<td align=\"right\">100</td>\n	</tr>\n	<tr>\n		<td align=\"right\">-9</td>\n		<td align=\"right\">1011</td>\n		<td align=\"right\">-2</td>\n		<td align=\"right\">10</td>\n		<td align=\"right\">5</td>\n		<td align=\"right\">101</td>\n	</tr>\n	<tr>\n		<td align=\"right\">-8</td>\n		<td align=\"right\">1000</td>\n		<td align=\"right\">-1</td>\n		<td align=\"right\">11</td>\n		<td align=\"right\">6</td>\n		<td align=\"right\">11010</td>\n	</tr>\n	<tr>\n		<td align=\"right\">-7</td>\n		<td align=\"right\">1001</td>\n		<td align=\"right\">0</td>\n		<td align=\"right\">0</td>\n		<td align=\"right\">7</td>\n		<td align=\"right\">11011</td>\n	</tr>\n	<tr>\n		<td align=\"right\">-6</td>\n		<td align=\"right\">1110</td>\n		<td align=\"right\">1</td>\n		<td align=\"right\">1</td>\n		<td align=\"right\">8</td>\n		<td align=\"right\">11000</td>\n	</tr>\n	<tr>\n		<td align=\"right\">-5</td>\n		<td align=\"right\">1111</td>\n		<td align=\"right\">2</td>\n		<td align=\"right\">110</td>\n		<td align=\"right\">9</td>\n		<td align=\"right\">11001</td>\n	</tr>\n	<tr>\n		<td align=\"right\">-4</td>\n		<td align=\"right\">1100</td>\n		<td align=\"right\">3</td>\n		<td align=\"right\">111</td>\n		<td align=\"right\">10</td>\n		<td align=\"right\">11110</td>\n	</tr>\n</tbody></table><p>\nYou may notice that the negabinary representation of any integer number \nis unique, if no \"leading zeros\" are allowed. The only number that can \nstart with the digit \"0\", is the zero itself.\n</p>','<p>\nThe input will contain several conversions, each of them specified on \none line. A conversion from the decimal system to some negative-base \nsystem will start with a lowercase word \"to\" followed by a minus sign \n(with no space before it), the requested base (radix) <em>R</em>, one space, and a decimal number <em>N</em>.\n</p>\n<p>\nA conversion to the decimal system will start with a lowercase word \"from\", followed by a minus\nsign, radix <em>R</em>, one space, and a number written in the system with a base of <em>-R</em>.\n</p>\n<p>\nThe input will be terminated by a line containing a lowercase word \n\"end\". All numbers will satisfy the following conditions: 2 &lt;= <em>R</em> &lt;= 10, -1 000 000 &lt;= N &lt;= 1 000 000 (decimal).\n</p>','<p>\nFor each conversion, print one number on a separate line. If the input \nused a decimal format, output the same number written in the system with\n a base <em>-R</em>. If the input contained such a number, output its decimal value.\n</p>\n<p>\nBoth input and output numbers must not contain any leading zeros. The \nminus sign \"-\" may only be present with negative numbers written in the \ndecimal system. Any non-negative number or a number written in a \nnegative-base system must not start with it.\n</p>','to-2 10\nfrom-2 1010\nto-10 10\nto-10 -10\nfrom-10 10\nend','11110\n-10\n190\n10\n-10','',40,0,1,64,2,6,16,12),(1133,'Rectangular Polygons','<p>\nIn this problem, we will help the Faculty of Civil Engineering. They \nneed a software to analyze ground plans of buildings. Specifically, your\n task is to detect outlines of a building when all of its corners are \ngiven. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1136_47be90f0232701d277caccc87f677a5d.jpg\" src=\"assets/problem_images/1136_47be90f0232701d277caccc87f677a5d.jpg\" /></p>\n<p>\nYou may assume that each building is a rectangular polygon with each of \nits sides being parallel either with X or Y axis. Therefore, each of its\n vertex angles is exactly either 90 or 270 degrees.\n</p>','<p>\nThe input contains several buildings. The description of each building starts with a single positive integer <em>N</em>, the number of corners (polygon vertices), 1 &lt;= N &lt;= 1000. Then there are <em>N</em> pairs of integer numbers <em>X<sub>i</sub></em>, <em>Y<sub>i</sub></em> giving coordinates of individual corners, |<em>X<sub>i</sub></em>|, |<em>Y<sub>i</sub></em>| &lt; 10 000. \n</p>\n<p>\nYou may assume that all corners are listed and no two of them have the \nsame coordinates. The polygon does always exist, it is closed, its sides\n do not intersect or touch (except neighboring sides, of course), and it\n contains no \"holes\" inside. In other words, the outline is formed by \none closed line. The order of corners in the input file may be \narbitrary.\n</p>\n<p>\nThere is an empty line after each building, then the next one is \ndescribed. After the last building, there is a single zero that signals \nthe end of input. </p>\n<p>\nThe second sample input corresponds to the picture.\n</p>','<p>\nFor each building, output one line containing <em>N</em> characters \nwithout any whitespace between them. The characters should be uppercase \nletters that specify directions of individual walls (sides) when the \nbuilding outline is followed. \"N\" stands for North (the positive \ndirection of the Y axis), \"E\" for East (the positive direction of the X \naxis), \"W\" for West, and \"S\" for South. The \"walk\" should start in the \nvertex that has been given first in the input and always proceed in the \nclockwise direction.\n</p>','4\n0 0\n2 2\n0 2\n2 0\n\n6\n1 1\n2 2\n0 1\n1 0\n0 2\n2 0\n\n0','NESW\nWNESWN','',40,0,1,64,2,4,7,12),(1134,'Reaux! Sham! Beaux!','<p>\nRoshambo - this simple game is known all around the world. In German, it\n is called \"Schnick, Schnack, Schnuck\", in Japanese \"Janken\", in Spanish\n \"Cachipun\", in Polish \"Papier, kamien, nozyce\". The Czechs call it \n\"Kamen, nuzky, papir\".\n</p>\n<p>\nWhatever is the name of the game, its principles remain the same. Two \nplayers simultaneously form their hand into one of three possible shapes\n (symbols): Rock (closed fist), Paper (open hand), or Scissors (two \nfingers extended). If both of them show the same symbol, it is a tie and\n no points are given. Otherwise, one of the symbols wins: Rock blunts \nScissors, Scissors cut Paper, and Paper covers Rock.\n</p>\n<p>\nCzech Technical University students also know the game very well and use\n it to resolve small disputes. Imagine, for example, two students living\n together in one room. Yesterday evening, there was a small celebration,\n and in the morning, no one wants to go to the lectures. They agreed \nthat one person would be enough to take notices for both, but who will \nbe the poor one? Roshambo is a very effective way to decide.\n</p>\n<p>\nDid you know there are even the World Series of Roshambo? Our organizing\n team would like to host the World Championships in 2009. Your task is \nto help us in developing a Roshambo scoring system and write a program \nthat evaluates one game between two players.\n</p>\n<p>\nSince the participants will come from different countries, the system \nmust accept input in various languages. The following table shows names \nof three Roshambo symbols. Note that in some languages, there may be two\n different words for the same symbol.\n</p>\n	<table align=\"center\" border=\"1\"><tbody><tr>\n		<th>Language</th>\n		<th>Code</th>\n		<th>Rock</th>\n		<th>Scissors</th>\n		<th>Paper</th>		\n	</tr>\n	<tr>\n		<td>Czech</td>\n		<td>cs</td>\n		<td>Kamen</td>\n		<td>Nuzky</td>\n		<td>Papir</td>\n	</tr>\n	<tr>\n		<td>English</td>\n		<td>en</td>\n		<td>Rock</td>\n		<td>Scissors</td>\n		<td>Paper</td>\n	</tr>    \n	<tr>\n		<td>French</td>\n		<td>fr</td>\n		<td>Pierre</td>\n		<td>Ciseaux</td>\n		<td>Feuille</td>\n	</tr>\n	<tr>\n		<td>German</td>\n		<td>de</td>\n		<td>Stein</td>\n		<td>Schere</td>\n		<td>Papier</td>\n	</tr>\n	<tr>\n		<td>Hungarian</td>\n		<td>hu</td>\n		<td>Ko | Koe</td>\n		<td>Ollo | Olloo</td>\n		<td>Papir</td>\n	</tr>\n	<tr>\n		<td>Italian</td>\n		<td>it</td>\n		<td>Sasso | Roccia</td>\n		<td>Forbice</td>\n		<td>Carta | Rete</td>\n	</tr>\n	<tr>\n		<td>Japanese</td>\n		<td>jp</td>\n		<td>Guu</td>\n		<td>Choki</td>\n		<td>Paa</td>\n	</tr>	   \n	<tr>\n		<td>Polish</td>\n		<td>pl</td>\n		<td>Kamien</td>\n		<td>Nozyce</td>\n		<td>Papier</td>\n	</tr>\n	<tr>\n		<td>Spanish</td>\n		<td>es</td>\n		<td>Piedra</td>\n		<td>Tijera</td>\n		<td>Papel</td></tr></tbody></table>','<p>\nThe input contains several games. Each game starts with two lines \ndescribing players. Each of these two lines contains two lowercase \nletters specifying the language used by the player (see the language \ncode in the table above), one space, and a player name. The name will \nconsist from\nat most twenty upper- or lower-case letters.\n</p>\n<p>\nAfter the players description, there are at most 100 lines containing \nindividual rounds. Each round is described by two words separated with \none space. The words name the symbol shown by the first and second \nplayer, respectively. All symbols are named in the mother tongue of the \nconcerned player. All allowed words are shown in the table above, the \nfirst letter will be always in uppercase, all other letters in \nlowercase.\n</p>\n<p>\nThe last round is followed by a line containing one single dash \ncharacter (\"-\") and then the next game begins. The only exception is the\n last game in the input, which is terminated by a dot (\".\") instead of \nthe dash.\n</p>','<p>\nFor each game, print five lines of output. The first line should contain the string \"Game #G:\", where <em>G</em> is the number of the game, starting with one.\n</p>\n<p>\nThe second line will contain the first player name followed by a colon \n(\":\"), one space and the number of rounds won by that player. The number\n should be followed by one space and the word \"points\". Use the singular\n form \"point\" if (and only if) the number of points of the player equals\n one.\n</p>\n<p>\nThe third line has the same format and shows the second player\'s name and points.\n</p>\n<p>\nThe fourth line displays the outcome of the game. It must contain the \nword \"WINNER\" followed by a colon, space and the name of the player who \ngained more points. If both players have the same number of points, the \nfourth line will contain words \"TIED GAME\" instead.\n</p>\n<p>\nThe fifth line is left empty to visually separate individual games. </p>\n<p>\nAcknowledgements to Wikipedia, the free encyclopedia, for providing \nbackground information and symbol names in various languages. If your \nown language is missing, it may be because it has no article on Roshambo\n in Wikipedia.\n</p>','cs Pepik\nen Johnny\nNuzky Scissors\nPapir Rock\nPapir Scissors\n-\nde Gertruda\ncs Lenka\nStein Papir\nSchere Kamen\n.','Game #1:\nPepik: 1 point\nJohnny: 1 point\nTIED GAME\n\nGame #2:\nGertruda: 0 points\nLenka: 2 points\nWINNER: Lenka','',40,0,1,64,2,41,124,12),(1135,'Robotic Sort','<p>\nSomewhere deep in the Czech Technical University buildings, there are \nlaboratories for examining mechanical and electrical properties of \nvarious materials. In one of yesterday\'s presentations, you have seen \nhow was one of the laboratories changed into a new multimedia lab. But \nthere are still others, serving to their original purposes.\n</p>\n<p>\nIn this task, you are to write software for a robot that handles samples\n in such a laboratory. Imagine there are material samples lined up on a \nrunning belt. The samples have different heights, which may cause \ntroubles to the next processing unit. To eliminate such troubles, we \nneed to sort the samples by their height into the ascending order. \n</p>\n<p>\nReordering is done by a mechanical robot arm, which is able to pick up \nany number of consecutive samples and turn them round, such that their \nmutual order is reversed. In other words, one robot operation can \nreverse the order of samples on positions between <em>A</em> and <em>B</em>.\n</p>\n<p>\nA possible way to sort the samples is to find the position of the smallest one (<em>P<sub>1</sub></em>) and reverse the order between positions 1 and <em>P<sub>1</sub></em>, which causes the smallest sample to become first. Then we find the second one on position <em>P<sub>2</sub></em> and reverse the order between 2 and <em>P<sub>2</sub></em>. Then the third sample is located etc. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1138_39d82c461d476b3e53ca6de6857066ae.jpg\" src=\"assets/problem_images/1138_39d82c461d476b3e53ca6de6857066ae.jpg\" /></p>\n<p>\nThe picture shows a simple example of 6 samples. The smallest one is on \nthe 4th position, therefore, the robot arm reverses the first 4 samples.\n The second smallest sample is the last one, so the next robot operation\n will reverse the order of five samples on positions 2 - 6. The third \nstep will be to reverse the samples 3 - 4 etc.\n</p>\n<p>\nYour task is to find the correct sequence of reversal operations that \nwill sort the samples using the above algorithm. If there are more \nsamples with the same height, their mutual order must be preserved: the \none that was given first in the initial order must be placed before the \nothers in the final order too.\n</p>','<p>\nThe input consists of several scenarios. Each scenario is described by two lines. The first line contains one integer number <em>N</em>, the number of samples, 1 &lt;= N &lt;= 100 000. The second line lists exactly <em>N</em> space-separated positive integers, they specify the heights of individual samples and their initial order. \n</p>\n<p>\nThe last scenario is followed by a line containing zero.\n</p>','<p>\nFor each scenario, output one line with exactly <em>N</em> integers <em>P<sub>1</sub></em>, <em>P<sub>2</sub></em>, . . .<em>P<sub>N</sub></em>, separated by a space. Each <em>P<sub>i</sub></em> must be an integer (1 &lt;= <em>P<sub>i</sub></em> &lt;= <em>N</em>) giving the position of the <em>i</em>-th sample just before the <em>i</em>-th reversal operation.\n</p>\n<p>\nNote that if a sample is already on its correct position <em>P<sub>i</sub></em>, you should output the number <em>P<sub>i</sub></em> anyway, indicating that the \"interval between <em>P<sub>i</sub></em> and <em>P<sub>i</sub></em>\" (a single sample) should be reversed.\n</p>','6\n3 4 5 1 6 2\n4\n3 3 2 1\n0','4 6 4 5 6 6\n4 2 4 4','',40,0,1,32,2,4,31,12),(1136,'Water','<p>\nCzech Technical University has the word \"technical\" in its name. Beside \nothers, this means that lectures in physics are important here. Do you \nstill remember some of the basic physical principles?\n</p>\n<p>\nFor example, imagine a simple glass of water. Or, we will rather call it\n a cup to avoid ambiguity of this word. So, imagine a simple cup (made \nof glass) that is partially filled with water. You might have noticed \nthat the stability of such a cup depends on the amount of water inside. \nIf you brush against a full cup, it is relatively easy to knock it down \nand spill its contents. If the cup is empty, there is fortunately \nnothing to be spilled, but other than that, the situation does not \nimprove much - it is still easy to knock the cup down with only a little\n force. The best stability is usually achieved with a \"half-full\" cup.\n</p>\n<p>\nIn this problem, your task is to determine the water level that makes a \ncup as much stable as possible. For the purpose of this problem, we will\n make a simple assumption that the \"stability\" of a cup is higher, if \nits center of mass (sometimes also called the center of gravity) is \nlower (closer to the bottom).\n</p>\n<p>\nThe <em>center of mass</em> can be informally defined as follows: Imagine \nthat glass and water consist of a very large number of very small \nparticles. Then the center of mass is an average of the position of all \nthese particles. The average is weighted by particle masses. Since the \ndensity of glass is\napproximately 2 500 <em>kg·m<sup>-3</sup></em> and the density of water only 1 000 <em>kg·m<sup>-3</sup></em>, we will suppose that the mass of a glass particle is 2.5 times higher than the mass of a water particle of the same size.\n</p>\n<p>\nAll cups considered in this problem will have an exact rotary shape. But\n their radius may vary with the height - some cups are wider at the top,\n others are wider at the bottom. Also, the thickness of the glass may \nnot be constant. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1138_3ae11c0c38b7ce7f32d7adf8ffc2b8fc.jpg\" src=\"assets/problem_images/1138_3ae11c0c38b7ce7f32d7adf8ffc2b8fc.jpg\" /></p>\n<p>\nThe left figure shows a typical cup considered in this problem. It can be fully described by its height (<em>H</em>), thickness of the bottom (<em>B</em>), and two functions <em>R</em> and <em>T</em>. Both of these functions take a current height as their argument and they give the outer radius (<em>R</em>) and glass thickness (<em>T</em>)\n in the appropriate height. Please note that the thickness is always \nmeasured strictly horizontally and may therefore not reflect the \"real \nthickness\" of the glass in its usual meaning.\n</p>','<p>\nThe input contains several cup descriptions. Each description consists of three lines. The first line contains two numbers: <em>H</em> (cup height) and <em>B</em> (bottom thickness), 0 &lt; <em>B</em> &lt; <em>H</em> &lt;= 100. The second line contains an expression <em>R</em>(x) (radius), the third line an expression <em>T</em>(x) (glass thickness). All data are given in centimeters. The last description is followed by a line with two zeros.\n</p>\n<p>\nThe expressions will contain only digits (\"0\" through \"9\"), decimal \npoints (\".\"), four basic operators (\"+\", \"-\", \"*\", and \"/\"), parentheses\n (\"(\" and \")\"), and the lowercase letters \"x\" denoting the input \nvariable (height measured from the cup bottom).\n</p>\n<center>\n<em>forany</em> x, 0 &lt; x &lt;= <em>H</em>, the radius will satisfy: 0.1 &lt; <em>R</em>(x) &lt;= 100\n<em>forany</em> x, <em>B</em> &lt;= x &lt;= <em>H</em>, the thickness will satisfy: 0.1 &lt;= <em>T</em>(x) &lt; <em>R</em>(x)\n</center><p>\nArithmetical operators have their usual meaning and priorities, i.e., \nmultiplication and division have a higher priority than addition and \nsubtraction.\n</p>','<p>\nFor each cup, output the sentence \"Pour L litres / W cm of water.\", where <em>L</em> is the amount of water that must be poured into the cup to reach the maximal stability (in litres). <em>W</em>\n is the water level (in centimeters) measured from the bottom of the \ncup. Both numbers must be given with exactly three decimal digits.\n</p>','9 1\n3+x/6\n17/8-x/8\n10 1\n(x+10)\n10/(x+10)\n0 0','Pour 0.030 litres / 3.365 cm of water.\nPour 0.878 litres / 2.193 cm of water.\n','',40,0,1,32,10,0,0,12),(6010,'Form a Square','<p>Have you ever put up a tent on top of a mountain? The difficulty lies in finding \nthe appropriate positions to fix the nails on the ground, which is a mostly exposed \nrock where we can hardly press the nails.\n</p>\n<p>In our problem we have a square tent, which means we need to fix the four vertices \n  on the ground. For some reason the size of the tent is not very important, but \n  we need to accurately fix the vertices to form a square. Now we have picked \n  four spots that are suitable to press the nails and your job is to decide whether \n  the spots form a square.</p>','<p>Standard input will contain multiple test cases. The first line of the input \n  is a single integer T (1 &lt;= T &lt;= 50) which is the number of test cases. \n  T test cases follow, each preceded by a single blank line.</p>\n<p>Each test case contains 4 lines for the coordinates of the four distinct vertices \n  that are picked. Each line contains the x and y coordinates separated by a single \n  space (0 &lt; x, y &lt; 1,000). But please notice that the coordinates are not \n  necessarily given in either clockwise or counterclockwise order for a square.</p>','<p>Results should be directed to standard output. Start each case with \"Case \n  #:\" on a single line, where # is the case number starting from 1. Two consecutive \n  cases should be separated by a single blank line. No blank line should be produced \n  after the last test case.</p>\n<p>The output should be either \"Yes\" or \"No\", indicating whether \n  or not the four given positions can form a square.</p>','3\n\n1 1\n1 2\n2 1\n2 2\n\n1 1\n2 2\n3 3\n4 4\n\n1 2\n2 1\n2 3\n3 2','Case 1:\nYes\n\nCase 2:\nNo\n\nCase 3:\nYes','',-1,0,1,64,2,62,206,24),(6011,'A+B in Hogwarts','<p>If you are a fan of Harry Potter, you would know the school he is \nattending to, the Hogwarts School for Witchcraft and Wizardry.  What you\n might not know is that Harry is never good at math, yet he doesn\'t want\n to bother Hermione for trivial A+B problems.  Now your job is to write a\n simple calculator for him -- the calculator is so simple that it \nhandles non-negative integer additions only.</p>\n<p>What is not so simple is that the world of Witchcraft and Wizardry \ndosen\'t use a fixed radix numeration system.  That is, an integer is \nrepresented with different radices for different digits -- the radix for\n the i-th digit is the i-th prime number.  For example, the decimal \nnumber 2 is 10 in Hogwarts (let\'s denote it by 2<sub>10</sub> = 1,0<sub>H</sub>) since the radix for the 1st digit is the 1st prime number 2.  Similarly we have 6<sub>10</sub> = 1,0,0<sub>H</sub> since the radix for the 2nd digit is 3.\n</p>','<p>The input consists of multiple test cases, each occupies a line with two\n integers in Hogwarts\' system.  Digits of a Hogwarts\' integer are \nseperated by \',\' and the two numbers are seperated by a space.  Each \nnumber has at most 25 digits.</p>','<p>For each test case, print in one line the sum of the two given numbers in Hogwarts\' system.</p>','1,0 2,1\n4,2,0 1,2,0\n1 10,6,4,2,1','1,0,1\n1,1,1,0\n1,0,0,0,0,0','',-1,0,1,64,2,22,86,24),(6012,'Old Bill','<p>Among grandfather\'s papers a bill was found:</p>\n<p align=\"center\">72 turkeys $_679_</p>\n<p>\nThe first and the last digits of the number that obviously represented the\ntotal price of those turkeys are replaced here by blanks (denoted _), for\nthey are faded and are now illegible. What are the two faded digits and\nwhat was the price of one turkey?</p>\n<p>\nWe want to write a program that solves a general version of the above\nproblem:</p>\n<p align=\"center\">N turkeys $_XYZ_</p>\n<p>The total number of turkeys, N, is between 1 and 99, including both. The\ntotal price originally consisted of five digits, but we can see only the three\ndigits in the middle. We assume that the first digit is nonzero, that the\nprice of one turkey is an integer number of dollars, and that all the turkeys\ncost the same price.</p>\n<p>Given N, X, Y , and Z, write a program that guesses the two faded digits\nand the original price. In case that there is more than one candidate for\nthe original price, the output should be the most expensive one. That is,\nthe program is to report the two faded digits and the maximum price per\nturkey for the turkeys.</p>','<p>The input consists of T test cases. The number of test cases (T) is given\non the first line of the input file. The first line of each test case contains an\ninteger N (0 &lt; N &lt; 100), which represents the number of turkeys. In the\nfollowing line, there are the three decimal digits X, Y , and Z, separated\nby a space, of the original price $_XYZ_.</p>','<p>For each test case, your program has to do the following. For a test case,\nthere may be more than one candidate for the original price or there is\nnone. In the latter case your program is to report 0. Otherwise, if there\nis more than one candidate for the original price, the program is to report\nthe two faded digits and the maximum price per turkey for the turkeys.\nThe following shows sample input and output for three test cases.</p>','3\n72\n6 7 9\n5\n2 3 7\n78\n0 0 5','3 2 511\n9 5 18475\n0','',-1,0,1,64,2,82,170,24),(6013,'Series','<p>An arithmetic series consists of a sequence of terms such that each \nterm minus its immediate predecessor gives the same result. For example,\n the sequence 3, 7, 11, 15 is the terms of the arithmetic series \n3+7+11+15; each term minus its predecessor equals 4. (Of course there is\n no requirement on the first term since it has no predecessor.) </p>\n<p>Given a collection of integers, we want to find the longest \narithmetic series that can be formed by choosing a sub-collection \n(possibly the entire collection). </p>','<p>There are multiple cases, and each case contains 2 lines: the first line\n contains the count of integers (between 2 and 1000 inclusive), the \nfollowing line contains all the integers (between -1,000,000,000 and \n1,000,000,000 inclusive) separated by one or more spaces.</p>','<p>Print a single number for each case in a single line.</p>','7\n3 8 4 5 6 2 2\n4\n-1 -5 1 3\n4\n-10 -20 -10 -10','5\n3\n3','',-1,0,1,64,5,17,104,24),(6014,'Think Positive','<p>It is well known, that the year on planet Eisiem has n days. Of course, some days are very good for\npeople, while some others are just horrible. Long observations have shown for each day of the year\nwhether this day is good for most people, or bad.</p>\n<p>The new president of the Planet Federation wants all people to be happy. He knows that good emotions\nhave a tendency to accumulate, just like bad ones do. The New Year however is a special event and\nall emotions accumulated by this moment just disappear. Therefore the president wants to change the\ncalendar on Eisiem and choose the new first day of the year, so that the positive emotions would prevail\nthe whole year.</p>\n<p>More precisely, for all i from 1 to n let a<sub>i</sub> be 1 if i-th day is good for most people and -1 if it is bad. Let\ns<sub>jk</sub> be the sum of a<sub>i</sub> for all days from the j-th day of the year to the k-th, that is:</p>\n<p align=\"center\">\n<img class=\"\" alt=\"\" src=\"assets/problem_images/6014_4f6a306bca37b09f1f40f8477d41d988.jpg\" align=\"none\" /></p>\n<p>President wants to find such j to order the j-th day to be the first day of the year, that s<sub>jk</sub> is positive\nfor all k from 1 to n. Since he wants several variants to choose from, he asks you to find all such j. Since\nhe doesn\'t want to get too much information at once, first of all he wants to know the number of such j.\nThat is exactly your task.</p>','<p>The input contains multiple test cases. The first line of the input is a single integer T (1 &lt;= T &lt;= 30)\nwhich is the number of test cases. T test cases follow, each preceded by a single blank line.</p>\n<p>The first line of each test case contains n - the number of days (1 &lt;= n &lt;= 200 000). Next line contains n\ninteger numbers - a<sub>i</sub>.</p>','<p>For each case, output the number of different indices j, such that s<sub>jk</sub> is positive for all k, in a single line.</p>\n<p>\n is positive for all k, in a single line.</p>','2\n\n5\n1 -1 1 -1 1\n\n7\n1 1 1 1 1 1 1','1\n7','',-1,0,1,64,10,21,103,24),(6015,'Computer Transformation','<p>A sequence consisting of one digit, the number 1 is initially written\n into a computer. At each successive time step, the computer \nsimultaneously tranforms each digit 0 into the sequence 1 0 and each \ndigit 1 into the sequence 0 1. So, after the first time step, the \nsequence 0 1 is obtained; after the second, the sequence 1 0 0 1, after \nthe third, the sequence 0 1 1 0 1 0 0 1 and so on. </p>\n<p>How many pairs of consequitive zeroes will appear in the sequence after n steps? </p>','<p>Every input line contains one natural number n (0 &lt; n ≤1000).</p>','<p>For each input n print the number of consecutive zeroes pairs that will appear in the sequence after n steps.</p>','2\n3','1\n1','',-1,0,1,64,2,45,150,24),(6016,'Sticks','<p align=\"JUSTIFY\">Elistaniel is a very happy elf! He has found 4096 \nmagic sticks! He has put them on the ground in one row so that every \nstick is parallel to each other. But there is one problem with magic \nsticks: In each second one of the sticks changes its state, which means \nthat a parallel stick becomes normal and a normal stick becomes parallel\n (so the stick turns by 90 degrees).</p>\n<p>Your task is to tell Elistaniel length of the longest sequence of sticks forming \none line (sticks that have changed their state odd number of times) that\n occured during the observation time.</p>','<p>The firs line of input contains number t \n(1&lt;=t&lt;=20) - the number of test cases. Each test case begins with a\n single number n - meaning for how long Elistaniel has been watching the\n sticks. Then n lines follow. Number j in the i-th of the following \nlines means that in i-th second the j-th stick changed it state.</p>','<p>For each of test cases your program should write one number - length of the longest sequence of sticks forming a line.</p>','1\n6\n1\n3\n5\n2\n4\n3','5','',-1,0,1,64,5,41,104,10),(6017,'Daffodil number','<p>The daffodil number is one of the famous interesting numbers in the \nmathematical world. A daffodil number is a three-digit number whose \nvalue is equal to the sum of cubes of each digit.</p>\n<p>\nFor example. 153 is a daffodil as 153 = 1<sup>3</sup> + 5<sup>3</sup> + 3<sup>3</sup>.\n</p>','<p>There are several test cases in the input, each case contains a three-digit number.</p>','<p>One line for each case. if the given number is a daffodil number, then output \"Yes\", otherwise \"No\".</p>','153\n610','Yes\nNo','',-1,0,1,64,2,228,538,24),(6018,'Semi-Prime','<p>\n<strong><em> Prime Number Definition </em></strong> <br />\nAn integer greater than one is called a prime number if its only \npositive divisors (factors) are one and itself. For instance, 2, 11, 67,\n 89 are prime numbers but 8, 20, 27 are not.</p>\n<p>\n<strong><em> Semi-Prime Number Definition </em></strong> <br />\nAn integer greater than one is called a semi-prime number if it can be \ndecompounded to TWO prime numbers. For example, 6 is a semi-prime number\n but 12 is not.</p>\n<p>\nYour task is just to determinate whether a given number is a semi-prime number.\n</p>','<p>There are several test cases in the input. Each case contains a single integer N (2 &lt;= N &lt;= 1,000,000)</p>','<p>One line with a single integer for each case. If the number is a semi-prime number, then output \"Yes\", otherwise \"No\".</p>','3\n4\n6\n12','No\nYes\nYes\nNo','',-1,0,1,64,2,138,464,24),(6019,'Palindromes','<p>A regular palindrome is a string of numbers or letters that is the \nsame forward as backward. For example, the string \"ABCDEDCBA\" is a \npalindrome because it is the same when the string is read from left to \nright as when the string is read from right to left.</p>\n<p>Now give you a string S, you should count how many palindromes in any consecutive substring of S.</p>','<p>\nThere are several test cases in the input. Each case contains a non-empty string which has no more than 5000 characters.</p>\n<p>\nProceed to the end of file.</p>','<p>A single line with the number of palindrome substrings for each case.</p>','aba\naa','4\n3','',-1,0,1,64,5,54,214,24),(6020,'Triangular Sums','<p>\nThe nth Triangular number, T(n) = 1 + ... + n, is the sum of the first n\n integers. It is the number of points in a triangular array with n \npoints on side.</p>\n<p>\nFor example T(4):\n</p>\n<pre>   X\n  X X\n X X X\nX X X X\n</pre><p>\nWrite a program to compute the weighted sum of triangular numbers:\n</p>\n<p>\nW(n) = SUM[k = 1..n; k*T(k+1)] \n</p>','<p>\nThe first line of input contains a single integer N, (1 &lt;= N &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset consists of a single line of input containing a single \ninteger n, (1 &lt;= n &lt;= 300), which is the number of points on a \nside of the triangle.\n</p>','<p>For each dataset, output on a single line the dataset number, (1 through\n N), a blank, the value of n for the dataset, a blank, and the weighted \nsum , W(n), of triangular numbers for n.</p>','4\n3\n4\n5\n10','1 3 45\n2 4 105\n3 5 210\n4 10 2145','',-1,0,1,64,2,157,214,24),(6021,'Sum Up','<p>Vivid has stored a piece of private information, which consisted of a\n serial of integers in a secret number format. All the stored numbers \nare in the range [-63, 63]. So every number contains exactly 7 bits - \nthe leftmost bit is the sign bit (0 for positive and 1 for negative), \nand all other bits represent the absolute value of the number (e.g. \n000000 stands for 0, 000001 stands for 1 and 111111 stands for 63). With\n the sign bit, 1000000 and 0000000 are considered to be equal, both of \nthem stand for 0.</p>\n<p>All the numbers have been pushed into 16-bits integers, that is, one \n16-bits integer is enough to hold 2 numbers plus 2 bits of another \nnumber.</p>\n<center>\n<img class=\"\" alt=\"\" src=\"assets/problem_images/6021_5259469c57e9a8ace5103b5e7ca54087.jpg\" align=\"middle\" />\n</center><p>In this problem, you are given a serial of 16-bits integers, and you need to output the sum of these 7-bits integers.</p>','<p>There are multiple test cases. Each test case begins with an integer N \n(the number of 16-bits numbers, 0 &lt;= N &lt;= 7000, N is always a \nmultiple of 7). Then N 16-bits numbers follow, all of which are in the \nrange [0, 65535]. A case with N = -1 denotes the end of input, which \nshould not be proceeded.</p>','<p>For each test case, output an integer indicating the sum of these 7bits-integers in a single line.</p>','7\n1 0 0 0 0 0 0\n7\n65535 65535 65535 65535 65535 65535 65535\n-1','32\n-1008','',-1,0,1,64,2,38,84,24),(6022,'Rounders','<p>For a given number, if greater than ten, round it to the nearest ten, \nthen (if that result is greater than 100) take the result and round it \nto the nearest hundred, then (if that result is greater than 1000) take \nthat number and round it to the nearest thousand, and so on ...</p>','<p>Input to this problem will begin with a line containing a single integer\n n indicating the number of integers to round. The next n lines each \ncontain a single integer x (0 &lt;= x &lt;= 99999999).</p>','<p>For each integer in the input, display the rounded integer on its own line.<br />\nNote: Round up on fives.</p>','9\n15\n14\n4\n5\n99\n12345678\n44444445\n1445\n446','20\n10\n4\n5\n100\n10000000\n50000000\n2000\n500','',-1,0,1,64,2,95,185,10),(6023,'Root of the Problem','<p>Given positive integers B and N, find an integer A such that A<sup>N</sup> is as close as possible to B. \n(The result A is an approximation to the Nth root of B.) Note that A<sup>N</sup> may be less than, equal to, \nor greater than B.</p>','<p>The input consists of one or more pairs of values for\nB and N. Each pair appears on a single line, delimited by a single\nspace. A line specifying the value zero for both B and N marks the end\nof the input. The value of B will be in the range 1 to 1,000,000 (inclusive),\nand the value of N will be in the range 1 to 9 (inclusive).</p>','<p>For each pair B and N in the input, output A as defined above on a line by itself.</p>','4 3\n5 3\n27 3\n750 5\n1000 5\n2000 5\n3000 5\n1000000 5\n0 0','1\n2\n3\n4\n4\n4\n5\n16','',-1,0,1,64,2,124,269,10),(6024,'Beautiful Meadow','<p>\nTom has a meadow in his garden. He divides it into <em>N</em> * <em>M</em> \nsquares. Initially all the squares were covered with grass. He mowed \ndown the grass on some of the squares and thinks the meadow is beautiful\n if and only if\n</p>\n<ol>\n	<li>Not all squares are covered with grass.</li>\n	<li>No two mowed squares are adjacent.</li>\n</ol>\n<p> </p>\n<p>\nTwo squares are adjacent if they share an edge. Here comes the problem: Is Tom\'s meadow beautiful now?\n</p>\n<p> </p>','<p>\nThe input contains multiple test cases!\n</p>\n<p>\nEach test case starts with a line containing two integers <em>N</em>, <em>M</em> (1 &lt;= <em>N</em>, <em>M</em> &lt;= 10) separated by a space. There follows the description of Tom\'s Meadow. There\'re <em>N</em> lines each consisting of <em>M</em>\n integers separated by a space. 0(zero) means the corresponding position\n of the meadow is mowed and 1(one) means the square is covered by grass.\n</p>\n<p>\nA line with <em>N</em> = 0 and <em>M</em> = 0 signals the end of the input, which should not be processed      \n</p>','<p>\nOne line for each test case.\n</p>\n<p>\nOutput \"Yes\" (without quotations) if the meadow is beautiful, otherwise \"No\"(without quotations).\n</p>','2 2\n1 0\n0 1\n2 2\n1 1\n0 0\n2 3\n1 1 1\n1 1 1\n0 0','Yes\nNo\nNo','',-1,0,1,64,2,91,314,10),(6025,'Look and Say','<p>The look and say sequence is defined as follows. Start with any string \nof digits as the first element in the sequence. Each subsequent element \nis defined from the previous one by \"verbally\" describing the previous \nelement. For example, the string 122344111 can be described as \"one 1, \ntwo 2\'s, one 3, two 4\'s, three 1\'s\". Therefore, the element that comes \nafter 122344111 in the sequence is 1122132431. Similarly, the string 101\n comes after 1111111111. Notice that it is generally not possible to \nuniquely identify the previous element of a particular element. For \nexample, a string of 112213243 1\'s also yields 1122132431 as the next \nelement.</p>','<p>The input consists of a number of cases. The first line gives the number\n of cases to follow. Each case consists of a line of up to 1000 digits.</p>','<p>For each test case, print the string that follows the given string.</p>','3\n122344111\n1111111111\n12345','1122132431\n101\n1112131415','',-1,0,1,64,5,160,309,24),(1147,'Iterated Difference','<p>&nbsp;You are given a list of N non-negative integers a(1), a(2), ... , a(N). You replace the given list by a new list: the k-th entry of the new list is the absolute value of a(k) - a(k+1), wrapping around at the end of the list (the k-th entry of the new list is the absolute value of a(N) - a(1)). How many iterations of this replacement are needed to arrive at a list in which every entry is the same integer?<br />For example, let N = 4 and start with the list (0 2 5 11). The successive iterations are:</p>\n<p>2 3 6 11<br />1 3 5 9<br />2 2 4 8<br />0 2 4 6<br />2 2 2 6<br />0 0 4 4<br />0 4 0 4<br />4 4 4 4<br /><br />Thus, 8 iterations are needed in this example.</p>','<p>The input will contain data for a number of test cases. For each case, there will be two lines of input. The first line will contain the integer N (2 &lt;= N &lt;= 20), the number of entries in the list. The second line will contain the list of integers, separated by one blank space. End of input will be indicated by N = 0.</p>','<p>For each case, there will be one line of output, specifying the case number and the number of iterations, in the format shown in the sample output. If the list does not attain the desired form after 1000 iterations, print \'not attained\'.</p>','4\n0 2 5 11\n5\n0 2 5 11 3\n4\n300 8600 9000 4000\n16\n12 20 3 7 8 10 44 50 12 200 300 7 8 10 44 50\n3\n1 1 1\n4\n0 4 0 4\n0\n','Case 1: 8 iterations\nCase 2: not attained\nCase 3: 3 iterations\nCase 4: 50 iterations\nCase 5: 0 iterations\nCase 6: 1 iterations','',46,0,1,64,2,46,84,12),(1148,'Shape Number','<p>In computer vision, a chain code is a sequence of numbers representing directions when following the contour of an object. For example, the following figure shows the contour represented by the chain code 22234446466001207560 (starting at the upper-left corner).</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1151_f3efb2f6ca5ae063c5963d13512c657e.jpg\" src=\"assets/problem_images/1151_f3efb2f6ca5ae063c5963d13512c657e.jpg\" height=\"204\" width=\"504\" /></p>\n<p>Two chain codes may represent the same shape if the shape has been rotated, or if a different starting point is chosen for the contour. To normalize the code for rotation, we can compute the first difference of the chain code instead. The first difference is obtained by counting the number of direction changes in counterclockwise direction between consecutive elements in the chain code (the last element is consecutive with the first one). In the above code, the first difference is<br />00110026202011676122<br />Finally, to normalize for the starting point, we consider all cyclic rotations of the first difference and choose among them the lexicographically smallest such code. The resulting code is called the shape number.<br />00110026202011676122<br />01100262020116761220<br />11002620201167612200<br />...<br />20011002620201167612<br />In this case, 00110026202011676122 is the shape number of the shape above.</p>\n<p> </p>','<p>The input consists of a number of cases. The input of each case is given in one line, consisting of a chain code of a shape. The length of the chain code is at most 300,000, and all digits in the code are between 0 and 7 inclusive. The contour may intersect itself and needs not trace back to the starting point.</p>','<p>For each case, print the resulting shape number after the normalizations discussed above are performed.</p>','22234446466001207560\n12075602223444646600\n','00110026202011676122\n00110026202011676122\n','',46,0,1,64,5,9,66,10),(1149,'Stock Prices','<p>Buy low, sell high. That is what one should do to make profit in the stock market (we will ignore short selling here). Of course, no one can tell the price of a stock in the future, so it is difficult to know exactly when to buy and sell and how much profit one can make by repeatedly buying and selling a stock.<br />But if you do have the history of price of a stock for the last n days, it is certainly possible to determine the maximum profit that could have been made. Instead, we are interested in finding the k1 lowest prices and k2 highest prices in the history.</p>','<p>The input consists of a number of cases. The first line of each case starts with positive integers n, k1, and k2 on a line (n &lt;= 1,000,000, k1 + k2 &lt;= n, k1, k2 &lt;= 100). The next line contains integers giving the prices of a stock in the last n days: the i-th integer (1 &lt;= i &lt;= n) gives the stock price on day i. The stock prices are non-negative. The input is terminated by n = k1 = k2 = 0, and that case should not be processed.</p>','<p>For each case, produce three lines of output. The first line contains the case number (starting from 1) on one line. The second line specifies the days on which the k1 lowest stock prices occur. The days are sorted in ascending order. The third line specifies the days on which the k2 highest stock prices occur, and the days sorted in descending order. The entries in each list should be separated by a single space. If there are multiple correct lists for the lowest prices, choose the lexicographically smallest list. If there are multiple correct lists for the highest prices, choose the lexicographically largest list.</p>','10 3 2\n1 2 3 4 5 6 7 8 9 10\n10 3 2\n10 9 8 7 6 5 4 3 2 1\n0 0 0\n','Case 1\n1 2 3\n10 9\nCase 2\n8 9 10\n2 1\n','',46,0,1,64,5,31,102,12),(1150,'Contour Tracing','<p>In computer vision, objects of interest are often represented as regions of 1\'s in a binary image (bitmap). An important task in the identification of objects is to trace the contour (also called border and boundary) in an object.<br />We assume that the bitmap does not contain any 1\'s on the borders. To trace the contour of a single object, we can use a&nbsp; procedure known as the Moore boundary tracking algorithm as follows:<br />1. Scan from the top row to the bottom row, from left to right in each row, until an object pixel is found. Call this object pixel b0,&nbsp; and its west background neighbour c0.<br />2. Examine the 8 neighbours of b0, starting at c0 and proceeding in clockwise direction. Let b1 denote the first neighbour object pixel encountered, and c1 be the background neighbour immediately preceeding b1.<br />Store the locations of b0 and b1, and append b0 and b1 to the contour.<br />3. Let b = b1 and c = c1<br />4. Let the 8 neighbours of b, starting at c and proceeding in a clockwise direction, be denoted as n1, n2, ..., n8. Find the first object neighbour nk in this sequence.<br />5. Let b = nk, c = n(k-1). Append b to the contour.<br />6. Repeat steps 4 and 5 until b = b0 and the next contour point found is b1. The last two points b0 and b1 are repeated and should not be appended to the contour again.<br />The first steps of the algorithm is illustrated in the figure below (only the pixels on the boundary are labelled 1 in this bitmap):</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1153_38d353c9a8331d3df64b4bd3c5f4ac33.jpg\" src=\"assets/problem_images/1153_38d353c9a8331d3df64b4bd3c5f4ac33.jpg\" height=\"139\" width=\"518\" /></p>\n<p>In this problem, you will be given a bitmap with at most 200 rows and 200 columns. The bitmap contains a number of objects. You are to determine the length of the contour for each object in the bitmap using the procedure above. In the bitmap, a pixel intensity of 0 represents the background, and a pixel intensity of 1 represents an object pixel. Two pixels with intensity 1 belong to the same object if there is a path from one pixel to another consisting of only 1\'s, and the path is allowed to follow in any of the&nbsp; 8 compass directions. The borders of the bitmap (first row, last row, first column, last column) contain only background&nbsp; pixels. Any object consisting of fewer than 5 pixels should be ignored as it is most likely noise. None of the objects in the bitmap&nbsp; has holes. Equivalently, there exists a path of background pixels following only the 4 main compass directions (N, S, E,&nbsp; W) for every pair of background pixels in the bitmap.</p>\n<p> </p>','<p>The input consists of a number of cases. Each case starts with two positive integers on a line, indicating the number of rows (R) and the number of columns (C) in the bitmap. The bitmap is given in the following R lines each containing a string of 0\'s and 1\'s of length C. The input is terminated by a case starting with R = C = 0. The last case should not be processed.</p>','<p>For each case, print the case number on its own line. In the next line, print the lengths of the contours of all objects found in the bitmap, sorted in ascending order. Separate the contour lengths by a single space on that line.<br />If the bitmap has no object that have at least 5 pixels, output the line \'no objects found\' instead.</p>','7 7\n0000000\n0011110\n0111100\n0011100\n0111100\n0111100\n0000000\n16 7\n0000000\n0011110\n0111100\n0011100\n0111100\n0111100\n0000000\n0011000\n0100110\n0000000\n0001000\n0010100\n0010000\n0111000\n0111000\n0000000\n4 4\n0000\n0000\n0010\n0000\n0 0\n','Case 1\n14\nCase 2\n8 12 14\nCase 3\nno objects found\n','',46,0,1,64,1,4,13,10),(1151,'Pills','<p>Aunt Lizzie takes half a pill of a certain medicine every day. She starts with a bottle that contains N pills.<br />On the first day, she removes a random pill, breaks it in two halves, takes one half and puts the other half back into the bottle.<br />On subsequent days, she removes a random piece (which can be either a whole pill or half a pill) from the bottle. If it is half a pill, she takes it. If it is a whole pill, she takes one half and puts the other half back into the bottle. In how many ways can she empty the bottle? We represent the sequence of pills removed from<br />the bottle in the course of 2N days as a string, where the i-th character is W if a whole pill was chosen on the i-th day, and H if a half pill was chosen (0 &lt;= i &lt; 2N). How many different valid strings are there that empty the bottle?</p>','<p>The input will contain data for at most 1000 problem instances. For each problem instance there will be one line of input: a positive integer N &lt;= 30, the number of pills initially in the bottle.<br />End of input will be indicated by 0.</p>','<p>For each problem instance, the output will be a single number, displayed at the beginning of a new line. It will be the number of different ways the bottle can be emptied.</p>','6\n1\n4\n2\n3\n30\n0\n','132\n1\n14\n2\n5\n3814986502092304\n','',46,0,1,64,1,38,66,12),(1152,'Robot Navigation','<p>A robot has been sent to explore a remote planet. To specify the path the robot should take, a program is sent each day. The program consists of a sequence of the following commands:</p>\n<pre>FORWARD: move forward by one unit.\nTURN LEFT: turn left by 90 degrees. The robot remains at the same location.\nTURN RIGHT: turn right by 90 degrees. The robot remains at the same location.</pre><p>The robot also has sensor units which allows it to obtain a map of its surrounding area. The map is represented as a grid of M rows and N columns. Each grid point is represented by a coordinate (r,c) where r = 0 is the north edge of the map, r = M-1 is the south edge, c = 0 is the west edge, and c = N-1 is the east edge. Some grid points contain hazards (e.g. craters) and the program must avoid these points or risk losing the robot.</p>\n<p>Naturally, if the initial location and direction of the robot and its destination position are known, we wish to send the shortest program (one consisting of the fewest commands) to move the robot to its destination (we do not care which direction it faces at the destination). You are more interested in knowing the number of different shortest programs that can move the robot to its destination, because we may need to send different sequences as interplanetary communication is not necessarily reliable. However, the number of shortest programs can be very large, so you are satisfied to compute the number as a remainder under some modulus, knowing that something you learned in classes called the Chinese remainder theorem can be used to compute the final answer.</p>\n<p> </p>','<p>The input consists of a number of cases. The first line of each case gives three integers M, N, and the modulus m (0 &lt; M, N &lt;= 1000, 0 &lt; m &lt;= 1000000000). The next M lines contain N characters each and specify the map. A \'.\' indicates that the robot can move into that grid point, and a \'*\' indicates a hazard. The final line gives four integers r1, c1, r2, c2 followed by a character d. The coordinates (r1, c1) specify the initial position of the robot, and (r2, c2) specify the destination. The character d is one of \'N\', \'S\', \'W\', \'E\' indicating the initial direction of the robot. It is assumed that the initial position and the destination are not hazards. The input is<br />terminated when m = 0.</p>','<p>For each case, print its case number, the modulus, as well as the remainder of the number of different programs when divided by the modulus m. The output of each case should be on a single line, in the format demonstrated below. If there is no program that can move the robot to its destination, output -1 for the number of different programs.</p>','3 3 100\n***\n.*.\n***\n1 0 1 2 E\n4 4 100\n****\n*.*.\n*.*.\n*...\n1 1 1 3 N\n4 8 100\n********\n...**...\n*......*\n********\n1 0 1 7 E\n0 0 0\n','Case 1: 100 -1\nCase 2: 100 2\nCase 3: 100 4\n','',46,0,1,128,8,6,24,10),(1153,'User Names','<p>A university\'s computer system assigns user names according to the following set of rules:<br />1. The maximum length of a username is MAXLEN characters. (The value of MAXLEN will be specified in the input for each problem instance.)<br />2. The first character of the user name is the first letter of the person\'s first name, converted to lower case. Ignore apostrophes and hyphens here and in Step 3.<br />3. Append as many letters of the person\'s last name as possible (converted to lower case, if necessary), without exceeding a total of MAXLEN characters. Starting with the first letter of the last name, append these letters in the order in whch they appear in the last name.<br />4. If a user name assigned on basis of Rules 1 - 3 already exists in the database, break the tie as follows: append serial numbers 1 - 9, in that order, to the username from step 3, if that can be done without exceeding the limit of MAXLEN characters in the username. Otherwise, drop the last letter before appending the serial number.<br />5. If a user name assigned on basis of Rules 1 - 4 already exists in the database, break the tie as follows: append serial numbers 10 - 99, in that order, to the username from step 3, if that can be done without exceeding the limit of MAXLEN characters in the username. Otherwise, drop the last letter or the last two letters (whichever is necessary) before appending the serial number.<br />6. It is assumed that the above rules will avoid ties. </p>','<p>The input will contain data for a number of test cases. The first line of each test case will contain two positive integers: the number of names and the value of MAXLEN (5 &lt;= MAXLEN &lt;= 80). This will be followed by the list of names. Each name will consist of at most 80 characters and will begin with the first name, followed by middle names, if any, and will Conclude with the last name. A single blank space will separate first, middle, and last names. Any name can contain upper and lower case letters, hyphens, and apostrophes. A last name will contain at least two letters, other names will contain at least one letter (they could be just initials). There will be no more than 200 names in each case. The last test case will be followed by a line containing two zeros for the number of names and MAXLEN.</p>','<p>For each case, the output will begin with a line containing the case number. This will befollowed by the list of user names, one per line, in the same order as the corresponding names in the input.</p>','2 6\nJenny Ax\nChristos H Papadimitriou\n11 8\nJean-Marie d\'Arboux\nJean-Marie A d\'Arboux\nJean-Marie B d\'Arboux\nJean-Marie C d\'Arboux\nJean-Marie D d\'Arboux\nJean-Marie E d\'Arboux\nJean-Marie F d\'Arboux\nJean-Marie G d\'Arboux\nJean-Marie H d\'Arboux\nJean-Marie I d\'Arboux\nJean-Marie J d\'Arboux\n11 9\nJean-Marie d\'Arboux\nJean-Marie A d\'Arboux\nJean-Marie B d\'Arboux\nJean-Marie C d\'Arboux\nJean-Marie D d\'Arboux\nJean-Marie E d\'Arboux\nJean-Marie F d\'Arboux\nJean-Marie G d\'Arboux\nJean-Marie H d\'Arboux\nJean-Marie I d\'Arboux\nJean-Marie J d\'Arboux\n0 0\n','Case 1\njax\ncpapad\nCase 2\njdarboux\njdarbou1\njdarbou2\njdarbou3\njdarbou4\njdarbou5\njdarbou6\njdarbou7\njdarbou8\njdarbou9\njdarbo10\nCase 3\njdarboux\njdarboux1\njdarboux2\njdarboux3\njdarboux4\njdarboux5\njdarboux6\njdarboux7\njdarboux8\njdarboux9\njdarbou10\n','',46,0,1,64,3,10,45,12),(1154,'Citizenship Application','<p>In Canada, once you have landed as a permanent resident, you can apply for citizenship if you have lived in Canada for at least 1095 days (approximately 3 years) in the 1460 days (approximately 4 years) immediately prior to the application for citizenship (i.e. the date of application is not counted). Any time travelling outside Canada is not counted as a day living in Canada. Furthermore, if you are already residing in Canada (e.g. to study) before landing as a permanent resident during the 1460-day period, that time in Canada before the landing date (up to 730 days) can be counted as half rounded down (e.g. if the waiting time was 101 days, that can be counted as 50 days). Thus, the starting date of residence is counted as a half day if it occurs before the landing date (assuming that it is not more than 730 days before), or a full day if it coincides with the landing date.<br />In this problem, you will be determining the first day on which an application for citizenship can be made.</p>','<p>The input consists of a number of cases. The first line of each case gives the starting date of residence in the country, and the second line gives the landing date as a permanent resident. The third line gives an integer N (0 &lt;= N &lt;= 100) indicating the number of travels outside of Canada. Each of the next N lines contains two dates separated by a space, indicating the start and end date (inclusive) of travel outside of Canada. That is, you are considered to be outside of Canada from the start date through the end date.<br />You may assume that the starting date of residence is no later than the landing date. You may also assume that the start date of each travel is no later than the end date, and no travel outside of Canada will be longer than 200 days. Of course, you can assume that your trips do not include the starting date of residence and the landing date, and no two trips overlap. No trips take place before the starting date of residence. All dates are given in the form Month/Day/Year and are valid dates, and no dates in the input will be before January 1, 1980 or after December 31, 2020.</p>','<p>For each case, print on one line the date of the first day (in the same format as the input) on which an application for citizenship can be made.</p>','1/1/2011\n9/1/2011\n0\n1/1/2011\n9/1/2011\n1\n10/1/2011 10/10/2011\n1/1/2011\n9/1/2011\n2\n2/1/2011 3/28/2011\n10/1/2011 10/10/2011\n1/1/2009\n1/1/2011\n0\n12/31/2020\n12/31/2020\n0\n','5/2/2014\n5/12/2014\n6/9/2014\n12/31/2012\n12/31/2023\n','',46,0,1,64,8,0,3,12),(1155,'Wealthy Family','<p>While studying the history of royal families, you want to know how wealthy each family is. While you have various \'net worth\' figures for each individual throughout history, this is complicated by double counting caused by inheritance. One way to estimate the wealth of a family is to sum up the net worth of a set of k people such that no one in the set is an ancestor of another in the set. The wealth of the family is the maximum sum achievable over all such sets of k people. Since historical records contain only the net worth of male family members, the family tree is a simple tree in which every male has exactly one father and a non-negative number of sons. You may assume that there is one person who is an ancestor of all other family members.</p>','<p>The input consists of a number of cases. Each case starts with a line containing two integers separated by a space: N (1 &lt;= N &lt;= 150,000), the number of people in the family, and k (1 &lt;= k &lt;= 300), the size of the set. The next N lines contain two non-negative integers separated by a space: the parent number and the net worth of person i (1 &lt;= i &lt;= N). Each person is identified by a number between 1 and N, inclusive. There is exactly one person who has no parent in the historical records, and this will be indicated with a parent number of 0. The net worths are given in millions and each family member has a net worth of at least 1 million and at most 1 billion.</p>','<p>For each case, print the maximum sum (in millions) achievable over all sets of k people satisfying the constraints given above. If it is impossible to choose a set of k people without violating the constraints, print \'impossible\' instead.</p>','5 3\n0 10\n1 15\n1 25\n1 35\n4 45\n3 3\n0 10\n1 10\n2 10\n','85\nimpossible\n','',46,0,1,64,3,3,6,12),(1156,'Counting Binary Trees','<p>There are 5 distinct binary trees of 3 nodes:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1159_a2d04cb03d9dba2558e402e6f6e02bb0.jpg\" src=\"assets/problem_images/1159_a2d04cb03d9dba2558e402e6f6e02bb0.jpg\" /></p>\n<p>Let <em>T(n)</em> be the number of distinct non-empty binary trees of no more than <em>n</em> nodes, your task is to calculate <em>T(n)</em> mod <em>m</em>.</p>','<p>\nThe input contains at most 10 test cases. Each case contains two integers <em>n</em> and <em>m</em> (1 &lt;= <em>n</em> &lt;= 100,000, 1 &lt;= <em>m</em> &lt;= 10<sup>9</sup>) on a single line. The input ends with <em>n</em> = <em>m</em> = 0.\n</p>','<p>\nFor each test case, print <em>T(n)</em> mod <em>m</em>.\n</p>','3 100\n4 10\n0 0','8\n2','',41,0,1,32,5,1,16,10),(2001,'Zebel’s Game','<p>Zebel  has put some pegs into his study desk and drew a non-self-intersecting path on  the desk between two specific points <em>s</em> and <em>d</em>. He is now curious  to know that if the path was created by an elastic band and its endpoints were  fixed, what would happen to the elastic band after releasing it. To mathematically  answer this question, he assigns a unique id (a positive integer) to each peg  and draws a vertical line passing through the peg. Then he creates the <em>path  sequence</em> (PS) as follows: he puts his pen at point <em>s</em> and starts moving  it along the path toward <em>d</em>. Whenever he reaches a vertical line drawn  from a peg, say the peg with id <em>n</em>, if the pen is above the peg he appends <em>n</em> to the sequence, and <em>–n</em> otherwise. For example, for the figure  below, the PS he writes will be 1 2 3 4 4 3 3 3 -2 -1. Note that no two pegs  are placed in the same vertical line.</p>\n<p>His  experiment shows if the path is created by an elastic band, every two equal adjacent  numbers in the PS are omitted and this continues until a <em>canonical sequence</em> (CS) is obtained where no two adjacent numbers are equal. For the example  figure, the canonical sequence will be 1 2 -2 -1. </p>\n<p> </p>\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/2001_1d752a7800c0d16734f9cf5254be44cb.jpg\" /></p>\n<p>As  the next experiment, he wants to know removing which peg from the table creates  a CS with the minimum length (the length of a sequence is the number of items  in the sequence). Your task is to find this peg.</p>','<p>The first line of the input contains a single  integer <em>t </em>(1 &lt;= <em>t</em> &lt;= 15), the number of test cases, followed by the  input data for each test case. Each test case consists of one line containing a  path sequence (PS) as a sequence of integer numbers. Each line contains at most  10<sup>4</sup> numbers and the numbers are within range [-10<sup>6</sup>, 10<sup>6</sup>].</p>','<p>For each test case the id of a peg whose removal creates a CS with the minimum length should be printed in one line in the output. If such a peg is not unique, print the peg with the minimum id.</p>','1\n1 2 3 4 4 3 3 3 -2 -1\n','1','<p> </p>',37,0,1,64,2,23,286,30),(2007,'Greedy Garshausp','<p>Garshausp, a second year undergraduate student in computer engineering, is participating in a programming contest. One of the problems named “Intervals” is described as follows.<br /><br />The input to the “Intervals” problem is a set of points on the X axis and a length . The problem is to cover all the points using intervals of length . For example, having the points {1, 4, 10} and , we can cover the points using two intervals of length 5, say [1,6] and [7,12]. Note that there are many more solutions, but all of them consist of at least two intervals. The problem is to compute the minimum number of intervals required to cover all the points.<br /><br />Trying to solve the problem, Garshausp comes up with a greedy algorithm: at each step, choose the maximal set of points that can be covered by one interval, and cover them. Repeat this process until all points are covered. If in one step, there are more than one maximal set of points that could be covered by one interval, choose the leftmost one. Unfortunately, Garshausp’s algorithm is not optimal and he cannot get “Yes” for “Intervals”.<br /><br />No! Your problem is NOT to solve the “Intervals” problem! Rather, you must write a program that given a set of points and a length , determines the number of intervals that Garshausp’s algorithm suggests for covering the points.</p>','<p>There are multiple test cases in the input. Each test case starts with a line containing two space-separated integers <em>n</em>  ( 1 &lt;= <em>n</em> &lt;= 10<sup>5</sup> ) and <em>C</em> ( 0 &lt;= <em>C</em> &lt;= 10<sup>9</sup> ), where <em>n</em> is the number of points to cover and <em>C</em> is the interval length. The next line contains <em>n</em> space-separated integers specifying the location of the points on the X axis. All these numbers are nonnegative and no more than 10<sup>9</sup>.\n</p>\n<p>\nThe input terminates with a line of the form \"0 0\" (without quotation marks) which should not be processed as a test case.\n</p>','<p>For each test case, write a single line containing the number of intervals of length <em>C</em> that Garshausp’s algorithm uses to cover all the points. </p>','4 2\n1 2 3 4\n4 2\n1 3 5 7\n4 2\n1 4 7 10\n0 0\n','2\n2\n4\n','',37,0,1,64,3,4,50,10),(2002,'The Return of Anaconda Tigers','<p>There was once a group of warriors who were called “The Anaconda Tigers”. These warriors were the strongest and most sophisticated soldiers the earth has ever seen. They were ranked from 1 to&nbsp; from weakest to strongest. It is said that after the “Sibilization” country defeated “Antisibilization” nations, they helped Sibilatorians to form a strong united kingdom to rule the whole world. They disappeared afterward because the world was in hands of sophisticated rulers and they were no longer requisite to bring peace to the world.<br /><br />In 1965, Nostradamus predicted that when the sky is dark, the land is red, the water is green and the world could no longer resist corruption, these great warriors will return to our world and once again they will rescue humans. It is not specified the exact time but there are some numbers written in his book. These numbers indicate that how many stronger Anaconda Tigers returns before the Anaconda Tiger with rank&nbsp; comes back (we denote this number by a_i). It is also known that no two Anaconda Tigers will return in the same time and none of them are equally strong. You are given an integer n and a sequence a_1,a_2,...,a_n of numbers as defined previously. You have to find out which Anaconda Tiger returns first, which one returns second, which one returns third, and so on.</p>','<p>The input consists of a number of test cases. Each test case starts with a line containing the integer n which is less than 501. The next&nbsp; lines specify the values of a_1,a_2,...,a_n, each appearing on a single line. The input ends with n=0. </p>','<p>For each test case, print a line containing&nbsp; comma separated numbers. The first number should specify the rank of the Anaconda Tiger who comes first, followed by the rank of the Anaconda Tiger who comes second, and so on. There must be no blank characters in the output.</p>','3\n0 \n0\n0\n3\n1\n0\n0\n0\n','1,2,3\n2,1,3\n','',37,0,1,64,2,101,323,30),(2008,'Space Jam','<p>Michael Jordan is recruited by Loony Tunes characters as the coach and the captain of their \nbasketball team for their important upcoming game against the Nerdlucks. In order to prepare \nthem for their roles, Michael designed sophisticated practices specialized for each of team \nmembers. Road-runner, as a member of the team, is given a very strange exercise: \nIt starts when some basketballs are thrown in arbitrary directions on \nseveral points of the playground. As the practice starts, Road-runner, \ninitially standing by the basket, must run into each of the balls and hit the \nball such that it changes its direction and falls in the basket. Note that \nRoad-runner cannot change the speed of the balls and a ball will not fall \nin the basket unless it is explicitly hit by Road-runner. The practice ends \nwhen the last ball falls into the basket. Road-runner should minimize the \ntotal time of the practice. Obviously, the speed of Road-runner is strictly \nmore than any of the balls. You can assume that the balls always move in straight lines and with \nconstant speeds, and their moves will not be affected by the other balls, and it takes no time for \nRoad-runner to hit them. \nGiven the speed of Road-runner and the information of the balls, you have to find the minimum \ntime needed to finish the exercise. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/2008_5a49c6292df95fbfd0c67528b41858a0.jpg\" src=\"assets/problem_images/2008_5a49c6292df95fbfd0c67528b41858a0.jpg\" /></p>','<p>The input contains several test cases. Each test case starts with a single integer <em>N</em> (1 &lt;= <em>N</em> &lt;= 8), the number of the balls thrown in the exercise, followed by a line with a single real \nnumber <em>R</em> (1 &lt; <em>R</em> &lt;= 100), the maximum speed of Road-runner. Then, there are <em>N</em> lines each \nwith four space-separated real numbers <em>X<sub>i</sub></em>, <em>Y<sub>i</sub></em>, <em>V<sub>i</sub></em>, and <em>D<sub>i</sub></em> which characterize a basketball. \nCoordinate numbers <em>X<sub>i</sub></em> and <em>Y<sub>i</sub></em> denote the initial position of the ball in the playground (-10<sup>6</sup> &lt;= <em>X<sub>i</sub></em>, \n<em>Y<sub>i</sub></em> &lt;= 10<sup>6</sup>), <em>V<sub>i</sub></em> shows the constant speed of the ball (1 &lt;= <em>V<sub>i</sub></em> &lt; R), and <em>D<sub>i</sub></em> specifies the direction of \nthe ball as the positive angle it makes with X-axis in radians (0 &lt;= <em>D<sub>i</sub></em> &lt; 2π). \nAll real numbers in the input are given in standard decimal format with at most 10 digits. By \nconvention, the basket (and thus, the initial position of Road-runner) is assumed to be on the \norigin. The input ends with a line containing a single 0 which should not be processed as a test case.</p>','<p>For each test case, write a line containing a single integer <em>T</em> which is the minimum time needed \nto finish the exercise, rounded to the nearest integer. You can assume that <em>T</em> will never \nexceed 10<sup>6</sup>. </p>','3\n200.0\n80.0 50.0 40.0 5.95\n-370.0 390.0 12.0 2.35\n60.0 -160.0 46.0 2.76\n1\n10.0\n25.0 35.0 5.0 1.96\n0\n','51\n20\n','',37,0,1,64,3,10,36,30),(1157,'Guess the Pattern','<p>\nGiven a 01 string, you can group consecutive 1\'s into blocks and write down their lengths.\nThis is called the block length sequence (BLS)\' for that string. For example, the BLS for \n011100110100011 is 3, 2, 1, 2.\n</p>\n<p>\nSimilarly, given a 01 matrix, you can write down the BLS for each row and each column. \nGiven these BLS\'s, your task is to restore the 01 matrix.\n</p>\n<p>\n<strong>Rows are read from left to right, while columns are read from top to bottom.</strong> Each test \ncase is guaranteed to be solvable, and you\'re free to output any (but only one!) solution \nyou like.\n</p>','<p>\n	The input contains at most 10 test cases. Each test case begins with two integers <em>n</em> and <em>m</em> \n	(1 &lt;= <em>n, m</em> &lt;= 15), the number of rows and the number of columns. The next <em>n</em> lines contain \n	the BLS\'s for each row, from top to bottom, and the next <em>m</em> lines contains the BLS\'s for \n	each column, from left to right. Each BLS ends with zero. The input ends with <em>n</em> = <em>m</em> = 0.\n</p>','<p>\n	For each case, print exactly one feasible solution you find. Each row of the matrix should \n	occupy exactly one line. There shouldn\'t be any spaces within the matrix, nor there can be \n	any empty lines between rows, but <strong>do print an empty after each test case</strong>.\n</p>','4 4\n2 1 0\n3 0\n3 0\n1 1 0\n4 0\n3 0\n3 0\n1 0\n0 0','**.*\n***.\n***.\n*.*.','',41,1,1,32,2,0,0,10),(1158,'List Operations','<p>\n	A list is a sequence of <strong>zero</strong> or more elements, expressed in this form: [a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, ... , a<sub>n</sub>], \n	where each a<sub>i</sub> is <strong>one</strong> or more consecutive digits or lowercase letters. i.e. each list begins \n	with a left square bracket, then zero or more elements separated by a single comma, followed\n	 by a right square bracket. There will be no whitespace characters (spaces, TABs etc) within \n	 a list.\n</p>\n<p>\n	In this problem, we use two list operations: append (++) and remove (--).\n</p>\n<p>\n1. A ++ B: append elements in B to the end of A.\n</p>\n<p>\n2. A -- B: remove all the elements in B, from A. If something appears more \n   than once in B, remove it that many times in A. If there are many equal \n   elements in A to choose from, remove them from left to right (until all \n   occurrences are removed, or there is no need to remove more elements).\n</p>\n<p>\n	Your task is to write a calculator, evaluating simple expressions or the form \"list1 ++ list2\" or \"list1 -- list2\".\n</p>','<p>\n	There will be at most 10 expressions, one in each line, each having the form \"list1 ++ list2\"\n	 or \"list1 -- list2\", with no more than 80 characters in total (not counting the newline \n	 character). There will be exactly two spaces in each line: one before and one after the operator. \n	 Input ends with a single <strong>dot</strong>. The input is guaranteed to satisfy the restrictions stated above.\n</p>','<p>\n	For each expression, print its result on a single line.\n</p>','[1,2,3] ++ [1,2,3]\n[a,b,c,t,d,e,t,x,y,t] -- [t]\n[a,b,c,t,d,e,t,x,y,t] -- [t,t,t,t]\n[123] ++ [456]\n.','[1,2,3,1,2,3]\n[a,b,c,d,e,t,x,y,t]\n[a,b,c,d,e,x,y]\n[123,456]','',41,0,1,32,2,63,229,10),(1159,'Windows','<p>\n	Consider the following scenario. The screen has width 200 and height 100. There are three windows on the screen. </p>\n<p align=\"right\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1162_ca0e8637a497efbc2d318e6f2e371616.jpg\" src=\"assets/problem_images/1162_ca0e8637a497efbc2d318e6f2e371616.jpg\" /></p>\n<p>\n	The left picture shows the initial configuration. Windows are drawn from bottom to top, \n	according to the ID, so window 1 is at the bottom, and window 3 is at the top. The right \n	picture shows the screen after clicking at (60, 20). Point (60, 20) is in the visible \n	part of window 1, so it is brought to the top (each time a window is clicked, it gets \n	focus, and brought to the top. The relative order of other windows won\'t change). If you \n	then click at (150, 90), nothing will change, since it is not within the visible part \n	of any window. Then, after clicking at (150, 30), window 2 will get focus. Note that, \n	each window includes all points on its borders: if its top-left corner and bottom-right \n	corner are (x1,y1) and (x2,y2) respectively, it includes exactly the points (x, y) \n	such that x1 &lt;= x &lt;= x2, y2 &lt;= y &lt;= y1. </p>\n<p>\n	Your task is to determine, for each click, the ID of window which is just clicked on (or 0 if no window is clicked).\n</p>','<p>\n	There will be only one case, beginning with two integer numbers <em>C</em> and <em>R</em> (1 &lt;= <em>C</em>, <em>R</em> &lt;= 10000), \n	the number of columns and rows, respectively. The third line contains an integer <em>n</em> (1 &lt;= <em>n</em> &lt;= 50000), \n	the number of windows. On each of the next <em>n</em> lines, there are four integers x1, y1, x2, y2, the top-left \n	and bottom-right coordinates of the window. The window is non-empty (i.e. x1 &lt; x2, y2 &lt; y1).\n	The window IDs are 1, 2, 3, .. <em>n</em>, in the order they appear in the input. On the next line, there is \n	an integer <em>m</em> (1 &lt;= <em>m</em> &lt;= 100000), the number of mouse clicks. On each of the next <em>m</em> lines, \n	there will be two integers x and y, the coordinate clicked. In the judge input, all the coordinates \n	(<em>x, y</em>) will be <strong>randomly generated</strong> within the screen (i.e. 1 &lt;= <em>x</em> &lt;= <em>C</em>, 1 &lt;= <em>y</em> &lt;= <em>R</em>).\n</p>','<p>\n	For each click, print the window ID being clicked. If there is no \nwindow get clicked, print 0. Output a blank line after each test case.\n</p>','200 100\n3\n50 50 80 20\n70 60 180 10\n10 90 100 40\n3\n60 20\n150 90\n150 30	','1\n0\n2','',41,0,1,32,10,1,5,10),(1160,'Inviting Friends','<p>\n	You want to hold a birthday party, inviting as many friends as \npossible, but you have to prepare enough food for them. For each person,\n you need n kinds of ingredient to make good food. You can use the \ningredients in your kitchen, or buy some new ingredient packages. There \nare exactly two kinds of packages for each kind of ingredient: small and\n large.\n</p>\n<p>\n	We use 6 integers to describe each ingredient: ,<em>x, y, s<sub>1</sub>, p<sub>1</sub>, s<sub>2</sub>, p<sub>2</sub></em>, \n	where <em>x</em> is the amount (of this ingredient) needed for one person, <em>y</em> is the amount currently available \n	in the kitchen, <em>s<sub>1</sub></em> and <em>p<sub>1</sub></em> are the size (the amount of this ingredient in each package) and price of\n	 <strong>small</strong> packages, <em>s<sub>2</sub></em> and <em>p<sub>2</sub></em> are the size and price of <strong>large</strong> packages.\n</p>\n<p>\n	Given the amount of money you can spend, your task is to find the \nlargest number of person who can serve. Note that you cannot buy only \npart of a package.\n</p>','<p>\n	There are at most 10 test cases. Each case begins with two integers <em>n</em> and <em>m</em> (1 &lt;= <em>n</em> &lt;= 100, 1 &lt;= <em>m</em> &lt;= 100000), \n	the number of kinds of ingredient, and the amount of money you have. Each of the following n lines \n	contains 6 positive integers <em>x, y, s<sub>1</sub>, p<sub>1</sub>, s<sub>2</sub>, p<sub>2</sub></em> to describe one kind of ingredient \n	(10 &lt;= <em>x</em> &lt;= 100, 1 &lt;= <em>y</em> &lt;= 100, 1 &lt;= <em>s<sub>1</sub></em> &lt;= 100, 10 &lt;= <em>p<sub>1</sub></em> &lt;= 100, <em>s<sub>1</sub></em> &lt; <em>s<sub>2</sub></em> &lt;= 100, <em>p<sub>1</sub></em> &lt; <em>p<sub>2</sub></em> &lt;= 100). \n	The input ends with <em>n</em> = <em>m</em> = 0.\n</p>','<p>\n	For each test case, print the maximal number of people you can serve.\n</p>','2 100\n10 8 10 10 13 11\n12 20 6 10 17 24\n3 65\n10 5 7 10 13 14\n10 5 8 11 14 15\n10 5 9 12 15 16\n0 0','5\n2','',41,0,1,32,3,5,15,10),(1161,'Treeland Exhibition','<p>\n	There are <em>n</em> towns in the treeland and they form a tree, as you\n may guess, i.e. there is a unique path between every pair of towns. The\n length of road connecting every pair of adjacent towns is always 1 \nunit.\n</p>\n<p>\n	You want to hold an exhibition simultaneously on no more than <em>L</em>+1 consecutive towns, i.e. you \n	choose two towns <em>u</em> and <em>v</em> of no more than <em>L</em> unit apart, and set up your exhibition in all the \n	towns on the unique path from <em>u</em> to <em>v</em>. You want to attract people from all over the treeland to \n	your exhibition, so you\'d like to minimize the sum of \"travelling distance\" from every town. \n	The \"travelling distance\" of a town is the distance from that town to its closest exhibition-town.\n</p>','<p>\n	There are at most 25 test cases. Each case begins with two integers, <em>n</em> and <em>L</em> (<em>n</em> &lt;= 10000, 0 &lt; <em>L</em> &lt;= 100), \n	the number of towns, and the maximal distance of the \"endpoint towns\" you choose. Next <em>n</em>-1 lines contain \n	the descriptions of connections, each with two integers <em>a</em> and <em>b</em>, indicating that town <em>a</em> and town <em>b</em> are \n	directly connected (towns are numbered from 0 to <em>n</em>-1). The input ends with <em>n</em> = <em>L</em> = 0.\n</p>','<p>\n	For each test case, print the minimal sum of travelling distance.\n</p>','3 1\n0 1\n1 2\n4 1\n0 1\n1 2\n2 3\n0 0','1\n2','',41,0,1,32,5,0,3,10),(1162,'Special Flow','<p>\n	There are n junctions numbered from 1 to <em>n</em>, connected by <strong>undirected</strong> pipes,\n	 in which water can flow through. Junction 1 is the source, junction <em>n</em> is the\n	  sink. Pipes have capacities, restricting the maximal velocity that water can \n	  move through. There will be no water leak, so for every junction (except the \n	  source and sink), the amount of water flowing into the junction is equal to \n	  the amount of water flowing out of it.\n</p>\n<p>\n	Your task is to find the maximal volume of water that can flow from junction 1 \n	to junction <em>n</em>, during one unit time. Isn\'t it the traditional max-flow problem? \n	Well, not exactly. There is an additional restriction in this problem: for an arbitrary \n	pair of junctions <em>u</em> and <em>v</em>, there is a constant S(<em>u</em>,<em>v</em>) such that, in <strong>every</strong> path from <em>u</em> \n	and <em>v</em>, the <strong>sum of water velocity</strong> on the arcs along the path is always S(<em>u</em>,<em>v</em>). We calculate \n	the sum in a way such that if the water flows against direction of the path from <em>u</em> to <em>v</em>, \n	its velocity is negated. Note that, for two different pairs (<em>u<sub>1</sub></em>,<em>v<sub>1</sub></em>) and (<em>u<sub>2</sub></em>,<em>v<sub>2</sub></em>), S(<em>u</em>,<em>v</em>) \nmay be different from S(<em>u<sub>2</sub></em>,<em>v<sub>2</sub></em>). </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1165_647c60fbc4b97ff922e241e75a37ea52.jpg\" src=\"assets/problem_images/1165_647c60fbc4b97ff922e241e75a37ea52.jpg\" /></p>\n<p>\n	The picture above shows an example pipe network. Capacities of the pipes \n	are shown in the left, while the actual water velocity and flowing directions \n	are shown in the right. You can examine, for example, S(2,4) = 2.8, S(3,1)=-2, S(1,4)=4.4.\n</p>','<p>\n	There will be at most 30 test cases. Each case begins with two integers n and m \n	(2 &lt;= <em>n</em> &lt;= 100, 1 &lt;= <em>m</em> &lt;= 5000), the number of junctions and pipes. The next <em>m</em> lines contain \n	the description of pipes. Each pipe is represented by three integers <em>a</em>, <em>b</em> and <em>c</em>, where <em>a</em> and \n	<em>b</em> are the numbers of two <strong>different</strong> junctions connected by the pipe, and <em>c</em> is the maximal possible \n	water velocity in that pipe (0 &lt;= <em>c</em> &lt;= 10000). The input ends with <em>n</em> = <em>m</em> = 0. There can be multiple \n	pipes between a given pair of junctions.\n</p>','<p>\n	For each test case, print the maximum volume as a floating point number (in any format you like). \n	This number should match the exact result with the maximal absolute difference of 0.0001.\n</p>','4 6\n1 3 2\n1 2 3\n1 2 2\n2 4 5\n2 3 2\n3 4 5\n0 0','5.2','',41,1,1,32,2,0,0,10),(1163,'Resource Archiver','<p>\n	Great! Your new software is almost finished! The only thing left to do is archiving all \n	your n resource files into a big one.\n</p>\n<p>\n	Wait a minute. you realized that it isn\'t as easy as you thought. Think about the virus \n	killers. They\'ll find your software suspicious, if your software contains one of the <em>m</em> \n	predefined virus codes. You absolutely don\'t want this to happen.\n</p>\n<p>\n	Technically, resource files and virus codes are merely 01 strings. You\'ve already convinced yourself that none \n	of the resource strings contain a virus code, but if you make the archive arbitrarily, virus codes can still \n	be found somewhere.\n</p>\n<p>\n	Here comes your task (formally): design a 01 string that contains all your resources \n	(their occurrences can overlap), but none of the virus codes. To make your software \n	smaller in size, the string should be as short as possible.\n</p>','<p>\n	There will be at most 10 test cases, each begins with two integers in a single line: \n	<em>n</em> and <em>m</em> (2 &lt;= <em>n</em> &lt;= 10, 1 &lt;= <em>m</em> &lt;= 1000). The next <em>n</em> lines contain the resources, one \n	in each line. The next <em>m</em> lines contain the virus codes, one in each line. The resources \n	and virus codes are all non-empty 01 strings without spaces inside. Each resource is at\n	 most 1000 characters long. The total length of all virus codes is at most 50000. The \n	 input ends with <em>n</em> = <em>m</em> = 0.\n</p>','<p>\n	For each test case, print the length of shortest string.\n</p>','2 2\n1110\n0111\n101\n1001\n0 0','5','',41,0,1,32,20,0,0,10),(1164,'Strange Clock','<p>\n	There is a strange clock, without any number written. Can you tell me what time it is now, based on the angle of the hour hand? </p>\n<p>\n	When the hour hand points right (0 degree), it is 3 o\'clock. When it points to 80 degrees, it\'s \n	between 0 o\'clock and 1 o\'clock. Note that there is no 12 o\'clock. You should always write 0 o\'clock instead. </p>','<p>\n	There are at most 10 test cases. Each case contains a single integer <em>a</em> (0 &lt;= <em>a</em> &lt; 360), the \n	angle of the hour hand. The input ends with <em>a</em> = -1.\n</p>','<p>\nFor each test case, print the current time, in one of the following format:\n</p>\n<pre>- Exactly x o\'clock\n- Between x o\'clock and y o\'clock\n</pre>\n<p>\nNote that, in the second format, x o\'clock should be exactly one hour before y \no\'clock, So you cannot write something like \"Between 3 o\'clock and 2 o\'clock\".\n</p>','90\n245\n-1','Exactly 0 o\'clock\nBetween 6 o\'clock and 7 o\'clock','',41,0,1,32,2,138,281,10),(1165,'Selecting Frames','<p>\n	Given <em>n</em> frames of unit width, your task is to select as many \nframes as possible and arrange them in a line, so that none of them \noverlap (one enclosing another is also forbidden, but merely touching is\n ok). </p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1168_ce73e4aceb81afbe04ff4ec119779957.jpg\" src=\"assets/problem_images/1168_ce73e4aceb81afbe04ff4ec119779957.jpg\" /></div><p>\n	There is a restriction, though. If you select the <em>i</em>-th frame, you must install \n	a small pole at P<em>i</em>, then place the <em>i</em>-th frame surrounding that pole \n	(the pole is so small that it can be located on the frame border). You can place the \n	frame anywhere, as long as the pole is inside it or on its border.\n</p>','<p>\n	There are at most 10 test cases. Each case begins with a single integer <em>n</em>, \n	the number of frames (1 &lt;= <em>n</em> &lt;= 10000). Each of the following lines contains\n	 two integers <em>L<sub>i</sub></em> and <em>P<sub>i</sub></em> (1 &lt;= <em>L<sub>i</sub></em>, <em>P<sub>i</sub></em> &lt;= 100000), the length of the <em>i</em>-th frame, \n	 and the position of the pole associated with that frame. No two poles will have \n	 the same position. The input ends with <em>n</em> = 0.\n</p>','<p>\n	For each test case, print the maximum number of frames you can select.\n</p>','7\n5 9\n2 17\n6 10\n3 11\n2 16\n4 13\n5 6\n0','5','',41,0,1,32,2,4,8,10),(2003,'Towers Permutations','<p>A massively tower builder company want to build <em>n</em> towers all in a straight line; each tower has a distinct (integer) height between 1 and <em>n</em>, inclusive. The tower at index <em>i</em> is considered visible from the left if there is no taller tower with a smaller index (formally, <em>height</em><sub>j</sub> &lt; <em>height</em><sub>i</sub> for all <em>j</em> &lt; <em>i</em> ). Similarly, a tower is visible from the right if there is no taller tower with a higher index (<em>height</em><sub>j</sub> &lt; <em>height</em><sub>i</sub> for all <em>j</em> &gt; <em>i</em> ). For example, if the height of the towers in order from the left are 1, 3, 5, 2, and 4, then three towers are visible from the left (1, 3 and 5), but only two are visible from the right (4 and 5).<br />\n<br />You will be given the total number of towers, the number of towers visible from the left, and the number of towers visible from the right. You should find the number of permutations of the towers that are consistent with these values; as this can be a large number, you should return it modulo 1000000007. </p>','<p>The first line of the input contains a single integer <em>t</em>, followed by <em>t</em> test cases. Each test case comes in a single line containing the total number of towers, the number of towers visible from the left, and the number of towers visible from the right. The total number of towers is non-negative number less than 101.</p>','<p>You should print the total number of permutations modulo 1000000007 in the format that is shown in the Sample Output.</p>','5\n2 2 2\n3 2 1\n12 1 1\n4 4 5\n4 2 2\n','Case 1:\n0\nCase 2:\n1\nCase 3:\n0\nCase 4:\n0\nCase 5:\n6\n','<p> </p>',37,0,1,64,1,29,265,10),(2009,'Two-Way Carry Propagation','<p>\nIn 1897, the mathematician L. Aguile invented a special operation (#) over the binary representation of integer numbers.<br />\nIn its simple form, <em>A#B</em> is computed according to the following steps, where <em>A</em> is a non-negative integer number and <em>B</em> \nis of the form 2<sup>k</sup> for some integer <em>k</em> (0 &lt;= <em>k</em> &lt;=7):</p>\n<p>\n<ol> \n	<li>Consider the 8-bit binary representation of the numbers <em>A</em> and <em>B</em>, and name them <em>A\'</em> and <em>B\'</em> respectively.</li>\n	<li>Compute <em>C</em> = <em>A\'</em> + <em>B\'</em> in base 10 (i.e. 1+1=2). Assume <em>c<sub>1</sub>c<sub>2</sub>c<sub>3</sub>c<sub>4</sub>c<sub>5</sub>c<sub>6</sub>c<sub>7</sub></em> be the sequence of digits in <em>C</em>.</li>\n	<li>Since the addition is done in base 10, there may be some digit <em>c<sub>i</sub></em> = 2. For such a digit, change <em>c<sub>i</sub></em> to 0, and add \n1 to <em>c<sub>i-1</sub></em> and <em>c<sub>i+1</sub></em>. In case <em>i</em> = 0, only add 1 to <em>c<sub>i+1</sub></em>. You may assume that the input numbers are small enough that this case never happens for <em>i</em> = 7. </li>\n	<li>The step 3 is repeated until there is no digit 2 in <em>C</em>, which is finally considered as the binary representation of <em>A#B</em>.</li>\n</ol>\n</p>\n<p>\nFor example, if </p>\n<p><em>A</em> = 23 (binary 00010111), and <em>B</em> = 2 (binary 00000010), then the following sequence of numbers \ndefines the value of <em>C</em> in successive stages of the above algorithm: 00010121 -&gt; 00010202 -&gt; 00010210 -&gt; 00011020 \n-&gt; 00011101 which is the number 29. \nThe problem is to input <em>A</em> and <em>B</em>, and output <em>A#B</em>. All numbers are in expressed in base 10 and you must take care of \nthe conversions to binary and vice versa.</p>\n<p> </p>','<p>\nThe input consists of several test cases. Each test case comes on a separate line containing two integer numbers <em>A</em> and\n<em>B</em>, separated by blanks, where <em>A</em> is between 0 and 255, and <em>B</em> = 2<sup><em>k</em></sup> for some 0 &lt;= <em>k</em> &lt;=7. You may assume that at every step during the computation of <em>A#B</em> as defined above, <em>C</em> fits in an 8-bit number. You may assume that there are no blank characters at the beginning or at the end of the lines. The input terminates with a single line containing two zero which should not be processed.\n</p>','<p>For each test case, output a single line containing the number <em>A#B</em> in decimal.</p>','23 2\n7 1\n64 16\n0 0\n','29\n11\n80\n','<p> </p>',48,0,1,32,1,74,179,12),(2010,'Calculating Flight Duration','<p>Naaah! Yet another time you receive a flight ticket and have to calculate how long your flight takes using confusing format that the airlines use to describe the departure/arrival times. But this time, you decide to solve this problem once and for all by writing a program to calculate the flight duration! For simplicity, in the first version of the problem you only handle non-stop flights. </p>','<p>\nThe input contains several test cases. Each test case describes a non-stop flight on a single line of the input. Each flight description begins with flight number (a string of at least 2 at most 7 alphanumeric characters) followed by the departing city name, time zone, and the departure time and also the arriving city name, time zone and the arrival time. City names are strings of at least 1 at most 9 alphanumeric characters. <br />\nThe time zone is written as a number inside a pair of parentheses with the format shown in the sample input, like (+3.5). Note that the plus/minus sign is always present. This number specifies the offset from the UTC standard time, expressed in hours (so a time in the time zone +3.5 is three hours and half more than the time in UTC). There is no space character between the city names and the time zones. <br />\nThe flight times are described in the format shown in the sample input, e.g., 4:10a. Note that the time is presented in 12-hour format, the minutes is a two-digit number. A character ‘a’ or ‘p’ immediately follows the time indicating AM and PM times respectively. In case a flight arrives the next day, a ‘+1’ is appended to the arrival time. Assume that no flight takes more than 24 hours (hence we do not have a +2 symbol in arrival times), and there is no test case in which <br />\nthe flight arrives the day before (hence we do not have a -1 symbol in arrival times). <br />\nThe end of input is specified by a single line containing a single # character which should not be processed.</p>','<p>For each test case, output a single line containing the flight number, one space character, and the duration of the flight.</p>\n<p>\nThe duration must be of form &lt;hours&gt;:\n	&lt;minutes&gt;, where &lt;minutes&gt; is formatted as a two-digit number.</p>','EK976 Tehran(+3.5) 4:10a Dubai(+4) 6:45a\nEK432 Dubai(+4) 8:40a Singapore(+8) 7:40p\nJL710 Singapore(+8) 11:20p Tokyo(+9) 7:00a+1\nEK0215 Dubai(+4) 8:20a LA(-8) 12:50p\n#\n','EK976 2:05\nEK432 7:00\nJL710 6:40\nEK0215 16:30\n','<p> </p>',48,0,1,32,1,17,41,10),(2011,'Pausotopic messages','<p>Due to the increased availability of mobile phones and the decreased cost of short message services (SMS), text messaging is getting more and more popular. To do text messaging, one of course needs a text entry system in his mobile phone. One well-known text entry system is multi-tap in which letters are printed on 8 keys in either 3-letter or 4-letter sequences as depicted in the figure. The system is used by repeatedly pressing the same key to cycle through the letters for that key. For example, pressing the key \"4\" twice would indicate the letter \"H\". Pausing more than a threshold time automatically chooses the current letter in the cycle, as pressing a different key. If someone is not careful about the threshold time, he may enter a wrong text due to long or short unwanted pauses in pressing keys. For example, if he wants to type \"C\", the key \"2\" must be pressed 3 times but long unwanted pauses while pressing key \"2\" may produce \"AAA\", \"AB\" or \"BA\". As another example, if he wants to type \"QP\", a short pause after the second pressing of key \"7\" may produce \"R\". </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/2011_f81c79c0ba40819a9df62f4cde35790f.jpg\" src=\"assets/problem_images/2011_f81c79c0ba40819a9df62f4cde35790f.jpg\" /></p>\n<p>Two messages are called pausotopic if and only if making pauses shorter or longer while typing one of the two given messages produces the other message. Your task is to determine whether the two given messages are pausotopic. You may assume each letter in both messages is typed with the minimum number of pressing, i.e., a letter is not typed with cycling letters on a key several times For instance, although “U” can be typed by pressing “8” five times, this assumption says \"U\" is typed with pressing \"8\" twice. </p>','<p>The input consists of several test cases. The first line of the input consists of a single integer <em>n</em> which is the number of test cases. Each test case consists of two words given in two consecutive lines. Each word is a string of capital letters (A-Z) with size at least 1 and at most 150. \n</p>','<p>For each test case, in a single line output \"YES\" if the given two words are pausotopic; otherwise, output \"NO\".</p>','3\nQQ\nPS\nAAAAA\nCC\nABC\nCBA\n','NO\nNO\nYES\n','',48,0,1,32,1,65,112,10),(2012,'AutoComplete Tool','<p>As ACM programming contest in Tehran site is getting closer and closer, MIT team is training more and more to finally get qualified for the final contest. All three members of MIT team are now expert in designing and implementing algorithms even complicated ones but they suffer from slow typing.  Although they have been typing for many years, their typing speed is the same as that of a beginner programmer. This problem, together with a limited time in an ACM programming contest, has been resulted in their obtaining a world record of getting no balloons while attending the most ACM contests.<br />\nTo reach the dream of attending the final contest, they have decided to develop a software, named  AutoComplete Tool (ACT for short), to expedite their coding. ACT aims to reduce the number of key-pressings needed to type a code (or a text) by predicting words. For a text to be typed, assume that ACT knows all words in the text. ACT constructs a mapping table which maps a string <em>s</em> to a word (denoted by <em>w</em>(<em>s</em>)) of the text where <em>s</em> is a non-empty prefix of <em>w</em>(<em>s</em>).<br /> \nACT uses the mapping table to suggest <em>w</em>(<em>s</em>) to a user when <em>ss\'</em> is being typed by the user. ACT suggestions are consistent, i.e., if the suggested word of <em>s</em> is <em>w</em>(<em>s</em>) and <em>ss\'</em> (the concatenation of two strings <em>s</em> and <em>s\'</em>) is a prefix of <em>w</em>(<em>s</em>), then <em>w</em>(<em>ss\'</em>) = <em>w</em>(<em>s</em>). When a user starts typing the text, ACT helps the user as follows. Upon typing a letter, ACT suggests <em>w</em>(<em>s</em>) where <em>s</em> is the string of letters being typed so far. Pressing \"enter\" key results in displaying the suggested word without typing any more letters. In the case of pressing \"space\" key (\" \"), the word being typed so far is displayed. In both cases, a space is displayed after the displayed word. For instance, assume the text is \"hello heat heats \".  In the mapping table, suppose ACT maps \"h\" and \"hel\" to \"heats\" and \"hello\" respectively. Pressing the keys \"h\", \"e\", \"l\", \"(enter)\", \"H\", \"e\", \"a\", \"t\", \" \", \"h\", \"(enter)\" in the given order displays the text. Note that the suggested word of \"h\", \"he\", \"hea\", \"heat\" and \"heats\" is \"heats\". Assuming ACT constructs the mapping table in such a way that the number of key-pressings is minimum, your task is to compute the minimum number of key-pressings using ACT for typing a text. \n</p>','<p>\nThe input consists of several test cases. Each test case begins with an integer <em>n</em> (0 &lt; <em>n</em> &lt; 10000) denoting the number \nof words in the text. Each of the next n lines contains a word. Words are strings of lowercase letters (a..z) of size at least \n1 and at most 15. The input terminates with a line containing 0. </p>','<p>For each test case, output a single line containing the minimum number of key-pressings needed to type all words of the text when an ACT is available. Note in the text, words are separated by a space and there is a space after the last word. </p>','1\nhello\n3\nheat\nhello\nheats\n2\nda\ndc\n2\nabc\nabc\n0\n','2\n11\n5\n4\n','',48,0,1,64,2,3,24,10),(2013,'Training Private Ryan','<p>Private Ryan is taking the training of his military service. As part of the training, he participates in a session where he must shoot a number of targets quickly using an M-4 rifle. Each target appears at a specific moment of time and will disappear at some moment in future. Furthermore, each target is assigned a specific score, and Ryan can shoot a target more than once. There is a reloading time <em>L</em> for the rifle, so there should be at least <em>L</em> time steps between any consecutive shots. When he decides to shoot, he can choose one of the targets being present at the moment. What is the biggest score Ryan can achieve, assuming that he can use at most <em>n</em> bullets? \n \n</p>','<p>\nThere are multiple test cases in the input. Each test case starts with 3 numbers <em>n</em> (the number of bullets), <em>L</em> (the rifle \nreloading time), and <em>k</em> (the number of targets) in a line. The following <em>k</em> lines contain description of the targets. Each \ntarget is described by three numbers; appearing time (<em>ta</em>), disappearing time (<em>td</em>) and its score (<em>s</em>). Ryan can shoot the \ntarget in the closed interval [<em>ta</em> , <em>td</em>] with <em>ta</em> &lt; <em>td</em>. Note that all of the input numbers are non-negative integers, where \n<em>n</em> &lt;= 100 and <em>L</em> &lt;= 10<sup>9</sup>, and for each target, 0 &lt;= <em>ta</em> &lt; <em>td</em> &lt;= 10<sup>9</sup>. The scores are not greater than 1,000,000 and <em>k</em> &lt;= 1000.  The last line of the input contains three zeros which should not be processed.</p>','<p>For each test case, write a single line in the output containing the maximum possible score that Ryan can achieve. </p>','4 2 3\n2 7 8\n1 3 6\n0 12 3\n2 10 3\n1 2 3\n2 10 5\n10 11 3\n0 0 0\n','30\n6\n','',48,0,1,32,1,18,101,10),(2014,'Advanced Coffee Makers','<p>Advanced Coffee Makers (ACM) Company holds a large portion of the coffee vending machine market. Facing with numerous variations of coffee machines that the market demands for, ACM tries to develop a product line, so that each time a customer requests for a specific configuration of coffee machines, it can easily produce and deliver the product in a shorter time and with lower cost. This way, if a customer asks for example, for a coffee machine that serves both coffee and tea, but does not offer options for adding cream to coffee, ACM can produce the corresponding machine including coffee and tea features, but not having creamer features. <br />\nTo this end, ACM has prepared a feature model of the coffee machine products. The feature model contains a hierarchy of the features appearing in a coffee machine, organized as a rooted tree. The root always corresponds to the whole coffee machine product, while other nodes represent the features of a coffee machine. Relationships between a parent feature and its child features (or sub-features) are categorized as: </p>\n<ul>\n	<li>Mandatory – child feature is required.</li>\n	<li>Optional – child feature is optional.</li> \n	<li>Or – at least one of the sub-features must be selected.</li>\n	<li>Alternative (xor) – exactly one of the sub-features must be selected.</li>\n</ul>\n<p>\nFor example, the following figure represents a sample feature model for coffee machines:</p>\n<p> </p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/2014_f808419f135eaa5aeb86cd690517cf66.jpg\" src=\"assets/problem_images/2014_f808419f135eaa5aeb86cd690517cf66.jpg\" /><br /></div><p>\nIn the above figure, every coffee machine must have Brewer, Coffee Maker, and Creamer component. However, it may or may not have a Tea Maker component. It can provide American or Espresso types of coffee, or both. But, the Creamer can be either Regular or Irish.<br />\nHaving a feature model, a customer may ask for a specific configuration, i.e., a set of features. For example, {Coffee Machine, Brewer, Coffee Maker, American, Creamer, Regular} form a valid configuration. Note that mandatory features must be present in a valid configuration if their parents are present. In contrast, the configuration {Coffee Machine, Brewer, Coffee Maker, Creamer, Regular, Tea Maker} is not valid, since no sub-feature of Coffee Maker is selected. Note that the whole Coffee Machine (the root) must be included in all valid configurations.<br />\nA valid configuration must include the root feature. A mandatory feature must be included in the configuration if its parent is included. From a set of features having \'or\' (resp. \'xor\') relationship with an included parent feature, at least (resp. exactly) one must be present. Also, if a child is included in a valid configuration, its parent must also be included. You may assume that each feature appears only once in the feature model tree.<br />\nYour program must input a feature model, together with a set of configurations, and for each configuration determines whether the configuration is valid. \n</p>','<p>\nThe input consists of a number of test cases. Each test case has two parts. The first part represents the feature model and the second part lists the configurations to be validated. The feature model is described as a set of lines of the following forms, each describing a (non-leaf) feature ? that is composed from a set of <em>n</em> &gt; 1 subfeatures: </p>\n<ul>\n	<li> <em>F</em> = <em>F<sub>1</sub></em> + <em>F<sub>2</sub></em> + ... + <em>F<sub>n</sub></em>, where <em>F<sub>i</sub></em> is either a feature name, or a question mark followed by a feature name. </li>\n	<li><em>F</em> = <em>F<sub>1</sub></em> | <em>F<sub>2</sub></em> | ... | <em>F<sub>n</sub></em>, where <em>F<sub>i</sub></em> is a feature name</li>\n	<li><em>F</em> = <em>F<sub>1</sub></em> ^ <em>F<sub>2</sub></em> ^ ... ^ <em>F<sub>n</sub></em>, where <em>F<sub>i</sub></em> is a feature name</li>\n</ul>\n<p>\nEach line defines the sub-features of a feature ?. In the first case, optional features are preceded by a question mark (see the sample input). It is assumed that the first line defines the whole coffee machine (that must be present in all valid configurations). The feature names are sequences of upper-case and lower-case letters (with no blanks in between). However, there may be arbitrary number of blank characters in the beginning or at the end of the lines, or around the symbols =, +, ?(Optional), |(Or), and ^(Alternative). You may safely assume that each feature is defined once, and the feature model forms a tree. As said before, each feature appears only once in the feature tree (e.g. we cannot have A=B+C and B=C+D). Also assume that the total number of features is at most 1000 (and of course at least one). </p>\n<p>\nAfter the last line of a feature model description there is a line containing a single # character, after which come the lines describing the configurations that you must validate. Each configuration comes in a separate line of the form {<em>F<sub>1</sub></em>,<em>F<sub>2</sub></em>, ... ,<em>F<sub>n</sub></em>} where <em>F<sub>i</sub></em> is a feature name and <em>n</em> &gt; 0. There may be blank characters anywhere in the line except in the feature names. You may assume that each <em>F<sub>i</sub></em> has appeared in the feature model description and there are no duplicate feature names in a configuration. The last line of the test case is a single line containing ##. After the last test case, there is a line containing ### which should not be processed. \n</p>\n<p> </p>','<p>For each configuration in each test case, print one line in the output containing either Valid or Invalid words, indicating whether the corresponding configuration is valid. Print a line containing +++ (three plus sign) after each test case. </p>','CoffeeMachine = Brewer + CoffeeMaker + Creamer + ?TeaMaker\nCoffeeMaker = American | Espresso\nCreamer = Regular ^ Irish\n#\n{CoffeeMachine, Brewer, CoffeeMaker, American, Creamer, Regular}\n{CoffeeMachine, Brewer, CoffeeMaker, Creamer, Regular, TeaMaker}\n##\nA=?B+?C\nB=D|E\n#\n{A,B,C,D,E}\n{A,D}\n##\n###\n','Valid\nInvalid\n+++\nValid\nInvalid\n+++\n','',48,0,1,32,1,5,24,12),(2015,'The Security Team','<p>\nAn important welcome ceremony of some political officials is going to be held and as the manager of the security team, you are going to put your <em>n</em> agents along the red carpet. The agents are numbered <em>1</em> through <em>n</em> and equipped with wireless monaural headsets. The authorizations of the headsets are configured such that agent <em>#i</em> can only talk to agents <em>#i-1</em> and <em>#i+1</em> (if they exist of course). In addition, the headset of agent <em>#i</em> has a wireless range <em>r<sub>i</sub></em>, and agents <em>#i</em> and <em>#j</em> can talk only if their distance does not exceed the minimum of <em>r<sub>i</sub></em> and <em>r<sub>j</sub></em>. Your number-one rule of security is that any two agents should always be able to communicate directly or through some intermediate agents.<br />\nThe red carpet is laid on a straight line, and the longer the carpet is, the more magnificent the ceremony looks like. But, the length of the carpet is limited since there must always be an agent on each head of the carpet and the agents must be connected as your number-one rule of security states.<br />\nEverything was running well till your boss arrived at the rehearsal of the ceremony one day before the main event. Having a look on your agents, the boss said:  \n</p>\n<ul>\n	<li>\"The current placement of the agents along the red carpet does not seem so graceful. Arrange them \nalong the carpet in ascending order of their heights. And by the way, the distance of no two agents \nshould be less than one meter.\"</li>\n</ul>\n<p>\nConfused from the new orders of the boss, you figure out that there is no time to reconfigure the authorization of the agents\' headsets, and the only way to apply the new orders while keeping your own connectivity rule, is to shorten the length of the red carpet. Given the wireless range of the headsets and the height ordering of the agents, your job is to find the maximum possible length of the red carpet that could be used in the ceremony.\n</p>\n<p> </p>','<p>There are multiple test cases in the input. Each test case starts with a line containing the integer <em>n</em> (1 &lt;= <em>n</em> &lt;= 10<sup>4</sup>), followed by a line having <em>n</em> space-separated integers which lists the agents\' numbers in ascending order of their heights (e.g. 3 1 2 indicates agent #3 is the shortest and agent #2 is the tallest). It is guaranteed that all numbers <em>1</em> through <em>n</em> appear exactly once in this line. The test case ends with a line containing <em>n</em> space-separated integers <em>r<sub>1</sub></em> <em>r<sub>2</sub></em> ... <em>r<sub>n</sub></em> where <em>r<sub>i</sub></em> (1 &lt;= <em>r<sub>i</sub></em> &lt;= 10<sup>5</sup>) is the wireless range of the headset of agent <em>#i</em> given in meters. The input ends with a line containing a single zero which should not be processed as a test case.\n</p>','<p>For each test case, you should print the maximum possible length of the red carpet along which you can put your agents (with an agent on each end) and keep all the agents connected while obeying the rules of the boss. If it is not possible to satisfy all the requirements together, write \"Impossible\" instead (without quotation marks).</p>','5\n3 4 5 1 2\n6 6 6 6 6\n3\n1 3 2\n1 2 1\n0\n','6\nImpossible\n','',48,0,1,32,1,11,56,10),(2016,'Mathematics Test','<p>A mathematics teacher wants to test her students one by one, on basic math. The teacher uses <em>N</em> balls in the test, on each a single integer is written. In order to test one student (say the <em>i<sup>th</sup></em> student), the teacher first divides all the <em>N</em> balls into <em>K<sub>i</sub></em> non-empty groups, randomly. Then, she asks the student to tell the number of balls and the maximum number written on the balls, for each group. It is supposed to be <em>K<sub>i</sub></em> pairs of integers, considered as the student’s answer. <br />\nAs an observer from the bureau of education, you are present in the classroom! Initially all you know is <em>N</em> (the number of balls used in the test) and <em>M</em> (the number of students who are taking the test). Later, during the test for student <em>i</em> (1 &lt;=  <em>i</em> &lt;= <em>M</em>) you will hear an integer <em>K<sub>i</sub></em> given by the teacher, along with <em>K<sub>i</sub></em> pairs of integers as the student’s answer. These pair of integers are in the format of <em>(a<sub>j</sub>, b<sub>j</sub>)</em> each, where <em>a<sub>j</sub></em> and <em>b<sub>j</sub></em> are the number of balls and the maximum number for the <em>j<sup>th</sup></em> group respectively (1 &lt;= <em>j</em> &lt;= <em>K<sub>i</sub></em>). <br />\nSince you are in love with logical problems, you are curious to figure out whether it is possible that all of these answer be correct using the same set of balls or not! \n</p>','<p>You are visiting several classes (which means \"there are multiple test-cases\" in ACM-ICPC lingo!) For each class, you are given two integers N (1 &lt;= <em>N</em> &lt;= 1000) and <em>M</em> (1 &lt;= <em>M</em> &lt;= 1000) in the first line. In the next <em>M</em> lines, the description of each test comes. Each line starts by <em>K<sub>i</sub></em>, the number of groups, followed by 2 × <em>K<sub>i</sub></em> space-separated numbers <em>a<sub>1</sub></em> <em>b<sub>1</sub></em> <em>a<sub>2</sub></em> <em>b<sub>2</sub></em> ... <em>a<sub>k</sub></em> <em>b<sub>k</sub></em> where <em>a<sub>j</sub></em> is the number of balls in the <em>j<sup>th</sup></em> group and <em>b<sub>j</sub></em> is the maximum number in that group. You may assume all these numbers are positive integers less than or equal to 1,000,000,000. <br />\nThe last class is empty (<em>N</em> = 0 and <em>K</em> = 0) and it should not be processed. \n</p>','<p>For each class, the output should be \"Impossible\" if you have enough evidences (and you are 100% sure) that the students’ answers cannot be all correct at the same time and at least one of them must be wrong. Otherwise, it must be \"Possible\", where there is a chance the class did well altogether! Write the output without quotation marks.</p>','3 2\n2 1 10 2 4\n2 1 6 2 10\n10 2\n2 5 5 5 10\n3 3 3 3 6 4 10\n0 0\n','Impossible\nPossible\n','',48,0,1,32,1,7,71,10),(2017,'GPS Reverse Positioning','<p>It’s a misty day in Manhattan and you have lost your way. Driving your car, you are trying to figure out what your current location is. The foggy weather does not allow you to see any sign or information outside the car, and like other nerds, you hate asking for directions. But fortunately enough, you already have two other sources of information: a map of Manhattan, and a GPS/navigational module installed on your car. The bad news is that the module is malfunctioning due to high humidity and it does not accept any user inputs. Therefore, you can only use the information available on its current screen, which is a list of locations you had already entered on the system (called points of interest) each with the shortest distance (through the roads) from your current position to that location. <br />\nGiven the map data and the information seen on the screen, your job is to find all locations on the map which are possibly your current position. <br />\nThe map is modeled with <em>N</em> map nodes, and <em>R</em> two-way roads. Each node is a point on the map specified by its coordinates. Each road is a line segment on the map specified by the two nodes it connects, which are called its heads. As you might already know, all roads in Manhattan are either vertical or horizontal. A node might be the head of one or more roads. A car can go from a road <em>r</em> to a node <em>n</em> and vice versa (i.e. from <em>n</em> to <em>r</em>), if and only if the node <em>r</em> is a head of the road <em>r</em>. By definition, it is not possible to drive a car from a road directly to another road without using any intermediate nodes, even if the roads have a nonempty intersection, as the city has many non-planar structures. Similarly, you cannot drive from one node directly to another node without using any intermediate roads even if they have the same coordinate on the map. Though, it is guaranteed that you can drive from any node of the map to any other node using some intermediate roads and nodes. <br />\nThe points of interest seen on the screen are also given as some nodes of the map. Though, your current position is not necessarily on a node of the map; in this case, you are on a road. The shortest-path distances given on the screen are calculated according to the rules specified above. \n</p>','<p>The input contains several test cases. Each test case starts with a line containing three space-separated integers <em>N</em> (1 &lt;= <em>N</em> &lt;= 10000), the number of nodes, <em>R</em> (1 &lt;= <em>R</em> &lt;= 10000), the number of roads, and <em>M</em> (1 &lt;= <em>M</em> &lt;= 1000), the number of the points of interest. The nodes are numbered <em>1</em>, <em>2</em>, ..., <em>N</em>. The next <em>N</em> lines specify the coordinates of the nodes. The <em>i<sup>th</sup></em> line of this part contains two space-separated integers <em>x<sub>i</sub></em> and <em>y<sub>i</sub></em> (-10<sup>5</sup> &lt;= <em>x<sub>i</sub></em>, <em>y<sub>i</sub></em> &lt;= 10<sup>5</sup>), the coordinates of node <em>i</em>. Then, <em>R</em> lines follow, each with two space-separated integers <em>u<sub>i</sub></em> and <em>v<sub>i</sub></em>, indicating that the two nodes <em>u<sub>i</sub></em> and <em>v<sub>i</sub></em> are connected by a road. It is guaranteed that the road is either vertical (<em>x<sub>ui</sub></em> = <em>x<sub>vi</sub></em>) or horizontal (<em>y<sub>ui</sub></em> = <em>y<sub>vi</sub></em>). The test case ends with <em>M</em> lines specifying the information available on the GPS system screen. Each of these lines has two space-separated integers <em>w<sub>i</sub></em> and <em>d<sub>i</sub></em> (0 &lt;= <em>d<sub>i</sub></em> &lt;= 10<sup>9</sup>), where <em>w<sub>i</sub></em> is the number of a node as a point of interest, and <em>d<sub>i</sub></em> is the distance from your current position to node <em>w<sub>i</sub></em>. <br />\nThe input ends with a line of the form \"0 0 0\" (omit the quotes) which should not be processed as a test case.\n</p>','<p>For each test case, you should first write a line containing a single integer <em>k</em>, the number of distinct points on the map that might be your current position. Then, on each of the next <em>k</em> lines, you should write two space-separated integers <em>X<sub>i</sub></em> and <em>Y<sub>i</sub></em> as the&nbsp; coordinates of one of the possible points. The coordinates must be in ascending order based on their <em>X<sub>i</sub></em>’s, and then by their <em>Y<sub>i</sub></em>’s (when their <em>X<sub>i</sub></em>’s are equal). \n</p>','7 6 2\n0 1\n1 0\n1 1\n1 3\n3 1\n3 3\n4 0\n1 3\n3 5\n5 6\n4 3\n3 2\n2 7\n7 5\n5 3\n3 2 1\n0 0\n2 0\n3 0\n1 2\n1 3\n1 1\n3 2 1\n0 0\n0 2\n0 0\n1 2\n2 3\n1 3\n3 2 2\n0 0\n0 2\n0 0\n1 2\n2 3\n1 3\n3 3\n0 0 0\n','2\n0 1\n1 2\n1\n1 0\n1\n0 1\n0\n','',48,0,1,32,5,7,24,10),(2018,'Bacteria','<p>\nIn order to simplify the study of bacteria, their configuration space is sometimes downsized by modeling the microscopic pictures as a simple two-dimensional grid. \nAs you can see a grid-simplification of a picture of a famous bacterium known as Dilbacterium, some cells of the grid are occupied by the body of bacteria, while the \nother cells remain empty.<br />\nSome empty cells of the grid are already occupied with other dead material. Such grid cells cannot be occupied by the bacteria. Let’s <em>G</em> be the set of all cells of the \ngrid that are not filled with dead material.<br /> \nTwo cells of a grid are called adjacent if they share a common edge. A sequence <em>L</em> of grid cells is called a path if every two consecutive cells of ? are adjacent. A set <em>S</em> of grid cells is called connected if for all <em>c<sub>1</sub></em>, <em>c<sub>2</sub></em> € <em>S</em> there is a path including <em>c<sub>1</sub></em> and <em>c<sub>2</sub></em> that only uses the members of <em>S</em>. Now, a grid-simplified bacterium (GSB) can be formally defined as a fixed-size connected subset of <em>G</em>.<br /> \nAs real living bacteria move, their movement should also be defined in the grid-simplified model. The movement of bacteria in this model has again a discrete definition. A single move of a GSB with the set of grid cells <em>S</em>, is defined as removing a grid cell <em>c<sub>1</sub></em> € <em>S</em> and adding a grid cell <em>c<sub>2</sub></em> € <em>G</em> - <em>S</em> such that the sets <em>S</em>-{<em>c<sub>1</sub></em>}, <em>S</em> U {<em>c<sub>2</sub></em>} and (<em>S</em> - {<em>c<sub>1</sub></em>}) U {<em>c<sub>2</sub></em>} are connected. Now, the set (<em>S</em> - {<em>c<sub>1</sub></em>}) U {<em>c<sub>2</sub></em>} is the new valid configuration of the GSB after this single movement. By configuration, we mean the position of a GSB together with its shape. <br />\nA GSB can perform a series of movements in order to achieve a totally different configuration. Clearly, there are many different series of movements for a GSB with a single initial configuration, that all lead to the same final configuration. Given an initial and a target configuration of a GSB, your job is to find the minimum number of movements needed to lead its initial configuration to the target configuration. You can assume that the initial and the target configurations have no grid cells in common.\n</p>','<p>There are multiple test cases in the input. Each test case starts with a line containing space-separated integers <em>m</em> and <em>n</em> (1 &lt;= <em>m</em>, <em>n</em> &lt;= 200), which denote the height and width of the grid respectively. There are <em>n</em> characters in each of the next <em>m</em> lines which describe the structure of the <em>m</em> × <em>n</em> grid, and the initial and target configuration of the GSB. The characters of the grid can be one of the following:</p>\n<ul>\n	<li>\'.\' representing empty cells </li>\n	<li>\'#\' representing grid cells occupied with dead material </li>\n	<li>\'x\' representing grid cells of the initial configuration </li>\n	<li>\'o\' representing grid cells of the target configuration </li>\n</ul>\n<p>\nIt is guaranteed that the number of grid cells occupied in the initial and target configurations are equal and less than 10. </p>\n<p>\nThe input terminates with a line of the form \"0 0\" which should not be processed as a test case. </p>\n<p> </p>','<p>Write the result of the <em>i<sup>th</sup></em> test case on the <em>i<sup>th</sup></em> line of output. <br />\nFor each test case, write the minimum number moves needed to lead the GSB from its initial configuration to the target configuration. If there is no way to reach the target configuration, write \"No solution\" (without quotation marks).</p>','2 3\n...\nx#o\n2 3\nx.o\nx#o\n2 3\n#..\nx#o\n9 9\n.xxx.....\n.xxx...#.\n########.\n.......#.\n.#####.#.\n.#.oo#.#.\n.#oooo.#.\n.#######.\n.........\n0 0\n','4\n3\nNo solution\n41\n','',48,0,1,32,1,24,45,10),(2019,'T-cell Operator','<p>T-cell operator which is famous for its T-shaped antennas is invited to launch a cellular network in a mountain range of Flatland, a well-known two-dimensional world. The mountain range can be modeled with a horizontal base line (<em>y</em> = 0) and an x-monotone polygonal terrain above the base line as depicted in the figure below. By x-monotone, we mean that the x-coordinate of the polygon vertices are in ascending order along the base line. <br />\nIn the first step, T-cell gave the responsibility of overall planning and budget estimation to its operations committee (OC). The preliminary investigation of OC showed that developing several base stations (fixed-location transceivers also known as cell sites) is not economical as even a small piece of land is too expensive in the mountain range of Flatland. Fortunately, the mountain range is small enough to be totally covered by only one antenna, but the main problem is that T-cell uses signals which are unable to pass through solid objects (specifically the mountains here), i.e. one can communicate with the base station only if she can directly see at least a point of the antenna installed at the base-station. <br />\nAs T-cell has got its world recognition due to the lack of any blind spot in its coverage, the final plan of OC is to install a T-shaped antenna (symmetric to its mast) with adjustable mast height <em>h</em> and the fixed head size <em>k</em> such that any point of the mountain range can see at least a point of the antenna. The antenna of course should not interiorly intersect the terrain. Touching the mountains is permitted though. <br />\nTo make the plan economical, OC is now looking for a spot of the mountain range as the base station that minimizes ? (the height of the antenna, where every point of the terrain can see at least one point of the antenna). And, that’s why they have hired you; given the shape of the mountain range and the length ? as the fixed head size of the antenna, find the optimum position of the base station with the minimum possible height <em>h</em> for its antenna. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/2019_a5ad3e55231da8e396f4b6e9fa573dd3.jpg\" src=\"assets/problem_images/2019_a5ad3e55231da8e396f4b6e9fa573dd3.jpg\" /></p>','<p>The input contains several test cases. Each test case starts with a line containing two space-separated integers <em>n</em> (2 &lt;= <em>n</em> &lt;= 1000), the number of the vertices of the polygonal terrain, and <em>k</em> (0 &lt;= <em>k</em> &lt;= 10<sup>5</sup>), the head size of the antenna. Next, the description of the terrain comes in <em>n</em> lines, one line per vertex. More precisely, the <em>i<sup>th</sup></em> line of this block contains two space-separated integers <em>x<sub>i</sub></em> and <em>y<sub>i</sub></em> (0 &lt;= <em>x<sub>i</sub></em>, <em>y<sub>i</sub></em> &lt;= 10<sup>5</sup>), the coordinates of the <em>i<sup>th</sup></em> vertex (from the left) of the polygonal terrain, and indeed, the border of the mountain range can be obtained by connecting these consecutive vertices. It is guaranteed that <em>x<sub>1</sub></em> &lt; <em>x<sub>2</sub></em> &lt; ... &lt; <em>x<sub>n</sub></em>, and the first and the last vertices of the terrain are not a peak (i.e. <em>y<sub>1</sub></em> &lt; <em>y<sub>2</sub></em> and <em>y<sub>n-1</sub></em> &gt; <em>y<sub>n</sub></em>). You can also assume that the line passing through each edge of the polygon does not intersect the line segment connecting the points (0, 10<sup>8</sup>) and (10<sup>5</sup>,10<sup>8</sup>). <br />\nThe input terminates with a line of the form \'0 0\' (omit the quotes) which should not be considered as a test case.</p>','<p>For each test case, write a line containing the real number <em>h</em>, the minimum possible height of antenna for that position, <br />rounded to exactly 2 digits after the decimal point.</p>','5 2\n1 1\n2 2\n3 1\n4 2\n5 1\n4 1\n1 0\n2 2\n5 2\n6 1\n5 4\n1 1\n2 3\n4 1\n5 2\n6 0\n0 0\n','1.00\n1.33\n0.50\n','',48,0,1,32,1,17,38,10),(9000,'I Think I Need a Houseboat','<p>Fred Mapper is considering purchasing some land in Louisiana to build his house \n  on. In the process of investigating the land, he learned that the state of Louisiana \n  is actually shrinking by 50 square miles each year, due to erosion caused by \n  the Mississippi River. Since Fred is hoping to live in this house the rest of \n  his life, he needs to know if his land is going to be lost to erosion. <br />\n  <br />\n  After doing more research, Fred has learned that the land that is being lost \n  forms a semicircle. This semicircle is part of a circle centered at (0,0), with \n  the line that bisects the circle being the X axis. Locations below the X axis \n  are in the water. The semicircle has an area of 0 at the beginning of year 1. \n  (Semicircle illustrated in the Figure.) </p>\n<p align=\"center\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F1049%2F1049-2.gif\" height=\"189\" width=\"211\" /></p>','<p>The first line of input will be a positive integer indicating how many data \n  sets will be included (N). <br /><br />\n  Each of the next N lines will contain the X and Y Cartesian coordinates of the \n  land Fred is considering. These will be floating point numbers measured in miles. \n  The Y coordinate will be non-negative. (0,0) will not be given.</p>\n  Each of the next N lines will contain the X and Y Cartesian coordinates of the \n  land Fred is considering. These will be floating point numbers measured in miles. \n  The Y coordinate will be non-negative. (0,0) will not be given.','<p>For each data set, a single line of output should appear. This line should take \n  the form of: <br /><br />\n  \"Property N: This property will begin eroding in year Z.\" <br /><br />\n  Where N is the data set (counting from 1), and Z is the first year (start from \n  1) this property will be within the semicircle AT THE END OF YEAR Z. Z must \n  be an integer. <br /><br />\n  After the last data set, this should print out \"END OF OUTPUT.\" \n Notes: <br /><br />\n  1. No property will appear exactly on the semicircle boundary: it will either \n  be inside or outside. <br /><br />\n  2. This problem will be judged automatically. Your answer must match exactly, \n  including the capitalization, punctuation, and white-space. This includes the \n  periods at the ends of the lines. <br /><br />\n  3. All locations are given in miles</p>\n  3. All locations are given in miles','2\n1.0 1.0\n25.0 0.0 ','Property 1: This property will begin eroding in year 1.\nProperty 2: This property will begin eroding in year 20.\nEND OF OUTPUT. ','',-1,0,0,64,2,24,40,10),(9001,'Dividing','<p>Marsha and Bill own a collection of marbles. They want to split the collection \namong themselves so that both receive an equal share of the marbles. This would \nbe easy if all the marbles had the same value, because then they could just split \nthe collection in half. But unfortunately, some of the marbles are larger, or \nmore beautiful than others. So, Marsha and Bill start by assigning a value, a \nnatural number between one and six, to each marble. Now they want to divide the \nmarbles so that each of them gets the same total value. \n</p>\n<p>Unfortunately, they realize that it might be impossible to divide the marbles \n  in this way (even if the total value of all marbles is even). For example, if \n  there are one marble of value 1, one of value 3 and two of value 4, then they \n  cannot be split into sets of equal value. So, they ask you to write a program \n  that checks whether there is a fair partition of the marbles. </p>','<p>Each line in the input describes one collection of marbles to be divided. The \n  lines consist of six non-negative integers n1, n2, ..., n6, where ni is the \n  number of marbles of value i. So, the example from above would be described \n  by the input-line ``1 0 1 2 0 0\'\'. The maximum total number of marbles will \n  be 20000. \n</p>\n<p>The last line of the input file will be ``0 0 0 0 0 0\'\'; do not process this \n  line. </p>','<p>For each colletcion, output ``Collection #k:\'\', where k is the number of the \n  test case, and then either ``Can be divided.\'\' or ``Can\'t be divided.\'\'. \n</p>\n<p>Output a blank line after each test case. </p>','1 0 1 2 0 0\n1 0 0 0 1 1\n0 0 0 0 0 0','Collection #1:\nCan\'t be divided.\n\nCollection #2:\nCan be divided.','',-1,0,0,64,2,15,64,10),(9002,'Human Gene Functions','<p>It is well known that a human gene can be considered as a sequence, consisting \n  of four nucleotides, which are simply denoted by four letters, A, C, G, and T.\n  Biologists have been interested in identifying human genes and determining their\n  functions, because these can be used to diagnose human diseases and to design new\n  drugs for them. <br />\n  <br />\n  A human gene can be identified through a series of time-consuming biological \n  experiments, often with the help of computer programs. Once a sequence of a gene is\n  obtained, the next job is to determine its function. One of the methods for biologists\n  to use in determining the function of a new gene sequence that they have just identified\n  is to search a database with the new gene as a query. The database to be searched stores\n  many gene sequences and their functions C many researchers have been submitting their genes\n  and functions to the database and the database is freely accessible through the Internet. <br />\n  <br />\n  A database search will return a list of gene sequences from the database that \n  are similar to the query gene. Biologists assume that sequence similarity often implies\n  functional similarity. So, the function of the new gene might be one of the functions that\n  the genes from the list have. To exactly determine which one is the right one another series\n  of biological experiments will be needed. <br />\n  <br />\n  Your job is to make a program that compares two genes and determines their similarity \n  as explained below. Your program may be used as a part of the database search if you can provide \n  an efficient one. <br />\n  <br />\n  Given two genes AGTGATG and GTTAG, how similar are they? One of the methods \n  to measure the similarity of two genes is called alignment. In an alignment, spaces are inserted,\n  if necessary, in appropriate positions of the genes to make them equally long and score the\n  resulting genes according to a scoring matrix. <br />\n  <br />\n  For example, one space is inserted into AGTGATG to result in AGTGAT-G, and three spaces\n  are inserted into GTTAG to result in CGT--TAG. A space is denoted by a minus sign (-). \n  The two genes are now of equal length. These two strings are aligned: <br />\n  <br />\n  AGTGAT-G <br />\n  -GT--TAG <br />\n  <br />\n  In this alignment, there are four matches, namely, G in the second position, T in the third,\n  T in the sixth, and G in the eighth. Each pair of aligned characters is assigned a score\n  according to the following scoring matrix. </p>\n<p align=\"center\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F1027%2F1027.gif\" height=\"165\" width=\"229\" /> \n</p>\n<p>\n* denotes that a space-space match is not allowed. The score of the alignment \n  above is (-3)+5+5+(-2)+(-3)+5+(-3)+5=9. </p>\n<p>\n  Of course, many other alignments are possible. One is shown below (a different \n  number of spaces are inserted into different positions): <br /><br />\n  AGTGATG <br />\n  -GTTA-G <br /><br />\n  This alignment gives a score of (-3)+5+5+(-2)+5+(-1) +5=14. So, this one is \n  better than the previous one. As a matter of fact, this one is optimal since no other\n  alignment can have a higher score. So, it is said that the similarity of the two genes is 14.</p>','<p>The input consists of T test cases. The number of test cases ) (T is given in \n  the first line of the input. Each test case consists of two lines: each line\n  contains an integer, the length of a gene, followed by a gene sequence.\n  The length of each gene sequence is at least one and does not exceed 100.</p>','<p>The output should print the similarity of each test case, one per line.</p>','2\n7 AGTGATG\n5 GTTAG\n7 AGCTATT\n9 AGCTTTAAA ','14\n21 ','',-1,0,0,64,2,16,38,10),(9003,'Build The Electric System','<p>Being well known for its highly innovative products, Merck would definitely \n  be a good target for industrial espionage. To protect its brand-new research \n  and development facility the company has installed the latest system of surveillance \n  robots patrolling the area. These robots move along the walls of the facility \n  and report suspicious observations to the central security office. The only \n  flaw in the system a competitor\'s agent could find is the fact that the robots \n  radio their movements unencrypted. Not being able to find out more, the agent \n  wants to use that information to calculate the exact size of the area occupied \n  by the new facility. It is public knowledge that all the corners of the building \n  are situated on a rectangular grid and that only straight walls are used. Figure \n  1 shows the course of a robot around an example area.</p>\n<p align=\"center\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F1032%2F1032.gif\" height=\"358\" width=\"499\" /></p>\n<p align=\"center\">Figure 1: Example area.</p>\n<p>\n  <br />\n  You are hired to write a program that calculates the area occupied by the new \n  facility from the movements of a robot along its walls. You can assume that \n  this area is a polygon with corners on a rectangular grid. However, your boss \n  insists that you use a formula he is so proud to have found somewhere. The formula \n  relates the number I of grid points inside the polygon, the number E of grid \n  points on the edges, and the total area A of the polygon. Unfortunately, you \n  have lost the sheet on which he had written down that simple formula for you, \n  so your first task is to find the formula yourself.</p>','<p>The first line contains the number of scenarios.\n</p>\n<p> For each scenario, you are given the number m, 3&lt;=m&lt;100, of movements \n  of the robot in the first line. The following m lines contain pairs \"dx dy\" \n  of integers, separated by a single blank, satisfying .-100&lt;=dx, dy&lt;=100 \n  and (dx, dy)!=(0, 0). Such a pair means that the robot moves on to a grid point \n  dx units to the right and dy units upwards on the grid (with respect to the \n  current position). You can assume that the curve along which the robot moves \n  is closed and that it does not intersect or even touch itself except for the \n  start and end points. The robot moves anti-clockwise around the building,\n  so the area to be calculated lies to the left of the curve. It is known in \n  advance that the whole polygon would fit into a square on the grid with a side \n  length of 100 units.</p>','<p>The output for every scenario begins with a line containing \"Scenario #i:\", \n  where i is the number of the scenario starting at 1. Then print a single line \n  containing I, E, and A, the area A rounded to one digit after the decimal point. \n  Separate the three numbers by two single blanks. Terminate the output for the \n  scenario with a blank line.</p>','2\n4\n1 0\n0 1\n-1 0\n0 -1\n7\n5 0\n1 3\n-2 2\n-1 0\n0 -3\n-3 1\n0 -3','Scenario #1:\n0 4 1.0\n\nScenario #2:\n12 16 19.0','',-1,0,0,65,2,9,26,10),(9004,'To the Max','<p>Given a two-dimensional array of positive and negative integers, a sub-rectangle \n  is any contiguous sub-array of size 1 x 1 or greater located within the whole \n  array. The sum of a rectangle is the sum of all the elements in that rectangle. \n  In this problem the sub-rectangle with the largest sum is referred to as the \n  maximal sub-rectangle.<br /><br />\n  As an example, the maximal sub-rectangle of the array:<br /><br />\n  0 -2 -7 0<br />\n  9 2 -6 2<br />\n  -4 1 -4 1<br />\n  -1 8 0 -2<br /><br />\n  is in the lower left corner:<br /><br />\n  9 2<br />\n  -4 1<br />\n  -1 8<br /><br />\n  and has a sum of 15.</p>','<p>The input consists of an N x N array of integers. The input begins with a single \n  positive integer N on a line by itself, indicating the size of the square two-dimensional \n  array. This is followed by N 2 integers separated by whitespace (spaces and \n  newlines). These are the N 2 integers of the array, presented in row-major order. \n  That is, all numbers in the first row, left to right, then all numbers in the \n  second row, left to right, etc. N may be as large as 100. The numbers in the \n  array will be in the range [-127,127].</p>','<p>Output the sum of the maximal sub-rectangle.</p>','4\n0 -2 -7 0 9 2 -6 2\n-4 1 -4 1 -1\n8 0 -2','15 ','',-1,0,0,64,2,3,6,10),(2005,'Getting Away','<p>Pobi is a robot in a two-dimensional environment. Whenever Pobi is programmed with <em>n</em> two-dimensional vectors, he starts moving as follows:<br />at step <em>i</em>, he takes the<em> i<sup>th</sup> </em>vector <em>v<sub>i</sub></em> and moves | <em>v<sub>i</sub></em> | meters in the direction of either <em>v<sub>i</sub></em> or <em>-v<sub>i</sub></em> on his own decision where | <em>v<sub>i</sub></em> | is the length of <em>v<sub>i</sub></em> . Today, after getting programmed with&nbsp; nonzero vectors, Pobi has realized that he is standing on a massive bomb. To survive the bomb blast, Pobi is now trying to take the best decision at each step that leads him to the farthest possible point from the bomb. Your task is to compute how far he can get away from his initial position.</p>','<p>The input consists of several test cases. Each test case starts with a line containing the integer <em>n</em> (1 &lt;= <em>n</em> &lt;= 100). The vectors are specified in the next <em>n</em> lines. The <em>i<sup>th</sup></em> line gives a pair of integers <em>x<sub>i</sub></em> and <em>y<sub>i</sub></em> specifying <em>vi</em> = (<em>x<sub>i</sub></em> , <em>y<sub>i</sub></em>). The coordinates range from -1000 to 1000. The end of the input is specified by <em>n </em>= 0.</p>','<p>For each test case, output on a separate line the maximum distance that Pobi can get away from his initial position. Output the answers rounded to 3 decimal places. </p>','3\n1 1\n1 0\n-2 1\n2\n0 4\n1 1\n4\n1 3\n-3 -6\n4 8\n-2 -5\n0\n','4.000\n5.099\n24.166\n','',37,0,1,64,1,6,290,10),(1089,'Word Encoding','<p>n any language, certain combinations of letters do not appear (or at least appear so seldom\nthat they can be considered non-existent). For instance, there are no English words containing\nthe three letter combination buv as a substring. Given a list of letter combinations that do\nnot exist, the number of possible ¡°words¡± in a language can be reduced a lot (a ¡°word¡± here\nmeans any combination of letters that doesn¡¯t contain any of the given letter combinations\nas a substring). If we order all such words by increasing length, ordering words of the same\nlength alphabetically, we can enumerate them starting from 1. Assume that the alphabet\nalways consists of the lower case letters ¡¯a¡¯ to ¡¯z¡¯.\n</p>\n<p>\nFor instance, if the list only contains the combinations q, ab and aaa, the words would be\nenumerated like this:</p>\n<pre>		1. a\n		2. b\n		...\n		16. p\n		17. r\n		...\n		26. aa\n		27. ac\n		...\n		649. zz\n		650. aac\n</pre>\n<p>Given the list of letter combinations, write a program that for a given word outputs its\nnumber, and for a given number ouputs its word. You can assume that none of the words\nwill exceed 20 characters and no number will be greater than 2 000 000 000 (for both input\nand output).</p>','<p>The input will contain several test cases. The number of test cases T appears on a line by\nitself. Then follow T test cases. Each test case starts with a line containing two integers,\nN (the number of letter combinations, non-negative, at most 1 000) and M (the number of\nqueries for this list, positive, at most 100). Then follow N lines, each containing a lower\ncase letter combination (between 1 and 3 letters, inclusive). After that follow M lines, each\ncontaining either a positive integer or a lower case word. If it¡¯s a word, it will not contain\nany of the combinations of letters in the list for this test case. If it¡¯s a number, it will not be\ngreater than the number of words in the language.</p>','<p>\nFor each query, output a single line containing either the word¡¯s corresponding number, or\nthe number¡¯s corresponding word.</p>','2\n3 4\nq\nab\naaa\n16\nr\n27\naac\n7 2\na\nb\nc\nd\nef\nghi\nijk\n102345678\nksvfuw','p\n17\nac\n650\nxexgun\n39174383','',38,0,1,32,30,0,0,10),(1090,'Watchdog','<p>A company (name withheld) has an office building in the center of Lund. The building has\na perfectly square roof with a number of hatches. Because of a series of burglaries where\nthe perpetrators have entered through these hatches, it was decided to use a watchdog to\nguard the hatches. A particularly vicious but rather stupid breed of dog was chosen, and\nunfortunately the dog fell off the roof on its third watch.</p>\n<p>\nA new dog has been procured and it has been decided to attach a leash to its collar and\nattach the other end at some point on the roof. However, if the leash is too short the dog\ncannot reach all hatches, but if it is too long then the dog will fall off the building again. The\nleash has hooks at both ends, so no part of it is used to tie knots. The company wants the dog\nto reach the center of each hatch (the dog can reach exactly as far as the leash could reach\nif it were lying flat on the roof), but it does not want the leash to extend beyond the edge\nof the roof (to the edge is OK). They hope that by carefully choosing the length of the leash\nand where to attach it, the dog will be able to reach all hatches without risking falling off the\nbuilding. A leash can only be attached at a point with integer coordinates (if the building\nis 10 by 10 meters, then the south-west corner of the building has coordinates (0, 0) and the\nnorth-east corner has coordinates (10, 10)). A leash cannot be attached at a point where there\nis a hatch.</p>\n<p>\nIf there is no place where you can attach a leash, reach all hatches but not reach beyond\nthe edge of the roof, it is impossible to use this breed of dog, and the company will instead\nuse a poodle (which is a less vicious type of dog, but also less prone to falling off buildings).\n</p>','<p>\nOn the first line of the input is a single positive integer N, telling the number of test cases to\nfollow. Each case starts with one line with two integers S H, where S is even, 2  &lt;=  S  &lt;=  40,\nand 1  &lt;=  H  &lt;=  50. S is the side of the square roof in meters and H is the number of hatches.\nThe following H lines each contain two integers X and Y. These are the coordinates of the\nhatches. Hatches will never lie outside the roof or on the roof¡¯s perimeter. No two hatches\nwill occupy the same position.</p>','<p>\nFor each test case, output one line containing the coordinates X Y at which to fasten the\nleash (if there are several possible points, output the one with smallest X, and if there are\nstill several possibilities select the one with smallest Y among those with smallest X) such\nthat a leash of suitable length allows access to all hatches without extending beyond the edge\nof the roof. If there is no such point, output ¡°poodle¡± for that test case.</p>','3\n10 2\n6 6\n5 4\n20 2\n1 1\n19 19\n10 3\n1 1\n1 2\n1 3','3 6\npoodle\n2 2','<p> </p>',38,0,1,32,30,40,65,10),(1091,'Taxi Cab Scheme','<p>Running a taxi station is not all that simple. Apart from the obvious demand for a centralised\ncoordination of the cabs in order to pick up the customers calling to get a cab as soon as possible,\nthere is also a need to schedule all the taxi rides which have been booked in advance.\nGiven a list of all booked taxi rides for the next day, you want to minimise the number of\ncabs needed to carry out all of the rides.</p>\n<p>\nFor the sake of simplicity, we model a city as a rectangular grid. An address in the city\nis denoted by two integers: the street and avenue number. The time needed to get from the\naddress a, b to c, d by taxi is |a - c| + |b - d| minutes. A cab may carry out a booked ride if it\nis its first ride of the day, or if it can get to the source address of the new ride from its latest,\nat least one minute before the new ride¡¯s scheduled departure. Note that some rides may\nend after midnight.</p>','<p>\nOn the first line of the input is a single positive integer N, telling the number of test scenarios\nto follow. Each scenario begins with a line containing an integer M, 0 &lt; M &lt; 500, being the\nnumber of booked taxi rides. The following M lines contain the rides. Each ride is described\nby a departure time on the format hh:mm (ranging from 00:00 to 23:59), two integers a b that\nare the coordinates of the source address and two integers c d that are the coordinates of the\ndestination address. All coordinates are at least 0 and strictly smaller than 200. The booked\nrides in each scenario are sorted in order of increasing departure time.\n</p>','<p>\nFor each scenario, output one line containing the minimum number of cabs required to carry\nout all the booked taxi rides.</p>','2\n2\n08:00 10 11 9 16\n08:07 9 16 10 11\n2\n08:00 10 11 9 16\n08:06 9 16 10 11','1\n2','',38,0,1,32,30,6,30,10),(1092,'Pseudo-random Numbers','<p>Access to high-quality randomness is very important for many applications, especially in\ncryptography. Radioactive decay is somtimes used as a source of true randomness, but\nthis is a fairly slow procedure for getting random numbers. Also, in many applications it is\nimportant that the same random sequence can be produced in two different places. For\nthese reasons one often uses a pseudo-random sequence instead. A pseudo-random sequence\nis a sequence that is, in fact, not random, but very hard to distinguish from a truly random\nsequence. A pseudo-random sequence should also be difficult to predict, i.e., given the first\nfew elements of the sequence it should be difficult do determine some later, yet unseen,\nnumber in the sequence.</p>\n<p>\nThe Association of Cryptographic Machinery (ACM) has devised an algorithm for generating\npseudo-random number sequences, but they have no idea how good it really is.\nTherefore they want you to test it.</p>\n<p>\nThe algorithm to generate a sequence of integers, where each integer is between 0 and B - 1 inclusive, is as follows:</p>\n<p> <em>1.</em> Start with any number (the seed) in base B. This number can contain hundreds of base\nB digits.</p>\n<p> <em>2.</em> The last digit (least significant) is output as the next element of the sequence.\n</p>\n<p> <em>3.</em> Create a new number by writing down the sum of all neighbouring digits from left to\nright. E.g., with B = 10, the number 845 would yield the number 129 (since 8 + 4 = 12\nand 4 + 5 = 9).\n</p>\n<p> <em>4.</em> Repeat steps 2 and 3 as many times as needed, or until the number has only one base\nB digit. You get one more pseudo-random digit between 0 and B - 1 each time.\n</p>\n<p>\nIf we have B = 10 and the seed number is 845, then the next numbers will be 129, 311\n(1 + 2 = 3, 2 + 9 = 11), 42 (3 + 1 = 4, 1 + 1 = 2), and 6 (4 + 2 = 6). As 6 is a single digit base\n10 number, the algorithm terminates. The pseudo-random digits generated are 5, 9, 1, 2 and\n6.</p>\n<p>\nYou will be testing the generator as follows. You will be given the first L elements output\nby the generator and an integer T &gt; L. You are supposed to decide if the first T elements\nare completely determined by the first L elements. To check the robustness of your testing\nprocedure the ACM have slipped in some impossible sequences, i.e. sequences that cannot be\ngenerated by any initial seed.</p>','<p>On the first line of the input is a single positive integer N, telling the number of test cases to\nfollow. The first line of each test case consists of one integer B (2  &lt;=  B  &lt;=  1 000), the base. The\nsecond line consists of an integer L (1  &lt;=  L  &lt;=  100), followed by the L first elements of some\nsequence (the elements are written in base 10 and are between 0 and B - 1 inclusive). The\nthird line consists of an integer T, (L &lt; T  &lt;=  100 000), the element of the sequence to predict.\n</p>','<p>\nFor each test case output, on a line of its own:</p>\n<p>impossible if no seed number can produce the given sequence.</p>\n<p>unpredictable if there exists a seed number that produces the given sequence but the\nfirst T elements are not completely determined by the first L elements.</p>\n<p> the T:th element of the sequence in base 10, otherwise.</p>','3\n10\n5 5 9 6 7 0\n7\n16\n4 11 7 8 4\n12\n2\n5 0 1 1 1 0\n10','8\nunpredictable\nimpossible','',38,0,1,32,30,0,1,12),(1093,'Card Game Cheater','<p>Adam and Eve play a card game using a regular deck of 52 cards. The rules are simple. The\nplayers sit on opposite sides of a table, facing each other. Each player gets k cards from the\ndeck and, after looking at them, places the cards face down in a row on the table. Adam\'s\ncards are numbered from 1 to k from his left, and Eve\'s cards are numbered 1 to k from her\nright (so Eve\'s i:th card is opposite Adam\'s i:th card). The cards are turned face up, and\npoints are awarded as follows (for each i e {1, . . . , k}):<br />\nIf Adam\'s i:th card beats Eve\'s i:th card, then Adam gets one point.\nIf the two i:th cards have the same value, then the suit determines who wins: hearts\nbeats all other suits, spades beats all suits except hearts, diamond beats only clubs, and\nclubs does not beat any suit.</p>\n<p>\nFor example, the ten of spades beats the ten of diamonds but not the Jack of clubs.\n</p>\n<p>\nThis ought to be a game of chance, but lately Eve is winning most of the time, and the\nreason is that she has started to use marked cards. In other words, she knows which cards\nAdam has on the table before he turns them face up. Using this information she orders her\nown cards so that she gets as many points as possible.</p>\n<p>\nYour task is to, given Adam\'s and Eve\'s cards, determine how many points Eve will get\nif she plays optimally.\n</p>\n<p> If Eve\'s i:th card beats Adam\'s i:th card, then Eve gets one point. <br />A card with higher value always beats a card with a lower value: a three beats a two, a four beats a three and a two, etc. An ace beats every card except (possibly) another ace.</p>','<p>\nThere will be several test cases. The first line of input will contain a single positive integer N\ngiving the number of test cases. After that line follow the test cases.</p>\n<p>\nEach test case starts with a line with a single positive integer k  &lt;=  26 which is the number\nof cards each player gets. The next line describes the k cards Adam has placed on the table,\nleft to right. The next line describes the k cards Eve has (but she has not yet placed them on\nthe table). A card is described by two characters, the first one being its value (2, 3, 4, 5, 6, 7,\n8 ,9, T, J, Q, K, or A), and the second one being its suit (C, D, S, or H). Cards are separated\nby white spaces. So if Adam\'s cards are the ten of clubs, the two of hearts, and the Jack of\ndiamonds, that could be described by the line</p>\n<p>TC 2H JD</p>','<p>\nFor each test case output a single line with the number of points Eve gets if she picks the\noptimal way to arrange her cards on the table.</p>','3\n1\nJD\nJH\n2\n5D TC\n4C 5H\n3\n2H 3H 4H\n2D 3D 4D','1\n1\n2','',38,0,1,32,30,23,47,10),(1094,'Investment','<p>John never knew he had a grand-uncle, until he received the notary¡¯s letter. He learned that\nhis late grand-uncle had gathered a lot of money, somewhere in South-America, and that\nJohn was the only inheritor.</p>\n<p>\nJohn did not need that much money for the moment. But he realized that it would be a\ngood idea to store this capital in a safe place, and have it grow until he decided to retire. The\nbank convinced him that a certain kind of bond was interesting for him.</p>\n<p>\nThis kind of bond has a fixed value, and gives a fixed amount of yearly interest, payed\nto the owner at the end of each year. The bond has no fixed term. Bonds are available in\ndifferent sizes. The larger ones usually give a better interest. Soon John realized that the\noptimal set of bonds to buy was not trivial to figure out. Moreover, after a few years his\ncapital would have grown, and the schedule had to be re-evaluated.</p>\n<p>\nAssume the following bonds are available:</p>\n<table align=\"center\" border=\"1\">\n<tbody><tr><td>Value</td><td>Annual interest</td></tr>\n<tr><td>4000</td><td>400</td></tr>\n<tr><td>3000</td><td>250</td></tr>\n</tbody></table>\n<p>\nWith a capital of 10000 one could buy two bonds of 4000, giving a yearly interest of\n800. Buying two bonds of 3000, and one of 4000 is a better idea, as it gives a yearly\ninterest of 900. After two years the capital has grown to 11800, and it makes sense to sell\na 3000 one and buy a 4000 one, so the annual interest grows to 1050. This is where this\nstory grows unlikely: the bank does not charge for buying and selling bonds. Next year the\ntotal sum is 12850, which allows for three times 4000, giving a yearly interest of 1200.</p>\n<p>\nHere is your problem: given an amount to begin with, a number of years, and a set of\nbonds with their values and interests, find out how big the amount may grow in the given\nperiod, using the best schedule for buying and selling bonds.</p>','<p>\nThe first line contains a single positive integer N which is the number of test cases. The test\ncases follow.</p>\n<p>\nThe first line of a test case contains two positive integers: the amount to start with (at\nmost 1000000), and the number of years the capital may grow (at most 40).</p>\n<p>\nThe following line contains a single number: the number d (1  &lt;=  d  &lt;=  10) of available\nbonds.</p>\n<p>\nThe next d lines each contain the description of a bond. The description of a bond consists\nof two positive integers: the value of the bond, and the yearly interest for that bond. The\nvalue of a bond is always a multiple of 1000. The interest of a bond is never more than\n10% of its value.</p>','<p>\nFor each test case, output ¨C on a separate line ¨C the capital at the end of the period, after an\noptimal schedule of buying and selling.</p>','1\n10000 4\n2\n4000 400\n3000 250','14050','',38,0,1,32,30,51,248,10),(1095,'Pipes','<p>The construction of office buildings has become a very standardized task. Pre-fabricated\nmodules are combined according to the customer\'s needs, shipped from a faraway factory,\nand assembled on the construction site. However, there are still some tasks that require\ncareful planning, one example being the routing of pipes for the heating system.</p>\n<p>\nA modern office building ismade up of squaremodules, one on each floor being a service\nmodule from which (among other things) hot water is pumped out to the other modules\nthrough the heating pipes. Each module (including the service module) will have heating\npipes connecting it to exactly two of its two to four neighboring modules. Thus, the pipes\nhave to run in a circuit, from the service module, visiting each module exactly once, before\nfinally returning to the service module. Due to different properties of the modules, having\npipes connecting a pair of adjacent modules comes at different costs. For example, some\nmodules are separated by thick walls, increasing the cost of laying pipes. Your task is to,\ngiven a description of a floor of an office building, decide the cheapest way to route the\nheating pipes.</p>','<p>\nThe first line of input contains a single integer, stating the number of floors to handle. Then\nfollow n floor descriptions, each beginning on a new line with two integers, 2  &lt;=  r  &lt;=  10\nand 2  &lt;=  c  &lt;=  10, defining the size of the floor - r-by-c modules. Beginning on the next line\nfollows a floor description in ASCII format, in total 2r + 1 rows, each with 2c + 2 characters,\nincluding the final newline. All floors are perfectly rectangular, and will always have an\neven number of modules. All interior walls are represented by numeric characters, \'0\' to \'9\',\nindicating the cost of routing pipes through the wall (see sample input).\n</p>','<p>\nFor each test case, output a single line with the cost of the cheapest route.\n</p>','3\n4 3\n#######\n# 2 3 #\n#1#9#1#\n# 2 3 #\n#1#7#1#\n# 5 3 #\n#1#9#1#\n# 2 3 #\n#######\n4 4\n#########\n# 2 3 3 #\n#1#9#1#4#\n# 2 3 6 #\n#1#7#1#5#\n# 5 3 1 #\n#1#9#1#7#\n# 2 3 0 #\n#########\n2 2\n#####\n# 1 #\n#2#3#\n# 4 #\n#####','28\n45\n10','<p> </p>',38,0,0,32,5,0,1,12),(1096,'SETI','<p>For some years, quite a lot of work has been put into listening to electromagnetic radio signals\nreceived from space, in order to understand what civilizations in distant galaxies might\nbe trying to tell us. One signal source that has been of particular interest to the scientists at\nUniversit¡äe de Technologie Spatiale is the Nebula Stupidicus.</p>\n<p>\nRecently, it was discovered that if each message is assumed to be transmitted as a sequence\nof integers a0, a1, ...a(n-1) the function f(k) = a0 + a1*k + a2*k^2 + ... + a(n-1)*k^(n-1) (mod p) always evaluates to\nvalues 0  &lt;=  f (k)  &lt;=  26 for 1  &lt;=  k  &lt;=  n, provided that the correct value of p is used. n is of course\nthe length of the transmitted message, and the ai denote integers such that 0  &lt;=  ai &lt; p. p is a\nprime number that is guaranteed to be larger than n as well as larger than 26. It is, however,\nknown to never exceed 30 000.</p>\n<p>\nThese relationships altogether have been considered too peculiar for being pure coincidences,\nwhich calls for further investigation.</p>\n<p>\nThe linguists at the faculty of Langues et Cultures Extraterrestres transcribe these messages\nto strings in the English alphabet to make the messages easier to handle while trying to\ninterpret their meanings. The transcription procedure simply assigns the letters a..z to the\nvalues 1..26 that f (k) might evaluate to, such that 1 = a, 2 = b etc. The value 0 is transcribed\nto ¡¯*¡¯ (an asterisk). While transcribing messages, the linguists simply loop from k = 1 to n,\nand append the character corresponding to the value of f (k) at the end of the string.</p>\n<p>\nThe backward transcription procedure, has however, turned out to be too complex for the\nlinguists to handle by themselves. You are therefore assigned the task of writing a program\nthat converts a set of strings to their corresponding Extra Terrestial number sequences.</p>','<p>\nOn the first line of the input there is a single positive integer N, telling the number of test\ncases to follow. Each case consists of one line containing the value of p to use during the\ntranscription of the string, followed by the actual string to be transcribed. The only allowed\ncharacters in the string are the lower case letters ¡¯a¡¯..¡¯z¡¯ and ¡¯*¡¯ (asterisk). No string will be\nlonger than 70 characters.</p>','<p>\nFor each transcribed string, output a line with the corresponding list of integers, separated\nby space, with each integer given in the order of ascending values of i.\n</p>','3\n31 aaa\n37 abc\n29 hello*earth','1 0 0\n0 1 0\n8 13 9 13 4 27 18 10 12 24 15','<p> </p>',38,0,1,32,30,3,7,10),(1097,'Minimax Triangulation','<p>	Triangulation of surfaces has applications in the Finite Element Method of solid mechanics.\nThe objective is to estimate the stress and strain on complex objects by partitioning them into\nsmall simple objects which are considered incompressible. It is convenient to approximate\na plane surface with a simple polygon, i.e., a piecewise-linear, closed curve in the plane on\nm distinct vertices, which does not intersect itself. A chord is a line segment between two\nnon-adjacent vertices of the polygon which lies entirely inside the polygon, so in particular,\nthe endpoints of the chord are the only points of the chord that touch the boundary of the\npolygon. A triangulation of the polygon, is any choice of m - 3 chords, such that the polygon\nis divided into triangles. In a triangulation, no two of the chosen chords intersect each other,\nexcept at endpoints, and all of the remaining (unchosen) chords cross at least one of the\nchosen chords. Fortunately, finding an arbitrary triangulation is a fairly easy task, but what\nif you were asked to find the best triangulation according to some measure?</p>\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1100_55d813d6842e55b0c1d45a0db5299a90.jpg\" /></p>\n<p>\nFigure 1: Five out of nine possible triangulations of the example polygon. The leftmost has\nthe smallest largest triangle.</p>','<p>\nOn the first line of the input is a single positive integer n, telling the number of test scenarios\nto follow. Each scenario begins with a line containing one positive integer 2 &lt; m &lt; 50, being\nthe number of vertices of the simple polygon. The following m lines contain the vertices of\nthe polygon in the order they appear along the border, going either clockwise or counter\nclockwise, starting at an arbitrary vertex. Each vertex is described by a pair of integers x y\nobeying 0  &lt;=  x  &lt;=  10 000 and 0  &lt;=  y  &lt;=  10 000.</p>','<p>\nFor each scenario, output one line containing the area of the largest triangle in the triangulation\nof the polygon which has the smallest largest triangle. The area should be presented\nwith one fractional decimal digit.</p>','1\n6\n7 0\n6 2\n9 5\n3 5\n0 3\n1 1','9.0','',38,0,1,32,30,4,12,10),(1099,'Vase Collection','<p>Mr Cheng is a collector of old Chinese porcelain, more specifically late 15th \ncentury Feng dynasty vases. The art of vase-making at this time followed very \nstrict artistic rules. There was a limited number of accepted styles, each defined \nby its shape and decoration. More specifically, there were 36 vase shapes and \n36 different patterns of decoration - in all 1296 different styles.\n</p>\n<p>For a collector, the obvious goal is to own a sample of each of the 1296 styles. \n  Mr Cheng however, like so many other collectors, could never afford a complete \n  collection, and instead concentrates on some shapes and some decorations. As \n  symmetry between shape and decoration was one of the main aesthetical paradigms \n  of the Feng dynasty, Mr Cheng wants to have a full collection of all combinations \n  of k shapes and k decorations, for as large a k as possible. However, he has \n  discovered that determining this k for a given collection is not always trivial. \n  This means that his collection might actually be better than he thinks. Can \n  you help him?</p>','<p>On the first line of the input, there is a single positive integer n, telling \n  the number of test scenarios to follow. Each test scenario begins with a line \n  containing a single positive integer m &lt;= 100, the number of vases in the \n  collection. Then follow m lines, one per vase, each with a pair of numbers, \n  si and di, separated by a single space, where si (0 &lt; si &lt;= 36) indicates \n  the shape of Mr Cheng\'s ith vase, and di (0 &lt; di &lt;= 36) indicates its \n  decoration.</p>','<p>For each test scenario, output one line containing the maximum k, such that \n  there are k shapes and k decorations for which Mr Cheng\'s collection contains \n  all k*k combined styles.</p>','2\n5\n11 13\n23 5\n17 36\n11 5\n23 13\n2\n23 15\n15 23','2\n1','',39,0,1,64,10,2,4,10),(1101,'Who\'s the Boss','<p>Several surveys indicate that the taller you are, the higher you can climb the \ncorporate ladder. At TALL Enterprises Inc. this \"de facto standard\" \nhas been properly formalized: your boss is always at least as tall as you are. \nFurthermore, you can safely assume that your boss earns a bit more than you do. \nIn fact, you can be absolutely sure that your immediate boss is the person who \nearns the least among all the employees that earn more than you and are at least \nas tall as you are. Furthermore, if you are the immediate boss of someone, that \nperson is your subordinate, and all his subordinates are your subordinates as \nwell. If you are nobody\'s boss, then you have no subordinates. As simple as these \nrules are, many people working for TALL are unsure of to whom they should be turning \nin their weekly progress report and how many subordinates they have. Write a program \nthat will help in determining for any employee who the immediate boss of that \nemployee is and how many subordinates they have. Quality Assurance at TALL have \ndevised a series of tests to ensure that your program is correct. These test are \ndescribed below.</p>','<p>On the first line of the input is a single positive integer n, telling the \n  number of test scenarios to follow. Each scenario begins with a line containing \n  two positive integers m and q, where m (at most 30000) is the number of employees \n  and q (at most 200) is the number of queries. The following m lines each list \n  an employee by three integers on the same line: employee ID number (six decimal \n  digits, the first one of which is not zero), yearly salary in Euros and finally \n  height in m (1 microm= 10^-6 meters - accuracy is important at TALL). The chairperson \n  is the employee that earns more than anyone else and is also the tallest person \n  in the company. Then there are q lines listing queries. Each query is a single \n  legal employee ID.</p>\n<p>The salary is a positive integer which is at most 10 000 000. No two employees \n  have the same ID, and no two employees have the same salary. The height of an \n  employee is at least 1 000 000 microm and at most 2 500 000 microm.</p>','<p>For each employee ID x in a query output a single line with two integers y \n  k, separated by one space character, where y is the ID of x\'s boss, and k is \n  the number of subordinates of x. If the query is the ID of the chairperson, \n  then you should output 0 as the ID of his or her boss (since the chairperson \n  has no immediate boss except, possibly, God).</p>','2\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n4 4\n200002 12234 1832001\n200003 15002 1745201\n200004 18745 1883410\n200001 24834 1921313\n200004\n200002\n200003\n200001\n','123457 0\n0 2\n123458 1\n200001 2\n200004 0\n200004 0\n0 3','<p> </p>',39,0,1,64,10,3,20,10),(1100,'Gladiators','<p>In the TV game show Gladiators, the final competition is to run through a steeplechase \n  course. To get some variation, the producer has decided to change the course \n  each week. The course is always built out of m obstacles, all of different heights, \n  placed along a straight line. An obstacle consists of two initially connected \n  platforms which may be separated. Between the two platforms of an obstacle, \n  other higher obstacles may be put. Also, obstacles may be put after one another. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1103_96e46ae749eba701eb52f9f7ee8c1c09.jpg\" src=\"assets/problem_images/1103_96e46ae749eba701eb52f9f7ee8c1c09.jpg\" /></p>\n<p> Figure 1. To the left: An obstacle seen from the side. To the right: A steeplechase \n  course consisting of 5 obstacles. The contestants run from left to right.</p>\n<p>The producer thinks it is most desirable that the results from different weeks \n  may be compared to each other. Therefore, he wants to build courses of similar \n  degree of difficulty.</p>\n<p>A proposed measure of difficulty is the number of platforms that are higher \n  than their immediately preceding platform along the course. Moreover, the leftmost \n  (first) platform of the course always give rise to one point since it is located \n  above the floor. E.g. the course to the right in figure 1 has four points of \n  difficulty.</p>\n<p>Your mission is to find out how many ways there are to build a course of a \n  given point of difficulty, from a given number of obstacles.</p>\n<p> </p>','<p>On the first line of input is a single positive integer n, telling the number \n  of test scenarios to follow. Each test scenario consists of one line containing \n  two non negative integers m and k, where m &lt;= 50 is the number of obstacles, \n  and k is the point of difficulty asked for.</p>','<p>For each test scenario, output one line containing a single positive integer \n  equal to the number of different courses constructible from the m obstacles, \n  amounting to a point of difficulty of exactly k.</p>\n<p>You may safely assume that the answer is less than 10^100.</p>','6\n1 0\n1 1\n2 1\n2 2\n3 1\n3 2','0\n1\n1\n2\n1\n8','<p> </p>',39,0,1,64,10,3,3,10),(1102,'Subway Tree Systems','<p>Some major cities have subway systems in the form of a tree, i.e. between any \n  pair of stations, there is one and only one way of going by subway. Moreover, \n  most of these cities have a unique central station. Imagine you are a tourist \n  in one of these cities and you want to explore all of the subway system. You \n  start at the central station and pick a subway line at random and jump aboard \n  the subway car. Every time you arrive at a station, you pick one of the subway \n  lines you have not yet traveled on. If there is none left to explore at your \n  current station, you take the subway line back on which you first came to the \n  station, until you eventually have traveled along all of the lines twice, once \n  for each direction. At that point you are back at the central station. Afterwards, \n  all you remember of the order of your exploration is whether you went further \n  away from the central station or back towards it at any given time, i.e. you \n  could encode your tour as a binary string, where 0 encodes taking a subway line \n  getting you one station further away from the central station, and 1 encodes \n  getting you one station closer to the central station. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1105_8ff61eebd9137a4c1629be04f04c263c.jpg\" src=\"assets/problem_images/1105_8ff61eebd9137a4c1629be04f04c263c.jpg\" /></p>\n<p>Figure 1. To the left: A subway tree system. The larger dot is the central \n  station. To the right: Three out of several possible encodings of exploration \n  tours for the subway system.</p>','<p>On the first line of input is a single positive integer n, telling the number \n  of test scenarios to follow. Each test scenario consists of two lines, each \n  containing a string of the characters \'0\' and \'1\' of length at most 3000, both \n  describing a correct exploration tour of a subway tree system.</p>','<p>For each test scenario, output one line containing the text \"same\" \n  if the two strings may encode exploration tours of the same subway tree system, \n  or the text \"different\" if the two strings cannot be exploration tours \n  of the same subway tree system.</p>','2\n0010011101001011\n0100011011001011\n0100101100100111\n0011000111010101','same\ndifferent','<p> </p>',39,0,1,64,10,17,46,10),(1103,'Prison Rearrangement','<p>In order to lower the risk of riots and escape attempts, the boards of two nearby \nprisons of equal prisoner capacity, have decided to rearrange their prisoners \namong themselves. They want to exchange half of the prisoners of one prison, for \nhalf of the prisoners of the other. However, from the archived information of \nthe prisoners\' crime history, they know that some pairs of prisoners are dangerous \nto keep in the same prison, and that is why they are separated today, i.e. for \nevery such pair of prisoners, one prisoners serves time in the first prison, and \nthe other in the second one. The boards agree on the importance of keeping these \npairs split between the prisons, which makes their rearrangement task a bit tricky. \nIn fact, they soon find out that sometimes it is impossible to fulfill their wish \nof swapping half of the prisoners. Whenever this is the case, they have to settle \nfor exchanging as close to one half of the prisoners as possible.</p>','<p>On the first line of the input is a single positive integer n, telling the \n  number of test scenarios to follow. Each scenario begins with a line containing \n  two non-negative integers m and r, 1 &lt; m &lt; 200 being the number of prisoners \n  in each of the two prisons, and r the number of dangerous pairs among the prisoners. \n  Then follow r lines each containing a pair xi yi of integers in the range 1 \n  to m, which means that prisoner xi of the first prison must not be placed in \n  the same prison as prisoner yi<br />\n  of the second prison.</p>','<p>For each test scenario, output one line containing the largest integer k &lt;= \n  m / 2 , such that it is possible to exchange k prisoners of the first prison \n  for k prisoners of the second prison without getting two prisoners of any dangerous \n  pair in the same prison.</p>','3\n\n101 0\n3 3\n1 2\n1 3\n1 1\n8 12\n1 1\n1 2\n1 3\n1 4\n2 5\n3 5\n4 5\n5 5\n6 6\n7 6\n8 7\n8 8','50\n0\n3','',39,0,1,64,10,18,39,10),(1104,'Sightseeing Tour','<p>The city executive board in Lund wants to construct a sightseeing tour by bus \nin Lund, so that tourists can see every corner of the beautiful city. They want \nto construct the tour so that every street in the city is visited exactly once. \nThe bus should also start and end at the same junction. As in any city, the streets \nare either one-way or two-way, traffic rules that must be obeyed by the tour bus. \nHelp the executive board and determine if it\'s possible to construct a sightseeing \ntour under these constraints.</p>','<p>On the first line of the input is a single positive integer n, telling the \n  number of test scenarios to follow. Each scenario begins with a line containing \n  two positive integers m and s, 1 &lt;= m &lt;= 200, 1 &lt;= s &lt;= 1000 being \n  the number of junctions and streets, respectively. The following s lines contain \n  the streets. Each street is described with three integers, xi, yi, and di, 1 \n  &lt;= xi, yi &lt;= m, 0 &lt;= di &lt;= 1, where xi and yi are the junctions \n  connected by a street. If di = 1, then the street is a one-way street (going \n  from xi to yi), otherwise it\'s a two-way street. You may assume that there exists \n  a junction from where all other junctions can be reached.</p>','<p>For each scenario, output one line containing the text \"possible\" \n  or \"impossible\", whether or not it\'s possible to construct a sightseeing \n  tour.</p>','4\n5 8\n2 1 0\n1 3 0\n4 1 1\n1 5 0\n5 4 1\n3 4 0\n4 2 1\n2 2 0\n4 4\n1 2 1\n2 3 0\n3 4 0\n1 4 1\n3 3\n1 2 0\n2 3 0\n3 2 0\n3 4\n1 2 0\n2 3 1\n1 2 0\n3 2 0','possible\nimpossible\nimpossible\npossible','<p> </p>',39,0,1,32,30,0,3,10),(1105,'A Number Game','<p>The wide dissemination of calculators and computers is not without disadvantages. \nTeachers all over the world find out that even students in technical disciplines \ntend to have a surprising lack of calculating ability. Accustomed as they are \nto the use of calculators and computers, many of them are unable to make calculations \nlike 7*8 mentally, or to factor 91 by heart.\n</p>\n<p>We all know, but who cares?</p>\n<p>Professor Bartjens cares. Professor Bartjens is a bit old-fashioned. He decided \n  to give his students some training in calculating without electronic equipment \n  - even without a slide rule. He invented a two-person game involving mental \n  calculations.</p>\n<p>Professor Bartjens would write a positive number on the blackboard. During \n  the game more positive numbers may appear on the blackboard. The two players \n  will then make moves in turn. A player on move is obliged to make a move, unless \n  the blackboard is empty, in which case the game is over. A move is one of the \n  following:</p>\n<p>\n<ol>\n	<li> If you see the number 1 on the blackboard, you may take it. That means: \n    you gain one point, and the number disappears from the blackboard.</li>\n	<li>If you see a prime number p on the blackboard, you may subtract one. That \n    is: you gain one point, and the p on the blackboard is replaced by p - 1.</li>\n	<li>If you see a composite number c on the blackboard, you may replace it by \n    two smaller (positive) numbers, a and b, such that a * b = c. You do not gain \n    any points.</li>\n</ol>\n</p>\n<p>The goal is of course to obtain as many points as you can.</p>\n<p>Professor Bartjens was hoping that his students would find the game so interesting \n  that they would spend all day playing, thereby improving their skills in calculation. \n  Indeed his students did find the game interesting, and spent many hours, not \n  so much playing the game as discussing optimal strategies.</p>\n<p>The students came to two conclusions. First, the sum of the two players\' points \n  after any given game are the same regardless of the actual scheme played. Thus,\" \n  a player maximizing his own points also minimizes his opponent\'s! Second, it \n  is always best to take a point when you have the chance. Thus, whenever prime \n  numbers or ones are written on the blackboard, the player on move takes one \n  of them.</p>\n<p>Here is your problem: given a starting number, and assuming both players play \n  to maximize their own points, what will be the outcome?</p>','<p>On the first line of the input is a single positive integer n, telling the \n  number of test scenarios to follow. Each scenario consists of a single line \n  containing the positive integer m &lt; 1000000, the number initially written \n  on the blackboard.</p>','<p>For each test scenario, output one line containing two numbers separated by \n  one space character, equal to the points gained by the two players, both playing \n  to maximize their own points. The first number is the number of points gained \n  by the first player.</p>','6\n1\n2\n3\n4\n5\n6','1 0\n1 1\n2 1\n2 2\n3 2\n2 3','',39,0,1,32,30,0,0,10),(6001,'Undercut','<p>Undercut is a card game where two players each have five cards numbered one through \nfive. At each round, each player selects a card, then simultaneously reveals it. \nIf the cards are of equal value, there is no score. Otherwise, there are two cases: \nthe two cards are exactly one point apart (this is called an undercut), or the \ncards are more than one point apart. In the latter case, the person revealing \nthe larger of the cards gets the number of points on the larger card. In the case \nof an undercut the player with the lower card gets the sum of the two cards. The \nexception to this is when the cards are 1 and 2, in which case the player with \nthe lower card gets 6 points (instead of only 3 points). After each round, the \ncards are returned to the hands and they play another round.\n</p>\n<p>For example, if there are 5 rounds and player A plays (in this order) 5, 3, \n  1, 3, 5 and player B plays 3, 3, 3, 3, 4, then the scoring for each round would \n  be: A gets 5 points, no points, B gets 3 points, no points, B gets 9 points. \n  The totals would be A: 5, B: 12.</p>\n<p>\nIn this problem you will be given card plays for both players and must determine \n  the final scores.</p>','<p>There will be multiple input instances. Each instance will be one game. The \n  first line of input for a game will be an integer n &lt;= 20. (A value of n \n  = 0 terminates input.) The next two lines will each contain n integers between \n  1 and 5 inclusive indicating the cards played on each of n rounds. The first \n  line are player A\'s card plays and the second line are player B\'s card plays.</p>','<p>Each input instance should generate one line of output of the form:</p>\n<p>A has a points. B has b points.</p>\n<p>\nwhere the value of a and b are for you to determine. A blank line should separate \n  output lines.</p>\n<p> </p>','5\n5 3 1 3 5\n3 3 3 3 4\n4\n2 3 1 1\n1 5 5 5\n0','A has 5 points. B has 12 points.\n\nA has 0 points. B has 21 points.','',-1,0,1,64,1,148,613,24),(6002,'Digital Roots','<p>The digital root of a positive integer is found by summing the digits of the \n  integer. If the resulting value is a single digit then that digit is the digital \n  root. If the resulting value contains two or more digits, those digits are summed \n  and the process is repeated. This is continued as long as necessary to obtain \n  a single digit.<br /><br />\n  For example, consider the positive integer 24. Adding the 2 and the 4 yields \n  a value of 6. Since 6 is a single digit, 6 is the digital root of 24. Now consider \n  the positive integer 39. Adding the 3 and the 9 yields 12. Since 12 is not a \n  single digit, the process must be repeated. Adding the 1 and the 2 yeilds 3, \n  a single digit and also the digital root of 39.</p>','<p>The input file will contain a list of positive integers, one per line. The end \n  of the input will be indicated by an integer value of zero.</p>\n<p>note : n is so big that it won\'t fit in 64-bit integers</p>','<p>For each integer in the input, output its digital root on a separate line of \n  the output.</p>','24\n39\n0','6\n3','',-1,0,1,64,2,230,962,10),(6003,'GCD & LCM','<p>Given x and y (2 &lt;= x &lt;= 100,000, 2 &lt;= y &lt;= 1,000,000), you are \n  to count the number of p and q such that: </p>\n<p>1) p and q are positive integers;</p>\n<p>2) GCD(p, q) = x;</p>\n<p>3) LCM(p, q) = y.</p>','<p>There are multiple tests in input, x and y, one line for each test.</p>\n<p>You should read the input untill end of file.</p>','<p>Number of pairs of p and q.</p>\n<p> </p>','3 60','4','',-1,0,1,64,5,71,431,10),(6004,'Count the Colors','<p>Painting some colored segments on a line, some previously painted segments may \nbe covered by some the subsequent ones. \n</p>\n<p>Your task is counting the segments of different colors you can see at last.</p>','<p>The first line of each data set contains exactly one integer n, 1 &lt;= n &lt;= \n  8000, equal to the number of colored segments.\n</p>\n<p>Each of the following n lines consists of exactly 3 nonnegative integers separated \n  by single spaces:<br />\n  <br />\n  x1 x2 c<br />\n  <br />\n  x1 and x2 indicate the left endpoint and right endpoint of the segment, c indicates \n  the color of the segment.</p>\n<p>All the numbers are in the range [0, 8000], and they are all integers.</p>\n<p>Input may contain several data set, process to the end of file.</p>','<p>Each line of the output should contain a color index that can be seen from the \n  top, following the count of the segments of this color, they should be printed \n  according to the color index.\n</p>\n<p>If some color can\'t be seen, you shouldn\'t print it.</p>\n<p>Print a blank line after every dataset.</p>','\n5\n0 4 4\n0 3 1\n3 4 2\n0 2 2\n0 2 3\n4\n0 1 1\n3 4 1\n1 3 2\n1 3 1\n6\n0 1 0\n1 2 1\n2 3 1\n1 2 0\n2 3 0\n1 2 1','1 1\n2 1\n3 1\n\n1 1\n\n0 2\n1 1','',-1,0,1,64,2,44,141,24),(6005,'Switch','<p>There are N lights in a line. Given the states (on/off) of the lights, your task \nis to determine at least how many lights should be switched (from on to off, or \nfrom off to on), in order to make the lights on and off alternatively.</p>','<p>One line for each testcase.<br /><br />\n  The integer N (1 &lt;= N &lt;= 10000) comes first and is followed by N integers \n  representing the states of the lights (\"1\" for on and \"0\" \n  for off).<br /><br />\n  Process to the end-of-file.</p>','<p>For each testcase output a line consists of only the least times of switches.</p>','3 1 1 1\n3 1 0 1','1\n0','',-1,0,1,64,3,240,557,10),(6006,'Counting Triangles','<p>Given an equilateral triangle with n the length of its side, program to count \n  how many triangles in it.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/6006_47c413f86e86aa4486cbc557d4c0a105.jpg\" src=\"assets/problem_images/6006_47c413f86e86aa4486cbc557d4c0a105.jpg\" /></p>','<p> The length n (n &lt;= 500) of the equilateral triangle\'s side, one per line.</p>\n<p> process to the end of the file</p>','<p>The number of triangles in the equilateral triangle, one per line.</p>','1\n2\n3','1\n5\n13','',-1,0,1,64,2,89,209,24),(6007,'Two Circles and a Rectangle','<p>Give you two circles and a rectangle, your task is to judge wheather the two circles can \nbe put into the rectangle with no part of circles outside the retangle.</p>','<p>There are multiple test cases. In every test cast, there are four float-point \n  numbers:</p>\n<p> a, b, r1, r2</p>\n<p>where, a and b are two sides of the rectangle, r1 and r2 are radii of the two circles. Process to end of file.</p>','<p>Print a \"Yes\", if the circles can be put into the rectangle. Otherwise, \n  print a \"No\".</p>\n<p>You can safely assume x &lt; y, where x and y are float-point numbers, if x \n  &lt; y + 0.01.</p>','5 4 1 1\n5 4 1.5 2','Yes\nNo','',-1,0,1,64,2,62,267,10),(6008,'Jolly Jumpers','<p>A sequence of n &gt; 0 integers is called a jolly jumper if the absolute values \nof the difference between successive elements take on all the values 1 through \nn-1. For instance, \n</p>\n<p>1 4 2 3</p>\n<p>is a jolly jumper, because the absolutes differences are 3, 2, and 1 respectively. \n  The definition implies that any sequence of a single integer is a jolly jumper. \n  You are to write a program to determine whether or not each of a number of sequences \n  is a jolly jumper. </p>','<p>Some lines of input contains an integer n &lt; 3000 followed by n integers representing \n  the sequence.</p>\n<p>There maybe some empty lines that you should not proceed.</p>','<p>For each line of input, generate a line of output saying \"Jolly\" \n  or \"Not jolly\".</p>','4 1 4 2 3\n5 1 4 2 -1 6','Jolly\nNot jolly','',-1,0,1,64,2,88,443,10),(6009,'Substitution Cypher','<p>Substitution cyphers are the simplest of cyphers where the letters of one alphabet \nare substituted for the letters of another alphabet. In one form or another, they\'ve \nbeen in use for over 2000 years.</p>','<p>A line containing the plaintext alphabet<br />\n  A line containing the substitution alphabet<br />\n  Several lines of text</p>','<p>A line containing the substitution alphabet<br />\n  A line containing the plaintext alphabet<br />\n  The converted lines of text</p>\n<p>Please note: All lines will be at most 64 characters, plus a trailing end-of-line \n  character. Pass through all characters not found in the plaintext alphabet.</p>','abcdefghijklmnopqrstuvwxyz\nzyxwvutsrqponmlkjihgfedcba\nShar\'s Birthday:\nThe birthday is October 6th, but the party will be Saturday,\nOctober 5.  It\'s my 24th birthday and the first one in some \nyears for which I\'ve been employed.  Plus, I have new clothes.\nSo I have cause to celebrate.  More importantly, though, \nwe\'ve cleaned the house!  The address is 506-D Albert Street.\nExtra enticement for CS geeks:  there are several systems in\nthe house, and the party is conveniently scheduled for 3 hours\nafter the second CSC programming contest ends (not to mention,\nwithin easy walking distance)!','zyxwvutsrqponmlkjihgfedcba\nabcdefghijklmnopqrstuvwxyz\nSszi\'h Brigswzb:\nTsv yrigswzb rh Oxglyvi 6gs, yfg gsv kzigb droo yv Szgfiwzb,\nOxglyvi 5.  Ig\'h nb 24gs yrigswzb zmw gsv urihg lmv rm hlnv \nbvzih uli dsrxs I\'ev yvvm vnkolbvw.  Pofh, I szev mvd xolgsvh.\nSl I szev xzfhv gl xvovyizgv.  Mliv rnkligzmgob, gslfts, \ndv\'ev xovzmvw gsv slfhv!  Tsv zwwivhh rh 506-D Aoyvig Sgivvg.\nEcgiz vmgrxvnvmg uli CS tvvph:  gsviv ziv hvevizo hbhgvnh rm\ngsv slfhv, zmw gsv kzigb rh xlmevmrvmgob hxsvwfovw uli 3 slfih\nzugvi gsv hvxlmw CSC kiltiznnrmt xlmgvhg vmwh (mlg gl nvmgrlm,\ndrgsrm vzhb dzoprmt wrhgzmxv)!','',-1,0,1,64,5,86,269,10),(1106,'Secret --MAX','<p>Agent Smith transfers to a secret center secret information consisting of one strictly positive integer number. For coding the number, he presents each digit of the number by its corresponding word, and concatenates the words. For example, 42 may be&nbsp; transformed to FOURTWO. Agent Smith knows four languages (the 1<sup>st</sup> , the 2<sup>nd</sup> , the 3<sup>rd</sup> and the 4<sup>th</sup> ). In these languages,&nbsp; numbers from 0 to 9 are spelled as follows (all letters are capital Latin, ASCII codes in range 65–90):</p>\n<table border=\"1\"><tbody><tr><td align=\"center\">Digit</td><td align=\"center\">Language 1 Spell</td><td align=\"center\">Language 2 Spell</td><td align=\"center\">Language 3 Spell</td><td align=\"center\"> Language 4 Spell</td></tr><tr><td align=\"center\">0</td><td align=\"center\">ZERO</td><td align=\"center\">SIFIR</td><td align=\"center\">ZERO</td><td align=\"center\">ZERO</td></tr><tr><td align=\"center\">1</td><td align=\"center\">UNU</td><td align=\"center\">BIR</td><td align=\"center\">JEDEN</td><td align=\"center\">ONE</td></tr><tr><td align=\"center\">2</td><td align=\"center\">DOI</td><td align=\"center\">IKI</td><td align=\"center\">DWA</td><td align=\"center\">TWO</td></tr><tr><td align=\"center\">3</td><td align=\"center\">TREI</td><td align=\"center\">UC</td><td align=\"center\">TRZY</td><td align=\"center\">THREE</td></tr><tr><td align=\"center\">4</td><td align=\"center\">PATRU</td><td align=\"center\">DORT</td><td align=\"center\">CZTERY</td><td align=\"center\">FOUR</td></tr><tr><td align=\"center\">5</td><td align=\"center\">CINCI</td><td align=\"center\">BES</td><td align=\"center\">PIEC</td><td align=\"center\">FIVE</td></tr><tr><td align=\"center\">6</td><td align=\"center\">SASE</td><td align=\"center\">ALTI</td><td align=\"center\">SZESC</td><td align=\"center\">SIX</td></tr><tr><td align=\"center\">7</td><td align=\"center\">SAPTE</td><td align=\"center\">YEDI</td><td align=\"center\">SIEDEM</td><td align=\"center\">SEVEN</td></tr><tr><td align=\"center\">8</td><td align=\"center\">OPT</td><td align=\"center\">SEKIZ</td><td align=\"center\">OSIEM</td><td align=\"center\">EIGHT</td></tr><tr><td align=\"center\">9</td><td align=\"center\">NOUA</td><td align=\"center\">DOKUZ</td><td align=\"center\">DZIEWIEC</td><td align=\"center\">NINE</td></tr></tbody></table><p>\nAfter such encoding, he adds to the code some “noise” — redundant capital Latin chars. Any chars (including the chars already used in the code) can be added in any quantities in any positions of the code.<br />Write a program which should read the code and search the largest possible number coded by that code, making two different assumptions:<br />1. We don’t know what language Smith used, but it was the same language (of the given) overall the code;<br />2. Smith could code different digits using either different languages (of the given) or the same.</p>','<p>Your program should input all lines and process them separately. Each single line contains not more than 10<sup>5</sup> capital Latin chars — the code. Size of the input is less than 1 Mb.</p>\n<p>It’s guaranteed, that each code was received from a correct positive (non-zero) integer. By the way, it means that both results will be always positive. Your program should output them without leading zeroes.</p>','<p>For each line from the input file your program should output two single-space-separated integers — the largest numbers&nbsp; according to the listed two assumptions in that order.</p>','SIZEROXSIEVDEMX\n','66 67','',42,0,1,64,3,6,52,10),(1107,'Safety Grade','<p>&nbsp;The sites of a cable network are interconnected by cables such that a cable connects a single pair of distinct sites, and a pair of sites can be connected by several cables. We say that the network is connected if any two sites in the network are directly or indirectly connected; otherwise the network is disconnected. The safety grade S of the network is defined as follows.<br />S is 0 if the network is disconnected, or the number of sites is 0 or 1.</p>\n<p>If the number of sites is greater than 1 then S is the minimum number of cables that disconnect the network when removed, i.e. removing any S-1 cables keeps the net connected, while the removal of some S cables disconnects the net.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1110_2bd8ba6b73678888476a97f67eae3c87.jpg\" src=\"assets/problem_images/1110_2bd8ba6b73678888476a97f67eae3c87.jpg\" /></p>\n<p>For example, consider the net in figure 1, where the sites correspond to the shadowed circles and the cables are indicated by lines. The network stays connected when removing any single cable, whereas the removal of cables (0,2), and (1,3) disconnects the net. Another variant for disconnecting the net is by removing the cables (2,4) and (2,4). The safety grade is S=2.</p>','<p>Write a program that reads several data sets from a text file and computes the safety grade of the cable networks the data sets encode. Each data set starts with two integers: the number 0 ≤ n ≤ 100 of sites in the net, and 0≤m≤1000 the number of cables in the net. Follow m data pairs (u,v), u&lt;v, where u and v are site identifiers (integers from 0 to n-1). A pair (u,v) designates a cable that interconnects the sites u and v. The pairs may occur in any order. Except the (u,v) pairs, which do not contain white spaces, white spaces can occur freely in input. Input data terminate with an end of file and are correct.&nbsp;</p>','<p>For each data set, the program prints on the standard output, from the beginning of a line, the safety grade of the encoded net.</p>','0 0\n2 1 (0,1)\n2 0\n5 8 (0,1) (1,3) (2,3) (0,2) (0,1) (2,3) (2,4) (2,4)\n','0\n1\n0\n2\n','',42,0,1,64,10,83,432,10),(1108,'Search by template','<p>The pattern P and the text T are given. They contain the letters of the Latin alphabet (lowercase and uppercase). The pattern may also contain the characters \'?\', \'[\', \']\', \'{\' and \'}\' You must find all the positions where P appears in T.<br />Each position in the pattern P may contain:<br />a letter from the Latin alphabet (\'a\' – \'z\', \'A\' – \'Z\')</p>\n<p>the character \'?\' that can replace any letter (on its place can be any letter)</p>\n<p>brackets \'[\'...\']\', between them there is the set of letters that may be in the current position</p>\n<p>brackets \'{\'...\'}\', between them there is the set of letters that are not allowed to be in the current position</p>\n<p>the letters can be repeated in brackets like [asssa] or {kLLf}.</p>\n<p>For example, if the pattern P is A?[bcCc]{De}, then the first letter of a match must be A, the second can be any Latin letter, the third - letter b, c or C, and the fourth can be any Latin letter except D or e.</p>','<p>The first line contains the number of test cases n. Each test consists of two lines. The first line contains the pattern P with no more than 100 characters and 60 positions. The second line contains the text with no more than 10<sup>6</sup> letters.</p>','<p>For each test case print on a separate line all text positions where the pattern matches, in ascending order (the first letter from the text T is assumed to have the position ‘1’). If the pattern P does not appear in text T, print the message \"no match\". There must be a single space between each printed position, and no extra space at the beginning/end of line.</p>','3\nA?[bcCc]{De}\nyAqCpsApbeAocqq\n???[QWERTY]\naSdFrQererRTY\n{eRT}?\neRTeRTq\n','2 11\n3 8 9 10\nno match\n','<p>The input file is 30MB!!</p>',42,0,1,64,10,20,68,12),(1109,'Roots Intervals','<p>Consider the function f(x)=tan(sin(x))-sin(tan(x))+cos(x)5-0.5 defined on the interval [a,b], and nb≥1 a series of subintervals [xi,xi+1], i=1,nb, where x1=a and x<sub>nb+1</sub>=b. Find the number of subintervals that contain “observable” roots of f(x). A root in a subinterval [xi,xi+1] is “observable” if the existence of that root can be decided without inspecting the behavior of f(x) for x<sub>i</sub>&lt;x&lt;x<sub>i+1</sub>, i.e. a subinterval is a black box and you cannot<br />compute inside the interval.</p>','<p>The program input is from a text file. Each data set in the file stands for a particular interval [a,b] of f(x) and specifies the limits a, b (real numbers) and the integer number nb of subintervals.<br />White spaces can occur freely in the input. The input data are correct and terminate with an end of file. An input/output sample for the function f(x)=1-x2 is in the table bellow.</p>','<p>For each data set the program prints the number of subintervals that contain “observable” roots of f(x). Each result is printed on the standard output from the beginning of a line.</p>','-2 2 2\n0 100 5\n-1 1 1\n','2\n1\n1\n','',42,0,1,64,1,15,27,12),(1110,'Palindromic Dates','<p>A date is said to be palindromic if, when written in the form “YearMMDD”, the result is a palindrome (a number that has the same value regardless if we read it left-to-right or right-to-left).<br />For example, the date “January 1st, 1” is palindromic since it would be written as “10101”;<br />“December 1st, 1021” is palindromic too, since it would be written as “10211201”.<br />Given a date, you are required to find the next valid date (in chronological order) that is palindromic (according to the definition of “palindromic date” that was given in the previous paragraph). For the purpose of this problem, a date is considered valid if the year is between 1 and 2147483647, the month is between 1 and 12, the day is at least 1.</p>','<p>The input file contains one date per line: thee numbers separated by the character ‘/’, representing (in order) the day, month and year. For example, July 4th 2011 would be written as “04/07/2011” (or 4/07/2011, or 4/7/2011). The last line in the input file is empty.<br />It is guaranteed that all input dates are valid, and that for all input dates there is a “next valid palindromic date”.</p>','<p>The output file shall contain the next valid palindromic date for each date in the input file, one date per line. The date format in the output file is DD/MM/Year – i.e. the separator character is \'/\', the year’s first digit must never be 0, and you must always use two digits for day and month (use 01 instead of 1, 02 instead of 2 etc.).</p>','1/1/1\n12/11/1\n01/06/138048967\n','01/02/1\n11/12/1\n31/08/138048984\n','<p>for months 1,3,5,7,8,10,12 – the day is not greater than 31<br />for months 4,6,9,11 – the day is not greater than 30<br />for month 2, the day is not greater than 29, and can be 29 only during leap years.<br />A year is considered “leap year” if it is divisible by 400, or is divisible by 4 but not by 100.</p>',42,0,1,64,10,1,17,12),(1111,'Post Offices','<p>You are given the location of all post offices on earth, and a set of destinations for various packages that need to be shipped. For each package, you need to find the maximal set of post offices that are suitable as destinations for the package – i.e. the set of post offices must satisfy the following constraints:<br />The post office that is closest to the final destination must be in the result set.<br />All post offices that are at most 2% farther than the closest post office must also be present in the result set.<br />For the purpose of this problem, the earth is approximated to be a perfectly flat sphere, with the radius 6381 Km. The distance between two points may be computed using the haversine formula:</p>\n<div align=\"center\">A = sin( (lat1-lat2)/2) ^ 2 + cos(lat1) * cos(lat2) * ( sin( (long1-long2)/2) ^ 2 ) ;<br />DISTANCE = 6381 * 2 * atan2( sqrt(A), sqrt(1-A) );<br /></div><p>(you may use other formulas if you please, but note that the arccosine formula has large rounding<br />errors for small distances, and thus you may get wrong results).</p>','<p>The input file is a binary file; all numbers written in it are written in little-endian representation. It contains, in this order:<br />- 4 bytes that represent the number of post offices N – integer number, no greater than 3000000<br />- For each post office, the input file contains two numbers<lat long=\"\"> (4 bytes each) representing the latitude and longitude (in degrees) of the post office. The numbers are single-precision IEEE754 floating point numbers. All latitudes are between -90 and 90 degrees; all longitudes are between -180 and 180 degrees.<br />- 4 bytes representing the number of packages M (integer number, no greater than 500000)<br />- For each package, the input file contains two numbers <lat long=\"\"> (4 bytes each) representing the latitude and longitude (in degrees) of the destination. The numbers are single-precision IEEE754 floating point numbers. All latitudes are between -90 and 90 degrees; all longitudes are between -180 and 180 degrees.<br /><br /></lat></lat></p>','<p>The output file is also a binary file, containing only 32-bit integers written in little-endian representation. For each of the M lines in the input file, it must contain:<br />- One integer – the number P of post offices in the destination set<br />- P integers – the indices of the post offices in the destination set, sorted in ascending order (lower indices first). The index of the first post office in the input file is considered to be 1 (and thus, all indices should be between 1 and N, inclusively)</p>','N/A – binary file\n','N/A – binary file\n','<p>The input file is 23 MB</p>',42,0,1,64,10,0,0,12),(1112,'Choosing a camera','<p>Mr. Strange is choosing a compact digital photo camera. He looks at various shops offers and sometimes makes temporary choices. At each temporary choice, he knows about all offers he already saw, but doesn’t know about those he will see in the future.<br />According to Mr. Strange, any digital camera is fully described by two properties: the number of pixels and the optical zoom ratio. For each property, he thinks that the more is the better. Mr. Strange is afraid to buy an outdated camera, so he never chooses a camera, if he knows about another camera, which is strictly better by any one property and not worse by another. Among all cameras Mr. Strange does not consider outdated, he chooses the cheapest one; if there are different non-outdated cameras with equal minimal cost, he chooses among them the oldest offer.</p>','<p>The first line of input contains the number of the test cases. The first line of each test case contains total number n (1 ≤ n ≤ 105) of actions. Each action can be either a new camera offer or a temporary choice. Each offer is denoted by big letter P, then camera’s number of pixels, zoom ratio and cost. Each temporary choice is denoted by big letter С. Each action is denoted in separate line, data inside lines are separated by single spaces. Numbers of pixels are integers in the range 103 ≤ pi ≤ 109. Zoom ration is a floating-point number in the range 1 ≤ zi ≤ 100, with no more than 6 digits after decimal point. Costs are integers in the range 1 ≤ ci ≤ 106. Size of the input is less than 16 Mb.</p>','<p>For each temporary choice action, your program should output the number of the action when the currently chosen camera was offered. If no choice can be done according to the rules, the query result should be –1. All results inside each test case should be written in the same line and separated by single spaces. Results for consecutive test cases should be in consecutive lines.</p>','2\n1\nP 9600000 7 72\n7\nP 1200000 1 40\nP 7200000 5 100\nC\nP 9600000 3 200\nC\nP 7200000 12 220\nC\n','2 2 4\n','<p>The input file is 15 MB</p>',42,0,1,64,3,4,32,12),(1113,'Road Planner','<p>&nbsp;An acyclic road network is composed of unidirectional road segments (edges), each connecting two intersections (vertices) out of a total of N intersections. The time necessary to travel on a road segment is always positive and it depends linearly on the number of cars C using the segment s:</p>\n<div align=\"center\">T(s) = a<sub>S</sub>C + b<sub>S</sub><br /></div><p>a<sub>S</sub> and b<sub>s</sub> are two constants expressed as single precision floating point numbers, describing the properties of road segment s. The time necessary to cross an intersection is 0.<br />A number of cars must travel from vertex 0 to vertex N-1 in this road network. Each car chooses its route selfishly in order to reduce its own travel time; each car knows that all the other cars will also selfishly choose their route. You are asked to write a program that computes how many cars will travel on each of the possible paths from the source to the destination, and the time needed to travel on those paths.</p>','<p>The input file contains several tests and is organized as follows. The first line contains the number of tests. The following lines contain the specification of the tests. Each test contains on the first line the number of vertices, the number of edges and the number of cars, separated by whitespaces. After that, each edge is given on a separate line and contains the following fields separated by spaces: source vertex, destination vertex, a<sub>S</sub> and b<sub>S.</sub></p>','<p>The output will contain one line for each test input, specifying the minimum time for any car to travel in the network, rounded down to the nearest integer.</p>','2\n4 4 4000\n0 1 0.01 0\n0 2 0 45.1\n1 3 0 45.1\n2 3 0.01 0\n4 5 4000\n0 1 0.01 0\n0 2 0 45.1\n1 3 0 45.1\n1 2 0 0\n2 3 0.01 0\n','65\n80\n','<p>The first input consists of 4 vertices and 4 edges; 4000 cars must travel from vertex 0 to vertex 3. To achieve the smallest travel time, cars will choose one of the two possible paths (0-1-3) and (0-2-3) such that the number of cars on both is equal; hence minimum travel time is lower(0.01 * 2000 + 45.1) = 65.<br />The second input is similar to the first one, except for a zero cost edge that is added between vertices 1 and 2. In this case, all cars selfishly choose to take the path (0-1-2-3) and the minimum travel time is 80.</p>',42,0,1,64,10,0,0,12),(1114,'Term Generator','<p>A formula has the syntax shown in figure 1(a). If a formula has the particular syntax given in figure 1(b) we say that the formula is in Normal Form (NF).<br />&nbsp;\n<img alt=\"http://sharecode.ir/assets/problem_images/1117_5a5b96068956b2b616e3e8d0d6b16c1c.jpg\" src=\"assets/problem_images/1117_5a5b96068956b2b616e3e8d0d6b16c1c.jpg\" /><br />A formula is converted to NF according to the rewriting rules given below, where F represents a formula, S stands for a non empty sequence of formulae, and s and s\' denote possibly empty sequences of formulae. Applying a rewriting rule q-&gt;r on a formula F means to substitute by r a part of F that matches the pattern q, as shown in figure 2. The conversion terminates when no rewriting rule can be applied. The conversion terminates for any formula, and the result is unique regardless which rules are applied on which parts of the formula and in which order.<br />\n<img alt=\"http://sharecode.ir/assets/problem_images/1117_0d3a051ff8bdbc79c4fefdfdbd84ddb8.jpg\" src=\"assets/problem_images/1117_0d3a051ff8bdbc79c4fefdfdbd84ddb8.jpg\" /><br />Let NF(F) be the normal form of the formula F. The problem is to write a term generator that for a given formula F and a number k outputs the next k terms from NF(F) in the order in which they appear in NF(F). If the terms are exhausted, the generator continues from the first term of NF(F). For example, consider F=(+(*(+(*ab)(+a))b)), and NF(F)=(+(*abb)(*ab)) as in figure 2. Generating the first term from NF(F) yields (*abb). Generating two more terms produces (*ab), (*abb). Notice that if NF(F) contains similar terms, as in the last example in figure 3, these terms are considered distinct.</p>','<p>The content of a data set is F k1...kn 0, n&gt;0, where F is a formula, and k1...kn are long integers different than 0. For each k<sub>i</sub>, i=1,n, the program generates the next |ki| terms from NF(F) and, if k<sub>i</sub>&gt;0, prints these terms on the standard output.</p>','<p>Each printed term starts from the beginning of a line and there are no white spaces between the characters of the term. The generated terms are not printed if k<sub>i</sub>&lt;0. White spaces are used freely in the input. Each formula F in the input has at most 150 characters and each term of NF(F) is at most 80 characters long, not counting white spaces. The input data terminate with an end of file, and are correct.</p>','(+(*(+(*ab)(+a))b))\n-3 1 1 0\n(+xyy) -2 1 0','(*ab)\n(*abb)\ny','',42,0,1,64,10,0,0,12),(1115,'Painting','<p>There is a wall consisting of nxn tiles. Long ago those tiles were painted in k different colors. Now the paint wears out and the wall has to be repainted. This time all the tiles of the wall should be painted in just one of the k colors. In one move we can paint one horizontal or one vertical row of tiles. Also we can paint a row in a given color only if at least two tiles in this row (horizontal or vertical) are already in this color (either old or new paint). You need to find out the minimal number of moves needed to paint all tiles.</p>','<p>The first line of input contains the number of test cases. The first line of each test case contains two integers: n (1 &lt; n ≤ 500) – the number of tiles in one row and k(1 ≤ k &lt; n) – the number of different colors available. In each of the following n lines there are n natural numbers giving the numbers of the colors in which the corresponding tile was painted before. The colors have the numbers from 1 to k.</p>','<p>The first line of the output for each test case should contain the number q – the minimal number of moves needed to paint all the tiles. In the second line list the numbers of all the colors in which we can paint the wall according to the given rules with the same number of moves. The numbers should be listed in increasing order. If it’s impossible to paint all the tiles following the rules in the statement then print just the number 0.</p>','2\n3 2\n1 2 1\n2 1 1\n1 2 2\n2 1\n1 1\n1 1\n','4\n1\n2\n1\n','<p>The input file is 7 MB</p>',42,0,1,64,15,3,14,12),(1116,'Good or bad?','<p>Bikini Bottom has become inundated with tourists with super powers. Sponge Bob and Patrick are trying to figure out if a given character is good or bad, so they’ll know whether to ask them to go jelly-fishing, or whether they should send Sandy, Mermaid Man, and Barnacle Boy after them.<br />sponge bob: Wow, all these characters with super powers and we don’t know whether they are good guys or bad guys.<br />patrick: Well, it’s easy to tell. You just have to count up the number of g’s and b’s in their name. If they have more g’s, they are good, if they have more b’s, they are bad. Think about it, the greatest hero of them all, Algorithm Crunching Man is good since he has two g’s and no b’s.<br />sponge bob: Oh, I get it. So Green Lantern is good and Boba Fett is bad!<br />patrick: Exactly! Uh, who’s Boba Fett?<br />sponge bob: Never mind. What about Superman?<br />patrick: Well he has the same number of g’s as b’s so he must be neutral.<br />sponge bob: I see, no b’s and no g’s is the same number. Very clever Patrick! Well what about Batman? I thought he was good.<br />patrick: You clearly never saw The Dark Knight...<br />sponge bob: Well what about Green Goblin? He’s a baddy for sure and scary!<br />patrick: The Green Goblin is completely misunderstood. He’s tormented by his past. Inside he’s good and that’s what counts. So the method works!<br />sponge bob: Patrick, you are clearly on to something. But wait, are you saying that Plankton is neutral after all the terrible things he’s tried to do to get the secret Crabby Patty formula?<br />patrick: Have any of his schemes ever worked?<br />sponge bob: Hmmm, I guess not. Ultimately he’s harmless and probably just needs a friend. So sure, neutral works for him.<br />patrick: Alright then, let’s start taking names and figure this out.<br />sponge bob: But Patrick, if we start counting all day, Squidward will probably get annoyed and play his clarinet and make us lose count.<br />patrick: Well, let’s hire a human to do it for us on the computer. We’ll pay them with Crabby Patties!<br />sponge bob: Great idea Patrick. We’re best friends forever!<br />Help Sponge Bob and Patrick figure out who is good and who is bad.</p>','<p>The first line will contain an integer n (n &gt; 0), specifying the number of names to process. Following this will be n names, one per line. Each name will have at least 1 character and no more than 25. Names will be composed of letters (upper or lower case) and spaces only. Spaces will only be used to separate multiple word names (e.g., there is a space between Green and Goblin).</p>','<p>For each name read, display the name followed by a single space, followed by “ is ”, and then followed by either “GOOD”, “A BADDY”, or “NEUTRAL” based on the relation of b’s to g’s. Each result should be ended with a newline.</p>','8\nAlgorithm Crunching Man\nGreen Lantern\nBoba Fett\nSuperman\nBatman\nGreen Goblin\nBarney\nSpider Pig\n','Algorithm Crunching Man is GOOD\nGreen Lantern is GOOD\nBoba Fett is A BADDY\nSuperman is NEUTRAL\nBatman is A BADDY\nGreen Goblin is GOOD\nBarney is A BADDY\nSpider Pig is GOOD\n','',43,0,1,64,1,108,190,12),(1117,'Bracelets','<p>&nbsp;Finally, Megamind has devised the perfect plan to take down his arch-nemesis, Metro Man! Mega-mind has designed a pair of circular power bracelets to be worn on his left and right wrists. On each bracelet, he has inscribed a sequence of magical glyphs (i.e., symbols); each activated glyph augments Megamind’s strength by the might of one grizzly bear!<br />However, there’s a catch: the bracelets only work when the subsequences of glyphs activated on each bracelet are identical. For example, given a pair of bracelets whose glyphs are represented by the strings “metrocity” and “kryptonite”, then the optimal activation of glyphs would give Megamind the power of 10 grizzly bears:</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1120_741c631759d15f52f8063dc3ee6388bc.jpg\" src=\"assets/problem_images/1120_741c631759d15f52f8063dc3ee6388bc.jpg\" width=\"414\" height=\"248\" /><br /><div align=\"left\">On the first bracelet, the letters “etoty” are activated in clockwise order; the same letters are activated in counterclockwise order on the second bracelet. Generally, the ordering of the letters is important, but the orientation of the activated subsequence on each bracelet (i.e., clockwise or counterclockwise) may or may not be the same—and don’t forget that the bracelets are circular! Help Megamind defeat Metro Man by determining the optimal subsequences of glyphs needed to activate his bracelets.<br /><br /></div></div><p> </p>','<p>The input file will contain at most 100 test cases (including at most 5 “large” test cases). Each test case is given by a single line containing a space-separated pair of strings s and t, corresponding to the sequences of glyphs on Megamind’s left and right power bracelets, respectively. Each string will consist of only lowercase letters (‘a’-‘z’). The length of each input string will be between 1 and 100 characters, inclusive, except for the large test cases where the length of each input string will be between 1 and 1500 characters, inclusive.</p>','<p>For each input test case, print the maximum power (in units of grizzly bears) that Megamind will be able to achieve by activating glyphs on his bracelets.</p>','metrocity kryptonite\nmegamind agemdnim\nmetroman manmetro\nmegamindandmetroman metromanandmegamind\n','10\n16\n16\n32\n','',43,0,1,64,30,0,6,12),(1118,'A Classic Myth: Flatland Superhero','<p>Flatland needs a superhero! Recently swarms of killer ants have been invading Flatland, and nobody in Flatland can figure out how to stop these dastardly denizens. Fortunately, you (as a higher dimensional being) have the opportunity to become a superhero in the eyes of the Flatland citizens!<br />Your job is to “freeze” swarms of ants using parallelograms. You will do this by writing a program that finds a minimal area enclosing parallelogram for each swarm of ants. Once a minimal area parallelogram is placed around the ant swarm, they are effectively frozen in place and can no longer inflict<br />in Flatland terror on planar inhabitants.</p>','<p>The input will consist of the following:<br />• A line containing a single integer, s (1 ≤ s ≤ 20), which denotes the number of killer ant swarms.<br />• Each swarm will start with a single line containing an integer, n (4 ≤ n ≤ 1000), which indicates the number of killer ants in the swarm.<br />• The next n lines contain the current location of each killer ant in the swarm.<br />• Each killer ant is represented by a single line containing two numbers: x (−1000 ≤ x ≤ 1000) and y (−1000 ≤ y ≤ 1000) separated by a space.<br />• Only one killer ant will occupy each (x, y) location in a particular swarm. Each swarm should be dealt with independently of other swarms.<br />• All data inputs are in fixed point decimal format with four digits after the decimal (e.g., dddd.dddd).<br />• There may be multiple parallelograms with the same minimum area.</p>','<p>For each swarm, your algorithm should output a line that contains “Swarm i Parallelogram Area: ”, where i (1 ≤ i ≤ s) is the swarm number, followed by the minimum area (rounded to 4 decimal digits and using fixed point format) of an enclosing parallelogram for that swarm. All computations should be done using 64 bit IEEE floating point numbers, and the final answers displayed in fixed point decimal notation and rounded to four decimal digits of accuracy as shown in the sample input and output.</p>','2\n6\n0.0000 0.0000\n-0.5000 -0.5000\n-1.0000 0.0000\n-0.7000 -7.0000\n-1.0000 -1.0000\n0.0000 -1.0000\n5\n2.0000 2.0000\n0.0000 0.0000\n0.5000 2.0000\n1.0000 1.0000\n1.5000 0.0000\n','Swarm 1 Parallelogram Area: 7.0000\nSwarm 2 Parallelogram Area: 3.0000\n','',43,0,1,64,10,6,8,12),(1119,'Collateral Cleanup','<p>&nbsp;Remember the big fight where the Hulk and the Abomination threw each other through the buildings of Manhattan? Or the time when the Green Goblin smashed poor Spider-Man through a good half-dozen brick walls? Wow, they must have shattered those walls into a million pieces!!!<br />It’s great that we have superheroes to bring the villains to justice, but have you ever wondered who gets to repair all the collateral damage when they’re done? Well actually, as president of the Action Cleanup Management (ACM) corporation, your job is to do exactly that! After a big fight, you must take all the broken pieces of the walls and put them back together just as they were before the fierce battle began.</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1122_f5ecf204cbfc12e38367ca455ba4e569.jpg\" src=\"assets/problem_images/1122_f5ecf204cbfc12e38367ca455ba4e569.jpg\" height=\"151\" width=\"366\" /><br /><div align=\"left\">A wall is a perfectly rectangular region that shatters into perfectly triangular pieces when a villain is sent through it (see Figure 3). Through sophisticated visual analysis, you have ascertained where in the original structure every little piece came from. In essence, you have a blueprint that looks a lot like the picture above. Furthermore, you observe that wherever two broken pieces meet, they meet along the full length of the break (edge) that separates them, as shown in Figure 4a.<br /><div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1122_d2506052a7c0260a8bbed7108152c71a.jpg\" src=\"assets/problem_images/1122_d2506052a7c0260a8bbed7108152c71a.jpg\" height=\"213\" width=\"457\" /><br /><div align=\"left\">You have an assembly robot that can help you reconstruct a wall in place. However, the robot can only lower each piece, one at a time, straight down from the top. The robot cannot move a piece from side to side or rotate it in any way to get it where it needs to go. Thus, you must be careful regarding the order in which you tell the robot to reassemble the broken pieces, lest you inadvertently block a piece from being lowered into its proper place (see Figure 4d). Can you determine an ordering of the pieces for each wall that will allow you to fully reassemble it?<br /><br /></div></div></div></div><p> </p>','<p>An integer on the first line of the input file indicates the number of walls you must reassemble. The first line for each wall has an integer, n, indicating the number of triangular pieces the wall was broken into (2 ≤ n ≤ 1,000,000). Then, n lines of input follow, each describing a piece with six integers, x1 y1 x2 y2 x3 y3 , that correspond to the Cartesian (x, y) coordinates of the three corners of a triangle on the original wall from which the piece came. The first line describes piece 1, the next line piece 2, and so forth. The three points will always be given in a counterclockwise winding order and form a triangle of non-zero area. All coordinates lie between 0 and 109 inclusive, with the positive y direction being the “up” direction. The n pieces given will cover a rectangular region exactly, with no gaps or overlaps.</p>','<p>For each wall, output on a single line the numbers of the pieces, separated by spaces, in an order that will allow your robot to reassemble the wall. If more than one correct solution exists, any ordering that will work is acceptable.</p>','2\n4\n3 4 7 1 7 6\n7 6 1 6 3 4\n1 6 1 1 3 4\n7 1 3 4 1 1\n14\n0 0 3 0 2 3\n2 3 3 0 12 0\n2 3 12 0 4 5\n4 5 12 0 5 6\n5 6 12 0 12 4\n5 6 12 4 12 8\n5 6 12 8 4 7\n4 7 12 8 0 8\n4 7 0 8 2 5\n4 7 2 5 5 6\n5 6 2 5 4 5\n4 5 2 5 2 3\n2 3 2 5 0 0\n0 0 2 5 0 8\n','4 1 3 2\n1 2 13 14 3 4 12 11 5 6 10 9 7 8\n','<p> </p>',43,0,1,256,30,0,2,12),(1120,'LatticeLand','<p>&nbsp;LeaperLad wakes in LatticeLand on a disk suspended above a lake of lava. Leaper spies his HeloPak on one of the disks; with it he knows he can escape this nefarious trap. The disks are quite far apart, however; without some momentum, he can only jump to an immediately adjacent disk. Once he has acquired the speed to make that jump, he can accelerate on every disk he touches.<br />He notices the disks are laid out in a rectangular grid, with a disk on each grid point. He calculates that on each disk he can accelerate or decelerate his speed by one unit in the horizontal or vertical direction (but not both on the same disk). Alternatively, he can just maintain his speed when stepping on a disk. Thus, in a straight line, from a standing start, he can jump one unit, then two units, then three, then two, then one.<br />Some pairs of disks are joined by walls of fire that he knows he must not touch. He can get arbitrarily close to one of these walls, but he must not touch one. Nor can he fall off the edge of the grid.<br />How quickly can LeaperLad reach his HeloPak and stop on that disk?</p>','<p>Input will have one problem per input line. The input line will contain a sequence of integers, each separated by a single space.<br />The first two integers will be w and h, the width and height of the grid. Each of these values will be between 1 and 64, inclusive. Following that will be two integers representing the coordinates of the disk that LeaperLad wakes on. After that will be two integers representing the coordinates of the disk that the HeloPak is on. The next integer will be f , the number of fire walls. There will be six or fewer fire walls. After that will be f sets of 4 integers, representing the two coordinates of the end points of the walls.<br />For all coordinates, the first number will be between 0 and w − 1, inclusive, and the second number will be between 0 and h − 1, inclusive. All fire walls will be at least one unit long. The HeloPak and LeaperLad will never start on the same disk, nor will either start on a disk that is on a firewall. There will always be a way for LeaperLad to reach his HeloPak.<br />There will be no more than 50 problems.</p>','<p>For each input line, print a single integer indicating the minimal number of moves needed for LeaperLad to reach his HeloPack. Pay close attention to the first couple of examples; they clarify how moves are counted.</p>','2 1 0 0 1 0 0\n2 2 0 0 1 1 0\n4 2 1 0 2 1 2 0 1 1 1 2 0 3 0\n9 9 8 3 8 5 4 8 4 5 1 5 1 2 4 2 4 5 7 5 7 8 4\n9 9 2 2 7 8 6 0 6 4 3 6 8 3 7 1 7 4 1 3 6 7 0 4 1 1 2 5 7 6 3\n','2\n4\n8\n16\n43\n','<p>Example 1<br />2 1 0 0 1 0 0<br />This requires two moves. In the first move, LeaperLad accelerates one unit in the positive x direction, and hops onto the destination disk. In the second move, he decelerates to the required speed of zero (note that although LeaperLad’s position does not change during the second move, it nonetheless counts towards the total).<br />Example 2<br />2 2 0 0 1 1 0<br />This requires four moves. LeaperLad first moves to the right, as in the prior example,but he must decelerate in the x direction first, then accelerate in the y direction to jump down, then decelerate again to become motionless.<br />Example 3<br />4 2 1 0 2 1 2 0 1 1 1 2 0 3 0<br />This requires eight moves. LeaperLad cannot jump diagonally from a standing stop; he needs to back up to get some momentum first. So first he must move to position (0, 0), then decelerate to turn around, then accelerate in the x direction while jumping to his original location. His momentum allows him to accelerate in the y direction to make a diagnoal move. Once landing at his destination, he has one unit of momentum in<br />both x and y directions, so he must decelerate, first in the y direction (which takes him to position (3, 1), overshooting his destination). Then he decelerates to turn around, jumps to his destination once more, and then decelerates to be motionless, for a total of eight moves.</p>',43,0,1,64,10,2,8,12),(1300,'Ants Colony','<p>A group of ants is really proud because they built a magnificent and large colony. However, the&nbsp;enormous size has become a problem, because many ants do not know the path between some&nbsp;parts of the colony. They desperately need your help!&nbsp;The colony of ants was made as a series of N anthills, connected by tunnels. The ants, obsessive&nbsp;as they are, numbered the anthills sequentially as they built them. The first anthill, numbered&nbsp;0, did not require any tunnel, but for each of the subsequent anthills, 1 through N − 1, the&nbsp;ants also built a single tunnel that connected the new anthill to one of the existing anthills. Of&nbsp;course, this tunnel was enough to allow any ant to go to any previously built anthill, possibly&nbsp;passing through other anthills in its path, so they did not bother making extra tunnels and&nbsp;continued building more anthills.</p>\n<p>Your job is, given the structure of the colony and a set of queries, calculate for each query the&nbsp;shortest path between pairs of anthills. The length of a path is the sum of the lengths of all&nbsp;tunnels that need to be traveled.</p>','<p>Each test case is given using several lines. The first line contains an integer N representing the&nbsp;number of anthills in the colony (2 ≤ N ≤ 10<sup>5</sup>). Each of the next N − 1 lines contains two&nbsp;integers that describe a tunnel. Line i, for 1 ≤ i ≤ N − 1, contains A<sub>i</sub> and L<sub>i</sub>, indicating that&nbsp;anthill i was connected directly to anthill A<sub>i</sub> with a tunnel of length L<sub>i</sub> (0 ≤ A<sub>i</sub> ≤ i − 1 and&nbsp;1 ≤ Li ≤ 10<sup>9</sup>). The next line contains an integer Q representing the number of queries that&nbsp;follow (1 ≤ Q ≤ 10<sup>5</sup>). Each of the next Q lines describes a query and contains two distinct&nbsp;integers S and T (0 ≤ S, T ≤ N − 1), representing respectively the source and target anthills.</p>\n<p>The last test case is followed by a line containing one zero.</p>','<p>For each test case output a single line with Q integers, each of them being the length of a&nbsp;shortest path between the pair of anthills of a query. Write the results for each query in the&nbsp;same order that the queries were given in the input.</p>','6\n0 8\n1 7\n1 9\n0 3\n4 2\n4\n2 3\n5 2\n1 4\n0 3\n2\n0 1\n2\n1 0\n0 1\n6\n0 1000000000\n1 1000000000\n2 1000000000\n3 1000000000\n4 1000000000\n1\n5 0\n0\n\n','16 20 11 17\n1 1\n5000000000','',54,0,1,64,1,3,25,12),(1121,'Lightning Lessons','<p>Zeus wrung his hands nervously. “I’ve come to you because I agreed to duel Thor in the upcoming Godfest. You’re good in a fight, Raiden; you’ve got to help me!”<br />Raiden, smiling thinly beneath the rim of his hat, replied, “What help could I provide a god as mighty as yourself? Your thunderbolts are the stuff of legends!” Zeus looked down and stammered, “I’ve. . . I’ve been lucky. I don’t know how the thunderbolts actually work. Sometimes I turn my foe into a charred heap, but other times. . . weird stuff happens. If Apollo hadn’t convinced the bards to keep my secret, I’d be a laughingstock.”<br />Raiden raised his eyebrows and asked, “Weird stuff?” Zeus looked up and took a deep breath. “Sometimes it just fizzles out. Other times it rolls up and turns into a. . . a bunny.” Raiden burst out laughing. “A bunny! That’s some chi you’ve got there.” As Zeus began to redden, Raiden held up his hand and said, “Don’t worry, I’ll help you out.”<br />Raiden went on to explain. “A thunderbolt is a sequence of chi pivots, or ‘zigs and zags’ as the mortals call them. Each pivot has an integer amplitude—”<br />“Yes, I know that much.”, Zeus interrupted. “But lightning is lively and unpredictable. The amplitudes go all random once the bolt hits!”<br />“Not all that flickers is flame. If you watch the bolt closely, you’ll see it goes through ‘cycles’, and gets shorter by one pivot each cycle. When the bolt cycles, each successive pivot’s amplitude is decreased by the amplitude of its predecessor from the end of the previous cycle, and the first pivot vanishes. If a bolt ever reaches a state of all zero amplitudes, it converges and zaps its target with power proportional to the number of preceding cycles. Your ‘weird stuff’ happens only when a bolt cycles down to a single non-zero amplitude. A positive amplitude just fizzles out into waste heat, but negative amplitudes produce odd low-entropy states. It’s the latter you’ve seen hopping away in the midst of battle.”<br />Help Zeus avoid embarrassment by writing a program that predicts how powerful a given bolt will be if it converges, or what will happen to it if it diverges.</p>','<p>The first line of input contains a single positive integer N which denotes how many lightning bolts follow. Each bolt is specified by a line beginning with an integer M (0 &lt; M ≤ 20), followed by M space-delimited integers denoting the initial amplitudes of each successive pivot. No initial amplitude will have an absolute value larger than 1000.</p>','<p>For each bolt that converges, output the letter “z” repeated P times, where P is the number of cycles encountered before the bolt converges, followed by the string “ap!” (the all-zero cycle does not count toward P ). For each bolt that fails to converge, output “*fizzle*” if the final amplitude was positive,<br />“*bunny*” if it was negative.</p>','4\n2 1 1\n5 1 3 6 10 15\n5 1 2 4 8 16\n2 1 0\n','zap!\nzzzap!\n*fizzle*\n*bunny*\n','',43,0,1,64,5,26,36,12),(1122,'Locksmith','<p>&nbsp;Mooks A, C, and M have been charged with creating locks for the Riddler’s lair. They need to design locks comprised of flat interlocking pieces that can be unlocked only by separating these pieces while sliding them around on the surface of the doors. Unfortunately, while the mooks have come up with quite a few designs, they are not very good at determining which designs can actually be unlocked.<br />The pieces of the lock are axis-aligned polygons (that is, the sides are all either horizontal or vertical) in the plane. The lock can be manipulated by sliding any one polygon at a time in any direction, so<br />long as doing so does not cause the polygon to overlap with any other polygon. Rotating a polygon is not allowed. A polygon is considered separable from the rest of the lock if there exists a sequence of moves<br />(possibly involving several polygons) leading to a configuration such that it is possible to draw a straight line between the polygon and the remainder of the lock. Given a proposed lock configuration, your job is to determine the number of separable polygons.</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1125_9389f97dbcc5766ecc407a39c2264129.jpg\" src=\"assets/problem_images/1125_9389f97dbcc5766ecc407a39c2264129.jpg\" height=\"126\" width=\"186\" /><br /></div><p> </p>','<p>The input file will contain multiple test cases. Each test case begins with a line with a single integer N denoting the number of pieces in the lock. This line is followed by N lines of space-separated integers each with the following format:</p>\n<div align=\"center\">c x<sub>1</sub> y<sub>1</sub> · · · x<sub>c</sub> y<sub>c</sub><br /></div><p>Here, c denotes the number of vertices in the piece, and xi and yi give the locations of the vertices in clockwise order. The sides of each piece are all either horizontal or vertical, and they alternate between the two. The pieces are guaranteed to have no overlapping area. Each test case has either 2 or 3 pieces, and for each test case, these pieces have a total of at most 30 vertices. All coordinates given are integers between 0 and 1000 inclusive. Input will be terminated by a case with 0 pieces, which should not be processed.</p>','<p>For each input test case, print the number of separable pieces in the lock.</p>','2\n12 0 0 0 6 9 6 9 0 6 0 6 1 8 1 8 5 1 5 1 1 3 1 3 0\n4 2 2 2 4 7 4 7 2\n2\n12 0 0 0 6 9 6 9 0 6 0 6 1 8 1 8 5 1 5 1 1 3 1 3 0\n4 4 2 4 4 7 4 7 2\n0\n','0\n2\n','',43,0,1,64,30,0,1,12),(1123,'Speed Racer','<p>Speed Racer must go go go rescue Trixie at the top of Mount Domo! He must get there as quickly as possible, but his Mach 5 only holds a specific amount of fuel, and there is no way to refuel on the way. Luckily, he knows precisely how much fuel is consumed at a particular speed, taking into account air resistance, tire friction, and engine performance. For a given speed v in kilometers per hour, the amount of fuel consumed in liters per hour is</p>\n<div align=\"center\">av<sup>4</sup> + bv<sup>3</sup> + cv<sup>2</sup> + dv<br /></div><p>Assuming Speed travels at a constant speed, his tank holds t liters of fuel, and the top of Mount<br />Domo is m kilometers away, how fast must he drive?</p>','<p>The input will be one problem per line. Each line will contain six nonnegative floating point values representing a, b, c, d, m, and t, respectively. No input value will exceed 1000. The values of c, d, m, and t will be positive. There will always be a solution.<br />The output should be formatted as a decimal number with exactly two digits after the decimal point, and no leading zeros. The output value should be such that the Speed Racer will not run out of fuel (so truncate, rather than round, the final result). You are guaranteed that no final result will be within 10<sup>−6</sup> of an integer multiple of 0.01.</p>','<p>The required output will be a single floating point value representing the maximum speed in kilometers per hour that Speed Racer can travel to reach the top of Mount Domo without running out of gas.</p>','0.000001 0.0001 0.029 0.2 12 100\n2.8e-8 7.6e-6 0.0013 0.47 11.65 20.81\n1.559e-7 1.8195e-5 0.0022233 0.31292 58.902 85.585\n','134.41\n257.45\n142.65\n','',43,0,1,64,5,18,57,12),(1124,'The Status is Not Quo','<p>Dr. Horrible desperately wants to get into the Evil League of Evil but is having a difficult time proving his competence as the mastermind that he is. Bad Horse rules over the league with an iron hoof and is evaluating his application with extreme skepticism. Meanwhile, arch-nemesis Captain Hammer, hero of the people and corporate tool, is making life exceedingly complicated for our poor villain. But, everything is about to change. Dr. Horrible is all set to pull off a major heist; the wondeflonium needed to complete work on his freeze ray is being transported by courier van—candy from a baby. Sadly, it’s not as easy as Dr. Horrible suspected. The device he created to control the van became a jumble of wires that needs to be untangled. He’d have Moist, his roommate, do it, but it’s probably a bad idea to have Moist anywhere near circuitry (for obvious reasons). You better do it and do it fast, or else it’s curtains for you—lacy, gently wafting curtains.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1127_65eb55f0e978a386be7fac839743dd1a.jpg\" src=\"assets/problem_images/1127_65eb55f0e978a386be7fac839743dd1a.jpg\" width=\"218\" height=\"214\" /></p>\n<p> </p>\n<p>You can help by figuring out a given wire’s ending position based on its starting position for a variety of circuit boards. Here circuit boards are rectangular grids of squares, and each square has 8 connection points, two on each side. Squares also have any number of wires (between 0 and 4 inclusive) connecting one connection point of the square to another. A connection point for a square can only be used by one wire or not be used at all; there is no branching. By naming the square’s connection points alphabetically from A to H (always capitalized) starting with the left connection on the top edge and traveling clockwise, you can describe each square as the collection of wires traveling from one named point to another. For example, if a square has a wire traveling from the left connection on the top edge to the bottom connection on the right edge, a wire from the left connection of the bottom edge to the right connection of the bottom edge, and a wire from<br />the right connection of the top edge to the top connection of the left edge then you could describe the square as AD BH EF. For consistency, each wire pair is described alphabetically (BH instead of HB), and all the wire pairs for each square are listed in alphabetical order when describing a square.<br />Squares are aligned next to each other on all sides to make up the \ncircuit board. For any given square, connection points A and B connect \nwith F and E respectively with the square above it, and vice versa for \nthe square below it. Connection points C and D connect with H and G \nrespectively with the square to its right, and vice versa for the square\n to its left. If a square has a wire to any given connection point, its \ncorresponding connection point in the adjacent square is guaranteed to \ncontinue the path of that wire from its own connection to another \nconnection. There are no broken paths; all paths begin and end at the \nedge of the circuit board.</p>','<p>Input consists of multiple puzzle sets. Each puzzle set is broken into two parts, a board description and a set of starting points. The board description begins with a single line containing two integers, h and w, both between 1 and 20 inclusive, separated by a space. These are the height and width, respectively, of the circuit board in squares. After this are n (1 ≤ n ≤ h · w) lines containing square descriptions, which occur in no particular order. Each of these line describes one square and begins with a numeric designation for the square. The squares are numbered sequentially left to right, top to bottom, starting at 1; for example, the top right square is numbered w. After the number is the description of the wiring for the square as defined above. The number and all the wire descriptions are separated by single spaces. Not all squares may have a description, and a square will be described at most once per circuit board. Squares without lines have no wires connected to them.<br />The board description is separated from the set of starting points by a line containing only the number zero (“1”). The starting points are given on the next line, each consisting of a number and a letter together. The starting points are separated from each other by single spaces. The number of the starting point is the square and the letter is the connection point of the square to use. Only connection points on the outside of the circuit board will be given. Only connection points used by a wire will be given. Following this line is a single empty line before the start of the next puzzle set.<br />The end of the file is marked by two zeros separated by a space in place of the standard first line of a puzzle set.</p>','<p>For each puzzle set, on one line output “Board” followed by a space followed by the number of the board (the number of the first puzzle starts at 1 and increments by 1 for every following puzzle) followed by a colon (“:”) character. For each starting point in the set, output the ending point of that wire in the format of “{startpoint} is connected to {endpoint}” on one line. For example, if the given starting point was 1A and the end point was 9H, the output for that starting point would be “1A is connected to 9H”. Capitalization matters. All wires are bidirectional, so for the same puzzle, if the starting point was 9H, the output would be “9H is connected to 1A”. The letter portion of the start point and end point must be capitalized. There should be no other marks or punctuation.<br />The output for each puzzle set should be separated by a blank line.</p>','2 3\n4 AG BF\n3 AF EH\n6 AC BF\n1 AH CE DF\n2 AG CH\n0\n1A 2A 3A 4F\n4 4\n4 DH FG\n15 BE FH\n3 AD CE\n13 BD\n5 AD BF\n6 BD FG\n14 CG\n16 AB\n1 AE CH FG\n7 BG CF DE\n11 AG BC EH\n9 AG DE\n8 AH DG\n10 AC DG\n2 EH\n12 DE FH\n0\n15F 1G 8D 3A\n0 0\n','Board 1:\n1A is connected to 1H\n2A is connected to 4G\n3A is connected to 6C\n4F is connected to 6F\n\nBoard 2:\n15F is connected to 3A\n1G is connected to 15E\n8D is connected to 12D\n3A is connected to 15F\n','',43,0,1,64,10,11,46,10),(1125,'Stupendous Man','<p>&nbsp;Things were grim at Calvin’s house. With his parents gone for the night, the nefarious BabySitter Girl had swooped in and taken over with her oppressive regime of evil and terror. But unfortunately for BabySitter Girl, she was unaware that the house was also home to the greatest superhero that the world has ever seen. Up in his room, the mild-mannered Calvin leapt into his closet and emerged as... STUPENDOUS MAN! Champion of Liberty! Foe of Tyranny! With his muscles of magnitude and heroic resolve, Stupendous Man bravely ran downstairs and fought the evil Rosalyn before escaping out the door and into the night. With BabySitter Girl chasing after him, Stupendous Man had only one option: he must evade BabySitter Girl before<br />sneaking back into the house. Should he get caught, Calvin would get in trouble when his parents got home.<br />Stupendous Man runs in a swirling, twisting, winding loop across the lawn as fast as he can to try to lose BabySitter Girl. His tremendous speed (KAPWINGGG!) means that BabySitter Girl can only see him where his trajectory crosses over itself. To try to catch him, she writes down and assigns a number to each self-crossing in the order which Stupendous Man passes through them (see Figure 7). Sometimes, she makes a mistake, and that’s when Calv... I mean Stupendous Man... escapes her grasp! If the numbers Rosalyn wrote down in her observations cannot possibly form a single, closed loop, then she is totally confused, has no idea where Calvin is, and must give up on trying to catch him.</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1128_d6efea2b0f542abc562641d22cd80d76.jpg\" src=\"assets/problem_images/1128_d6efea2b0f542abc562641d22cd80d76.jpg\" height=\"207\" width=\"416\" /><br /></div><p> </p>','<p>The input will consist of multiple test cases. Each test case starts with a line that contains a single positive integer N less than or equal to 10. The next line will contain a sequence of 2N integers that Rosalyn has written down based on her observation of Stupendous Man’s trajectory. Numbers are separated by a single space, and it is guaranteed that each number from 1 to N appears exactly twice in the sequence. Note that numbers need not appear first in ascending order! The end of input is marked with a line that contains a single zero.</p>','<p>For each test case, print a single line with the word “escaped” if Stupendous Man successfully confuses and evades BabySitter Girl, or “caught” if she manages to untangle his path and find him. Calvin escapes if, and only if, Rosalyn’s labeling cannot form a single, closed loop.</p>','2\n2 1 2 1\n3\n1 2 3 1 2 3\n5\n1 2 3 4 5 1 4 5 2 3\n0\n','escaped\ncaught\nescaped\n','',43,0,1,64,10,0,5,12),(1126,'Tree Count','<p>&nbsp;Our superhero Carry Adder has uncovered the secret method that the evil Head Crash uses to generate the entrance code to his fortress in Oakland. The code is always the number of distinct binary search trees with some number of nodes, that have a specific property. To keep this code short, he only uses the least significant nine digits.<br />The property is that, for each node, the height of the right subtree of that node is within one of the height of the left subtree of that node. Here, the height of a subtree is the length of the longest path from the root of that subtree to any leaf of that subtree. A subtree with a single node has a height of 0, and by convention, a subtree containing no nodes is considered to have a height of −1.</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1129_801d14a8ca261895e1a6620e80388c41.jpg\" src=\"assets/problem_images/1129_801d14a8ca261895e1a6620e80388c41.jpg\" height=\"237\" width=\"301\" /><br /><div align=\"left\"><br /></div></div><p> </p>','<p>Input will be formatted as follows. Each test case will occur on its own line. Each line will contain only a single integer, N , the number of nodes. The value of N will be between 1 and 1427, inclusive.</p>','<p>Your output is one line per test case, containing only the nine-digit code (note that you must print leading zeros).</p>','1\n3\n6\n21\n','000000001\n000000001\n000000004\n000036900\n','',43,0,1,64,5,16,58,12),(1127,'Strange Billboard','<p>\nThe marketing and public-relations department of the Czech Technical \nUniversity has designed a new reconfigurable mechanical Flip-Flop \nBill-Board (FFBB). The billboard is a regular two-dimensional grid of <em>R</em> * <em>C</em>\n square tiles made of plastic. Each plastic tile is white on one side \nand black on the other. The idea of the billboard is that you can create\n various pictures by flipping individual tiles over. Such billboards \nwill hang above all entrances to the university and will be used to \ndisplay simple pictures and advertise upcoming academic events.\n</p>\n<p>\nTo change pictures, each billboard is equipped with a \"reconfiguration \ndevice\". The device is just an ordinary long wooden stick that is used \nto tap the tiles. If you tap a tile, it flips over to the other side, \ni.e., it changes from white to black or vice versa. Do you agree this \nidea is very clever?\n</p>\n<p>\nUnfortunately, the billboard makers did not realize one thing. The tiles\n are very close to each other and their sides touch. Whenever a tile is \ntapped, it takes all neighboring tiles with it and all of them flip over\n together. Therefore, if you want to change the color of a tile, all \nneighboring tiles change their color too. Neighboring tiles are those \nthat touch each other with the whole side. All inner tiles have 4 \nneighb</p>\n<p>ors, which means 5 tiles are flipped over when tapped. Border \ntiles have less neighbors, of course.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1130_b8f53eb1fda7884421106be2492c4807.jpg\" src=\"assets/problem_images/1130_b8f53eb1fda7884421106be2492c4807.jpg\" /></p>\n<p>\nFor example, if you have the billboard configuration shown in the left \npicture above and tap the tile marked with the cross, you will get the \npicture on the right. As you can see, the billboard reconfiguration is \nnot so easy under these conditions. Your task is to find the fastest way\n to \"clear\" the billboard, i.e., to flip all tiles to their white side.\n</p>\n<p align=\"left\">\n</p>','<p>\nThe input consists of several billboard descriptions. Each description begins with a line containing two integer numbers <em>R</em> and <em>C</em> (1 &lt;= <em>R</em>,<em>C</em> &lt;= 16) specifying the billboard size. Then there are <em>R</em> lines, each containing <em>C</em>\n characters. The characters can be either an uppercase letter \"X\" \n(black) or a dot \".\" (white). There is one empty line after each map. \nThe input is terminated by two zeros in place of the board size.\n</p>','<p>\nFor each billboard, print one line containing the sentence \"You have to \ntap T tiles.\", where T is the minimal possible number of taps needed to \nmake all squares white. If the situation cannot be solved, output the \nstring \"Damaged billboard.\" instead.\n</p>','5 5\nXX.XX\nX.X.X\n.XXX.\nX.X.X\nXX.XX\n\n5 5\n.XX.X\n.....\n..XXX\n..X.X\n..X..\n\n1 5\n...XX\n\n5 5\n...X.\n...XX\n.XX..\n..X..\n.....\n\n8 9\n..XXXXX..\n.X.....X.\nX..X.X..X\nX.......X\nX.X...X.X\nX..XXX..X\n.X.....X.\n..XXXXX..\n\n0 0','You have to tap 5 tiles.\nDamaged billboard.\nYou have to tap 1 tiles.\nYou have to tap 2 tiles.\nYou have to tap 25 tiles.','',40,0,1,64,2,6,9,12),(1128,'Phone Cell','<p>\nNowadays, everyone has a cellphone, or even two or three. You probably \nknow where their name comes from. Do you. Cellphones can be moved (they \nare \"mobile\") and they use wireless connection to static stations called\n BTS (Base Transceiver Station). Each BTS covers an area around it and \nthat area is called a cell.\n</p>\n<p>\nThe Czech Technical University runs an experimental private GSM network \nwith a BTS right on top of the building you are in just now. Since the \nplacement of base stations is very important for the network coverage, \nyour task is to create a program that will find the optimal position for\n a BTS. The program will be given coordinates of \"points of interest\". \nThe goal is to find a position that will cover the maximal number of \nthese points. It is supposed that a BTS can cover all points that are no\n further than some given distance <em>R</em>. Therefore, the cell has a circular shape. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1131_24e431ccb6fcd3327ce55e0be93defc9.jpg\" src=\"assets/problem_images/1131_24e431ccb6fcd3327ce55e0be93defc9.jpg\" /></p>\n<p>\nThe picture above shows eight points of interest (little circles) and \none of the possible optimal BTS positions (small triangle). For the \ngiven distance <em>R</em>, it is not possible to cover more than four \npoints. Notice that the BTS does not need to be placed in an existing \npoint of interest.\n</p>','<p>\nThe input consists of several scenarios. Each scenario begins with a line containing two integer numbers <em>N</em> and <em>R</em>. <em>N</em> is the number of points of interest, 1 &lt;= <em>N</em> &lt;= 2000. <em>R</em> is the maximal distance the BTS is able to cover, 0 &lt;= R &lt; 10000. Then there are <em>N</em> lines, each containing two integer numbers <em>X<sub>i</sub></em>, <em>Y<sub>i</sub></em> giving coordinates of the <em>i</em>-th point, |<em>X<sub>i</sub></em>|, |<em>Y<sub>i</sub></em>| &lt; 10000. All points are distinct, i.e., no two of them will have the same coordinates. \n</p>\n<p>\nThe scenario is followed by one empty line and then the next scenario \nbegins. The last one is followed by a line containing two zeros.\n</p>\n<p>\nA point lying at the circle boundary (exactly in the distance <em>R</em>) \nis considered covered. To avoid floating-point inaccuracies, the input \npoints will be selected in such a way that for any possible subset of \npoints <em>S</em> that can be covered by a circle with the radius R + \n0.001, there will always exist a circle with the radius R that also \ncovers them. </p>\n<p>\nThe first sample input scenario corresponds to the picture, providing that the X axis aims right and Y axis down.\n</p>','<p>\nFor each scenario, print one line containing the sentence \"It is possible to cover M points.\", where <em>M</em> is the maximal number of points of interest that may be covered by a single BTS.\n</p>','8 2\n1 2\n5 3\n5 4\n1 4\n8 2\n4 5\n7 5\n3 3\n\n2 100\n0 100\n0 -100\n \n0 0','It is possible to cover 4 points.\nIt is possible to cover 2 points.','',40,0,1,64,10,0,5,12),(1129,'Hexagon','<p>\nA civil engineer that has recently graduated from the Czech Technical \nUniversity encountered an interesting problem and asked us for a help. \nThe problem is more of economical than engineering nature. The engineer \nneeds to connect several buildings with an infrastructure. \nUnfortunately, the investor is not the owner of all the land between \nthese places. Therefore, some properties have to be bought first.\n</p>\n<p>\nThe land is divided into a regular \"grid\" of hexagonal parcels, each of \nthem forms an independent unit and has the same value. Some of the \nparcels belong to the investor. These parcels form four connected areas,\n each containing one building to be connected with the others. Your task\n is to find the minimal number of parcels that must be acquired to \nconnect the four given areas.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1132_50d623fa7e396f45ade87f53b91b9950.jpg\" src=\"assets/problem_images/1132_50d623fa7e396f45ade87f53b91b9950.jpg\" /></p>\n<p>\nThe whole land also has a hexagonal shape with six sides, each consisting of exactly <em>H</em> parcels. The above picture shows a land with <em>H</em>\n = 4, parcels with letters represent the four areas to be connected. In \nthis case, it is necessary to buy four additional parcels. One of the \npossible solutions is marked by crosses.\n</p>\n<p align=\"left\">\n</p>','<p>\nThe input contains several scenarios. Each scenario begins with an integer number <em>H</em>, which specifies the size of the land, 2 &lt;= <em>H</em> &lt;= 20. Then there are 2<em>H</em>\n - 1 lines representing individual \"rows\" of the land (always oriented \nas in the picture). The lines contain one non-space character for each \nparcel. It means the first line will contain <em>H</em> characters, the second line <em>H</em> + 1, and so on. The longest line will be the middle one, with 2<em>H</em> - 1 characters. Then the \"length\" descends and the last line contains <em>H</em> parcels, again.\n</p>\n<p>\nThe character representing a parcel will be either a dot (\".\") for the \nland that is not owned by the investor, or one of the uppercase letters \n\"A\", \"B\", \"C\", or \"D\". The areas of parcels occupied by the same letter \nwill always be connected. It means that between any two parcels in the \nsame area, there exists a path leading only through that area.\n</p>\n<p>\nBeside the characters representing parcels, the lines may contain any number of spaces at any\npositions to improve \"human readability\" of the input. There is always at least one space\nbetween two letters (or the dots). After the land description, there will be one empty line and\nthen the next scenario begins. The last scenario is followed by a line containing zero.\n</p>','<p>\nFor each scenario, output one line with the sentence \"You have to buy P parcels.\", where <em>P</em> is the minimal number of parcels that must be acquired to make all four areas connected together.\n</p>\n<p>\nAreas are considered connected, if it is possible to find a path between\n them that leads only through parcels that have been bought.\n</p>','4\n   B . . C\n  . . . . C\n . A . . C .\n. A A . . . .\n . A . . . .\n  . . . D D\n   . . . .\n\n0','You have to buy 4 parcels.','',40,0,1,32,2,2,2,12),(1130,'Key Task','<p>\nThe Czech Technical University is rather old - you already know that it \ncelebrates 300 years of its existence in 2007. Some of the university \nbuildings are old as well. And the navigation in old buildings can \nsometimes be a little bit tricky, because of strange long corridors that\n fork and join at absolutely unexpected places.\n</p>\n<p>\nThe result is that some first-graders have often difficulties finding \nthe right way to their classes. Therefore, the Student Union has \ndeveloped a computer game to help the students to practice their \norientation skills. The goal of the game is to find the way out of a \nlabyrinth. Your task is to write a verification software that solves \nthis game.\n</p>\n<p>\nThe labyrinth is a 2-dimensional grid of squares, each square is either \nfree or filled with a wall. Some of the free squares may contain doors \nor keys. There are four different types of keys and doors: blue, yellow,\n red, and green. Each key can open only doors of the same color.\n</p>\n<p>\nYou can move between adjacent free squares vertically or horizontally, \ndiagonal movement is not allowed. You may not go across walls and you \ncannot leave the labyrinth area. If a square contains a door, you may go\n there only if you have stepped on a square with an appropriate key \nbefore.\n</p>','<p>\nThe input consists of several maps. Each map begins with a line containing two integer numbers <em>R</em> and <em>C</em> (1 &lt;= <em>R</em>,<em>C</em> &lt;= 100) specifying the map size. Then there are <em>R</em> lines each containing <em>C</em> characters. Each character is one of the following:\n</p>\n<center>\n<table border=\"1\">\n	<tbody><tr>\n		<th>Character</th>\n		<th>&nbsp;</th>\n		<th>Meaning</th>\n	</tr>\n	<tr>\n		<td>Hash mark</td>\n		<td>#</td>\n		<td>Wall</td>\n	</tr>\n	<tr>\n		<td>Dot</td>\n		<td>.</td>\n		<td>Free square</td>\n	</tr>\n	<tr>\n		<td>Asterisk</td>\n		<td>*</td>\n		<td>Your position</td>\n	</tr>\n	<tr>\n		<td>Uppercase letter</td>\n		<td>B Y R G</td>\n		<td>Blue, yellow, red, or green door</td>\n	</tr>\n	<tr>\n		<td>Lowercase letter</td>\n		<td>b y r g</td>\n		<td>Blue, yellow, red, or green key</td>\n	</tr>\n	<tr>\n		<td>Uppercase X</td>\n		<td>X</td>\n		<td>Exit</td>\n	</tr>\n</tbody></table>\n</center><p>\nNote that it is allowed to have\n</p>\n<p> </p>\n<ul>\n	<li>more than one exit,</li>\n	<li>no exit at all,</li>\n	<li>more doors and/or keys of the same color, and</li>\n	<li>keys without corresponding doors and vice versa.</li>\n</ul>\n<p>\nYou may assume that the marker of your position (\"*\") will appear exactly once in every map.\n</p>\n<p>\nThere is one blank line after each map. The input is terminated by two zeros in place of the map size.\n</p>','<p>\nFor each map, print one line containing the sentence \"Escape possible in S steps.\", where <em>S</em>\n is the smallest possible number of step to reach any of the exits. If \nno exit can be reached, output the string \"The poor student is trapped!\"\n instead.\n</p>\n<p>\nOne step is defined as a movement between two adjacent cells. Grabbing a key or unlocking a door does not count as a step.\n</p>','1 10\n*........X\n\n1 3\n*#X\n\n3 20\n####################\n#XY.gBr.*.Rb.G.GG.y#\n####################\n\n0 0','Escape possible in 9 steps.\nThe poor student is trapped!\nEscape possible in 45 steps.','',40,0,1,64,2,10,33,12),(1166,'Strategic Game','<p>Bob enjoys playing computer games, especially strategic games, but sometimes he \n  cannot find the solution fast enough and then he is very sad. Now he has the \n  following problem. He must defend a medieval city, the roads of which form a \n  tree. He has to put the minimum number of soldiers on the nodes so that they \n  can observe all the edges. Can you help him?<br />\n  <br />\n  Your program should find the minimum number of soldiers that Bob has to put \n  for a given tree.</p>','<p>The input file contains several data sets in text format. Each data set represents \n  a tree with the following description:<br /><br />\n  the number of nodes<br />\n  the description of each node in the following format<br />\n  node_identifier:(number_of_roads) node_identifier1 node_identifier2 ... node_identifier<br />\n  or<br />\n  node_identifier:(0)<br /><br />\n  The node identifiers are integer numbers between 0 and n-1, for n nodes (0 &lt; \n  n &lt;= 1500). Every edge appears only once in the input data.</p>','<p>For example for the tree: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1169_1f4ad8f9b48365130acc383c123e858c.jpg\" src=\"assets/problem_images/1169_1f4ad8f9b48365130acc383c123e858c.jpg\" /></p>\n<p align=\"left\">the solution is one soldier ( at the node 1).<br />\n  <br />\n  The output should be printed on the standard output. For each given input data \n  set, print one integer number in a single line that gives the result (the minimum \n  number of soldiers). An example is given in the output.</p>\n<p> </p>\n<p align=\"left\"></p>','4\n0:(1) 1\n1:(2) 2 3\n2:(0)\n3:(0)\n5\n3:(3) 1 4 2\n1:(1) 0\n2:(0)\n0:(0)\n4:(0)','1\n2','',49,0,1,32,10,7,27,12),(1167,'Company','<p>company pays different hourly wages for different job types. Each week the \n  company keeps evidence of the total number of work hours for every job type \n  and the total amount paid to all employees for that week. In different weeks \n  different job types can be accomplished. The hourly wage for any job type in \n  the same company remains unchanged. The hourly wage for any job type is a positive \n  integer and the ratio between the maximum wage and the minimum wage is less \n  than 20.<br /><br />\n  You are asked to write a program that computes the hourly wage for every job \n  type using the data collected a period of time (one or several weeks). The number \n  of job types is limited to 200 and the number of weeks in one data set is limited \n  to 50.</p>\n<p>\n  You are asked to write a program that computes the hourly wage for every job \n  type using the data collected a period of time (one or several weeks). The number \n  of job types is limited to 200 and the number of weeks in one data set is limited \n  to 50.</p>','<p>The input contains several data sets in text format.<br /><br />\n  The format for the data set is:<br /><br />\n  The number of lines for the data set;<br />\n  information_for__one_or_more_weeks<br />\n  The format of the information for a week is the following:<br />\n  job_type1 number_of _hours1<br />\n  job_type2 number_of _hours2<br />\n  job_type3 number_of _hours3<br />\n  . total_paid ( the dot marks the ending of info for a week)<br /><br />\n  The job type is represented as a string of characters (limited to 20). The number \n  of hours is a positive integer (smaller than 1E5). The total paid is a positive \n  integer (smaller than 2E10).</p>','<p>\n  The program should write to standard output (for every job type involved in \n  the data set) a line containing the job type and the hourly wage. The output \n  for a data set ends with a line containing a dot.<br /><br />\n  If the program cannot compute a unique hourly wage for every job type it will \n  print \"Incomplete data\" and if it cannot compute an integer hourly \n  wage it will print \"Inconsistent data\"</p>','5\njob1 6\njob2 5\njob8 4\njob10 3\n. 100\n13\njob3 1\njob2 2\n. 40\njob1 3\njob2 1\n. 100\njob1 1\njob3 2\njob2 3\n. 100\njob1 1\njob2 5\n. 80\n','Incomplete data\n.\njob3 20\njob2 10\njob1 30\n.','',49,0,1,32,10,1,2,12),(1168,'Multiple','<p>you are to write a program that, given a natural number N between 0 and 4999 (inclusively), \n  and M distinct decimal digits X<sub>1</sub>,X<sub>2</sub>..X<sub>M</sub> (at least one), finds the smallest strictly \n  positive multiple of N that has no other digits besides X<sub>1</sub>,X<sub>2</sub>..X<sub>M</sub> (if such a \n  multiple exists).</p>','<p>\n  The input file has several data sets separated by an empty line, each data set \n  having the following format:<br /><br />\n  On the first line - the number N<br />\n  On the second line - the number M<br />\n  On the following M lines - the digits X<sub>1</sub>,X<sub>2</sub>..X<sub>M</sub>.</p>\n<p>\n  On the following M lines - the digits X<sub>1</sub>,X<sub>2</sub>..X<sub>M</sub>.</p>','<p>For each data set, the program should write to standard output on a single line \n  the multiple, if such a multiple exists, and 0 otherwise.</p>','22\n3\n7\n0\n1\n\n2\n1\n1','110\n0 ','',49,0,1,32,10,0,8,12),(1169,'Girls and Boys','<p>the second year of the university somebody started a study on the romantic \n  relations between the students. The relation \"romantically involved\" is defined \n  between one girl and one boy. For the study reasons it is necessary to find \n  out the maximum set satisfying the condition: there are no two students in the \n  set who have been \"romantically involved\". The result of the program is the \n  number of students in such a set.</p>','<p>\n  The input contains several data sets in text format. Each data set represents \n  one set of subjects of the study, with the following description:<br /><br />\n  the number of students<br />\n  the description of each student, in the following format<br />\n  student_identifier:(number_of_romantic_relations) student_identifier1 student_identifier2 \n  student_identifier3 ...<br />\n  or<br />\n  student_identifier:(0)<br /><br />\n  The student_identifier is an integer number between 0 and n-1, for n subjects.</p>','<p>For each given data set, the program should write to standard output a line \n  containing the result.</p>','7\n0: (3) 4 5 6\n1: (2) 4 6\n2: (0)\n3: (0)\n4: (2) 0 1\n5: (1) 0\n6: (2) 0 1\n3\n0: (2) 1 2\n1: (1) 0\n2: (1) 0','5\n2 ','',49,0,1,32,10,0,3,12),(1170,'Symbolic Derivation','<p>Write a program that performs symbolic derivation f(x) = df(x)/dx of a given \n  function f(x). The function f(x) is defined by an expression which may contain \n  the following operations: + (addition), - (subtraction), * (multiplication), \n  / (division), and ln (natural logarithm). Besides, the operands may be the variable \n  x and numerical constants. The expression may contain arbitrarily nested sub-expressions \n  in parentheses ( ). The expression is given in a usual, infix form, such as:<br /><br />\n  (2*ln(x+1.7)-x*x)/((-7)+3.2*x*x)+(x+3*x)*x<br /><br />\n  Numerical constants have the form d.d, with an optional sign (+ or -), where \n  the number of digits both in integer and decimal parts are arbitrary. The input \n  expression is guaranteed to be correct (no syntax error can occur).<br /><br />\n  The output expression should be written in infix form. It should not be optimized \n  for human reading. This means, it can contain redundancies, such as 0*x, 1*x, \n  0+x, etc. The derivation should be performed using the following rules:<br /><br />\n  1. The operators * and / are of higher priority than the operators + and -. \n  Parentheses may change the priorities as usually.<br /><br />\n  2. The operators +, -, *, and / are left-associative, meaning that they group \n  from left to right: a*b*c = (a*b)*c, a/b/c = (a/b)/c, a/b*c = (a/b)*c, etc.<br /><br />\n  3. The rules for derivation are:<br />\n  (a + b)\' = a\' + b\'<br />\n  (a - b)\' = a\' - b\'<br />\n  (a * b)\' = (a\' * b + a * b\')<br />\n  (a / b)\' = (a\' * b - a * b\') / b^2 Note: use b^2 and not (b*b) for presentation<br />\n  ln(a)\' = (a\')/(a)<br />\n  x\' = 1<br />\n  const\' = 0<br /><br />\n  4. While producing the symbolic derivation, use parentheses for output strictly \n  as stated in the previous rule. Do not perform presentation optimizations, such \n  as 0*a = 0, 1*a = a, etc.</p>','<p>The input has one f(x) definition per line. The input lines do not have blanks.</p>','<p>The output should contain lines with corresponding symbolic derivations f=df/dx, \n  one line for each f. The strings representing f(x) and f (x) are guaranteed \n  to have no more than 100 characters.</p>','x*x/x\n-45.78*x+x\n-2.45*x*x+ln(x-3)','((1*x+x*1)*x-x*x*1)/x^2\n(0*x-45.78*1)+1\n((0*x-2.45*1)*x-2.45*x*1)+(1-0)/(x-3)','',49,0,1,64,2,0,0,12),(1171,'Rectangles','<p>specialist in VLSI design testing must decide if there are some components \n  that cover each other for a given design. A component is represented as a rectangle. \n  Assume that each rectangle is rectilinearly oriented (sides parallel to the \n  x and y axis), so that the representation of a rectangle consists of its minimum \n  and maximum x and y coordinates.<br /><br />\n  Write a program that counts the rectangles that are entirely covered by another \n  rectangle.</p>','<p>\n  The input contains the text description of several sets of rectangles. \n  The specification of a set consists of the number of rectangles in the set and \n  the list of rectangles given by the minimum and maximum x and y coordinates \n  separated by white spaces, in the format:<br /><br />\n  nr_rectangles<br />\n  x<sub>min1</sub> x<sub>max1</sub> y<sub>min1</sub> y<sub>max1</sub><br />\n  x<sub>min2</sub> x<sub>max2</sub> y<sub>min2</sub> y<sub>max2</sub><br /><br />\n  x<sub>minn</sub> x<sub>maxn</sub> y<sub>minn</sub> y<sub>maxn</sub></p>','<p>The output should be printed on the standard output. For each given input data \n  set, print one integer number in a single line that gives the result (the number \n  of rectangles that are covered).</p>','3\n100 101 100 101\n0 3 0 101\n20 40 10 400\n4\n10 20 10 20\n10 20 10 20\n10 20 10 20\n10 20 10 20','0\n4 ','',49,0,1,32,10,28,66,12),(1174,'Jack','<p>We need to have at least one computer game in our collection, of \n      course. The typical one could be described as \"chase in the town\". The \n      smiling face called Jack in our case is walking through the town divided \n      into small fields. Some of the fields are covered with the wall and it is \n      not possible to go through them. Jack collects the points and tries to \n      avoid contact with the monsters who chase him. Once the Jack eats the \n      special point (or asterisk), the situation turns upside-down and Jack can \n      eat monsters. And so on, still again and again. I am sure everyone of you \n      have ever seen such game. \n      </p>\n<p>The town is randomly generated in our case. Jack always starts in the \n      top left corner and the \"bonus asterisk\" is in the bottom right corner. At \n      the most difficult level, the bonus is set to disappear after exactly as \n      much steps that are sufficient to get from one corner to another, \n      providing Jack only makes steps to the left and to the bottom. Should he \n      made one single step into the wrong direction and he never could be there \n      in time. But it is still important to prevent being catched by monsters. \n      So the player has to choose the best possible way to the bottom right \n      corner. You are to determine how many different ways exist in the town. \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. Each assignment begins with the line containing two \n      positive numbers <var>R</var> and <var>S</var> (<var>1 &lt;= R,S &lt;= \n      1000</var>). The numbers determine the number of town rows and columns. \n      Then there are <var>R</var> lines each containing exactly <var>S</var> \n      characters. Each character may be either hash (<code>#</code>) or period \n      (<code>.</code>). Hash mark means the wall and the period is free space. \n      The top left and bottom right corners are always free.</p>','<p>Print exactly one line for each of the input cases. The line must \n      contain the statement \"<code>Existuje <var>X</var> ruznych cest.</code>\", \n      (<em>There are <var>X</var> different paths</em>). Replace <var>X</var> with \n      the number of all existing different paths between the top left and the \n      bottom right corner. Each path must consist of <var>R+S-2</var> steps, \n      each leading to the left or to the right. No path can cross any field with \n      the wall. \n      </p>\n<h3></h3>','2\n3 3\n...\n.#.\n...\n1 6\n...#..','Existuje 2 ruznych cest.\nExistuje 0 ruznych cest.','',50,0,1,64,2,19,47,12),(1172,'Courses','<p>Consider a group of N students and P courses. Each student visits zero, one \n  or more than one courses. Your task is to determine whether it is possible to \n  form a committee of exactly P students that satisfies simultaneously the conditions:<br /><br />\n  every student in the committee represents a different course (a student can \n  represent a course if he/she visits that course).<br /><br />\n  each course has a representative in the committee.</p>','<p>Your program should read sets of data from a text file. The first line of the \n  input file contains the number of the data sets. Each data set is presented \n  in the following format:<br /><br />\n  P N<br />\n  Count1 Student1 1 Student1 2 ... Student1 Count1<br />\n  Count2 Student2 1 Student2 2 ... Student2 Count2<br />\n  ...... <br />\n  CountP StudentP 1 StudentP 2 ... StudentP CountP<br /><br />\n  The first line in each data set contains two positive integers separated by \n  one blank: P (1 &lt;= P &lt;= 100) - the number of courses and N (1 &lt;= N &lt;= 300) - the number \n  of students. The next P lines describe in sequence of the courses . from course \n  1 to course P, each line describing a course. The description of course i is \n  a line that starts with an integer Count i (0 &lt;= Count i &lt;= N) representing \n  the number of students visiting course i. Next, after a blank, you\'ll find the \n  Count i students, visiting the course, each two consecutive separated by one \n  blank. Students are numbered with the positive integers from 1 to N.<br /><br />\n  There are no blank lines between consecutive sets of data. Input data are correct.</p>','<p>The result of the program is on the standard output. For each input data set \n  the program prints on a single line \"YES\" if it is possible to form a committee \n  and \"NO\" otherwise. There should not be any leading blanks at the start of the \n  line.</p>','2\n3 3\n3 1 2 3\n2 1 2\n1 1\n3 3\n2 1 3\n2 1 3\n1 1','YES\nNO ','',49,0,1,32,10,8,28,12),(1173,'Closest Common Ancestors','<p>Write a program that takes as input a rooted tree and a list of pairs of vertices. \n  For each pair (u,v) the program determines the closest common ancestor of u \n  and v in the tree. The closest common ancestor of two nodes u and v is the node \n  w that is an ancestor of both u and v and has the greatest depth in the tree. \n  A node can be its own ancestor (for example in Figure the ancestors of node \n  2 are 2 and 5)</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1176_2bf540025a3192cb5528b5163e1f44a9.jpg\" src=\"assets/problem_images/1176_2bf540025a3192cb5528b5163e1f44a9.jpg\" /></p>\n<p> </p>','<p>The data set starts with the tree description, in the form:<br /><br />\n  nr_of_vertices<br />\n  vertex:(nr_of_successors) successor1 successor2 ... successorn<br />\n  ......<br /><br />\n  where vertices are represented as integers from 1 to n. The tree description \n  is followed by a list of pairs of vertices, in the form:<br /><br />\n  nr_of_pairs<br />\n  (u v) (x y) ...<br /><br />\n  The input contents several data sets (at least one).<br /><br />\n  Note that white-spaces (tabs, spaces and line breaks) can be used freely in \n  the input.</p>','<p>For each common ancestor the program prints the ancestor and the number of pair \n  for which it is an ancestor. The results are printed on the standard output \n  on separate lines, in to the ascending order of the vertices, in the format: \n  ancestor:times</p>','5\n5:(3) 1 4 2\n1:(0)\n4:(0)\n2:(1) 3\n3:(0)\n6\n(1,5) (1,4) (4,2)\n(2,3)\n(1,3) (4,3)\n\n\n','2:1\n5:5','',49,0,1,32,10,4,10,10),(1175,'Caleidoscope','<p>We suppose even the very little children will play with KOKOD. So \n      beside all the games and riddles, we need to have at least one toy in it. \n      It is very favourite one and no special knowledge or ability is required \n      to play with it. Yes, it is the Caleidoscope. I guess all of you know the \n      magic thing. You can watch into it for long hours and still find new and \n      new images that never repeat. But there is a problem with the little \n      children. They break everything they have, all the things are falling from \n      their hands down to the ground. The mechanics of caleidoscope is very fine \n      and so it is very sensitive to proper handling. So our variant of this toy \n      is not mechanical but fully electronic one. The main advantage is that it \n      is water-resistant, fire-resistant, cold-resistant, it cannot break and \n      does not catch fire. Besides, it contains a special teeth detector that \n      prevents the children to bite it. Every tooth contact is detected and \n      reacts with the electric shock (@@@) immediately. \n      </p>\n<p>The main problem with our electric caleidoscope is the picture \n      generating. To reach the quality of the mechanical caleidoscope, the \n      picture must consist of many similar pieces that are resized, mirrored and \n      rotated. As many of you probably know, we use matrices in computer \n      graphics to manipulate pictures. The so called transformation matrix \n      specifies the action that should be done with the picture. The picture \n      manipulation is then done by matrix multiplication. We can also preform \n      many transformations sequentially, by multiplying with more matrices. The \n      picture manipulation is very difficult in the caleidoscope, so the \n      matrices can be very large. Your task is to write a computer program that \n      would be able to multiple the given matrix with the sequence of other \n      matrices. \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. Each assignment begins with the line containing the single \n      number <var>X</var> (<var>1 &lt;= X &lt;= 10000</var>) stating for the \n      number of matrices. Then there are exactly <var>X</var> matrix \n      descriptions. Each description begins with the line containing two \n      integers <var>M</var> and <var>N</var> (<var>1 &lt;= M,N &lt;= 100</var>). \n      <var>M</var> is the number of rows, <var>N</var> the number of columns. \n      After these numbers there are exactly <var>M</var> lines each of them \n      containing <var>N</var> integers seperated by space. These numbers are the \n      matrix items. You can assume that the matrices really can be multipled. \n      That means <var>M</var> of every matrix (except the first one) is the same \n      as <var>N</var> of the previous one. The numbers are only as high that the \n      items of resulting matrix should fit into integer. Also the items of every \n      \"partial result matrix\" should fit there, when you will multiple them \n      sequentially.</p>','<p>The program should print out the resulting matrix for each assignment, \n      with the dimensions <var>m&nbsp;x&nbsp;n</var>. The output should consist \n      of <var>m</var> lines, each containing <var>n</var> numbers separated by \n      exactly one space. Print one empty line after each assignment including \n      the last one. Empty line contains one the special character \n      <em>newline</em>.</p>\n<p>\n.</p>','2\n2\n3 1\n1\n2\n3\n1 3\n3 2 1\n2\n2 2\n-1 1\n-1 1\n2 2\n1 2\n3 4\n','3 2 1\n6 4 2\n9 6 3\n\n2 2\n2 2','',50,0,1,64,2,16,35,12),(1182,'Carl the Ant','<p>\nAnts leave small chemical trails on the ground in order to mark paths \nfor other ants to follow. Ordinarily these trails follow rather straight\n lines. But in one ant colony there is an ant named Carl, and Carl is \nnot an ordinary ant. Carl will often zigzag for no apparent reason, \nsometimes crossing his own path numerous times in the process. When \nother ants come to an intersection, they always follow the path with the\n strongest scent, which is the most recent path that leads away from the\n intersection point.\n</p>\n<p>\nAnts are 1 centimeter long, move and burrow at 1 centimeter per second, \nand follow their paths exactly (bending at right angles when moving \naround corners). Ants cannot cross or overlap each other. If two ants \nmeet at the exact same instant at an intersection point, the one that \nhas been on Carl\'s path the longest has the right of way; otherwise, the\n ant that has been waiting the longest at an intersection will move \nfirst.\n</p>\n<p>\nCarl burrows up from the ground to start at the origin at time 0. He \nthen walks his path and burrows back down into the ground at the \nendpoint. The rest of the ants follow at regular intervals. Given the \ndescription of Carl\'s path and when the other ants start the path, you \nare to determine how long it takes the entire set of ants to finish \nburrowing back into the ground. All the ants are guaranteed to finish.\n</p>','<p>\nInput consists of several test cases. The first line of the input file \ncontains a single integer indicating the number of test cases.\n</p>\n<p>\nThe input for each test case starts with a single line containing three \npositive integers n (1 &lt;= n &lt;= 50), m (1 &lt;= m &lt;= 100), and d\n (1 &lt;= d &lt;= 100). Here, n is the number of line segments in Carl\'s\n path, m is the number of ants traveling the path (including Carl), and d\n is the time delay before each successive ant\'s emergence. Carl (who is \nnumbered 0) starts at time 0. The next ant (ant number 1) will emerge at\n time d, the next at time 2d, and so on. If the burrow is blocked, the \nants will emerge as soon as possible in the correct order.\n</p>\n<p>\nEach of the next n lines for the test case consists of a unique integer \npair x y (-100 &lt;= x, y &lt;= 100), which is the endpoint of a line \nsegment of Carl\'s path, in the order that Carl travels. The first line \nstarts at the origin (0,0) and the starting point of every subsequent \nline is the endpoint of the previous line.\n</p>\n<p>\nFor simplicity, Carl always travels on line segments parallel to the \naxes, and no endpoints lie on any segment other than the ones which they\n serve as an endpoint.\n</p>','<p>\nThe output for each case is described as follows:\n</p>\n<p>\nCase C:\n</p>\n<p>\nCarl finished the path at time t<sub>1</sub> The ants finished in the following order:\n</p>\n<p>\na<sub>1</sub> a<sub>2</sub> a<sub>3</sub> ... a<sub>m</sub> The last ant finished the path at time t<sub>2</sub> Here, C is the case number (starting at 1), a<sub>1</sub> a<sub>2</sub> a<sub>3</sub> ... a<sub>m</sub> are the ant numbers in the order that they go back underground, and t<sub>1</sub> and t<sub>2</sub>\n are the times (in seconds) at which Carl and the last ant finish going \nunderground. You should separate consecutive cases with a single blank \nline.\n</p>','2\n4 7 4\n0 4\n2 4\n2 2\n-2 2\n4 7 2\n0 4\n2 4\n2 2\n-2 2\n','Case 1:\nCarl finished the path at time 13\nThe ants finished in the following order:\n0 2 1 3 4 5 6\nThe last ant finished the path at time 29\n\nCase 2:\nCarl finished the path at time 13\nThe ants finished in the following order:\n0 4 1 5 2 6 3\nThe last ant finished the path at time 19\n','',51,0,1,64,2,0,0,10),(1176,'Logic','<p>There is also the logical game \"Of Liars and Honest Men\" in our \n      KOKOD collection. Almost any number of players can participate in the \n      same game and no special items are needed. The rules are simple: every \n      player tosses a coin to decide if he is Liar or Honest. All the other \n      players know what he is. After all of the roles are determined, the play \n      begins. Honest men must tell the truth under any circumstances, liars must \n      always lie. Whoever should violate this simple rule, he (or she) loses \n      that game. You would not believe how interesting this game can be! Good \n      players can assemble (@@) even very complicated statement and it is very \n      difficult to determine its meaning. Excellent players can play this game \n      for several days without making a mistake. Their children and wives search \n      them all over the town without any success. \n      </p>\n<p>The players consider for the best situation, when some other person \n      enters the room and listens to them. Of course the players won\'t stop! \n      They want to impress the new person and the statements become even more \n      complicated. The witness (@@@) has the only possibility. He must to listen \n      very carefully and determine who is who. The best for him is to prove \n      someone\'s mistake because it should ended the game. Unfortunately, this is \n      not easy. You are to write a computer program that will be able to listen \n      the conversation and tries to determine who is liar. \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. \n      </p>\n<p>Each assignment begins with one empty line that separates it from the \n      previous text. Then there is the single number <var>P</var> (<var>1 &lt;= \n      P &lt;= 10</var>) stating the number of players. Then exactly <var>P</var> \n      lines follow, each containg name of one player. The name consists of \n      letters only, the first one is capital, all the others are lowercase. In \n      the remaining input, the names are always given in the exactly same form \n      as the first time. Every name has at least one and at most ten characters. \n      No name can be \"<code>Lharu</code>\" or \"<code>Poctivcu</code>\". \n      </p>\n<p>Then there is a single number <var>M</var> (<var>0 &lt;= M &lt;= \n      500</var>) on the separate line. This is the number of formulas to follow. \n      Then there are exactly <var>M</var> lines, each of them has the exact \n      format: name of the player, colon, one space, the formula and period. No \n      line can be longer than 1000 characters. The formula has one of the forms \n      (<var>X</var>,<var>Y</var>,<var>Z</var> are non-negative integers; \n      <var>H</var>,<var>F</var> are player names; <var>V</var>,<var>W</var> are \n      formulas). Note that the formula of type 4 ends \n      with a period, any other formula does not. \n      </p>\n<p> </p>\n<dl compact=\"compact\"><dt>1. \n        </dt><dd><code><var>X</var> + <var>Y</var> = <var>Z</var></code> \n        </dd><dt>2. \n        </dt><dd><code><var>H</var> je poctivec</code> \n        &nbsp;&nbsp;&nbsp;(<em><var>H</var> is Honest</em>) \n        </dd><dt>3. \n        </dt><dd><code><var>H</var> je lhar</code> &nbsp;&nbsp;&nbsp;(<i><var>H</var> \n        is Liar</i>) \n        </dd><dt>4. \n        </dt><dd><code><a name=\"says\"></a><var>H</var> rika \"<var>V</var>\".</code> \n        &nbsp;&nbsp;&nbsp;(<em><var>H</var> says <var>V</var></em>) \n        </dd><dt>5. \n        </dt><dd><code><a name=\"sayst\"></a><var>H</var> rika \"<var>V</var>\" a je to \n        opravdu tak</code> &nbsp;&nbsp;&nbsp;(<i><var>H</var> says <var>V</var> \n        and it\'s really true</i>) \n        </dd><dt>6. \n        </dt><dd><code><a name=\"saysf\"></a><var>H</var> rika \"<var>V</var>\", ale neni \n        to pravda</code> &nbsp;&nbsp;&nbsp;(<i><var>H</var> says <var>V</var> \n        but is lying</i>) \n        </dd><dt>7. \n        </dt><dd><code><a name=\"cntfst\"></a>Poctivcu je mene nez <var>X</var></code> \n        &nbsp;&nbsp;&nbsp;(<em>There are less than <var>X</var> Honests</em>) \n        </dd><dt>8. \n        </dt><dd><code>Poctivcu je vice nez <var>X</var></code> \n        &nbsp;&nbsp;&nbsp;(<em>There are more than <var>X</var> Honests</em>) \n        </dd><dt>9. \n        </dt><dd><code>Poctivcu je alespon <var>X</var></code> \n        &nbsp;&nbsp;&nbsp;(<em>There are ate least <var>X</var> Honests</em>) \n        </dd><dt>10. \n        </dt><dd><code>Lharu je mene nez <var>X</var></code> \n        &nbsp;&nbsp;&nbsp;(<em>There are less than <var>X</var> Liars</em>) \n        </dd><dt>11. \n        </dt><dd><code>Lharu je vice nez <var>X</var></code> \n        &nbsp;&nbsp;&nbsp;(<em>There are more than <var>X</var> Liars</em>) \n        </dd><dt>12. \n        </dt><dd><code><a name=\"cntlst\"></a>Lharu je alespon <var>X</var></code> \n        &nbsp;&nbsp;&nbsp;(<em>There are ate least <var>X</var> Liars</em>) \n        </dd><dt>13. \n        </dt><dd><code><a name=\"and\"></a>(<var>V</var>) a zaroven (<var>W</var>)</code> \n        &nbsp;&nbsp;&nbsp;(<em>(<var>V</var>) and (<var>W</var>)</em>) \n        </dd><dt>14. \n        </dt><dd><code><a name=\"or\"></a>(<var>V</var>) nebo (<var>W</var>)</code> \n        &nbsp;&nbsp;&nbsp;(<em>(<var>V</var>) or (<var>W</var>)</em>) </dd></dl>\n      <p>The formula of type 4 is true \n      if and only if the player <var>H</var> could say the formula <var>V</var> \n      without breaking the rules (that means if <var>V</var> is not true and \n      <var>H</var> is liar, or if <var>V</var> is true and <var>H</var> is \n      honest). Formulas 5 a 6 \n      consist of two independent formulas (\"<var>H</var> says <var>V</var>\" and \n      \"<var>V</var> is [not] true\"). If the author of the formula is liar, both \n      of these parts must be false. If he is honest, both parts must hold. The \n      formula consisting of one true part and one false part is called \n      <em>non-satisfiable</em> (@@@) and no one can say it without breaking the \n      rules. The formulas 7 \n      through 12 mean \n      the total number of liars (or honests) so the author of the formula also \n      counts. Formula 13 is true \n      if the both parts are true, and false, if any of them is not true. The \n      formula 14 is true \n      if any of its parts is true. If any of the parts of the formula of type 13 or 14 is \n      non-satisfiable, it is counted as if it was false. Even two \n      non-satisfiable formulas connected with the <em>and</em> or <em>or</em> give \n      false result (<em>not</em> non-satisfiable result). That means that liar can \n      say such formula. \n      </p>','<p>Print the line \"<code>Hra cislo <var>X</var>:</code>\" (<i>The game \n      number <var>X</var></i>) for each assignment. Replace <var>X</var> with \n      the number of the assignment, starting with one. \n      </p>\n<p>As the first step, assume that no player violated the rules, that means \n      liars say false formulas and honests say the truth. If there exists such \n      arrangement of players that all the formulas could be said, the set of \n      formulas is called <em>satisfiable</em>. If the input contains a satisfiable \n      set, the program has to print all the roles that can be certainly \n      determined. Every such role must be reported on the separate line of the \n      form: \"<code><var>H</var> je lhar.</code>\" (<em><var>H</var> is liar</em>) \n      or \"<code><var>H</var> je poctivec.</code>\" (<i><var>H</var> is \n      honest</i>). If there are more roles to be reported, they should be \n      printed in the same order as the player names on the beginning of input \n      file. If it is not possible to determine any player\'s role, the program \n      should print the line \"<code>Neda se nic zjistit.</code>\" (<i>Nothing \n      could be deducted</i>). \n      </p>\n<p>If the set of formulas is not satisfiable, it is obvious that someone \n      has violated the rules and has lost the game. So we should try to \n      determine who was that. Assume that only one player did the mistake. If \n      the player <var>F</var> has violated the rules, we must not take all of \n      his formulas into consideration. It means only the \"main\" formulas said by \n      that player. All the \"included\" formulas of type \"<var>F</var> says \n      <var>V</var>\" are still valid because their semantics are \"<var>F</var> \n      could say <var>V</var> following all the rules\". \n      </p>\n<p>If there is exactly one player after removing whose \"main\" formulas we \n      get the satisfiable set, the program should print the line \n      \"<code><var>F</var> prohral.</code>\" (<em><var>F</var> has lost</em>). If \n      there are more such players, the output should be: \"<code>Prohral nektery \n      z techto hracu: <var>F1</var>, <var>F2</var>, <var>F3</var>.</code>\" \n      (<i>Some of the following players has lost: <var>F1</var>, <var>F2</var>, \n      <var>F3</var></i>). \n      </p>\n<p>If there is no such player whose formulas we could remove to get the \n      satisfiable set, the program is to print the line: \"<code>Pravidla \n      porusilo vice hracu.</code>\" (<i>The rules were violated by more \n      players</i>). \n      </p>\n<p>Print one empty line after each assignment including the last one. \n      Empty line contains one the special character <em>newline</em>. \n      </p>','2\n\n3\nPetr\nJosef\nMarie\n1\nPetr: Petr je lhar.\n\n3\nPetr\nJosef\nMarie\n1\nJosef: Marie rika \"Marie je lhar\" a je to opravdu tak.','Hra cislo 1:\nPetr prohral.\n\nHra cislo 2:\nJosef je lhar.\nMarie je poctivec.','',50,0,1,32,5,0,0,12),(1177,'Raising Modulo Numbers','<p>People are different. Some secretly read magazines full of interesting \n      girls\' pictures, others create an A-bomb in their cellar, others like \n      using Windows, and some like difficult mathematical games. Latest \n      marketing research shows, that this market segment was so far \n      underestimated and that there is lack of such games. This kind of game was \n      thus included into the KOKOD. The rules follow: \n      </p>\n<p>Each player chooses two numbers <var>A<sub>i</sub></var> and \n      <var>B<sub>i</sub></var> and writes them on a slip of paper. Others cannot \n      see the numbers. In a given moment all players show their numbers to the \n      others. The goal is to determine the sum of all expressions \n      <var>A<sub>i</sub><sup>B<sub>i</sub></sup></var> from all players \n      including oneself and determine the remainder after division by a given \n      number <var>M</var>. The winner is the one who first determines the \n      correct result. According to the players\' experience it is possible to \n      increase the difficulty by choosing higher numbers. \n      </p>\n<p>You should write a program that calculates the result and is able to \n      find out who won the game. \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. Then the assignments follow. Each assignment begins with \n      line containing an integer <var>M</var> (<var>1 &lt;= M &lt;= \n      45000</var>). The sum will be divided by this number. Next line contains \n      number of players <var>H</var> (<var>1 &lt;= H &lt;= 45000</var>). Next \n      exactly <var>H</var> lines follow. On each line, there are exactly two \n      numbers <var>A<sub>i</sub></var> and <var>B<sub>i</sub></var> separated by \n      space. Both numbers cannot be equal zero at the same time.</p>','<p>For each assingnment there is the only one \n      line of output. On this line, there is a number, the result of expression \n      </p>\n<p align=\"center\"><var>(A<sub>1</sub><sup>B<sub>1</sub></sup> + \n      A<sub>2</sub><sup>B<sub>2</sub></sup> + ... + \n      A<sub>H</sub><sup>B<sub>H</sub></sup>) mod M</var>. \n      </p>','3\n16\n4\n2 3\n3 4\n4 5\n5 6\n36123\n1\n2374859 3029382\n17\n1\n3 18132\n','2\n13195\n13','',50,0,1,64,2,22,66,12),(1178,'The Highest Profits','<p>This program will not be part of the KOKOD collection, but it may be \n      more important than the games themselves. It will serve to the marketing \n      staff to find suitable procedures for promoting and selling the \n      collection. So try to do your best. \n      </p>\n<p>Extensive marketing case study tried to prove that the total income \n      from selling a product is polynomial function of number of satisfied \n      customers. Experiments showed that the real results are not exactly the \n      same which you can obtain using the function. However, this method is \n      widely used. The reason is probably nonexistence of better solution. Let\'s \n      denote the number of satisfied customers <var>y</var>, than we can express \n      profits (denoted <var>x</var>) as \n      </p>\n<p align=\"center\"><var>x = P(y) = a<sub>0</sub> + a<sub>1</sub>.y + \n      a<sub>2</sub>.y<sup>2</sup> + ... + a<sub>m</sub>.y<sup>m</sup></var> \n      </p>\n<p>The number of satisfied customers depends on the price of a product. \n      Again, there is hypothese that this dependence is polynomial. If we denote \n      the price <var>z</var>, we can write \n      </p>\n<p align=\"center\"><var>y = Q(x) = b<sub>0</sub> + b<sub>1</sub>.z + \n      b<sub>2</sub>.z<sup>2</sup> + ... + b<sub>n</sub>.z<sup>n</sup></var> \n      </p>\n<p>Coeficients <var>a<sub>i</sub></var> and <var>b<sub>i</sub></var> \n      strongly depend on the season of the year, the moon phase, the purchasing \n      power of customers, inflation rate and hunderds of other parameters. \n      Besides on the kind of product and its quality, of course. In the past \n      there was lot of effort put into the reserarch of these parameters. For \n      various combinations of input parameters, the coeficients are stated in \n      Pyshwejc\'s marketing tables. It is not thus difficult to find out their \n      values. But the degree of polynoms is usualy very high. It is very \n      difficult to substitute one polynom into the other and to compute the \n      dependency of the profit on the price. This dependency is usually crucial \n      for us to set the right price. \n      </p>\n<p>Your goal is to write the program which can substitute the polynom \n      <var>Q</var> into the polynom <var>P</var> and determine the restulting \n      polynom <var>R</var> indicating dependency of the profit on the price: \n      </p>\n<p align=\"center\"><var>x = R(z) = c<sub>0</sub> + c<sub>1</sub>.z + \n      c<sub>2</sub>.z<sup>2</sup> + ... + c<sub>p</sub>.z<sup>p</sup></var> \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. Each assingement constist of three lines. On the first line \n      there are two integers <var>m</var> and <var>n</var> (<var>0 &lt;= n,m \n      &lt;= 100</var>) separated by space. These numbers give the degree of \n      polynoms <var>Q</var> and <var>P</var>. On the second line there are \n      <var>m+1</var> integers <var>a<sub>0</sub></var> ... \n      <var>a<sub>m</sub></var>. These numbers are coeficients of polynom \n      <var>P</var>. On the third line there are <var>n+1</var> integers \n      <var>b<sub>0</sub></var> ... <var>b<sub>n</sub></var>. Always \n      <var>a<sub>m</sub> &lt;&gt; 0</var> and <var>b<sub>n</sub> &lt;&gt; \n      0</var>. Coeficients <var>a<sub>i</sub></var> and <var>b<sub>i</sub></var> \n      are separated by space and they are chosen in order to each resulting \n      coeficient could fit into the standard type <em>integer</em>. \n      </p>','<p>The program prints exactly one line for each assignement. On this line, \n      there will be <var>p+1</var> numbers. These numbers are coeficients \n      <var>c<sub>0</sub></var> ... <var>c<sub>p</sub></var> of resulting \n      polynom. The coeficients are separated by space and the line does not \n      consist any redundant spaces. The coeficient in the highest degree should \n      not be zero. \n      </p>','3\n0 0\n7\n-2\n1 1\n6 6\n9 -6\n3 3\n-3 6 -5 1\n0 3 -3 1\n','7\n60 -36\n-3 18 -63 123 -156 138 -86 36 -9 1\n','',50,0,1,64,2,1,1,12),(1179,'Word Puzzle','<p>What a game collection it would be without famous and well known word \n      puzzle. Also KOKOD contains this game. Typical word puzzle is a \n      rectangular array filled with letters, and the list of words. The goal is \n      to find the words form the list in the array and to score out all their \n      letters. After scoring out the letter can still be part of any other word \n      (words can cross and overlap). When all words from list are found and \n      scored out there are several remaining letters. These letters, read in \n      rows, create the secret word. The words can be found in all eight \n      directions, including diagonal directions. \n      </p>\n<p>It is clear that KOKOD has to bring some innovation into this game. \n      The new rule says that the word can \"jump over\" the array boundary and \n      continue on the opposite side. Upper row is thus next to the bottom row \n      and the left column is next to the right one. If we number the rows with \n      numbers 0 till <var>R-1</var> and columns with numbers 0 till \n      <var>S-1</var>, we can describe each field in the array by the \n      coordinates. For example (0,0) is the upper left corner. Word beginning on \n      the position (<var>x</var>,<var>y</var>) can be created by succesion of \n      characters with coordinates (<var>x</var>,<var>y</var>), (<var>(x+i+R) mod \n      R</var>, <var>(y+j+S) mod S</var>), (<var>(x+2i+R) mod R</var>, \n      <var>(y+2j+S) mod S</var>) and so on. The <var>i</var> and <var>j</var> \n      can be substitued by numbers -1, 0 and +1, but they cannot be both zero at \n      the same time. \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. The assignments follow. Each assignment consists of array \n      filled with letters, and the list of words which should be found in the \n      array. The description of the array begins with the line containing two \n      integers <var>R</var> and <var>S</var> separated by space <var>1 &lt;= R,S \n      &lt;= 200</var>. <var>R</var> is the number of rows in the array, \n      <var>S</var> is the number of columns. The <var>R</var> lines follows, \n      each line consists of exactly <var>S</var> lowercase letters (<tt>a</tt> \n      trough <tt>z</tt>). The next line is the integer <var>K</var> (<var>0 \n      &lt;= K &lt;= 1000</var>) determining the number of words to be found out \n      in the puzzle. The <var>K</var> lines follow. On each line, there is one \n      word. The maximum length of the word is 20 characters. The word may not \n      appear in the array and it can appear there several times. In this case \n      all appearances are scored out. Words in the list can repeat. \n      </p>','<p>The program prints one line for each assignment. On this line there \n      will be all letters from word puzzle which remained in the array after \n      scoring out all the words that appeared on the list. The letters are not \n      separated and they are lined up in order in which they appeared in the \n      array in row major order. At the end of the string, there is the newline \n      character. If there are no remaining letters after scoring out all words, \n      the program prints out empty line. \n      </p>','1\n3 7\nkroksun\npranyra\ncmakrom\n7\nsyr\nkra\nkroksunkrok\npranyr\nrak\nmak\nmakro','acm','',50,0,1,32,5,1,6,12),(1180,'Lloyd Fifteen Puzzle','<p>Nearly everybody knows the popular game called <i>Lloyd fifteen \n      puzzle</i>. The puzzle consists of fifteen numbered tiles placed in the \n      square box. The dimensions of the box are 4 x 4, one place is free. The \n      goal is to sort the tiles by moving the neighbouring ones to the free \n      position. In the end the tiles should be ordered by their numbers. The tile \n      with number 1 will be in the left upper corner and next tiles are ordered \n      in row major order. The last position (the right bottom corner) will be \n      free. \n      </p>\n<p>Also KOKOD contains the modification of this game. The game is \n      destinated for the advanced players so the fifteen tiles would be too \n      little. Our game can have arbitrary dimension of the array. Your goal is \n      to write the program which will simulate the working of this game. For a \n      given starting situation it has to replay the succession of valid moves \n      and to display the final state of the puzzle. The valid move is moving the \n      tile to the neighbouring free position up, down, right or left. Any other \n      move is not valid. \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. The assignments follow. Each assignment consists of the \n      description of the starting state of the puzzle and the list of the moves \n      that should be done. \n      </p>\n<p>At the first line of the description of the game initial position, there \n      are two integers <var>R</var> and <var>S</var> (<var>2 &lt;= R,S &lt;= \n      1000</var>) separated by space. <var>R</var> is a number of rows, \n      <var>S</var> is number of columns. The <var>R</var> lines of input \n      describing the rows of the puzzle follow. On each line there is \n      <var>S</var> integers separated by at least one and at most ten spaces. At \n      the beginning of the line can be up to ten spaces which should be ignored. \n      There are no spaces at the end of the line. Each number is the number of \n      the tile in the given line. First number in the first line corresponds to \n      the upper left corner of the puzzle. All numbers are between 0 to \n      <var>R.S-1</var> (inclusive) and each number appeares only once. Zero \n      appear also only once and gives the position of the empty field. \n      </p>\n<p>The list of moves follows. The list can be empty. Each move is on the \n      separate line and consists of one number <var>T</var> (<var>0 &lt; T &lt;= \n      R.S-1</var>), which is the number of the tile which should be moved. At \n      the end of the list there is the line containing number 0. Zero indicates \n      the end of input and is not the part of the list of moves. \n      </p>\n<h3></h3>','<p>For each assignment the program prints out one line \"<code>Skladacka \n      cislo <var>C</var>:</code>\" (<em>Puzzle number <var>C</var></em>) where \n      <var>C</var> is substitued by the number of the assignment. The numbering \n      of assingment is ascending and beginning with 1. \n      </p>\n<p>For each move in the list the program finds out if the move is valid. \n      The move is valid if there is an empty field neighbouring. For each valid \n      move the program prints out the following sentence at the separate line: \n      \"<code>Kamen <var>T</var> presunut <var>KAM</var>.</code>\" <i>The tail \n      number <var>T</var> moved <var>KAM</var>)</i>, where <var>T</var> is the \n      number of the tile and <var>KAM</var> is one of the strings \n      \"<tt>doprava</tt>\", \"<tt>doleva</tt>\", \"<tt>nahoru</tt>\" nebo \n      \"<tt>dolu</tt>\" <em>(right, left, up, down)</em>. If the move is not valid \n      the sentence \"<code>Neplatny tah kamenem <var>T</var>.</code>\" <i>(Invalid \n      move with tile <var>T</var>)</i> is printed out. \n      </p>\n<p>When the list of moves ends, the program prints out the final state of \n      the puzzle in the similar format that was used in the input. The output \n      has to consist of <var>R</var> lines, each containing <var>S</var> \n      numbers. The only difference from the input format is separating number by \n      exactly one space. After each assignment (including the last one) the \n      program prints out the empty line. Empty line consists only of the newline \n      character. \n      </p>','2\n4 4\n 1  2  3  4\n 5  6  7  8 \n 9 10 11 12\n13 14 15  0\n15\n11\n7\n0\n4 4\n 1  2  3  4\n 5  6  7  8\n 9 10 11 12\n13 14  0 15\n1\n0','Skladacka cislo 1:\nKamen 15 presunut doprava.\nKamen 11 presunut dolu.\nKamen 7 presunut dolu.\n1 2 3 4\n5 6 0 8\n9 10 7 12\n13 14 11 15\n\nSkladacka cislo 2:\nNeplatny tah kamenem 1.\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 0 15\n','',50,0,1,64,2,1,3,12),(1181,'Quorf','<p>To keep the word \"card\" in its name, KOKOD also contains one less \n      known card game called <strong>Quorf</strong>. You need three identical card packets. \n      The kind of card is not important you can use for example only numbered \n      cards. Each card can appeare only once in each packet. During the game, \n      two players prepare the task for the third player and he tries to solve \n      it. The game, under some conditions, can be played also as a solitaire, \n      i.e. the game for one player. KOKOD contains this modification of the \n      game. The program you are to write will be at the place of the two players \n      preparing the task. \n      </p>\n<p>The principle of the game is very easy. Each of two preparing players \n      chooses for one packet arbitrary cards and shuffle them in the order which \n      cannot be changed later. The \"main\" player can then look at both packets \n      and orders his third pakcet in arbitrary order. Of course he tries to \n      choose the order in the way which enables him to win in the following \n      game. \n      </p>\n<p>During the game both players (in our case represented by the program) \n      turn the upper card from their packets and put it at the table. Main \n      player then turns the cards from his packet and puts them at the table. If \n      he turns a card that already appears on the table by one of the other \n      players, that player\'s card is put out of game. If both players has the \n      same card and the main player turns it, both their cards are put out of \n      game. Games continues until the main player has cards in his packet. Then, \n      if any of two players has any card, the main player losts. If neither of \n      the two players has any card, third player won. \n      </p>\n<p>The program plays the role of the two players. Generating the contents \n      of both packets is not difficult problem. More difficult is to find out \n      whether the third player can win. Your task is to write program that will \n      be able to determine this. \n      </p>','<p>The input consists of <var>Z</var> assignments. The number of them is \n      given by the single positive integer <var>Z</var> appearing on the first \n      line of input. The assignments follow. Each assignment begins with line \n      containing two numbers <var>N</var> and <var>M</var> (<var>1 &lt;= M,N \n      &lt;= 100000</var>) separated by space. Two lines follow. At the first \n      line, there are <var>N</var> numbers <var>a<sub>i</sub></var> separated by \n      space. At the second line there are <var>M</var> numbers \n      <var>b<sub>i</sub></var>. These numbers give the order of the cards in the \n      packets of both preparing players. No number can appear twice in the same \n      succession. Thus, for each <var>i</var>,<var>j</var> if <var>a<sub>i</sub> \n      = a<sub>j</sub></var> or <var>b<sub>i</sub> = b<sub>j</sub></var> then \n      <var>i = j</var>.</p>\n<p>\n.</p>','<p>The goal of the program is to determine for each assignment whether \n      there is a succession <var>c<sub>1</sub></var>, <var>c<sub>2</sub></var>, \n      ..., <var>c<sub>x</sub></var> such that no number appears twice in this \n      succession and the order of the cards leads to the victory. If such \n      succession exists, the program prints out the only line containing the \n      sentence \"<tt>Hrac ma sanci vyhrat.</tt>\" <em>(The player can win)</em>. If \n      there is no such succession, the input is the sentence \"<tt>Spatne \n      usporadani.</tt>\" <em>(Wrong order)</em>.</p>\n<p>\n.</p>','2\n4 4\n1 2 3 4\n4 3 2 1\n4 4\n1 3 5 7\n2 4 6 8','Spatne usporadani.\nHrac ma sanci vyhrat.','',50,0,1,64,2,0,0,12),(1183,'Heliport','<p>\nIn these fast-paced times, companies are investing in heliports to \nreduce travel time for their busy executives. The heliports are \ntypically circular landing pads, constructed on the roofs of the \ncompanies\' headquarters. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1156_1c0ae3038ef58bbecef737af8232f7b3.jpg\" src=\"assets/problem_images/1156_1c0ae3038ef58bbecef737af8232f7b3.jpg\" /></p>\n<p>You must write a program that finds the largest radius for a circular \nheliport that can be constructed on the flat roof of a building that is \nin the form of a simple polygon. Since this is merely the design phase \nof the construction effort, your program must find only the radius of \nthe heliport. The maximum radius for a heliport in the diagram shown is \n10.\n</p>','<p>\nThe input file contains several test cases. Each test case consists of \ntwo lines. The first line consists of an even integer n (4 &lt;= n &lt;=\n 20), which is the number of the sides of the building. The second line \nconsists of n pairs of the form (m, d), where m is an integer (1 &lt;= m\n &lt;= 50) and d is a letter (U, R, D, L). Assuming the roof is drawn on\n the Cartesian plane, m is the length of a roof boundary segment and d \nis the direction of that segment as you travel counterclockwise around \nthe roof. U, R, D, and L mean \"Up,\" \"Right,\" \"Down,\" and \"Left\" \nrespectively. The boundary segments of the roof, which are parallel to \nthe x and y axes, are given in counterclockwise order. The starting \nposition is the origin (0, 0).\n</p>\n<p>\nInput for the last test case is followed by a line consisting of the number 0.\n</p>','<p>\nFor each test case, the output consists of a separate line containing \nthe case number (starting with 1) and a real number (rounded to two \ndigits after the decimal point) representing the radius of the heliport.\n Print a blank line between cases as shown in the output.\n</p>','4\n2 R 2 U 2 L 2 D\n10\n10 R 10 U 10 L 10 U 10 R 5 U 30 L 20 D 20 R 5 D\n0','Case Number 1 radius is: 1.00\n\nCase Number 2 radius is: 10.00','<p> </p>',51,0,1,64,2,0,2,10),(1184,'Image is Everything','<p>\nYour new company is building a robot that can hold small lightweight \nobjects. The robot will have the intelligence to determine if an object \nis light enough to hold. It does this by taking pictures of the object \nfrom the 6 cardinal directions, and then inferring an upper limit on the\n object\'s weight based on those images. You must write a program to do \nthat for the robot.\n</p>\n<p>\nYou can assume that each object is formed from an N*N*N lattice of \ncubes, some of which may be missing. Each 1*1*1 cube weighs 1 gram, and \neach cube is painted a single solid color. The object is not necessarily\n connected.\n</p>','<p>\nThe input for this problem consists of several test cases representing \ndifferent objects. Every case begins with a line containing N, which is \nthe size of the object (1 &lt;= N &lt;=10). The next N lines are the \ndifferent N*N views of the object, in the order front, left, back, \nright, top, bottom. Each view will be separated by a single space from \nthe view that follows it. The bottom edge of the top view corresponds to\n the top edge of the front view. Similarly, the top edge of the bottom \nview corresponds to the bottom edge of the front view. In each view, \ncolors are represented by single, unique capital letters, while a period\n (.) indicates that the object can be seen through at that location.\n</p>\n<p>\nInput for the last test case is followed by a line consisting of the number 0.</p>','<p>\nFor each test case, print a line containing the maximum possible weight of the object, using the format shown below.\n</p>','3\n.R. YYR .Y. RYY .Y. .R.\nGRB YGR BYG RBY GYB GRB\n.R. YRR .Y. RRY .R. .Y.\n2\nZZ ZZ ZZ ZZ ZZ ZZ\nZZ ZZ ZZ ZZ ZZ ZZ\n0\n','Maximum weight: 11 gram(s)\nMaximum weight: 8 gram(s)\n','',51,0,1,64,2,0,0,10),(1185,'Insecure in Prague','<p>\nPrague is a dangerous city for developers of cryptographic schemes. In \n2001, a pair of researchers in Prague announced a security flaw in the \nfamous PGP encryption protocol. In Prague in 2003, a flaw was discovered\n in the SSL/TLS (Secure Sockets Layer and Transport Layer Security) \nprotocols. However, Prague\'s reputation for being tough on cryptographic\n protocols hasn\'t stopped the part-time amateur cryptographer and \nfull-time nutcase, Immanuel Kant-DeWitt (known to his friends as \"I. \nKant-DeWitt\"), from bringing his latest encryption scheme to Prague. \nHere\'s how it works:\n</p>\n<p>\nA plain text message p of length n is to be transmitted. The sender \nchooses an integer m &gt;= 2n, and integers s, t, i, and j, where 0 \n&lt;= s, t, i, j &lt; m and i &lt; j. The scheme works as follows: m is \nthe length of the transmitted ciphertext string, c. Initially, c \ncontains m empty slots. The first letter of p is placed in position s of\n c. The kth letter, k &gt;= 2, is placed by skipping over i empty slots \nin c after the (k-1)st letter, wrapping around to the beginning of c if \nnecessary. Slots already containing letters are not counted as empty. \nFor instance, if the message is PRAGUE, if s = 1, i = 6, and m = 15, \nthen the letters are placed in c as follows: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1188_aacd939db1d8378c1f8b327a777ae286.jpg\" src=\"assets/problem_images/1188_aacd939db1d8378c1f8b327a777ae286.jpg\" /></p>\n<p>\nStarting with the first empty slot in or after position t in string c, \nthe plain text message is entered again, but this time skipping j empty \nslots between letters. For instance, if t = 0 and j = 8, the second copy\n of p is entered as follows (beginning in position 2, the first empty \nslot starting from t = 0): </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1188_19cda2bf68c6542c150997439f3dbdff.jpg\" src=\"assets/problem_images/1188_19cda2bf68c6542c150997439f3dbdff.jpg\" /></p>\n<p>\nFinally, any remaining unfilled slots in c are filled in with randomly chosen letters: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1188_3de865b4cc58936de1b1722e8f8e3f05.jpg\" src=\"assets/problem_images/1188_3de865b4cc58936de1b1722e8f8e3f05.jpg\" /></p>\n<div align=\"left\"><p>\nKant-DeWitt believes that the duplication of the message, combined with \nthe use of random letters, will confuse decryption schemes based upon \nletter frequencies and that, without knowledge of s and i, no one can \nfigure out what the original message is. Your job is to try to prove him\n wrong. Given a number of ciphertext strings (and no additional \ninformation), you will determine the longest possible message that could\n have been encoded using the Kant-DeWitt method.\n</p>\n</div><p align=\"center\"></p>','<p>\nA number of ciphertext strings, one per line. Each string will consist \nonly of upper case alphabetic letters, with no leading or trailing \nblanks; each will have length between 2 and 40.\n</p>\n<p>\nInput for the last test case is followed by a line consisting of the letter X.\n</p>','<p>\nFor each input ciphertext string, print the longest string that could be\n encrypted in the ciphertext. If more than one string has the longest \nlength, then print \"Codeword not unique\". Follow the format of the \nsample output given below.\n</p>','APPURAAURGEGEWE\nABABABAB\nTHEACMPROGRAMMINGCONTEST\nX','Code 1: PRAGUE\nCode 2: Codeword not unique\nCode 3: Codeword not unique','',51,0,1,32,10,0,0,10),(1186,'Intersection Dates','<p>\nA research group is developing a computer program that will fetch \nhistorical stock market quotes from a service that charges a fixed fee \nfor each day\'s quotes that it delivers. The group has examined the \ncollection of previously-requested quotes and discovered a lot of \nduplication, resulting in wasted money. So the new program will maintain\n a list of all past quotes requested by members of the group. When \nadditional quotes are required, only quotes for those dates not \npreviously obtained will be fetched from the service, thus minimizing \nthe cost.\n</p>\n<p>\nYou are to write a program that determines when new quotes are required.\n Input for the program consists of the date ranges for which quotes have\n been requested in the past and the date ranges for which quotes are \nrequired. The program will then determine the date ranges for which \nquotes must be fetched from the service.\n</p>','<p>\nThere will be multiple input cases. The input for each case begins with \ntwo non-negative integers NX and NR, (0 &lt;= NX, NR &lt;= 100). NX is \nthe number of existing date ranges for quotes requested in the past. NR \nis the number of date ranges in the incoming requests for quotes. \nFollowing these are NX + NR pairs of dates. The first date in each pair \nwill be less than or equal to the second date in the pair. The first NX \npairs specify the date ranges of quotes which have been requested and \nobtained in the past, and the next NR pairs specify the date ranges for \nwhich quotes are required.\n</p>\n<p>\nTwo zeroes will follow the input data for the last case.\n</p>\n<p>\nEach input date will be given in the form YYYYMMDD. YYYY is the year \n(1700 to 2100), MM is the month (01 to 12), and DD is the day (in the \nallowed range for the given month and year). Recall that months 04, 06, \n09, and 11 have 30 days, months 01, 03, 05, 07, 08, 10, and 12 have 31 \ndays, and month 02 has 28 days except in leap years, when it has 29 \ndays. A year is a leap year if it is evenly divisible by 4 and is not a \ncentury year (a multiple of 100), or if it is divisible by 400.\n</p>','<p>\nFor each input case, display the case number (1, 2, ...) followed by a \nlist of any date ranges for which quotes must be fetched from the \nservice, one date range per output line. Use the American date format \nshown in the sample output below. Explicitly indicate (as shown) if no \nadditional quotes must be fetched. If two date ranges are contiguous or \noverlap, then merge them into a single date range. If a date range \nconsists of a single date, print it as a single date, not as a range \nconsisting of two identical dates. Display the date ranges in \nchronological order, starting with the earliest date range. Print a \nsingle blank line between two successive cases.\n</p>','1 1\n19900101 19901231\n19901201 20000131\n0 3\n19720101 19720131\n19720201 19720228\n19720301 19720301\n1 1\n20010101 20011231\n20010515 20010901\n0 0','Case 1:\n1/1/1991 to 1/31/2000\n\nCase 2:\n1/1/1972 to 2/28/1972\n3/1/1972\n\nCase 3:\nNo additional quotes are required.','',51,0,1,64,2,0,1,10),(1187,'Merging Maps','<p>Pictures taken from an airplane or satellite of an area to be mapped \nare often of sufficiently high resolution to uniquely identify major \nfeatures. Since a single picture can cover only a small portion of the \nearth, mapping larger areas requires taking pictures of smaller \noverlapping areas, and then merging these to produce a map of a larger \narea.</p>\n<p>For this problem you are given several maps of rectangular areas, \neach represented as an array of single-character cells. A cell contains \nan uppercase alphabetic character (\'A\' to \'Z\') if its corresponding area\n contains an identifiable major feature. Different letters correspond to\n different features, but the same major feature (such as a road) may be \nidentified in multiple cells. A cell contains a hyphen (\'-\') if no \nidentifiable feature is located in the cell area. Merging two maps means\n overlaying them so that one or more common major features are aligned. A\n cell containing a major feature in one map can be overlaid with a cell \nnot containing a major feature in the other. However, different major \nfeatures (with different letters) cannot be overlaid in the same cell.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1190_5cf87b35b32d53e394c2e280914ae884.jpg\" src=\"assets/problem_images/1190_5cf87b35b32d53e394c2e280914ae884.jpg\" /></p>\n<p>Consider the five 3-row, 5-column maps shown above. The rightmost \ncolumn of map 1 perfectly matches the leftmost column of map 2, so those\n maps could be overlaid to yield a 3-row, 9-column map. But map 1 could \nalso overlay map 3 as well, since the C and B features in the rightmost \ncolumn of map 1 match those in the leftmost column of map 3; the D does \nnot perfectly match the \'-\' in the center of the column, but there is no\n conflict. In a similar manner, the top row of map 1 could also overlay \nthe bottom row of map 3.</p>\n<p>The \"score\" of a pair of maps indicates the extent to which the two \nmaps match. The score of an overlay of a pair of maps is the number of \ncells containing major features that coincide in the overlay that gives \nthe best match. The score for the map pair is the maximum score for the \npossible overlays of the maps. Thus, the score for a pair of maps each \nhaving 3 rows and 5 columns must be in the range 0 to 15.</p>\n<p>An \"offset\" is a pair of integers (r,c) that specifies how two maps, a\n and b, are overlaid. The value of r gives the offset of rows in b \nrelative to rows in a; similarly, c gives the offset of columns in b \nrelative to columns in a. For example, the overlay of map 1 and map 2 \nshown above has the offset (0,4) and a score of 3. The two overlays of \nmap 1 and map 3 yielding scores of 2 have offsets of (0,4) and (-2,0).</p>\n<p>\nThe following steps describe how to merge a sequence of maps:\n</p>\n<ol>\n	<li>Merge the pair of maps in the sequence that yield the highest \npositive score (resolving ties by choosing pair that has the map with \nthe lowest sequence number).\n</li>\n	<li>Remove the maps that were merged from the sequence.\n</li>\n	<li>Add the resulting merged map to the sequence, giving it the next larger sequence number.\n</li>\n</ol>\n<p>In the example above, maps 1 and 2 would be merged to produce map 6, \nand maps 1 and 2 would be removed from the sequence. Steps 1, 2 and 3 \nare repeated until only a single map remains in the sequence, or until \nnone of the maps in the sequence can be merged (that is, until the \noverlay score for each possible map pair is zero).</p>\n<p>If two maps can be merged in several ways to yield the same score, \nthen merge them using the smallest row offset. If the result is still \nambiguous, use the smallest row offset and the smallest column offset.</p>','<p>The input will contain one or more sets of data, each containing \nbetween 2 and 10 maps. Each set of data begins with an integer \nspecifying the number of maps in the sequence. The maps follow, each \nbeginning with a line containing two integers NR and NC (1 &lt;= NR, NC \n&lt;= 10) that specify the number of rows and columns in the map that \nimmediately follows on the next NR lines. The first NC characters on \neach of these NR lines are the map data, and any trailing characters on \nsuch lines are to be ignored.</p>\n<p>Input for the last test case is followed by a line consisting of the number 0.</p>','<p>For each set of data, display the input case number (1, 2, ...) and \nthe merged maps, each identified with its sequence number and enclosed \nby a border. The output should be formatted as shown in the samples \nbelow. No merged map will have more than 70 columns. Print a blank line \nbetween cases.</p>','5\n3 5\n--A-C\n----D\n----B\n3 5\nC----\nD---F\nB----\n3 5\nC----\n-----\nB-A-C\n3 5\n----D\n-E--B\n-----\n3 5\n-D--C\n----G\n----B\n2\n3 5\n----A\n----B\n----C\n3 5\nA----\nB----\nD----\n0','Case 1\n    MAP 9:\n    +-------------+\n    |-D--C--------|\n    |----G--------|\n    |----B-A-C----|\n    |--------D---F|\n    |-----E--B----|\n    |-------------|\n    +-------------+\n\nCase 2\n    MAP 1:\n    +-----+\n    |----A|\n    |----B|\n    |----C|\n    +-----+\n\n    MAP 2:\n    +-----+\n    |A----|\n    |B----|\n    |D----|\n    +-----+','',51,0,1,64,2,0,0,10),(1188,'Navigation','<p>\nGlobal Positioning System (GPS) is a navigation system based on a set of\n satellites orbiting approximately 20,000 kilometers above the earth. \nEach satellite follows a known orbit and transmits a radio signal that \nencodes the current time. If a GPS-equipped vehicle has a very accurate \nclock, it can compare its own local time with the time encoded in the \nsignals received from the satellites. Since radio signals propagate at a\n known rate, the vehicle can compute the distance between its current \nlocation and the location of the satellite when the signal was \nbroadcast. By measuring its distance from several satellites in known \norbits, a vehicle can compute its position very accurately. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1191_1dcd07779978af03cdea54b795f75d7c.jpg\" src=\"assets/problem_images/1191_1dcd07779978af03cdea54b795f75d7c.jpg\" /></p>\n<p>\nYou must write a simple \"autopilot\" program based on GPS navigation. To \nmake the problem easier, we state it as a two-dimensional problem. In \nother words, you do not need to take into account the curvature of the \nearth or the altitude of the satellites. Furthermore, the problem uses \nspeeds that are more appropriate for airplanes and sound waves than for \nsatellites and radio waves.\n</p>\n<p>\nGiven a set of signals from moving sources, your program must compute \nthe receiving position on the Cartesian plane. Then, given a destination\n point on the plane, your program must compute the compass heading \nrequired to go from the receiving position to the destination. All \ncompass headings are stated in degrees. Compass heading 0 (North) \ncorresponds to the positive y direction, and compass heading 90 (East) \ncorresponds to the positive x direction, as shown in Figure 1.\n</p>','<p>\nThe input consists of multiple data sets.\n</p>\n<p>\nThe first line of input in each data set contains an integer N (1 &lt;= N\n &lt;= 10), which is the number of signal sources in the set. This is \nfollowed by three floating point numbers: t, x, and y. Here, t denotes \nthe exact local time when all the signals are received, represented in \nseconds after the reference time (time 0), and x and y represent the \ncoordinates of the destination point on the Cartesian plane. Each of the\n next N lines contains four floating-point numbers that carry \ninformation about one signal source. The first two numbers represent the\n known position of the signal source on the Cartesian plane at the \nreference time. The third number represents the direction of travel of \nthe signal source in the form of a compass heading D (0 &lt;= D &lt; \n360). The fourth number is the time that is encoded in the signal-that \nis, the time when the signal was transmitted, represented in seconds \nafter the reference time. The magnitudes of all numbers in the input \nfile are less than 10000 and no floating-point number has more than 5 \ndigits after the decimal point.\n</p>\n<p>\nThe last data set is followed by a line containing four zeros.\n</p>\n<p>\nThe unit distance in the coordinate space is one meter. Assume that each\n signal source is moving over the Cartesian plane at a speed of 100 \nmeters per second and that the broadcast signal propagates at a speed of\n 350 meters per second. Due to inaccuracies in synchronizing clocks, \nassume that your distance calculations are accurate only to 0.1 meter. \nThat is, if two points are computed to be within 0.1 meter of each \nother, you should treat them as the same point. There is also the \npossibility that a signal may have been corrupted in transmission, so \nthe data received from multiple signals may be inconsistent.\n</p>','<p>\nFor each trial, print the trial number followed by the compass heading \nfrom the receiving location to the destination, in degrees rounded to \nthe nearest integer. Use the labeling as shown in the example output. If\n the signals do not contain enough information to compute the receiving \nlocation (that is, more than one position is consistent with the \nsignals), print \"Inconclusive.\" If the signals are inconsistent (that \nis, no position is consistent with the signals), print \"Inconsistent.\" \nIf the receiving location is within 0.1 meter of the destination, print \n\"Arrived.\" If the situation is Inconclusive or Inconsistent, then you do\n not need to consider the case Arrived.\n</p>\n<p>\nFigure 2 on the previous page corresponds to the first sample input. The\n locations of the three satellites at time t = 0 are A (-100,350), B \n(350,-100) and C (350,800). The signals received by the GPS unit were \ntransmitted at time t = 1.75, when the satellites were at locations A\', \nB\', and C\' (however, in general the signals received by the GPS unit \nmight have been transmitted at different times). The signals from the \nthree satellites converge at D at time t = 2.53571, which means D is the\n location of the receiving GPS unit. From point D, a compass course of \n45 degrees leads toward the destination point of (1050, 1050).\n</p>','3 2.53571 1050.0 1050.0\n-100.0 350.0 90.0 1.75\n350.0 -100.0 0.0 1.75\n350.0 800.0 180.0 1.75\n2 2.0 1050.0 1050.0\n-100.0 350.0 90.0 1.0\n350.0 -100.0 0.0 1.0\n0 0 0 0','Trial 1: 45 degrees\nTrial 2: Inconclusive','',51,0,1,64,2,0,0,10),(1189,'Tree-Lined Streets','<p>\nThe city council of Greenville recently voted to improve the appearance \nof inner city streets. To provide more greenery in the scenery, the city\n council has decided to plant trees along all major streets and avenues.\n To get an idea of how expensive this urban improvement project will be,\n the city council wants to determine how many trees will be planted. The\n planting of trees is limited in two ways:\n</p>\n<ul>\n	<li>Along a street, trees have to be planted at least 50 meters apart. \nThis is to provide adequate growing space, and to keep the cost of the \nproject within reasonable limits.\n</li>\n	<li>Due to safety concerns, no tree should be planted closer than \n25 meters along a street to the nearest intersection. This is to ensure \nthat traffic participants can easily see each other approaching an \nintersection. Traffic safety should not be compromised by reducing \nvisibility.\n</li>\n</ul>\n<p>\nAll streets considered in this project are straight. They have no turns or bends.\n</p>\n<p>\nThe city council needs to know the maximum number of trees that can be planted under these two restrictions.\n</p>','<p>\nThe input consists of descriptions of several street maps. The first \nline of each description contains an integer n (1 &lt;= n &lt;= 100), \nwhich is the number of streets in the map. Each of the following n lines\n describes a street as a line segment in the Cartesian plane. An input \nline describing a street contains four integers x1, y1, x2, and y2. This\n means that this street goes from point (x1, y1) to point (x2, y2). The \ncoordinates x1, y1, x2, and y2 are given in meters, (0 &lt;= x1, y1, x2,\n y2 &lt;= 100000). Every street has a positive length. Each end point \nlies on exactly one street.\n</p>\n<p>\nFor each street, the distances between neighboring intersections and/or \nthe end points of the street are not exact multiples of 25 meters. More \nprecisely, the difference of such a distance to the nearest multiple of \n25 meters will be at least 0.001 meters. At each intersection, exactly \ntwo streets meet.\n</p>\n<p>\nInput for the last street map description is followed by a line consisting of the number 0.\n</p>','<p>\nFor each street map described in the input, first print its number in \nthe sequence. Then print the maximum number of trees that can be planted\n under the restrictions specified above. Follow the format in the sample\n output given below.\n</p>\n<p>\nThe 2004 ACM Programming Contest World Finals sponsored by IBM  \n</p>','3\n0 40 200 40\n40 0 40 200\n0 200 200 0\n4\n0 30 230 30\n0 200 230 200\n30 0 30 230\n200 0 200 230\n3\n0 1 121 1\n0 0 121 4\n0 4 121 0\n0\n','Map 1\nTrees = 13\nMap 2\nTrees = 20\nMap 3\nTrees = 7','',51,0,1,64,2,1,1,10),(1190,'Suspense !','<p>\nJan and Tereza live in adjoining buildings and their apartments face one\n another. For their school science project, they want to construct a \nminiature suspension bridge made of rope, string, and cardboard \nconnecting their two buildings. Two pieces of identical-length rope form\n the main suspension cables, which are attached to the bottoms of their \nwindows. The cardboard \"roadbed\" of the bridge is held up by numerous \nstrings tied to the main cables. The horizontal bridge roadbed lies \nexactly one meter below the lowest point of the ropes. For aesthetic \nreasons, the roadbed should be at least two meters below the lower edge \nof the lower of the two students\' windows. The laws of physics dictate \nthat each suspension rope forms a parabola.\n</p>\n<p>\nWhile Jan and Tereza don\'t plan to walk on this model bridge, there is a\n serious problem: some of the occupants of the apartment buildings own \npet cats, and others own pet birds. Jan and Tereza want to be sure that \ntheir bridge doesn\'t provide a way for a cat to reach a bird. Jan and \nTereza have observed that a cat cannot jump as high as 0.5 meters, and \nwill not jump down as far as 3 meters. So as long as the bridge roadbed \nlies at least 0.5 meters above the bottom of a cat\'s window, or at least\n 3 meters below the bottom of a cat\'s window, the cat will not jump onto\n it. Likewise, a cat that successfully jumps onto the roadbed will not \nbe able to reach a bird\'s window if the roadbed lies at least 0.5 meters\n below the bottom of the bird\'s window, or at least 3 meters above the \nbottom of the bird\'s window. Cats are concerned only with reaching \nbirds, and they do not worry about returning home.\n</p>\n<p>\nThe figure below shows Jan\'s apartment (\"J\") and Tereza\'s apartment \n(\"T\") with a rope joining the bottoms of their windows and the cardboard\n roadbed one meter below the lowest point of the rope. The cat on the \nsecond floor can reach the bird on the second floor using the bridge. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1193_b3b789ecdaf50fa528a00a047e35e862.jpg\" src=\"assets/problem_images/1193_b3b789ecdaf50fa528a00a047e35e862.jpg\" /></p>\n<p>\nYou must write a program to determine how much rope Jan and Tereza need \nto construct each cable for a bridge that won\'t endanger any of the \nbirds in their two buildings.\n</p>\n<p>\nInput for your program will be: the distance between the two buildings, \nin meters; the floor numbers for Jan and Tereza (with the lowest, or \nground floor in each building numbered 1), the kinds of pets living in \nall the floors up through Jan\'s floor, and the kinds of pets living in \nall the floors up through Tereza\'s floor. Your program must determine \nthe length of the longest cable that can be used to suspend a bridge \nbetween the two buildings that does not permit any cat to reach a bird \nby means of the bridge. The roadbed of the bridge must lie at least 1 \nmeter above the ground and must lie exactly one meter below the lowest \npoint of the suspension cables. It must also lie at least two meters \nbelow the lower of the two windows of Jan and Tereza. All rooms in the \nbuildings are exactly 3 meters tall; all windows are exactly 1.5 meters \ntall and the bottom of each window lies exactly 1 meter above the floor \nof each room.\n</p>','<p>\nThe input will describe several cases, each of which has three lines. \nThe first line will contain two positive integers j and t (2 &lt;= j, t \n&lt;= 25) representing Jan\'s floor and Tereza\'s floor, and a real value d\n (1 &lt;= d &lt;= 25) representing the distance, in meters, between the \nbuildings. The second line will contain j uppercase letters l<sub>1</sub>, l<sub>2</sub>, ..., l<sub>j</sub> separated by whitespace. Letter l<sub>k</sub>\n is B if a bird lives on floor number k of Jan\'s building, C if a cat \nlives on floor number k, and N if neither kind of pet lives on floor \nnumber k. The third line similarly contains t uppercase letters \nrepresenting the same kind of information for the floors in Tereza\'s \nbuilding. The last case is followed by a line containing three zeroes.\n</p>','<p>\nFor each case, print the case number (1, 2, ...) and the largest value c\n such that two cables, each of length c, can be used to suspend a bridge\n from the lower edges of Jan\'s and Tereza\'s windows so that the bridge \nfloor lies one meter below the lowest point in the cable, lies at least 1\n meter above the ground, lies at least two meters below Jan and Tereza\'s\n windows, and does not allow a cat to reach a bird. The length should be\n rounded to three places following the decimal point. If no such bridge \ncan be constructed, print \"impossible.\" Print a blank line between the \noutput for consecutive cases. Your output format should imitate the \nsample output.\n</p>','4 3 5.0\nN C N C\nN B B\n4 3 5.0\nC B C C\nB C B\n0 0 0\n','Case 1: 14.377\n\nCase 2: impossible','',51,0,1,64,2,0,0,10),(1191,'Air Traffic Control','<p>\nIn order to avoid midair collisions, most commercial flights are \nmonitored by ground-based air traffic control centers that track their \nposition using radar. For this problem, you will be given information on\n a set of airplanes and a set of control centers, and you must compute \nhow monitoring of the airplanes is distributed among the control \ncenters. The position of each airplane is represented by a unique (x, y)\n coordinate pair. For the purpose of this problem, the height (altitude)\n of the airplanes can be ignored.\n</p>\n<p>\nThe number of airplanes that can be monitored by a given control center \nvaries from time to time due to changes in staff and equipment. At any \ngiven time, each control center monitors as many planes as it can, \nchoosing the airplanes to be monitored according to the following \npriorities: (1) it will prefer to monitor planes that are closer to the \ncontrol center rather than ones that are farther away; (2) if two \nairplanes are equally distant from the center and the center can monitor\n only one of them, it will choose the one that is farther to the north \n(positive y-axis); (3) if two airplanes are equally distant and have the\n same y-coordinate, the center will give preference to the airplane that\n is farther to the east (positive x-axis).\n</p>\n<p>\nAt any given moment, each control center has a circular \"span of \ncontrol\" whose radius is the distance to the farthest airplane being \nmonitored by the control center. All airplanes inside the span of \ncontrol are monitored by the control center. Airplanes on the boundary \nof the span of control may or may not be monitored by the control \ncenter, depending on its capacity and on the priorities listed above.\n</p>\n<p>\nYou will not be given the positions of the control centers. Instead, for\n each control center, you will be given the number of airplanes that it \nis currently monitoring, and two points that are on the boundary of its \ncurrent span of control. With this information, you can compute the \nposition of the control center and decide which airplanes it is \nmonitoring. If the data is consistent with more than one possible span \nof control, you should choose the span that includes the airplane that \nis farthest to the north, breaking ties by choosing the airplane that is\n farthest to the north then to the east.\n</p>\n<p>\nThe figure below, which shows four airplanes and two control centers, \nillustrates the problem. Each control center is represented by a \ncircular span of control and by two points on the boundary of this span,\n labeled A and B. P1, P2, P3, and P4 label the four airplanes. In this \nexample, airplanes P1 and P4 are each being monitored by a single \ncontrol center, airplane P3 is being monitored by two control centers, \nand airplane P2 is not being monitored by either control center. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1194_3c1d47c5540111e855f8f7910fa078c4.jpg\" src=\"assets/problem_images/1194_3c1d47c5540111e855f8f7910fa078c4.jpg\" /></p>\n<p> </p>','<p>\nThe input consists of several trial data sets. The first line of input \nin each trial data set contains two integers NP (0 &lt; NP &lt; 100) and\n NC (0 &lt; NC &lt; 10), which represent the number of airplanes and the\n number of control centers, respectively. Each of the next NP lines \ncontains two floating-point numbers that represent the (x, y) The 2004 \nACM Programming Contest World Finals sponsored by IBM coordinates of one\n airplane. Each of the next NC lines describes one control center. Each \ncontains an integer between 0 and NP (inclusive) indicating the number \nof airplanes monitored by the control center, followed by two pairs of \nfloating point numbers that represent the (x, y) coordinates of two \npoints on the boundary of its span of control (neither of which is the \nposition of an airplane). If two distances differ by less than 0.00001, \nyou should treat them as the same distance.\n</p>\n<p>\nThe last data set is followed by a line containing two zeros.\n</p>','<p>\nFor each trial, compute the number of airplanes that are monitored by \nzero control centers, the number of airplanes that are monitored by one \ncontrol center, and so on up to the number of airplanes that are \nmonitored by NC control centers. Print the trial number followed by a \nsequence of NC + 1 integers, where the ith integer in the sequence \nrepresents the number of airplanes that are monitored by i-1 control \ncenters. If data for one of the control centers is inconsistent, print \n\"Impossible\" instead of the sequence of integers for that trial. Use the\n format shown in the example output, and print a blank line after each \ntrial.\n</p>','4 2\n3.0 0.0\n0.0 0.0\n1.6 2.8\n2.0 1.0\n2 1.0 2.0 2.0 0.0\n2 2.0 2.0 4.0 2.0\n2 1\n0.0 0.5\n0.0 -0.5\n0 -1.0 0.0 1.0 0.0\n0 0','Trial 1: 1 2 1\nTrial 2: Impossible','',51,0,1,64,2,0,0,10),(1192,'Trick or Treat','<p>\nJohnny and his friends have decided to spend Halloween night doing the \nusual candy collection from the households of their village. As the \nvillage is too big for a single group to collect the candy from all \nhouses sequentially, Johnny and his friends have decided to split up so \nthat each of them goes to a different house, collects the candy (or \nwreaks havoc if the residents don\'t give out candy), and returns to a \nmeeting point arranged in advance.\n</p>\n<p>\nThere are <em>n</em> houses in the village, the positions of which can \nbe identified with their Cartesian coordinates on the Euclidean plane. \nJohnny\'s gang is also made up of <em>n</em> people (including Johnny \nhimself). They have decided to distribute the candy after everybody \ncomes back with their booty. The houses might be far away, but Johnny\'s \ninterest is in eating the candy as soon as possible.\n</p>\n<p>\nKeeping in mind that, because of their response to the hospitality of \nsome villagers, some children might be wanted by the local authorities, \nthey have agreed to fix the meeting point by the river running through \nthe village, which is the line <em>y</em> = 0. Note that there may be houses on both sides of the river, and some of the houses may be houseboats (<em>y</em> = 0). The walking speed of every child is 1 meter per second, and they can move along an<em>y</em> direction on the plane.\n</p>\n<p>\nAt exactly midnight, each child will knock on the door of the house he \nhas chosen, collect the candy instantaneously, and walk back along the \nshortest route to the meeting point. Tell Johnny at what time he will be\n able to start eating the candy.\n</p>','<p>\nEach test case starts with a line indicating the number <em>n</em> of houses (1 ≤ <em>n</em> ≤ 50 000). The next <em>n</em> lines describe the positions of the houses; each of these lines contains two floating point numbers <em>x</em> and <em>y</em> (-200 000 ≤ <em>x</em>, <em>y</em> ≤ 200 000), the coordinates of a house in meters. All houses are at different positions.\n</p>\n<p>\nA blank line follows each case. A line with <em>n</em> = 0 indicates the end of the input; do not write any output for this case.\n</p>','<p>For each test case, print two numbers in a line separated by a space: the coordinate <em>x</em> of the meeting point on the line <em>y</em>\n = 0 that minimizes the time the last child arrives, and this time \nitself (measured in seconds after midnight). Your answer should be \naccurate to within an absolute or relative error of 10<sup>-5</sup>.</p>\n.','2\n1.5 1.5\n3 0\n1\n0 0\n4\n1 4\n4 4\n-3 3\n2 4\n5\n4 7\n-4 0\n7 -6\n-2 4\n8 -5\n0','1.500000000 1.500000000\n0.000000000 0.000000000\n1.000000000 5.000000000\n3.136363636 7.136363636\n','',52,1,1,64,5,1,3,10),(1193,'Working at the Restaurant','<p>\nLast night, Tom went on a date with a really nice girl. However, he \nforgot to take his credit card with him and he had no cash in his \nwallet, so he ended up working at the restaurant to pay for the bill. \nHis task is to take plates from the waiter when he comes from the \ntables, and pass them along when the diswasher requests them. It is very\n important for the plates to be washed in the same order as they are \nbrought from the tables, as otherwise it could take too long before a \nplate is washed, and leftover food might get stuck. Trying to hold all \nthe plates in his hands is probably not a great idea, so Tom puts them \non a table as soon as the waiter hands them over to him, and picks them \nup from the table again when the time comes to pass them along to the \ndishwasher. There is space for only two piles of plates on the table, \nwhich will be referred to as pile 1 and pile 2. There is only one table \nTom can use.\n</p>\n<p>\nTom won last year\'s SWERC, so he is certainly capable of optimizing for \nefficiency. You have to output a transcript of one possible way in which\n Tom might decide to organize the plates on the table during the \nprocess, given the sequence of plates and requests he receives.\n</p>','<p>\nThe input has several test cases. Each case begins with a line containing a number <em>N</em> (1 ≤ <em>N</em> ≤ 1 000), followed by <em>N</em> lines, which contain either <strong>DROP</strong> <em>m</em> or <strong>TAKE</strong> <em>m</em>, where <em>m</em> &gt; 0 is the number of plates to take or drop. <strong>DROP</strong> <em>m</em> represents that the next event is the waiter bringing <em>m</em> plates to Tom, so he has to drop them on the table, while <strong>TAKE</strong> <em>m</em> represents that the next event is Tom taking <em>m</em> plates from the table and passing them along in the right order. You can assume that he never receives a <strong>TAKE</strong> <em>m</em> instruction when there are fewer than <em>m</em> plates on the table, and that the sum <em>M</em> of all values of <em>m</em> corresponding to <strong>DROP</strong>\n operations does not exceed 100 000. Note that there might be plates \nleft on Tom\'s table when the last request is issued, as Tom might be \nrelieved of his duty to stay until the restaurant closes.\n</p>\n<p>\nThe input ends with a line with <em>N</em> = 0, which must not be processed.\n</p>','<p>\nFor every test case, the output will be a series of lines describing the\n operations to be performed with the plates. The content of each line \nwill be one of the following:\n</p>\n<ul>\n	<li><strong>DROP</strong> 1 <em>m</em> (<strong>DROP</strong> 2 <em>m</em>), <em>m</em>\n &gt; 0, if Tom needs to take a plate from the waiter, drop it on top of\n pile 1 (pile 2), and repeat this operation m times in total.</li>\n	<li><strong>TAKE</strong> 1 <em>m</em> (<strong>TAKE</strong> 2 <em>m</em>), <em>m</em> &gt; 0, if Tom needs to take a plate from the top of pile 1 (pile 2), pass it along to the dishwasher, and repeat <em>m</em> times in total.</li>\n	<li><strong>MOVE</strong> 1-&gt;2 <em>m</em> (<strong>MOVE</strong> 2-&gt; <em>m</em>), <em>m</em>\n &gt; 0, if Tom needs to take a plate from the top of pile 1 (pile 2), \ndrop it on top of pile 2 (pile 1), and repeat m times in total.</li>\n</ul>\n<p>\nYou must output at most 6<em>N</em> lines, and the total number of movements of plates in your transcript (that is, the sum of the <em>m</em>\'s printed in your output, for all three kinds of operations), must be at most 6<em>M</em>, as otherwise Tom won\'t be able to cope with all the work.\n</p>\n<p>\nNote that Tom must obey the commands in the same order as they are issued. This means that, if he receives a <strong>TAKE</strong> <em>m</em> command, he must perform a certain number of <strong>MOVE</strong> and <strong>TAKE</strong> operations such that the sum of the numbers of plates taken adds up exactly to <em>m</em> before performing the operations corresponding to the next command; and if he receives a <strong>DROP</strong> <em>m</em> command, he must perform a number of <strong>DROP</strong> or <strong>MOVE</strong> operations for which the sum of the numbers of plates dropped adds up exactly to <em>m</em> before performing the operations corresponding to the next command.\n</p>\n<p>\nOf course, it is also forbidden to take plates from the waiter or pass \nthem along to the dishwasher in the absence of the corresponding order.\n</p>\n<p>\nThere <strong>must</strong> be an empty line between the outputs of different cases.\n</p>\n<p>\nAny solution satisfying these conditions will be accepted.\n</p>','3\nDROP 100\nTAKE 50\nTAKE 20\n3\nDROP 3\nDROP 5\nTAKE 8\n0','DROP 2 100\nMOVE 2->1 100\nTAKE 1 50\nTAKE 1 20\nDROP 2 3\nDROP 2 5\nMOVE 2->1 8\nTAKE 1 8','<p> </p>',52,1,1,64,1,2,3,10),(1194,'Lights','<p>\nJohn has <em>n</em> light bulbs and a switchboard with <em>n</em> switches; each bulb can be either on or off, and pressing the <em>i</em><sup>th</sup> switch changes the state of bulb <em>i</em>\n from on to off, and viceversa. He is using them to play a game he has \nmade up. In each move, John selects a (possibly empty) set of switches \nand presses them, thus inverting the states of the corresponding bulbs. \nAfter exactly <em>m</em> moves, John would like to have the first <em>v</em>\n bulbs on and the rest off; otherwise he loses the game. There is only \none restriction: he is not allowed to press the same set of switches in \ntwo different moves.\n</p>\n<p>\nThis is quite an easy game, as there are lots of ways of winning. This \nhas encouraged him to keep playing different winning games, and now he \nis intent on trying them all. Help him count how many ways of winning \nthere are. Two games are considered the same if, after a reordering of \nthe moves in one of them, at every step the same set of switches is \npressed in both of them.\n</p>\n<p>\nFor example, if <em>n</em> = 4, <em>m</em> = 3, and <em>v</em> = 2, one \npossible winning game is obtained by pressing switches 1, 2 and 4 in the\n first move, 1 and 3 in the second one, and 1, 3 and 4 in the last one. \nThis is considered equivalent to, say, first pressing 1 and 3; then 1, \n2, 4; and then 1, 3, 4.\n</p>','<p>\nThe input has at most 500 lines, one for each test case. Each line contains three integers <em>n</em> (1 ≤ <em>n</em> ≤ 1 000), <em>m</em> (1 ≤ <em>m</em> ≤ 1 000), and <em>v</em> (0 ≤ <em>v</em> ≤ <em>n</em>). The last line of input will hold the values 0 0 0 and must not be processed.\n</p>','<p>\nPrint one line for each test case containing the number of ways John can play the game, modulo the prime 10 567 201.\n</p>','3 3 1\n6 4 0\n6 4 3\n0 0 0','7\n10416\n9920','',52,0,1,128,5,0,0,10),(1195,'Darts','<p>\nAfter a long week of work at the ICPC Headquarters, Bill and his friends\n usually go to a small pub on Friday evenings to have a couple of beers \nand play darts. All of them are well aware of the fact that their \nability at darts decreases at the same rate as the amount of beer left \nin their mugs.\n</p>\n<p>\nThey always play 501, one of the easiest games. Players start with a score of <em>N</em> points (typically, <em>N</em>\n = 501, hence the name) and take turns throwing darts. The score of each\n player decreases by the value of the section hit by the dart, unless \nthe score becomes negative, in which case it remains unchanged. The \nfirst player to reach a score of 0 wins. The figure below shows the \ndartboard with which the game is played.\n</p>\n<div style=\"text-align: center;\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Darts_1.jpg\" height=\"330\" width=\"350\" /></div><center>Figure: Dartboard</center><p>\nAs the clock ticks closer to midnight and they start running out of \nbeer, everyone wonders the same: is it worth trying to aim the dart at a\n specific section? Or is it better just to throw the dart at a random \nsection on the dartboard? You are asked to deal with the question by \nfinding out what would happen if two players (A and B) applying these \ntwo different strategies were to play against each other:\n</p>\n<ul>\n	<li>Player A throws the darts at random, and consequently they land with equal probability in each of the sections of the dartboard.</li>\n	<li>If Player B aims at a certain section, the dart has the same \nprobability of landing in the correct one as in each of the two adjacent\n ones (the neighbouring regions to the left and right). Moreover, he is \ncompletely aware of his ability and sober enough to aim at the section \nthat maximizes his probability of winning.</li>\n</ul>\n<p>\nGiven the initial score of both players, can you determine the \nprobability that the first player wins? Of course, being the first to \nthrow a dart might be advantageous, so the answer depends on who plays \nfirst.\n</p>','<p>\nThe input consists of a series of lines, each containing an integer <em>N</em> (1 ≤ <em>N</em> ≤ 501), the initial score of both players. A case with <em>N</em> = 0 marks the end of the input and must not be processed.\n</p>','<p>\nFor each number in the input, your program should output a line \ncontaining two real numbers: the probability that A wins if A throws the\n first dart, and the probability that B wins if B throws the first dart.\n</p>\n<p>\nYour answers should be accurate to within an absolute or relative error of 10<sup>-8</sup>.\n</p>','5\n100\n0','0.136363636364 0.909090909091\n0.072504908290 0.950215081962\n','<p> </p>',52,1,1,64,23,0,0,10),(1196,'Genetics','<p>\nA colony of alien bacteria has recently been discovered close to a \ncrater in New Mexico. Dr. Poucher is in charge of the scientific team at\n the ICPC BioLab committed to the study of the alien DNA structure. We \nbriefly sketch their discoveries here.\n</p>\n<p>\nAlien DNA molecules have the structure of a circular sequence. Each \nsequence is composed of nucleotides. There are 26 different types of \nnucleotides, and each of them can occur in two faces. It is very \nimportant to remark that in any given alien DNA molecule, every \nnucleotide either does not appear at all or appears exactly twice \n(hence, the length of a DNA molecule is an even integer between 2 and \n52). In case a nucleotide occurs twice, each occurrence can be of either\n type independently. Alien bacteria have two types of extremities, which\n in the technical biological jargon are referred to as arms and legs. A \nmajor discovery of Dr. Poucher\'s team is a method to determine the exact\n number of arms and legs of a bacterium by examining its DNA structure.\n</p>\n<p>\nHere we represent each nucleotide as a letter of the alphabet. We refer to the different nucleotides as <em>a</em>, <em>A</em>, ... , <em>z</em>, <em>Z</em>,\n where the lowercase and uppercase forms of a letter represent the two \npossible faces a nucleotide may appear with; we shall also use <em>a</em>/<em>A</em>, <em>b</em>/<em>B</em>, ... , <em>z</em>/<em>Z</em> to refer to a nucleotide in either face.\n</p>\n<p>\nTo determine the number of extremities, Dr. Poucher starts by \ninitializing two counters of arms and legs to zero, and then proceeds to\n perform a number of surgeries, transforming a DNA sequence into another\n one. After each transformation, you may need to increase some of the \ncounters, depending on the type of surgery applied. When the empty \nsequence of nucleotides (which will be denoted by ø) has been reached, \nthe number of extremities of the original molecule has been found. The \npossible surgeries are:\n</p>\n<ol>\n	<li><p>Eliminate consecutive instances of a given nucleotide appearing \nwith opposite faces. The number of arms and legs is preserved. For \nexample: <em>aBbCaC</em> -&gt; <em>aCaC</em> by eliminating <em>Bb</em>. Another example: <em>DeHhEd</em> -&gt; <em>eHhE</em> by eliminating <em>dD</em>. Remember that DNA structure is circular, so in our representation as a string the last and first letters are connected.</p>\n</li>\n	<li><p>Eliminate consecutive nucleotides appearing with the same face. Add one to the number of arms. For example: <em>BBcgCg</em> -&gt; <em>cgCg</em> by eliminating <em>BB</em>. Another example: <em>xabyyaBX</em> -&gt; <em>xabaBX</em> by eliminating <em>yy</em>.</p>\n</li>\n	<li><p>Eliminate a sequence of four nucleotides formed by two different\n nucleotides that appear alternately where different occurrences of the \nsame nucleotide have opposite faces. Add one to the number of legs. For \nexample: <em>dcDCefFe</em> -&gt; <em>efFe</em>, by eliminating <em>dcDC</em>. Another example: <em>cmNMnC</em> -&gt; <em>cC</em> by eliminating <em>mNMn</em>.</p>\n</li>\n	<li><p>Cut and paste, the most sophisticated procedure. First, a nucleotide is selected, for instance <em>a</em>/<em>A</em>, and the DNA sequence is chopped into two linear chains such that the nucleotide appears once in each of them. </p>\n	<p>Second, if both occurrences of <em>a</em>/<em>A</em> are of the same\n face, one of the chains is \"inverted\" by reversing the sequence and \nchanging the face of every nucleotide in the chain.</p>\n	<p>Then, the chains are combined by concatenating the subsequence occurring before a with the subsequence occurring after <em>A</em>, and the subsequence occurring after a with the subsequence occurring before <em>A</em>.</p>\n	<p>Finally, two new <em>a</em>/<em>A</em> nucleotides are added to \nclose the chain into a circular shape. The face of the new nucleotides \nare the same if the original pair of nucleotides selected had the same \nface, and is different otherwise.</p>\n	<p>Formally, suppose you select the nucleotide <em>a</em>/<em>A</em>, and further assume for the moment that it appears both times with the face <em>a</em>(<em>A</em>). The cut and paste surgery turns sequences of the form <em>S<sub>1</sub>aS<sub>2</sub>S<sub>3</sub>aS<sub>4</sub></em> (respectively <em>S<sub>1</sub>AS<sub>2</sub>S<sub>3</sub>AS<sub>4</sub></em>) into <em>S<sub>2</sub>aS<sub>1</sub><span style=\"border-top: 1px solid\">S</span><sub>3</sub>a<span style=\"border-top: 1px solid\">S</span><sub>4</sub></em> (respectively <em>S<sub>2</sub>AS<sub>1</sub><span style=\"border-top: 1px solid\">S</span><sub>3</sub>A<span style=\"border-top: 1px solid\">S</span><sub>4</sub></em>). On the other hand, if nucleotide <em>a</em>/<em>A</em> appears with its two different faces, the surgery turns sequences of the form <em>S<sub>1</sub>aS<sub>2</sub>S<sub>3</sub>AS<sub>4</sub></em> into <em>S<sub>2</sub>aS<sub>1</sub>S<sub>4</sub>AS<sub>3</sub></em>. <em>S<sub>1</sub></em>, <em>S<sub>2</sub></em>, <em>S<sub>3</sub></em> and <em>S<sub>4</sub></em> are arbitrary subchains (possibly empty). In both cases the original circular chain was chopped into <em>S<sub>1</sub>(a/A)S<sub>2</sub></em> and <em>S<sub>3</sub>(a/A)S<sub>4</sub></em>.</p>\n	<p>For example (see the figure below): starting with the sequence \nBacDcAbD, we can get chains BacDc and AbD. Then, merging at nucleotide \na/A we get the sequence cDca\'BbDA\' where a\' and A\' represent the new a/A\n nucleotides. Here, <em>S<sub>1</sub></em> = <em>B</em>, <em>S<sub>2</sub></em> = <em>cDc</em>, <em>S<sub>3</sub></em> = <em>ø</em>; and <em>S<sub>4</sub></em> = <em>bD</em>.</p>\n	<p>Another example: take the same DNA sequence BacDcAbD, and cut to get the chains <em>DBac</em> and <em>DcAb</em>; paste nucleotide <em>c</em>/<em>C</em> (in this case you need to reverse one chain, for example <em>BaCd</em>) to get the sequence <em>cDBadcBa</em>. Here, <em>S<sub>1</sub></em> = <em>DBa</em>, <em>S<sub>2</sub></em> = <em>ø</em>, <em>S<sub>3</sub></em> = <em>D</em> and <em>S<sub>4</sub></em> = <em>Ab</em>.\n</p>\n</li>\n</ol>\n<div style=\"text-align: center;\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Genetic_1.jpg\" height=\"258\" width=\"800\" /></div><p> </p>\n<center>Figure: First example of use of cut and paste</center><p> </p>\n<center>This surgery does not modify the number of arms or legs, but can be used cleverly in combination with<br /> the previous surgeries to reduce the size of the DNA molecule and finish the calculation.</center><p>\nHowever, alien bacteria do not present both arms and legs at the same \ntime. This is due to the fact that, in their early development, a leg, \nin the presence of one or more arms, becomes two arms. Because of the \nabove, the end result is either a number of arms or a number of legs, \nbut not both at the same time. In order to avoid expensive surgical \nprocedures, Dr. Poucher has hired you to write a program that computes \nthe number of arms and legs a bacterium will develop, given its DNA \nsequence. It is guaranteed that the result is determined uniquely by the\n original string, regardless of the particular sequence of surgeries \napplied.\n</p>','<p>\nEach test case consists of a string of even length between 2 and 52, \ninclusive, representing the DNA structure of an alien bacterium. All \ncharacters are letters. There will be one case per line in the input. \nThe last line contains the word \"END\" and must not be processed.\n</p>','<p>\nThe output for each test case should have exactly one line, containing \nthe number of arms or legs the bacterium will have, followed by the word\n \"arms\" or \"legs\" respectively (if the number is 1, the words should be \nin singular). In case there will be neither arms nor legs, the program \nshould print the word \"none\".\n</p>','rkrk\nabcdeABCDE\nshcoOCfFHS\nEND','1 arm\n2 legs\nnone','',52,0,1,64,1,0,0,10),(1197,'Haunted Graveyard','<p>\nTonight is Halloween and Scared John and his friends have decided to do \nsomething fun to celebrate the occasion: crossing the graveyard. \nAlthough Scared John does not find this fun at all, he finally agreed to\n join them in their adventure. Once at the entrance, the friends have \nbegun to cross the graveyard one by one, and now it is the time for \nScared John. He still remembers the tales his grandmother told him when \nhe was a child. She told him that, on Halloween night, \"haunted holes\" \nappear in the graveyard. These are not usual holes, but they transport \npeople who fall inside to some point in the graveyard, possibly far \naway. But the scariest feature of these holes is that they allow one to \ntravel in time as well as in space; i.e., if you fall inside a \"haunted \nhole\", you appear somewhere in the graveyard a certain time before (or \nafter) you entered the hole, in a parallel universe otherwise identical \nto ours.\n</p>\n<p>\nThe graveyard is organized as a grid of <em>W</em> × <em>H</em> cells, with the entrance in the cell at position (0, 0) and the exit at (<em>W</em> − 1, <em>H</em>\n − 1). Despite the darkness, Scared John can always recognize the exit, \nand he will leave as soon as he reaches it, determined never to set foot\n anywhere in the graveyard again. On his way to the exit, he can walk \nfrom one cell to an adjacent one, and he can only head to the North, \nEast, South or West. In each cell there can be either one gravestone, \none \"haunted hole\", or grass:\n</p>\n<ul>\n	<li>\nIf the cell contains a gravestone, you cannot walk over it, because gravestones are too high to climb.\n</li>\n	<li>\nIf the cell contains a \"haunted hole\" and you walk over it, you will \nappear somewhere in the graveyard at a possibly different moment in \ntime. The time difference depends on the particular \"haunted hole\" you \nfell into, and can be positive, negative or zero.\n</li>\n	<li>\nOtherwise, the cell has only grass, and you can walk freely over it.\n</li>\n</ul>\n<p>\nHe is terrified, so he wants to cross the graveyard as quickly as \npossible. And that is the reason why he has phoned you, a renowned \nprogrammer. He wants you to write a program that, given the description \nof the graveyard, computes the minimum time needed to go from the \nentrance to the exit. Scared John accepts using \"haunted holes\" if they \npermit him to cross the graveyard quicker, but he is frightened to death\n of the possibility of getting lost and being able to travel back in \ntime indefinitely using the holes, so your program must report these \nsituations.\n</p>\n<div style=\"text-align: center;\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Haunted_Graveyard_1.jpg\" alt=\"Figure: sample graveyard\" height=\"318\" width=\"400\" /></div><p> </p>\n<center>Figure: Sample graveyard</center><p>\nThe above figure illustrates a possible graveyard (the second test case \nfrom the sample input). In this case there are two gravestones in cells \n(2, 1) and (3, 1), and a \"haunted hole\" from cell (3, 0) to cell (2, 2) \nwith a difference in time of 0 seconds. The minimum time to cross the \ngraveyard is 4 seconds, corresponding to the path:\n</p>\n<div style=\"text-align: center;\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Haunted_Graveyard_2.jpg\" height=\"38\" width=\"550\" /></div><p>\nIf you do not use the \"haunted hole\", you need at least 5 seconds.\n</p>','<p>\nThe input consists of several test cases. Each test case begins with a line containing two integers <em>W</em> and <em>H</em>(1 ≤ <em>W</em>, <em>H</em> ≤ 30). These integers represent the width <em>W</em> and height <em>H</em> of the graveyard. The next line contains an integer <em>G</em>(<em>G</em> ≥ 0), the number of gravestones in the graveyard, and is followed by <em>G</em> lines containing the positions of the gravestones. Each position is given by two integers <em>X</em> and <em>Y</em>(0 ≤ <em>X</em> &lt; <em>W</em> and 0 ≤ <em>Y</em> &lt; <em>H</em>).\n</p>\n<p>\nThe next line contains an integer <em>E</em>(<em>E</em> ≥ 0), the number of \"haunted holes\", and is followed by <em>E</em> lines. Each of these contains five integers <em>X1</em>, <em>Y1</em>, <em>X2</em>, <em>Y2</em>, <em>T</em>. <em>(X1, Y1)</em> is the position of the \"haunted hole\" (0 ≤ <em>X1</em> &lt; <em>W</em> and 0 ≤ <em>Y1</em> &lt; <em>H</em>). <em>(X2, Y2)</em> is the destination of the \"haunted hole\" (0 ≤ <em>X2</em> &lt; <em>W</em> and 0 ≤ <em>Y2</em> &lt; <em>H</em>). Note that the origin and the destination of a \"haunted hole\" can be identical. <em>T</em>(−10000 ≤ <em>T</em>\n ≤ 10000) is the difference in seconds between the moment somebody \nenters the \"haunted hole\" and the moment he appears in the destination \nposition; a positive number indicates that he reaches the destination \nafter entering the hole. You can safely assume that there are no two \n\"haunted holes\" with the same origin, and the destination cell of a \n\"haunted hole\" does not contain a gravestone. Furthermore, there are \nneither gravestones nor \"haunted holes\" at positions (0,0) and (<em>W</em>-1,<em>H</em>-1).\n</p>\n<p>\nThe input will finish with a line containing <strong>0 0</strong>, which should not be processed.\n</p>','<p>\nFor each test case, if it is possible for Scared John to travel back in time indefinitely, output <strong>Never</strong>.\n Otherwise, print the minimum time in seconds that it takes him to cross\n the graveyard from the entrance to the exit if it is reachable, and <strong>Impossible</strong> if not.\n</p>','3 3\n2\n2 1\n1 2\n0\n4 3\n2\n2 1\n3 1\n1\n3 0 2 2 0\n4 2\n0\n1\n2 0 1 0 -3\n0 0','Impossible\n4\nNever','',52,0,1,64,2,1,11,10),(1198,'Slalom','<div style=\"text-align: center;\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Slalom_1.jpg\" height=\"440\" width=\"320\" /></div><p>\nIn spite of the scarcity of snowfall in Madrid, interest in winter \nsports is growing in the city, especially with regard to skiing. Many \npeople spend several weekends or even full weeks improving their skills \nin the mountains.\n</p>\n<p>\nIn this problem we deal with only one of the multiple alpine skiing \ndisciplines: slalom. A course is constructed by laying out a series of \ngates, which are formed by two poles. The skier must pass between the \ntwo poles forming each gate. The winner is the skier who takes the least\n time to complete the course while not missing any of the gates.\n</p>\n<p>\nYou have recently started to learn to ski, but you have already set \nyourself the goal of taking part in the Winter Olympic Games of 2018, \nfor which Madrid will presumably present a candidature. As part of the \ntheoretical training, you need to write a program that calculates, given\n a starting point and a series of gates, the minimum-length path \nstarting from the point given and passing through each gate until you \nreach the last one, which is the finish line. You may assume that the \ngates are horizontal and are ordered from highest to lowest, so that you\n need to pass through them in order. You consider yourself an \naccomplished skier, so you can make any series of turns, no matter how \ndifficult, and your only concern is minimizing the total length of the \npath.\n</p>\n<h4>Input</h4>\n<p>\nThe first line of each case gives the number of gates <em>n</em>(1 ≤ <em>n</em> ≤ 1000). The next line contains two floating point numbers, the Cartesian coordinates <em>x</em> and <em>y</em> of the starting position, in that order. Next come <em>n</em> lines with three floating point numbers each, <em>y</em>, <em>x<sub>1</sub></em>, <em>x<sub>2</sub></em>, meaning that the next gate is a horizontal line from (<em>x<sub>1</sub></em> , <em>y</em>) to (<em>x<sub>2</sub></em> , <em>y</em>). You can safely assume that <em>x<sub>1</sub></em> &lt; <em>x<sub>2</sub></em> . The values of <em>y</em>\n are strictly decreasing and are always smaller than that of the \nstarting position. The last gate represents the finish line. All \ncoordinates are between −500000 and 500000, inclusive. A value of 0 for <em>n</em> means the end of the input. A blank line follows each case.\n</p>','<p>\nThe first line of each case gives the number of gates <em>n</em>(1 ≤ <em>n</em> ≤ 1000). The next line contains two floating point numbers, the Cartesian coordinates <em>x</em> and <em>y</em> of the starting position, in that order. Next come <em>n</em> lines with three floating point numbers each, <em>y</em>, <em>x<sub>1</sub></em>, <em>x<sub>2</sub></em>, meaning that the next gate is a horizontal line from (<em>x<sub>1</sub></em> , <em>y</em>) to (<em>x<sub>2</sub></em> , <em>y</em>). You can safely assume that <em>x<sub>1</sub></em> &lt; <em>x<sub>2</sub></em> . The values of <em>y</em>\n are strictly decreasing and are always smaller than that of the \nstarting position. The last gate represents the finish line. All \ncoordinates are between −500000 and 500000, inclusive. A value of 0 for <em>n</em> means the end of the input. A blank line follows each case.\n</p>','<p>\nFor each test case, output a line with the minimum distance needed to \nreach the finish line. Your answer should be accurate to within an \nabsolute or relative error of 10<sup>−7</sup>.\n</p>','2\n0 2\n1 1 2\n0 0.5 3\n\n3\n0 4\n3 1 2\n2 -1 0\n1 1 2\n\n0','2.41421356237\n4.24264068712','<p> </p>',52,1,1,64,5,1,3,10),(1199,'Routing','<p>\nYou work as an engineer for the Inane Collaboration for Performance \nComputing, where you are in charge of designing an intercommunication \nnetwork for their computers. The network is arranged as a rectangular \narray of 2<em>n</em> - 1 rows, each having 2<sup><em>n</em>-1</sup> switches. A switch is a device with two input wires, <em>X</em> and <em>Y</em>, and two output wires, <em>X\'</em> and <em>Y\'</em>. If the switch is off, data from input <em>X</em> will be relayed to output <em>X\'</em> , and data from <em>Y</em> to <em>Y\'</em>. If it is on, <em>X</em> will be connected to <em>Y\'</em> and <em>Y</em> to <em>X\'</em> . Additionally, there are 2<sup><em>n</em></sup>\n computers in the topmost and bottommost rows, and messages need to be \nsent between pairs of them. Notice that data from two different sources \ncannot share a wire but, of course, both pieces of data can be routed \nthrough the same switch on different inputs.\n</p>\n<p>\nYou have come to the conclusion that the network that best suits your \npurposes has the Benes topology. A 1-Benes network is just a switch. For\n n &gt; 1, a <em>n</em>-Benes network can be constructed recursively as follows:\n</p>\n<ul>\n	<li>\nIn the first (top) row there are 2<sup><em>n</em>-1</sup> switches such that switch <em>j</em> (0 ≤ j &lt; 2<sup><em>n</em>-1</sup>) has data inputs from\ncomputers 2<em>j</em> and 2<em>j</em> + 1 (we label the computers in the topmost and bottommost rows with integers between 0 and 2<sup><em>n</em></sup> - 1, inclusive, from left to right).\n</li>\n	<li>\nThen a <em>perfect shuffle</em> permutation is applied to the output wires between the first and the second rows of switches, meaning that output number <em>j</em> in a row is connected to input number <em>j\'</em> in the next row, where <em>j\'</em> is obtained by rotating the <em>n</em>-bit pattern representing <em>j</em> in binary one bit to the right (again, inputs and outputs are numbered from left to right).\n</li>\n	<li>\nIf <em>n</em> &gt; 2, the next rows of switches, up to (and including) the last-but-one, form two (<em>n</em> - 1)-Benes subnetworks, one on the left side and the other on the right side.\n</li>\n	<li>\nFinally, the <em>inverse shuffle</em> permutation is applied to the outputs and a last row of switches is added.\n</li>\n</ul>\n<div style=\"text-align: center;\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Routing_1.jpg\" height=\"458\" width=\"250\" />           \n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Routing_2.jpg\" height=\"458\" width=\"250\" /></div><p>\n\\</p>\n<p> </p>\n<div style=\"text-align: center;\">Figure (a)                      Figure (b)</div><p>\nFor example, Figure (a) shows the Benes network for <em>n</em> = 3 \n(squares represent switches; computers in the top and bottom rows are \nnot drawn, but assigned with integers from 0 to 7). Figure (b) shows a \npossible state of the switches; squares where two of the lines cross are\n switches that have been turned on. You may verify that this state \nallows us to simultaneously establish communication paths from computers\n 0, 1, 2, 3, 4, 5, 6, 7 at the bottom to 3, 7, 4, 0, 2, 6, 1, 5 at the \ntop, respectively.\n</p>\n<p>\nYou are given a set of pairs <em>(a, b)</em> of computers to connect simultaneously (where <em>a</em> is a computer in the bottom row and <em>b</em>\n a computer in the top row) by means of wire-disjoint paths, and you are\n to find how to select the state of all switches so that this can be \naccomplished.\n</p>','<p>\nThe first line of each test case is an integer <em>n</em>(1 ≤ <em>n</em> ≤ 13), meaning that you have 2<sup><em>n</em></sup> pairs of computers to connect, as described above. A line with <em>n</em> = 0 marks the end of the input and should not be processed.\n</p>\n<p>\nEach line with <em>n</em> &gt; 0 will be followed by another line containing 2<sup><em>n</em></sup> integers. The <em>i</em>-th integer(0 ≤ <em>i</em> &lt; 2<sup><em>n</em></sup>) will be the computer in the topmost row that the <em>i</em>-th computer in the bottommost row needs to communicate with.\n</p>','<p>\nThe output for each case should have 2<em>n</em>-1 lines, each containing a binary string of length 2<sup><em>n</em>-1</sup> indicating, for each switch, whether it must be turned on (1) or off (0).\n</p>\n<p>\nThe input given will always have at least one solution. In case of \nseveral solutions, return the lexicographically smallest one. That is, \nthe string in the top row must be lexicographically smallest; in case of\n a tie, the string in the second row must be lexicographically smallest,\n and so on.\n</p>\n<p>\nOutputs for different test cases should be separated by a blank line.\n</p>','2\n3 2 1 0\n3\n3 7 4 0 2 6 1 5\n0','00\n11\n11\n\n0011\n0000\n0110\n1111\n1101','',52,0,1,64,1,0,0,10),(1200,'Happy Telephones','<p>\nIn the land of Eden, all phone conversations are happy ones. People \ncomplaining on the phone are immediately put in jail. To enforce this \nlaw, the police taps all phone conversations.\n</p>\n<div style=\"text-align: center;\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=Happy_Telephones_1.jpg\" height=\"366\" width=\"300\" /></div><p>\nThe police wants to hire the approriate number of operators to listen to\n all conversations in a given period of time. Unfortunately, each of \ntheir operators\ncan listen to one conversation only before needing a really long break \nto rest from the effort.\n</p>\n<p>\nAs a contractor of the police department, you have been asked to provide\n a program capable of determining the required number of operators. If \nthe program does not work correctly, you will be put in jail as well, \nalong with all the unhappy complainers. Do you really want to end up \nthere?\n</p>','<p>Each test case starts with two integers denoting the number of phone calls <em>N</em> (1 ≤ <em>N</em> &lt; 10000) and the number of intervals <em>M</em> (1 ≤ <em>M</em> &lt; 100). This is followed by <em>N</em> lines describing the telephone calls, each one consisting of four integers <em>Source</em>, <em>Destination</em>, <em>Start</em> and <em>Duration</em>. <em>Source</em> and <em>Destination</em> identify the pair of telephone numbers establishing the connection (0 ≤ <em>Source</em>, <em>Destination</em> ≤ 10000000). <em>Start</em> and <em>Duration</em> are the start time and duration of the call in seconds (1 ≤ <em>Duration</em> ≤ 10000 and <em>Start</em> ≥ 0). You can safely assume that the sum of <em>Start</em> and <em>Duration</em> fits into a 32-bit signed integer.\n</p>\n<p>\nAfterwards follow <em>M</em> lines containing the time intervals the police are interested in, each on described by two integers <em>Start</em> and <em>Duration</em>,\n in the same format and with the same meaning and constraints as those \nin the telephone calls. The last test case is represented by <em>N</em> = <em>M</em> = 0 and must not be processed.\n</p>','<p>\nFor each of the <em>M</em> intervals of each test case, print the number of calls that are active during at least one second of the interval.\n</p>','3 2\n3 4 2 5\n1 2 0 10\n6 5 5 8\n0 6\n8 2\n1 2\n8 9 0 10\n9 1\n10 1\n0 0','3\n2\n1\n0','',52,0,1,64,1,54,120,10),(1201,'Stammering Aliens','<p>\nDr. Ellie Arroway has established contact with an extraterrestrial \ncivilization. However, all efforts to decode their messages have failed \nso far because, as luck would have it, they have stumbled upon a race of\n stuttering aliens! Her team has found out that, in every long enough \nmessage, the most important words appear repeated a certain number of \ntimes as a sequence of consecutive characters, even in the middle of \nother words. Furthermore, sometimes they use contractions in an obscure \nmanner. For example, if they need to say <em>bab</em> twice, they might just send the message <em>babab</em>, which has been abbreviated because the second <em>b</em> of the first word can be reused as the first <em>b</em> of the second one.\n</p>\n<p>\nThus, the message contains possibly overlapping repetitions of the same \nwords over and over again. As a result, Ellie turns to you, S.R. Hadden,\n for help in identifying the gist of the message.\n</p>\n<p>\nGiven an integer <em>m</em>, and a string <em>s</em>, representing the message, your task is to find the longest substring of <em>s</em> that appears at least <em>m</em> times. For example, in the message <em>baaaababababbababbab</em>, the length-5 word <em>babab</em>\n is contained 3 times, namely at positions 5, 7 and 12 (where indices \nstart at zero). No substring appearing 3 or more times is longer (see \nthe first example from the sample input). On the other hand, no \nsubstring appears 11 times or more (see example 2).\n</p>\n<p>\nIn case there are several solutions, the substring with the rightmost occurrence is preferred (see example 3).\n</p>','<p>\nThe input contains several test cases. Each test case consists of a line with an integer <em>m</em> (<em>m</em> ≥ 1), the minimum number of repetitions, followed by a line containing a string <em>s</em> of length between <em>m</em> and 40 000, inclusive. All characters in <em>s</em> are lowercase characters from <em>\"a\"</em> to <em>\"z\"</em>. The last test case is denoted by <em>m</em> = 0 and must not be processed.\n</p>','<p>\nPrint one line of output for each test case. If there is no solution, output <strong><em>none</em></strong>;\n otherwise, print two integers in a line, separated by a space. The \nfirst integer denotes the maximum length of a substring appearing at \nleast <em>m</em> times; the second integer gives the rightmost starting position of this substring.\n</p>','3\nbaaaababababbababbab\n11\nbaaaababababbababbab\n3\ncccccc\n0','5 12\nnone\n4 2','',52,0,1,64,10,2,6,10),(9006,'Sum of Different Primes','<p>The fastfood chain McBurger owns several restaurants along a highway. Recently, \nthey have decided to build several depots along the highway, each one located \nat a restaurant and supplying several of the restaurants with the needed ingredients. \nNaturally, these depots should be placed so that the average distance between \na restaurant and its assigned depot is minimized. You are to write a program that \ncomputes the optimal positions and assignments of the depots. </p>\n<p>To make this more precise, the management of McBurger has issued the following \n  specification: You will be given the positions of n restaurants along the highway \n  as n integers d1 &lt; d2 &lt; ... &lt; dn (these are the distances measured \n  from the company\'s headquarter, which happens to be at the same highway). Furthermore, \n  a number k (k &lt;= n) will be given, the number of depots to be built. </p>\n<p>The k depots will be built at the locations of k different restaurants. Each \n  restaurant will be assigned to the closest depot, from which it will then receive \n  its supplies. To minimize shipping costs, the total distance sum, defined as</p>\n<p align=\"center\">\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F1196%2F1196.gif\" height=\"55\" width=\"379\" /></p>\n<p> </p>\n<p>must be as small as possible.<br />\n  <br />\n  Write a program that computes the positions of the k depots, such that the total \n  distance sum is minimized. </p>','<p>The input file contains several descriptions of fastfood chains. Each description \n  starts with a line containing the two integers n and k. n and k will satisfy \n  1 &lt;= n &lt;= 200, 1 &lt;= k &lt;= 30, k &lt;= n. Following this will n lines \n  containing one integer each, giving the positions di of the restaurants, ordered \n  increasingly.<br /><br />\n  The input file will end with a case starting with n = k = 0. This case should \n  not be processed.</p>\n  The input file will end with a case starting with n = k = 0. This case should \n  not be processed.','<p>For each chain, first output the number of the chain. Then output a \n  line containing the total distance sum. \n</p>\n<p> Output a blank line after each test case. </p>','6 3\n5\n6\n12\n19\n20\n27\n0 0','Chain 1\nTotal distance sum = 8','',-1,0,0,64,2,6,11,10),(9007,'Radar Installation','<p>\n            Assume the coasting is an infinite straight line. Land is in one side of coasting, \nsea in the other. Each small island is a point locating in the sea side. And any \nradar installation, locating on the coasting, can only cover d distance, so an \nisland in the sea can be covered by a radius installation, if the distance between \nthem is at most d.\nWe use Cartesian coordinate system, defining the coasting is the x-axis. The \n  sea side is above x-axis, and the land side below. Given the position of each \n  island in the sea, and given the distance of the coverage of the radar installation, \n  your task is to write a program to find the minimal number of radar installations \n  to cover all the islands. Note that the position of an island is represented \n  by its x-y coordinates.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/9007_78818e5a3d3dc6c7574f87c797a033f9.jpg\" src=\"http://sharecode.ir/assets/problem_images/9007_78818e5a3d3dc6c7574f87c797a033f9.jpg\" /></p>','<p>The input consists of several test cases. The first line of each case contains \n  two integers n (1&lt;= n &lt;=1000) and d, where n is the number of islands in the sea \n  and d is the distance of coverage of the radar installation. This is followed \n  by n lines each containing two integers representing the coordinate of the position \n  of each island. Then a blank line follows to separate the cases.<br /><br />\n  The input is terminated by a line containing pair of zeros.</p>','<p>For each test case output one line consisting of the test case number followed \n  by the minimal number of radar installations needed. \"-1\" installation \n  means no solution for that case. </p>','3 2\n1 2\n-3 1\n2 1\n\n1 2\n0 2\n\n0 0\n','Case 1: 2\nCase 2: 1','',-1,0,0,65,2,4,32,10),(9008,'Chopsticks','<p>In China, people use a pair of chopsticks to get food on the table, but Mr. L \nis a bit different. He uses a set of three chopsticks -- one pair, plus an EXTRA \nlong chopstick to get some big food by piercing it through the food. As you may \nguess, the length of the two shorter chopsticks should be as close as possible, \nbut the length of the extra one is not important, as long as it\'s the longest. \nTo make things clearer, for the set of chopsticks with lengths A,B,C(A&lt;=B&lt;=C), \n(A-B)^2 is called the \'badness\' of the set. \n</p>\n<p>It\'s December 2nd, Mr.L\'s birthday! He invited K people to join his birthday \n  party, and would like to introduce his way of using chopsticks. So, he should \n  prepare K+8 sets of chopsticks(for himself, his wife, his little son, little \n  daughter, his mother, father, mother-in-law, father-in-law, and K other guests). \n  But Mr.L suddenly discovered that his chopsticks are of quite different lengths! \n  He should find a way of composing the K+8 sets, so that the total badness of \n  all the sets is minimized. </p>','<p>The first line in the input contains a single integer T, indicating the number \n  of test cases(1&lt;=T&lt;=20). Each test case begins with two integers K, N(0&lt;=K&lt;=1000, \n  3K+24&lt;=N&lt;=5000), the number of guests and the number of chopsticks. There \n  are N positive integers Li on the next line in non-decreasing order indicating \n  the lengths of the chopsticks.(1&lt;=Li&lt;=32000). </p>','<p>For each test case in the input, print a line containing the minimal total \n  badness of all the sets.</p>\n<p>For the sample input, a possible collection of the 9 sets is:<br />\n  8,10,16; 19,22,27; 61,63,75; 71,72,88; 81,81,84; 96,98,103; 128,129,148; 134,134,139; \n  157,157,160</p>\n<p> </p>','1\n1 40\n1 8 10 16 19 22 27 33 36 40 47 52 56 61 63 71 72 75 81 81\n84 88 96 98 103 110 113 118 124 128 129 134 134 139 148 157 157 160 162 164','23','<p> </p>',-1,0,0,32,10,1,2,10),(1210,'Series / Parallel Resistor Circuits','<div align=\"center\"><div align=\"left\">A series / parallel resistor circuit is shown below.<br /></div>\n<img alt=\"http://sharecode.ir/assets/problem_images/1210_df598000e77c677327667b574860aab8.jpg\" src=\"assets/problem_images/1210_df598000e77c677327667b574860aab8.jpg\" /><br /><div align=\"left\">The resistance value is given next to each resistor. Connection points (wires connecting two or more resistors together, are denoted by an uppercase letter. A and Z are reserved for the names of the connection points which are the endpoints of the circuit. Our goal is to calculate the equivalent resistance of the<br />circuit (i.e., the equivalent resistance between A and Z).<br />Within the circuit, a resistor can be specified by a triple consisting of the connection points at either endpoint, and the resistance. Resistor 9 could be specified as either (C, D, 9) or (D, C, 9). A circuit specification is the set of all resistor specifications.<br />A pair of resistors is in series if one of either of their endpoints have a common connection point that is not use by any other resistor (e.g., resistor 6 and 9, are both connected to C, which is not connected to anything else). Two series resistors can be replaced by an equivalent single resistor whose resistance is the sum of the replaced resistors (15, in the previous example). A pair of resistors is in parallel if both their endpoints have common connection points (e.g., resistors 3 and 10 above, both are connected to R and D). Two parallel resistors can be replaced by an equivalent single resistor whose resistance is the inverse of the sum of the inverses of the two resistors ( (1/3 + 1/10)-1 = 2.307692, in the previous example).<br /><div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1210_d984d3569d0b7418c01cfc0be14c22fb.jpg\" src=\"assets/problem_images/1210_d984d3569d0b7418c01cfc0be14c22fb.jpg\" /><br /><div align=\"left\">The equivalent resistance of a well-formed series-parallel resistor 1circuit can be determined by successively replacing a series or parallel resistor pair by the single equivalent resistor, until only one is left. If this technique fails, the circuit is not well-formed.<br /><br /></div></div></div></div>','<p>There will be multiple circuit specifications. The first input line for each circuit specification is an integer N (N &lt;= 1000), being the number of resistors in the circuit. This is followed by N lines, each being a resistor specification in the form: <br />X Y r, where X and Y are uppercase characters, and r is a positive integer resistance (r &lt; 100). The equivalent resistance is guaranteed never to be greater than 100. A line with a single 0 terminates the input.</p>\n<p> </p>','<p>For each circuit, if the circuit is well-formed and reduces to a single equivalent resistance between A and Z, print the equivalent resistance of the circuit from A to Z, rounded to (and displayed to) 3 decimal places. If the circuit is not well formed, or if there is no equivalent resistance between A and Z, simply print the number -1.000. There should be no blank lines between outputs.</p>','8\nN R 2\nD R 3\nR N 2\nR D 10\nZ R 7\nC D 9\nN C 6\nA N 4\n2\nA Z 3\nZ A 10\n2\nP A 6\nP Z 9\n5\nA B 1\nB Z 4\nA C 8\nC Z 19\nB C 12\n0\n','11.945\n2.308\n15.000\n-1.000\n','',53,0,0,64,1,0,0,12),(1301,'Bingo!','<p>Albert, Charles and Mary invented a new version of the classical game Bingo. In traditional&nbsp;Bingo the game is presided over by a non-player known as the caller. At the beginning of the&nbsp;game each player is given a card containing a unique combination of numbers from 0 to N&nbsp;arranged in columns and rows. The caller has a bag containing N + 1 balls, numbered from 0&nbsp;to N. On each turn, the caller randomly selects a ball from the bag, announces the number of&nbsp;the drawn ball to the players, and sets the ball aside so that it cannot be selected again. Each&nbsp;player searches his card for the called number and marks it if he finds it. The first player who&nbsp;marks a complete pre-announced pattern on the card (for example, a full horizontal line) wins&nbsp;a prize.</p>\n<p>In the Albert-Charles-Mary version, on each turn, the caller draws a first ball, returns it to&nbsp;the bag, draws a second ball, returns it to the bag, and then calls out the absolute difference&nbsp;between the two ball numbers. To generate even more excitement, before the game started a&nbsp;possibly empty subset of balls is removed from the bag, in such a way that at least two balls&nbsp;remain there. They would like to know if every number from 0 to N may still be called out&nbsp;with the new drawing method considering the balls that were left in the bag.</p>','<p>Each test case is given using exactly two lines. The first line contains two integers N and B.&nbsp;The meaning of N was described above (1 ≤ N ≤ 90), while B represents the number of balls&nbsp;which remained in the bag (2 ≤ B ≤ N + 1). The second line contains B distinct integers bi,&nbsp;indicating the balls which remained in the bag (0 ≤ b<sub>i</sub> ≤ N).&nbsp;The last test case is followed by a line containing two zeros.</p>','<p>For each test case output a single line containing a single uppercase ‘Y’ if is possible to call out&nbsp;every number from 0 to N, inclusive, or a single uppercase ‘N’ otherwise.</p>','6 7\n2 1 3 4 0 6 5\n5 4\n5 3 0 1\n5 3\n1 5 0\n0 0','Y\nY\nN','',54,0,1,64,1,41,68,12),(1302,'Cocircular Points','<p>You probably know what a set of collinear points is: a set of points such that there exists a&nbsp;straight line that passes through all of them. A set of cocircular points is defined in the same&nbsp;fashion, but instead of a straight line, we ask that there is a circle such that every point of the&nbsp;set lies over its perimeter.</p>\n<p>The International Collinear Points Centre (ICPC) has assigned you the following task: given a&nbsp;set of points, calculate the size of the larger subset of cocircular points.</p>','<p>Each test case is given using several lines. The first line contains an integer N representing the&nbsp;number of points in the set (1 ≤ N ≤ 100). Each of the next N lines contains two integers X&nbsp;and Y representing the coordinates of a point of the set (−10<sup>4</sup> ≤ X, Y ≤ 10<sup>4</sup>). Within each&nbsp;test case, no two points have the same location.&nbsp;The last test case is followed by a line containing one zero.</p>','<p>For each test case output a single line with a single integer representing the number of points&nbsp;in one of the largest subsets of the input that are cocircular.</p>','7\n-10 0\n0 -10\n10 0\n0 10\n-20 10\n-10 20\n-2 4\n4\n-10000 10000\n10000 10000\n10000 -10000\n-10000 -9999\n3\n-1 0\n0 0\n1 0\n0','5\n3\n2\n','',54,0,1,64,1,2,5,12),(1303,'Digits Count','<p>Diana is going to write a list of all positive integers between A and B, inclusive, in base 10 and&nbsp;without any leading zeros. She wants to know how many times each digit is going to be used.</p>','<p>Each test case is given in a single line that contains two integers A and B (1 ≤ A ≤ B ≤ 10<sup>8</sup>).</p>\n<p>The last test case is followed by a line containing two zeros.</p>','<p>For each test case output a single line with 10 integers representing the number of times each&nbsp;digit is used when writing all integers between A and B, inclusive, in base 10 and without&nbsp;leading zeros. Write the counter for each digit in increasing order from 0 to 9.</p>','1 9\n12 321\n5987 6123\n12345678 12345679\n0 0','0 1 1 1 1 1 1 1 1 1\n61 169 163 83 61 61 61 61 61 61\n134 58 28 24 23 36 147 24 27 47\n0 2 2 2 2 2 2 2 1 1','',54,0,1,64,1,10,39,12),(1304,'Electric Needs','<p>You are going to construct a new factory in your city. Since you have major electric needs,&nbsp;having the factory placed close to a power plant is important. You want to build a prioritized&nbsp;list of possible locations.</p>\n<p>The area in which the factory needs to be located can be represented as a rectangular grid of&nbsp;N rows and M columns of cells. Some of those cells contain a power plant. The new factory&nbsp;occupies exactly one cell, and can be placed in any empty cell (i.e., any cell that does not&nbsp;contain a power plant).</p>\n<p>Numbering rows from 1 to N and columns from 1 to M, the location of a cell can be described&nbsp;by two integers. Cell (i, j) is the cell in row i and column j. The distance between cell (i<sub>0</sub>, j<sub>0</sub>)&nbsp;and cell (i<sub>1</sub>, j<sub>1</sub>) is max(|i<sub>0</sub> − i<sub>1</sub>|, |j<sub>0</sub> − j<sub>1</sub>|) where |x| represents the absolute value of x. The&nbsp;electric priority of a location is its minimum distance to a power plant.&nbsp;With this in mind, you will number all possible locations with consecutive integers starting from&nbsp;1. You will do it in ascending order of electric priority. Among locations with the same electric&nbsp;priority, you will number them in ascending order of their row numbers. Among locations with&nbsp;the same electric priority and row number, you will list them in ascending order of column&nbsp;numbers.</p>\n<p>In the following picture you can see a 4 × 7 grid. Black cells are the cells in which there is a&nbsp;power plant. Dark gray cells have an electric priority of 1, light gray cells an electric priority of&nbsp;2 and white cells an electric priority of 3. The number inside each cell is the number assigned&nbsp;by you to the location.</p>\n<p align=\"center\">\n<img class=\"\" alt=\"\" src=\"http://sharecode.ir/assets/problem_images/1304_2f87998af48ac3ae5ca54124702c8b4c.jpg\" align=\"none\" /></p>\n<p style=\"text-align: left;\"></p>\n<p>You will receive several queries about the prioritized list built. In each query you will be given&nbsp;a number representing a position in the prioritized list and you have to calculate which location&nbsp;was assigned the given position.</p>\n<p> </p>','<p>Each test case is given using several lines. The first line contains three integers N, M and P,&nbsp;representing the number of rows and columns of the grid (1 ≤ N,M ≤ 10<sup>9</sup>) and the number&nbsp;of existing power plants (1 ≤ P ≤ 20). Each of the next P lines contains two integers R and&nbsp;C representing the row and column numbers of the location of a power plant (1 ≤ R ≤ N and&nbsp;1 ≤ C ≤ M). Within each test case, all power plant locations are different. The next line&nbsp;contains a single integer Q representing the number of queries (1 ≤ Q ≤ 50). Then follows a&nbsp;line with Q integers p<sub>1</sub>, ..., p<sub>Q</sub> representing positions in the prioritized list (1 ≤ p<sub>i</sub> ≤ N×M−P).</p>\n<p>The last test case is followed by a line containing three zeros.</p>','<p>For each test case output Q + 1 lines. Line i of the first Q lines must contain two integers&nbsp;representing the row and column numbers of the location that was assigned number pi. The&nbsp;last line for each test case must contain a single character ‘-’ (hyphen).</p>','4 7 2\n2 5\n4 4\n6\n1 6 11 16 21 26\n1000000000 1000000000 1\n1 1\n1\n999999999999999999\n0 0 0','1 4\n3 3\n4 5\n2 7\n4 7\n4 1\n-\n1000000000 1000000000\n-','',54,0,1,64,1,1,2,10),(1305,'Flowers Flourish from France','<p>Fiona has always loved poetry, and recently she discovered a fascinating poetical form. Tautograms&nbsp;are a special case of alliteration, which is the occurrence of the same letter at the&nbsp;beginning of adjacent words. In particular, a sentence is a tautogram if all of its words start&nbsp;with the same letter.</p>\n<p>For instance, the following sentences are tautograms:</p>\n<p>• Flowers Flourish from France</p>\n<p>• Sam Simmonds speaks softly</p>\n<p>• Peter pIckEd pePPers</p>\n<p>• truly tautograms triumph</p>\n<p>Fiona wants to dazzle her boyfriend with a romantic letter full of this kind of sentences. Please&nbsp;help Fiona to check if each sentence she wrote down is a tautogram or not.</p>','<p>Each test case is given in a single line that contains a sentence. A sentence consists of a sequence&nbsp;of at most 50 words separated by single spaces. A word is a sequence of at most 20 contiguous&nbsp;uppercase and lowercase letters from the English alphabet. A word contains at least one letter&nbsp;and a sentence contains at least one word.</p>\n<p>The last test case is followed by a line containing only a single character ‘*’ (asterisk).</p>','<p>For each test case output a single line containing an uppercase ‘Y’ if the sentence is a tautogram,&nbsp;or an uppercase ‘N’ otherwise.</p>','Flowers Flourish from France\nSam Simmonds speaks softly\nPeter pIckEd pePPers\ntruly tautograms triumph\nthis is NOT a tautogram\n*','Y\nY\nY\nY\nN','',54,0,1,64,1,58,103,12),(1306,'Growing Strings','<p>Gene and Gina have a particular kind of farm. Instead of growing animals and vegetables, as&nbsp;it is usually the case in regular farms, they grow strings. A string is a sequence of characters.&nbsp;Strings have the particularity that, as they grow, they add characters to the left and/or to the&nbsp;right of themselves, but they never lose characters, nor insert new characters in the middle.&nbsp;Gene and Gina have a collection of photos of some strings at different times during their growth.&nbsp;The problem is that the collection is not annotated, so they forgot to which string each photo&nbsp;belongs to. They want to put together a wall to illustrate strings growing procedures, but they&nbsp;need your help to find an appropriate sequence of photos.</p>\n<p>Each photo illustrates a string. The sequence of photos must be such that if si comes immediately&nbsp;before s<sub>i+1</sub> in the sequence, then s<sub>i+1</sub> is a string that may have grown from s<sub>i</sub> (i.e., s<sub>i&nbsp;</sub>appears as a consecutive substring of s<sub>i+1</sub>). Also, they do not want to use repeated pictures,&nbsp;so all strings in the sequence must be different.&nbsp;Given a set of strings representing all available photos, your job is to calculate the size of the&nbsp;largest sequence they can produce following the guidelines above.</p>','<p>Each test case is given using several lines. The first line contains an integer N representing the&nbsp;number of strings in the set (1 ≤ N ≤ 10<sup>4</sup>). Each of the following N lines contains a different&nbsp;non-empty string of at most 1000 lowercase letters of the English alphabet. Within each test&nbsp;case, the sum of the lengths of all strings is at most 10<sup>6</sup>.The last test case is followed by a line containing one zero.</p>','<p>For each test case output a single line with a single integer representing the size of the largest&nbsp;sequence of photos that can be produced.</p>','6\nplant\nant\ncant\ndecant\ndeca\nan\n2\nsupercalifragilisticexpialidocious\nrag\n0','4\n2\n','',54,0,1,128,10,2,52,10),(1307,'Hyperactive Girl','<p>Helen is a hyperactive girl. She wants to schedule her activities so that at any moment of the&nbsp;day there is at least one thing she can do. She does not care if her activities overlap in time,&nbsp;as long as every moment of her day has an activity scheduled.&nbsp;Helen divided the day in a particular way. The day starts at time 0 and finishes at time M.&nbsp;Each moment of the day is represented by a real number between 0 and M, inclusive. Helen&nbsp;made a list of all possible activities, with their start and finish times. Now she must decide&nbsp;which subset of activities to schedule.</p>\n<p>If an activity starts at time S and finishes at time F, then we say that it covers all moments&nbsp;between S and F, inclusive. Helen does not want to waste any activities, so she will only&nbsp;choose minimal subsets of activities that cover the day to be scheduled. A subset of activities&nbsp;is a minimal subset that covers the day if and only if:</p>\n<p>1. every moment of the day is covered by at least one activity of the subset; and</p>\n<p>2. removing any of the activities from the subset would leave at least one moment of the&nbsp;day uncovered.</p>\n<p>Note that some moments of the day may be covered by more than one activity.&nbsp;Given the list of possible activities for one day, you must help Helen by determining how many&nbsp;distinct minimal subsets cover the day.</p>','<p>Each test case is given using several lines. The first line contains two integers M and N,&nbsp;representing respectively the highest value for a moment in the day (1 ≤ M ≤ 10<sup>9</sup>) and the&nbsp;number of possible activities for the day (1 ≤ N ≤ 100). Each of the next N lines describes&nbsp;one possible activity and contains two integers S and F, representing respectively the start and&nbsp;finish times of the activity (0 ≤ S &lt; F ≤ M).</p>\n<p>The last test case is followed by a line containing two zeros.</p>','<p>For each test case output a single line with a single integer representing the number of minimal&nbsp;subsets that cover the day. To make your life easier, print the remainder of dividing the solution&nbsp;by 10<sup>8</sup>.</p>','8 7\n0 3\n2 5\n5 8\n1 3\n3 6\n4 6\n0 2\n1 1\n0 1\n2 1\n0 1\n0 0','4\n1\n0','',54,0,1,64,1,4,8,12),(1308,'Ingenious Metro','<p>The King of Logonia will inaugurate soon a new and revolutionary metro, based on an invention&nbsp;of the Royal Engineers, which allows teletransportation.</p>\n<p>The new metro consists of a very long tunnel with a station at each kilometer. There are also T&nbsp;teletransporters, which are located at some of the stations. In each station there is a keyboard&nbsp;with T keys, where each key corresponds to one teletransporter. The figure below illustrates a&nbsp;metro system with three teletransporters, located in stations marked A, B and C.</p>\n<div style=\"text-align: center;\">\n<img src=\"http://sharecode.ir/assets/problem_images/1308_a545e3ab0069592e873eebe7dcd20e33.jpg\" />&nbsp;<br /></div><div style=\"text-align: left;\"><p>The metro works as follows. The user goes in a station (the start station) and presses the key&nbsp;corresponding to the teletransporter he wants to use. The user is then teletransported to the&nbsp;station which is at the same distance from the teletransporter as the start station, but on the&nbsp;opposite side relative to the teletransporter. More precisely, if the location of the start station&nbsp;is i and the user presses the key corresponding to the teletransporter located in position j, he&nbsp;will be taken to the station located at position 2 × j − i. For example, if the user is in station&nbsp;6 and wants to go to station −2, he can use the teletransporter C (goes from 6 to 10) and then&nbsp;the teletransporter A (goes from 10 to −2).&nbsp;The King, however, knows that it is possible that there is no sequence of teletransporters that&nbsp;will take the user from a given station X to a given station Y . To avoid that the users keep&nbsp;trying to go where they cannot go, he wants to make a program available in the Internet to help&nbsp;users. The King wants you to write a program which, given the position of each teletransporter,&nbsp;answers a series of queries. For each query the start and the destination stations are given, and&nbsp;your program must determine if it is possible for the user to go from start to destination.&nbsp;</p>\n</div>','<p>Each test case is given using several lines. The first line contains two integers T and Q indicating&nbsp;respectively the number of teletransporters (1 ≤ T ≤ 10<sup>5</sup>) and the number of queries&nbsp;(1 ≤ Q ≤ 10). The second line contains T different integers t<sub>i</sub> indicating the position of the&nbsp;teletransporters (−10<sup>7</sup> ≤ t<sub>i</sub> ≤ 10<sup>7</sup>). Each of the Q following lines describes a query and contains&nbsp;two distinct integers S and D indicating the position of the start and destination stations&nbsp;(−10<sup>7</sup> ≤ S,D ≤ 10<sup>7</sup>).</p>\n<p>The last test case is followed by a line containing two zeros.</p>','<p>For each test case output a single line containing the answers to the Q queries, in the same&nbsp;order that the queries were given in the input. For each query you must output an uppercase&nbsp;‘Y’ if it is possible to reach the destination station from the start station using the metro, or&nbsp;an uppercase ‘N’ otherwise.</p>','1 1\n-2\n-6 2\n5 2\n10 20 30 40 50\n10 15\n20 40\n5 3\n0 5 -3 -8 4\n-1 499\n4 237\n-1 -591\n0 0','Y\nN Y\nY N Y','',54,0,1,64,1,2,2,12),(1309,'Jollo','<p>Jollo is a simple card game which the children from Logonia love to play. It is played between&nbsp;two players with a normal deck of 52 cards. In the game, cards are ordered according to their&nbsp;rank and suit, forming a sequence of 52 distinct values.&nbsp;The game is composed of three rounds, played in a best-of-three series (a player must win two&nbsp;rounds to win the game). At the beginning of the game the deck is shuffled and each player&nbsp;is given a hand of three cards. In each round the players show one card to each other and the&nbsp;player with the highest card wins the round. The cards shown in a round are discarded (i.e.,&nbsp;they cannot be shown again).</p>\n<p>The King’s son loves to play the game. But he is not very smart, losing frequently to his little&nbsp;sister. And when he loses, he cries so loud no one can stand it. The servant who deals the&nbsp;cards to the Prince and his sister is afraid he will be sent to prison if the Prince continues to&nbsp;lose. The servant is allowed to see every card he deals, and after dealing five cards (three to&nbsp;the Princess and two to the Prince) he wants to know which is the lowest card he should deal&nbsp;to the Prince so that there is no chance he will lose the game, no matter how badly he plays.&nbsp;</p>','<p>Each test case is given in a single line that contains five distinct integers A, B, C, X and&nbsp;Y , describing the cards dealt to the players. The first three cards are given to the Princess&nbsp;(1 ≤ A,B,C ≤ 52) and the last two cards are given to the Prince (1 ≤ X, Y ≤ 52).</p>\n<p>The last test case is followed by a line containing five zeros.</p>','<p>For each test case output a single line. If there exists a card that will make the Prince win the&nbsp;game no matter how badly he plays, you must print the lowest such a card. Otherwise, print&nbsp;-1.</p>','28 51 29 50 52\n50 26 19 10 27\n10 20 30 24 26\n46 48 49 47 50\n0 0 0 0 0','30\n-1\n21\n51','',54,0,1,64,1,23,61,12),(1310,'Kids’ Wishes','<p>Kevin is a kid. He has lunch at school together with many more kids. They use to go outdoors&nbsp;and have lunch sitting on the ground. They love to form a big circle in which each kid has&nbsp;exactly two neighbors, one on the left and one on the right. Sometimes the teacher has problems&nbsp;arranging the circle because some kids wish to sit down next to other kids. Each kid may wish&nbsp;to sit down next to at most two other kids, because each kid has just two neighbors in the&nbsp;circle. The teacher wants to know whether it is possible to arrange the circle in such a way&nbsp;that all kids’ wishes are satisfied. You clean up the place when the lunch ends. Since you want&nbsp;to finish your work as early as possible, help the teacher in answering that question.</p>','<p>Each test case is given using several lines. The first line contains two integers K and W&nbsp;representing respectively the number of kids (3 ≤ K ≤ 10<sup>9</sup>) and the number of wishes (0 ≤ W ≤ 10<sup>5</sup>). Kids are identified with numbers between 1 and K. Each of the next W lines&nbsp;describes a different wish using two distinct integers A and B (1 ≤ A,B ≤ K); these values represent that kid A wishes to sit down next to kid B. Each kid has at most two wishes.&nbsp;The last test case is followed by a line containing two zeros.</p>','<p>For each test case output a single line containing an uppercase ‘Y’ if it is possible to arrange a&nbsp;circle in such a way that all kids’ wishes are satisfied, or an uppercase ‘N’ otherwise.</p>','4 3\n2 3\n1 3\n2 1\n1000000000 0\n3 6\n3 2\n2 1\n1 2\n1 3\n2 3\n3 1\n0 0','N\nY\nY','',54,0,1,64,1,4,30,12),(1202,'Partitioning for fun and profit','<p>A partition of a positive integer number&nbsp;<em>m</em>&nbsp;into&nbsp;<em>n</em>&nbsp;elements (<em>n</em>&nbsp;=&nbsp;<em>m</em>) is a sequence of positive numbers&nbsp;<em>a<sub>1</sub></em>,...,<em>a<sub>n</sub></em>&nbsp;such that&nbsp;<em>a<sub>1</sub></em>+...+<em>a<sub>n</sub></em>&nbsp;=&nbsp;<em>m</em>&nbsp;and<em>a<sub>1</sub></em>&nbsp;=&nbsp;<em>a<sub>2</sub></em>&nbsp;=&nbsp;...&nbsp;=&nbsp;<em>a<sub>n</sub></em>. Your task is to find a partition of a number&nbsp;<em>m</em>&nbsp;which occupies the&nbsp;<em>k</em>-th position in the lexicographically ordered sequence of all partitions of&nbsp;<em>m</em>&nbsp;into&nbsp;<em>n</em>&nbsp;elements.</p>\n<p align=\"left\">The lexicographic ordering among the partitions of a number is defined as follows. For two partitions&nbsp;<em>a</em>&nbsp;and&nbsp;<em>b</em>&nbsp;of&nbsp;<em>m</em>&nbsp;into&nbsp;<em>n</em>&nbsp;elements such that<em>a</em>&nbsp;=&nbsp;[<em>a<sub>1</sub></em>,...,<em>a<sub>n</sub></em>] and&nbsp;<em>b</em>&nbsp;=&nbsp;[<em>b<sub>1</sub></em>,...,<em>b<sub>n</sub></em>] we have&nbsp;<em>a</em>&nbsp;&nbsp;&lt;&nbsp;&nbsp;<em>b</em>&nbsp;if and only if there exists an 1&nbsp;=&nbsp;<em>i</em>&nbsp;=&nbsp;<em>n</em>&nbsp;such that for all&nbsp;<em>j</em>&nbsp;&lt;&nbsp;<em>i</em>&nbsp;we have&nbsp;<em>a<sub>j</sub></em>&nbsp;=&nbsp;<em>b<sub>j</sub></em>&nbsp;and&nbsp;<em>a<sub>i</sub></em>&nbsp;&lt;&nbsp;<em>b<sub>i</sub></em>. The sequence of all partitions is ordered in increasing lexicographic order and at the first we have the following sequence 1, 1,&nbsp;...&nbsp;1,&nbsp;<em>m</em>-<em>n</em>+1. </p>\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1202_d1fbd91fc8c5428090079a35ea54a2b8.jpg\" style=\"-webkit-user-select: none; \" /></p>','<p>The first line of input contains a number&nbsp;<em>c</em>&nbsp;giving the number of cases that follow. Each of the subsequent&nbsp;<em>c</em>&nbsp;lines contains three numbers: 1&nbsp;=&nbsp;<em>m</em>&nbsp;=&nbsp;<em>220</em>, 1&nbsp;=&nbsp;<em>n</em>&nbsp;=&nbsp;<em>10</em>&nbsp;and 1&nbsp;=&nbsp;<em>k</em>&nbsp;which is not bigger than the number of partitions of&nbsp;<em>m</em>&nbsp;into&nbsp;<em>n</em>&nbsp;elements.</p>','<p>For each input data set print the&nbsp;<em>k</em>-th partition of&nbsp;<em>m</em>&nbsp;into&nbsp;<em>n</em>&nbsp;elements. Each element of a partition is to be printed in a separate line.</p>','2\n9 4 3 \n10 10 1','1\n1\n3\n4\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1','',55,0,0,64,2,0,0,10),(1312,'Blenjeel Sand Worms and Color Wriggles','<p>The Blenjeel sand worms slither across the sandy surface of the planet Blenjeel.&nbsp; As the planet’s only known inhabits, they protect their homeland by attacking and devouring from underneath anyone who steps foot on their planet. <br /><br />Of course, the sand worms need to be strong, flexible, and able to slither as quietly as possible.&nbsp; All teenage sand worms are conscripted to a six-month boot camp, where they endure intense training.&nbsp; The most demanding of the training exercise is the famous \"wriggle test\", which requires worm cadets to slither from one position to a parallel position several hundreds of feet away.&nbsp; Only the toughest, most determined of worms survive. <br /><br />The exercise is so famous that the Jedi Academy’s CS101 has its students solve a puzzle based on Blenjeel Boot Camp.&nbsp; And that puzzle goes something like this: <br /><br />Given an n × m board (3 ≤ n ≤ 6, 5 ≤ m ≤ 50) wriggle a Blenjeel sand worm (of length n) from the left column to the right column, ensuring the worm never simultaneously occupies two squares of the same color. </p>\n<p>Consider the following 3 × 5 board, where each number represents a different color, and the worm is represented by the chain of circles: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1312_f9928abc746e578f0ae908494373ab02.jpg\" src=\"http://sharecode.ir/assets/problem_images/1312_f9928abc746e578f0ae908494373ab02.jpg\" /></p>\n<p>One of two possible moves is to pull the bottom of the worm to the right so it’s positioned as follows: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1312_ace56777cb25744b98688d0aa7b8e117.jpg\" src=\"http://sharecode.ir/assets/problem_images/1312_ace56777cb25744b98688d0aa7b8e117.jpg\" /></p>\n<p>Now we can pull from the <strong>other </strong>end of the worm to carry it through three different positions:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1312_f5a47bf921da1d61f24cfd157d8511db.jpg\" src=\"http://sharecode.ir/assets/problem_images/1312_f5a47bf921da1d61f24cfd157d8511db.jpg\" /></p>\n<p>Through a series of additional moves, it’s possible to wriggle the worm into the target position where the body of the worm is completely in the rightmost column:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1312_fabb6f9af4bc9c92a0c4cbe6129c5d75.jpg\" src=\"http://sharecode.ir/assets/problem_images/1312_fabb6f9af4bc9c92a0c4cbe6129c5d75.jpg\" /></p>\n<p>It’s acceptable for the worm to reach the right column in either orientation. <br />&nbsp;<br />Your job is to write a program that reads in a series of boards as described above, and for each prints out the <strong>minimum </strong>number of wriggles needed to move the worm from the left column to the right (or -1 if there’s no solution). </p>','<p>The data will be n rows of m items.&nbsp; In each row will be digits representing a color (colors are represented by the digits 1 through 7 – not all boards will use all 7 colors).&nbsp; The colors in the leftmost column of each input board are guaranteed to be unique.&nbsp; Each board is separated from the next by a blank line.&nbsp; The end of input will be signaled by a standalone <code>\'end\'</code>.&nbsp; There will be a blank line between the last board and <code>\'end\'</code>. </p>','<p>For each board read, print the minimal number of wriggles needed to move the worm from the left column to the right (or -1 if there\'s no solution) followed by a newline.</p>','12324 \n31312 \n41431 \n \n234234 \n342112 \n421311 \n \n234233 \n342112 \n421331 \n \n41344411122134441231 \n22313433414323312312 \n12231221312124143323 \n \n41251355234115 \n13515533543252 \n34212412323543 \n52454355242421 \n\n364311121136362 \n151446122112155 \n434232633624623 \n561614315456464 \n234426516251346 \n\nend','16 \n17 \n-1 \n39 \n31 \n58','',59,0,1,64,2,0,0,10),(1203,'ASCII Labyrinth','<p>We are trying to construct a labyrinth on a board of size&nbsp;<em>m</em>&nbsp;×&nbsp;<em>n</em>. Initially, on each square of the board we find a piece of thin plywood of size 1&nbsp;×&nbsp;1 with one of the following three patterns painted on it.</p>\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1203_10542accf6171a31c24cc6ccc58d6669.jpg\" /></p>\n<p>While constructing the labyrinth we may turn the pieces arbitrarily but each piece must exactly cover a square of the board. We are not allowed to move a piece to another square of the grid.</p>\n<p>Given an initial board covered with the pieces, we would like to turn the pieces in such a way that the patterns on the pieces form at least one polygonal curve connecting the top left corner square of the board with the bottom right square of the board. The picture below presents an initial state of a board of size 4&nbsp;×&nbsp;6 and a labyrinth constructed from the board in which the above stated goal has been achieved.</p>\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1203_4cd7745d527b9bcdf1901c5b5b940742.jpg\" /></p>\n<p>Your task is to read a description of the initial board with the pieces placed on it and to decide whether one can turn the pieces in such a way that the patterns form a line connecting some edge of the top left square and some edge of the bottom right square of the board.&nbsp;</p>','<p>The first line of input contains a number&nbsp;<em>c</em>&nbsp;giving the number of cases that follow. The test data for each case start with two numbers&nbsp;<em>m</em>&nbsp;and&nbsp;<em>n</em>&nbsp;giving the number of rows and columns on the board. The remaining lines form an ASCII rendition of the initial board with the pieces placed on squares. The characters used in the rendition are&nbsp;<tt>+</tt>,&nbsp;<tt>-</tt>,&nbsp;<tt>|</tt>,&nbsp;<tt>*</tt>&nbsp;and space. See the sample input for the format. The size of the input board will be such that<em>m</em>&nbsp;×&nbsp;&nbsp;<em>n</em>&nbsp;≤&nbsp;64.</p>','<p>For each case when a labyrinth with the desired property can be constructed print the labyrinth in the format like the input format which illustrates a path with the smallest number of squares. (If there are many such paths then anyone will do.) The squares not participating in the path should be left blank. If the labyrinth cannot be formed then do not print the board. After printing the board (if any) print how many different paths exist in the solutions to the labyrinth problem in the format shown below.</p>','1\n4 6\n+---+---+---+---+---+---+\n|   |   |   |   |   |   |\n|***|***|** |** |** |***|\n|   |   | * | * | * |   |\n+---+---+---+---+---+---+\n|   |   |   |   |   |   |\n|   |** |** |***|** |** |\n|   | * | * |   | * | * |\n+---+---+---+---+---+---+\n|   |   |   |   |   |   |\n|***|** |***|***|***|** |\n|   | * |   |   |   | * |\n+---+---+---+---+---+---+\n|   |   |   |   |   |   |\n|** |   |***|   |** |** |\n| * |   |   |   | * | * |\n+---+---+---+---+---+---+','+---+---+---+---+---+---+\n|   |   |   |   |   |   |\n|***|***|** |   |   |   |\n|   |   | * |   |   |   |\n+---+---+---+---+---+---+\n|   |   | * |   |   |   |\n|   |   | **|***|** |   |\n|   |   |   |   | * |   |\n+---+---+---+---+---+---+\n|   |   |   |   | * |   |\n|   |   |   |   | * |   |\n|   |   |   |   | * |   |\n+---+---+---+---+---+---+\n|   |   |   |   | * |   |\n|   |   |   |   | **|** |\n|   |   |   |   |   | * |\n+---+---+---+---+---+---+\nNumber of solutions: 2','',55,0,0,64,2,0,0,10),(1204,'Ubiquitous Religions','<p>There are so many different religions in the world today that it is difficult to keep track of them all. You are interested in finding out how many different religions students in your university believe in.</p>\n<p>You know that there are n students in your university (0&nbsp;&lt;&nbsp;<em>n</em>&nbsp;=&nbsp;50000). It is infeasible for you to ask every student their religious beliefs. Furthermore, many students are not comfortable expressing their beliefs. One way to avoid these problems is to ask&nbsp;<em>m</em>&nbsp;(0&nbsp;=&nbsp;<em>m</em>&nbsp;=&nbsp;&nbsp;<em>n</em>(<em>n</em>-1)/2) pairs of students and ask them whether they believe in the same religion (e.g. they may know if they both attend the same church). From this data, you may not know what each person believes in, but you can get an idea of the upper bound of how many different religions can be possibly represented on campus. You may assume that each student subscribes to at most one religion.</p>\n<p align=\"center\">											\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1204_1e6b196147b616618a4b9051c2d8fbb7.jpg\" /></p>','<p>The input consists of a number of cases. Each case starts with a line specifying the integers&nbsp;<em>n</em>&nbsp;and&nbsp;<em>m</em>. The next&nbsp;<em>m</em>&nbsp;lines each consists of two integers i and j, specifying that students i and j believe in the same religion. The students are numbered 1 to&nbsp;<em>n</em>. The end of input is specified by a line in which&nbsp;<em>n</em>&nbsp;=&nbsp;<em>m</em>&nbsp;= 0.</p>','<p>For each test case, print on a single line the case number (starting with 1) followed by the maximum number of different religions that the students in the university believe in.</p>','10 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n10 4\n2 3\n4 5\n4 8\n5 8\n0 0','Case 1: 1\nCase 2: 7','',55,0,0,64,2,0,0,10),(1205,'Text Formalization','<p>One duty Jimmy has at the ACM is to formalize the language and grammar used in texts. Part of this job is expanding contractions and certain acronyms.</p>\n<p>A contraction in English is a word or phrase formed by omitting or combining some of the sounds of a longer phrase. For example, \"don\'t\" is a contraction for \"do not\" and \"o\'clock\" comes from \"of the clock.\"</p>\n<p>An acronym is a series of letters (or word) formed from the initial letters of a name or from combining parts of a series of words. For example, \"ACM\" for \"Association for Computing Machinery\" or \"radar\" for \"radio detecting and ranging.\"</p>\n<p>Your job is to take a list of contractions and acronyms, and expand all contractions and some acronyms in a text. </p>\n<p align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1205_8078620f856a9a7affef0cc5129ffdbc.jpg\" /></p>','<p>Input begins with two numbers,&nbsp;<em>C</em>&nbsp;&lt;&nbsp;50 and&nbsp;<em>A</em>&nbsp;&lt;&nbsp;50, indicating respectively the number of contractions and acronyms Jimmy must expand. The next&nbsp;<em>C</em>&nbsp;lines list a contraction and its formal expansion. Following will be a list of&nbsp;<em>A</em>&nbsp;acronyms and their expansions, each on individual lines. Both contractions and acronyms will be presented in the following format:</p>\n<pre> \"contraction or acronym\" -&gt; \"expansion\"\n</pre><p>Since contractions, acronyms and expansions may contain spaces, each will be enclosed in quotation marks and be no more than 80 characters in length. Following the lists of contractions and acronyms will be a series of texts to expand. Each text will consist of lines no longer than 80 characters. No contraction or acronym will be split over multiple lines. A text will be terminated with a line consisting only of the character \'#\'.</p>','<p>Output each text exactly as input, except for necessary expansions.</p>\n<p>All contractions must be fully expanded. Each contraction may appear as listed, entirely uppercase, or capitalized (first letter uppercase, remaining letters as listed). The expansion should follow the same rule; if a contraction is uppercased, the expansion should be uppercased as well. If more than one case applies, choose the earliest matching case in the list: \"as listed,\" \"uppercased,\" and \"capitalized.\"</p>\n<p>Since acronyms are useful for understanding and identifying names, only modify the first instance of an acronym in each text. An instance of an acronym must match the case exactly (\"acm\" is not an instance of \"ACM\"). The modification consists of replacing the acronym with the expansion, followed by a space, followed by the acronym in brackets. This allows the reader to connect the acronym with the fully expanded term.</p>\n<p>The terminating line of \'#\' should be printed after each text. If more than one expansion or acronym match can be valid, use the one which starts earlier in the text. If several begin at the same letter, use the one appearing earliest in the input lists. Use the sample below to illustrate the process.</p>','3 2\n\"doesn\'t\" -> \"does not\"\n\"isn\'t\" -> \"is not\"\n\"can\'t\" -> \"cannot\"\n\"ACM\" -> \"Association for Computing Machinery\"\n\"CS\" -> \"Computing Science\"\nThe ACM can\'t solve\nall the problems in CS. Though large and having\nmany resources at its disposal, the ACM doesn\'t use magic. Magic isn\'t\npart of science, and hence not part of CS. Thank you for your\nsuggestions.\nSigned,\n\nACM\n#\nThe ACM doesn\'t like magic.\nIt\'s not that the ACM won\'t use it, it\'s\njust that the ACM doesn\'t understand magic.\n#','The Association for Computing Machinery (ACM) cannot solve\nall the problems in Computing Science (CS). Though large and having\nmany resources at its disposal, the ACM does not use magic. Magic is not\npart of science, and hence not part of CS. Thank you for your\nsuggestions.\nSigned,\n\nACM\n#\nThe Association for Computing Machinery (ACM) does not like magic.\nIt\'s not that the ACM won\'t use it, it\'s\njust that the ACM does not understand magic.\n#','',55,0,0,64,2,0,0,10),(1206,'Center of symmetry','<p>Given is a set of&nbsp;<em>n</em>&nbsp;points with integer coordinates. Your task is to decide whether the set has a center of symmetry.</p>\n<p>A set of points&nbsp;<em>S</em>&nbsp;has the center of symmetry if there exists a point&nbsp;<em>s</em>&nbsp;(not necessarily in&nbsp;<em>S</em>) such that for every point&nbsp;<em>p</em>&nbsp;in&nbsp;<em>S</em>&nbsp;there exists a point&nbsp;<em>q</em>&nbsp;in&nbsp;<em>S</em>&nbsp;such that&nbsp;<em>p-s</em>&nbsp;=&nbsp;<em>s-q</em>.</p>\n<p align=\"center\">\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1206_9aa49a428907f7a31bbfe7e6a6dc6c63.jpg\" /></p>','<p>The first line of input contains a number&nbsp;<em>c</em>&nbsp;giving the number of cases that follow. The first line of data for a single case contains number 1&nbsp;≤&nbsp;<em>n</em>&nbsp;≤&nbsp;<em>10000</em>. The subsequent&nbsp;<em>n</em>&nbsp;lines contain two integer numbers each which are the&nbsp;<em>x</em>&nbsp;and&nbsp;<em>y</em>&nbsp;coordinates of a point. Every point is unique and we have that -10000000&nbsp;≤&nbsp;<em>x</em>,&nbsp;<em>y</em>&nbsp;≤&nbsp;10000000.</p>','<p>For each set of input data print&nbsp;<tt>yes</tt>&nbsp;if the set of points has a center of symmetry and&nbsp;<tt>no</tt>&nbsp;otherwise.</p>','1\n8\n1 10\n3 6\n6 8\n6 2\n3 -4\n1 0\n-2 -2\n-2 4','yes','',55,0,0,64,2,0,0,10),(1207,'Polynomial Remains','<p>Given the polynomial</p>\n<p><font><br /></font></p>\n<p>a(x) = a<sub style=\"font-family; text-align: -webkit-center; \">n</sub><span style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \">&nbsp;x</span><sup style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \">n</sup><span style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \">&nbsp;+ ... + a</span><sub style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \">1</sub><span style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \">&nbsp;x + a</span><sub style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \">0</sub><span style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \">,</span>&nbsp;<font face=\"Times New Roman\"><br /></font></p>\n<div><div><span style=\"font-family: \'Times New Roman\'; text-align: -webkit-center; \"><span class=\"Apple-tab-span\" style=\"white-space:pre\">									</span></span><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>\n<img src=\"http://sharecode.ir/assets/problem_images/1207_aaebd0257541462ecc6d54d3dd6de39a.jpg\" style=\"-webkit-user-select: none; \" /><br /><p> </p>\n</div></div><p>compute the remainder r(x) when a(x) is divided by x<sup style=\"font-family: ; \">k</sup>+1.&nbsp;</p>','<p>The input consists of a number of cases. The first line of each case specifies the two integers n and k (0&nbsp;≤&nbsp;n,&nbsp;k&nbsp;≤&nbsp;10000). The next n+1 integers give the coefficients of a(x), starting from a<sub>0</sub> &nbsp;and ending with a<sub>n</sub>. The input is terminated if n = k = -1.</p>\n<p> </p>\n<p>You may assume that the coefficients of the remainder can be represented by 32-bit integers.&nbsp;</p>','<p>For each case, output the coefficients of the remainder on one line, starting from the constant coefficient r<sub style=\"font-family: ; \">0</sub>. If the remainder is 0, print only the constant coefficient. Otherwise, print only the first d+1 coefficients for a remainder of degree d. Separate the coefficients by a single space</p>','5 2\n6 3 3 2 0 1\n5 2\n0 0 3 2 0 1\n4 1\n1 4 1 1 1\n6 3\n2 3 -3 4 1 0 1\n1 0\n5 1\n0 0\n7\n3 5\n1 2 3 4\n-1 -1\n','3 2\n-3 -1\n-2\n-1 2 -3\n0\n0\n1 2 3 4\n','',55,0,0,64,2,0,0,38),(1323,'Pousse','<p>Recently, the organizers of the International Conference on Functional Programming had a programming contest for people to show that their language was best. The contest main web page is at <code>http://www.ai.mit.edu/extra/icfp-contest/</code>. Each entrant had to write an implementation of the game \"pouse\", for which the description went as follows:</p>\n<p>The name of the game is \"pousse\" (which is French for \"push\"). It is a 2 person game, played on an <em>N</em> by <em>N</em> board (the original game was&nbsp;4×4&nbsp;but&nbsp;<em>N</em>×<em>N</em> is a simple generalisation to adjust the difficulty of the game, and its implementation). Initially the board is empty, and the players take turns inserting one marker of their color (\'<tt>X</tt>\' or \'<tt>O</tt>\') on the board. The color \'<tt>X</tt>\' always goes first. The columns and rows are numbered from 1 to&nbsp;<em>N</em>, starting from the top left, as in:\n</p>\n<pre>     1 2 3 4\n    +-+-+-+-+\n  1 | | | | |\n    +-+-+-+-+\n  2 | | | | |\n    +-+-+-+-+\n  3 | | | | |\n    +-+-+-+-+\n  4 | | | | |\n    +-+-+-+-+\n</pre><p>A marker can only be inserted on the board by sliding it onto a particular row from the left or from the right, or onto a particular column from the top or from the bottom. So there are&nbsp;4*<em>N</em>&nbsp;possible \"moves\" (ways to insert a marker). They will be named \'<tt>L</tt><em>i</em>\', \'<tt>R</tt><em>i</em>\', \'<tt>T</tt><em>i</em>\', \'<tt>B</tt><em>i</em>\' respectively, where&nbsp;<em>i</em>&nbsp;is the number of the row or column where the insertion takes place.</p>\n<p>When a marker is inserted, there may be a marker on the square where the insertion takes place. In this case, all markers on the insertion row or column from the insertion square upto the first empty square are moved one square further to make room for the inserted marker. Note that the last marker of the row or column will be pushed off the board (and must be removed from play) if there are no empty squares on the insertion row or column.</p>\n<p>A row or a column is a \"straight\" of a given color, if it contains&nbsp;<em>N</em>&nbsp;markers of the given color.</p>\n<p>The game ends when an insertion creates a configuration with more straights of one color than straights of the other color; the player whose color is dominant (in number of straights) WINS.</p>','<p>The input begins with a single positive integer on a line by itself indicating the number of the cases following, each of them as described below. This line is followed by a blank line, and there is also a blank line between two consecutive inputs.</p>\n<p>The standard input of the program will contain a number&nbsp;<em>N</em> &lt;= 100 on the first line and this will be followed by a sequence of moves (in the notation previously described) with one move per line. There are no intervening spaces or empty lines.</p>\n<p>The program can assume that all moves in the sequence are valid.</p>','<p>For each test case, the output must follow the description below. The outputs of two consecutive cases will be separated by a blank line.</p>\n<p>The organizers then want to play one submitted program against the others to see which is best. So they need to know when one program wins.</p>\n<p>Your job is to write a program to determine when a game has been won. The input to your program is the same as described above: an initial number followed by a sequence of moves. As soon as a move produces a winning board position, your program should print out whether \'<tt>X WINS</tt>\' or \'<tt>O WINS</tt>\', and exit. If a line containing \'<tt>QUIT</tt>\' is read before a winner is declared, your program should print out \'<tt>TIE GAME</tt>\' and exit. As a failsafe, the last line of every input will be a \'<tt>QUIT</tt>\' line.</p>','2\n\n4\nL2\nT2\nL2\nB2\nR2\nQUIT\n\n4\nL2\nT2\nL2\nB2\nR2\nT1\nL2\nQUIT','TIE GAME\n\nX WINS','',-1,0,1,128,10,17,62,10),(1333,'Beautiful mind','<p>Jamshid Kāshānī was a great scientist in Persia. He was also a great mathematician. The king of the time that was not satisfied with courtesy of Jamshid toward himself, put Jamshid in jail and commanded his death.&nbsp; </p>\n<p>Before they execute him, as sign of good faith, he offered Jamshid a riddle and told him if he can solve the riddle faster than him, he’s free to go. The riddle is:</p>\n<p>“Given a <em>n</em> × <em>n</em> matrix, you should simulate a series of operations on it. The operations are: </p>\n<p><strong>U</strong>pawrd: shift the rows one place up. First row will be placed the last row.</p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/1333_262d38750368bdbc94748f05e6910158.jpg\" src=\"http://sharecode.ir/assets/problem_images/1333_262d38750368bdbc94748f05e6910158.jpg\" /></p>\n<p align=\"left\"><strong>D</strong>ownward: shift the rows one place down. Last row will be placed before first row.</p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/1333_5956104ab2f047fd39413bcc769f532c.jpg\" src=\"http://sharecode.ir/assets/problem_images/1333_5956104ab2f047fd39413bcc769f532c.jpg\" /></p>\n<p><strong>F</strong>orward: shift the columns one place to right. Last column will be placed before first column. </p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/1333_4ce95cf3d89f8c7f1234301400d80f1f.jpg\" src=\"http://sharecode.ir/assets/problem_images/1333_4ce95cf3d89f8c7f1234301400d80f1f.jpg\" /></p>\n<p><strong>B</strong>ackward: shift the columns one place to left. First column will be placed after last column</p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/1333_3f7cbde695b28b1ad33e886d045dc68e.jpg\" src=\"http://sharecode.ir/assets/problem_images/1333_3f7cbde695b28b1ad33e886d045dc68e.jpg\" /></p>\n<p align=\"left\"><strong>T</strong>ranspose: transpose the matrix. First row will be placed on first column, second row on second column and so on.</p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/1333_352976dac4d885e6c48403b9f7591f41.jpg\" src=\"http://sharecode.ir/assets/problem_images/1333_352976dac4d885e6c48403b9f7591f41.jpg\" /></p>\n<p align=\"left\"><strong>R</strong>otate: rotate the matrix 90 degrees clockwise.</p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/1333_0b96ab22352a7c3dc1fb3c03c37e71db.jpg\" src=\"http://sharecode.ir/assets/problem_images/1333_0b96ab22352a7c3dc1fb3c03c37e71db.jpg\" /></p>\n<p align=\"left\">You should simulate all the operations on input matrix one by one and find the resulting matrix.” <br />Jamshid solved the riddle way quicker than the king and was released. <br />Your task is to solve the above riddle. </p>','<p>First line of input contains a single integer t (<em>t</em> ≤ 20). The first line of each test contains a single integer n (1 ≤ <em>n</em> ≤ 50). Next n lines each contain n positive integers. j-th number of i-th line is the number at row i and column j of matrix. These numbers are not&nbsp; greater than 100. After that there will be a line with the sequence of operations performed on matrix in order from left to right.&nbsp; It is&nbsp; a string of length at most 100. Each operation is shown by a character, “U” for upwards, “D” for downwards, “F” for forwards, “B” for backwards, “T” for transpose and “R” for rotate. </p>','<p>For each test you should print a n × n, the resulting matrix after performing all operations on it. Output matrix should be formatted as input matrix (i.e. you should print n lines each containing n integers) Numbers should be separated by a single space. </p>\n<p>You should print an empty line after each test. </p>','2\n4\n4 8 12 16\n3 7 11 15\n2 6 10 14\n1 5 9 13\nR\n3\n19 28 37\n46 55 64\n73 82 91\nUFBDTR','1 2 3 4 \n5 6 7 8 \n9 10 11 12 \n13 14 15 16 \n \n37 28 19 \n64 55 46 \n91 82 73 ','',62,0,1,64,2,30,77,10),(1257,'Cable Master','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Inhabitants of the Wonderland have decided to hold a regional programming contest. The Judging Committee has volunteered and has promised to organize the most honest contest ever. It was decided to connect computers for the contestants using a ``star\'\' topology - i.e. connect them all to a single central hub. To organize a truly honest contest, the Head of the Judging Committee has decreed to place all contestants evenly around the hub on an equal distance from it.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">To buy network cables, the Judging Committee has contacted a local network solutions provider with a request to sell for them a specified number of cables with equal lengths. The Judging Committee wants the cables to be as long as possible to sit contestants as far from each other as possible.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The Cable Master of the company was assigned to the task. He knows the length of each cable in the stock up to a centimeter, and he can cut them with a centimeter precision being told the length of the pieces he must cut. However, this time, the length is not known and the Cable Master is completely puzzled.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">You are to help the Cable Master, by writing a program that will determine the maximal possible length of a cable piece that can be cut from the cables in the stock, to get the specified number of pieces.</p>','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The first line of the input file contains two integer numbers&nbsp;<em>N</em>&nbsp;and&nbsp;<em>K</em>, separated by a space.&nbsp;<em>N</em>&nbsp;(1&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;<em>N</em>\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;10000) is the number of cables in the stock, and&nbsp;<em>K</em>&nbsp;(1&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;<em>K</em>&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;10000) is the number of requested pieces. The first line is followed by&nbsp;<em>N</em>&nbsp;lines with one number per line, that specify the length of each cable in the stock in meters. All cables are at least 1 meter and at most 100 kilometers in length. All lengths in the input file are written with a centimeter precision, with exactly two digits after a decimal point.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Then, a next test case follows. The input is terminated by two zeros.</p>','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Write to the output file the maximal length (in meters) of the pieces that Cable Master may cut from the cables in the stock to get the requested number of pieces. The number must be written with a centimeter precision, with exactly two digits after a decimal point.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">If it is not possible to cut the requested number of pieces each one being at least one centimeter long, then the output file must contain the single number ``0.00\'\' (without quotes).</p>','4 11\n8.02\n7.43\n4.57\n5.39\n0 0','2.00','',61,0,0,64,5,0,0,38),(1311,'The Navi-Computer is Down!','<p>An Imperial Cruiser and its cohort of Tie Fighters are hot on the tail of the Millennium Falcon.&nbsp; The Falcon has taken minimal damage to the aft and port thrusters, but the Navi-Computer has been damaged preventing a jump to hyperspace and escape. </p>\n<p>Luke: Han, why not just jump to hyperspace?&nbsp; We can’t hold up to that Imperial Cruiser much longer!<br />Han: Travelin\' through hyperspace ain\'t like dustin\' crops, boy! Without precise calculations we could fly right through a star or bounce too close to a supernova, and that\'d end your trip real quick, wouldn\'t it?<br />Leia: He’s right Luke, we need proper calculations entered or…<br />C3PO: We’re doomed! R2D2: whistle, chirp, beep, beeeeeeeeeeeeeeeeeeep!<br />Chewbacca: Grooooooooooooooaaaaaaaaannnnn!<br />Luke: I have a very bad feeling about this.<br />Leia: There must be something we can do!&nbsp; We can’t go out like this.&nbsp; The Rebel Alliance is depending on us!<br />C3PO: Your Highness, R2D2 says he has a star map of the galaxy with coordinates in 3-space for each location<br />Han: Great, but since the Navi-Computer is down, we need not only the 3-space coordinates, but the distance between our current location and our destination.&nbsp; I’m not up on the tech math to do that and I don’t see anyone else here that’s a likely candidate.<br />Leia: I beg your pardon, but it doesn’t take a math tech to do those kinds of calculations…<br />Han: Oh really, your worship?&nbsp; I suppose you’re going to tell us they taught you that in ‘Princess School’.<br />Leia: Grow up.&nbsp; Anyone that’s been to school through the 10th galactic grade knows that the distance between two points, or star systems, in 3-space is the square root of the sum of the difference between the x-coordinates squared, the difference between the y-coordinates squared, and the difference between the z-coordinates squared.&nbsp; The result is in galactic units, of course. <br />Luke: Hey, I remember that! It looks like this (he draws out the formula):</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1311_d6e05ed7871b8b4cb7d8f7a6d51f81c1.jpg\" src=\"http://sharecode.ir/assets/problem_images/1311_d6e05ed7871b8b4cb7d8f7a6d51f81c1.jpg\" /></p>\n<p align=\"left\">Han: Great, so everyone’s a genius but me!&nbsp; I’ll congratulate you all on your brilliance later… <br />Leia (interrupting): They also teach manners and hygiene in school, but those are usually before grade 4.&nbsp; Looks like you didn’t pay much attention, Han.<br />Han:&nbsp; …if you can get me the name and coordinates of the current star system, followed by the name&nbsp; and coordinates of the destination star system, followed by the distance in galactic units between the two, so I can enter it all in the Hyper-Computer and make the jump to hyperspace. <br />Luke: No problem Han, R2 will provide the coordinates and Leia will do the math, let’s get out of here!<br />Han: Leia, I hope your math is accurate to two digits of precision to the right of the decimal point.&nbsp; The Hyper-Computer will need it.&nbsp;&nbsp;</p>\n<p align=\"left\"><br />Your task is to aid Leia in calculating the distance between two star systems with accuracy of two digits to the right of the decimal.&nbsp; Help save the Millennium Falcon and its crew so they can help the Rebel Alliance defeat the Empire! </p>','<p>The input file will begin with a line containing the integer n (0 &lt; n &lt; 200), representing the number of entries to process.&nbsp; n entries follow.&nbsp; An entry will consist of the name of the current star system on a line of its own, followed by the x, y, and z coordinates of that star system, all on the same line, all separated by a single space.&nbsp; Next will be the name of the destination star system (which is always different than the current star system) on a line of its own, followed by the x, y, and z coordinates of that star system, all on the same line, all separated by a single space.&nbsp; &nbsp;<br /><br />Star system names may contain alpha-numeric characters, whitespace, and punctuation.&nbsp; Star system names will be no larger than 30 characters.&nbsp; The x, y, and z coordinates will be real numbers listed with two digits of precision to the right of the decimal point, with -100,000.00 &lt; x, y, z &lt; 100,000.00, thus double precision real numbers should be used to avoid rounding errors.&nbsp; Finally, the distance between star systems will always be at least one galactic unit. </p>','<p>For each entry in the input file, output on one line: the name of the current star system, then the string&nbsp; <code> \'to\' </code>, then the name of the destination star system, followed by a colon and a space, followed by the distance between the two systems to two digits of precision to the right of the decimal.&nbsp; See the sample output below for details.</p>','2 \nAlderaan \n1000.00 2000.00 3000.00 \nDantooine \n-1000.00 1000.00 1000.00 \nCircarpous Major \n-500.00 500.00 -500.00 \nY’Toub \n-500.00 -500.00 500.00\n','Alderaan to Dantooine: 3000.00 \nCircarpous Major to Y’Toub: 1414.21 \n','',59,0,1,64,2,20,54,10),(1208,'Mayor\'s posters','<p>The citizens of Bytetown, AB, could not stand that the candidates in the mayoral election campaign have been placing their electoral posters at all places at their whim. The city council has finally decided to build an<em style=\"font-family: ; \">electoral wall</em>&nbsp;for placing the posters and introduce the following rules:</p>\n<ul style=\"font-family: ; \">\n	<li>Every candidate can place exactly one poster on the wall.</li>\n	<li>All posters are of the same height equal to the height of the wall; the width of a poster can be any integer number of bytes (<em>byte</em>&nbsp;is the unit of length in Bytetown).</li>\n	<li>The wall is divided into segments and the width of each segment is one byte.</li>\n	<li>Each poster must completely cover a contiguous number of wall segments.</li>\n</ul>\n<p>They have built a wall 10000000 bytes long (such that there is enough place for all candidates). When the electoral campaign was restarted, the candidates were placing their posters on the wall and their posters differed widely in width. Moreover, the candidates started placing their posters on wall segments already occupied by other posters. Everyone in Bytetown was curious whose posters will be visible (entirely or in part) on the last day before elections.</p>\n<p style=\"font-family: ; \">Your task is to find the number of visible posters when all the posters are placed given the information about posters\' size, their place and order of placement on the electoral wall.</p>\n<p style=\"font-family: ; \"></p>','<p>The first line of input contains a number&nbsp;<em style=\"font-family: \'Times New Roman\'; \">c</em><span style=\"font-family: ; \">&nbsp;giving the number of cases that follow. The first line of data for a single case contains number 1&nbsp;≤&nbsp;<em style=\"font-family: ; \">n</em>&nbsp;≤&nbsp;10000. The subsequent&nbsp;<em style=\"font-family: ; \">n</em>&nbsp;lines describe the posters in the order in which they were placed. The&nbsp;<em style=\"font-family: ; \">i</em>-th line among the&nbsp;em style=\"font-family: ; \"&gt;n&nbsp;lines contains two integer numbers&nbsp;<em style=\"font-family: ; \">l<sub>i</sub></em>&nbsp;and&nbsp;<em style=\"font-family: ; \">r<sub>i</sub></em>&nbsp;which are the number of the wall segment occupied by the left end and the right end of the&nbsp;<em style=\"font-family: ; \">i</em>-th poster, respectively. We know that for each 1&nbsp;≤&nbsp;<em style=\"font-family: ; \">i</em>&nbsp;≤&nbsp;<em style=\"font-family: ; \">n</em>, 1&nbsp;≤&nbsp;<em style=\"font-family: ; \">l<sub>i</sub></em>&nbsp;≤&nbsp;<em style=\"font-family: ; \">r<sub>i</sub></em>&nbsp;≤&nbsp;10000000. After the&nbsp;<em style=\"font-family: ; \">i</em>-th poster is placed, it entirely covers all wall segments numbered&nbsp;<em style=\"font-family: ; \">l<sub>i</sub></em>,&nbsp;<em style=\"font-family: ; \">l<sub>i</sub></em>+1&nbsp;,...&nbsp;,&nbsp;<em style=\"font-family: ; \">r<sub>i</sub></em>.</span></p>\n<p> </p>\n<p>For each input data set print the number of visible posters after all the posters are placed.nbsp;br /&gt;</p>\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1208_4b97a290ca459dd4fb8a95433aac088f.jpg\" />','<p>For each input data set print the number of visible posters after all the posters are placed.</p>','1\n5\n1 4\n2 6\n8 10\n3 4\n7 10','4','',55,0,0,64,2,0,0,38),(1209,'Queuing at the doctors','<p><span style=\"font-family: ; \">Due to the increasing number of weird viruses spreading around, all the members of the International Confederation of Revolver Enthusiasts (ICORE) are required by their boss to do quarterly physical checkups at General Hospital. All checkups are arranged by the boss and scheduled on the same day. Each member of ICORE gets instructions where they are given</span></p>\n<ul style=\"font-family: ; \">\n	<li>their number from the set {1 ...&nbsp;<em>n</em>}</li>\n	<li>the time of the day when they are supposed to show up at General Hospital</li>\n	<li>a list of doctors\' offices that they are to visit in the listed order.</li>\n</ul>\n<p><span style=\"font-family: ; \">Doctors\' offices in General Hospital are numbered with numbers from the set {1 ...&nbsp;</span><em style=\"font-family: ; \">m</em><span style=\"font-family: ; \">}.</span></p>\n<p style=\"font-family: ; \">All the members of ICORE have been convinced that the schedule of the checkups has been professionally prepared and that there would be no lining up and waiting at the doctors\' doors. However, since their boss was a political appointment their hopes for not wasting time had to be abandoned as soon as they started arriving at the hospital. The queues were forming rapidly despite the fact that the doctors were very efficient due to their usual sloppiness. The members of ICORE are all very disciplined and obey the following rules for visiting the doctors</p>\n<ul style=\"font-family: ; \">\n	<li>if an ICORE member was supposed to show up at the hospital at time&nbsp;<em>t</em>, then at time&nbsp;<em>t</em>&nbsp;they show up at the first doctors\' office on their list;</li>\n	<li>if several people show up a doctor\'s office at time&nbsp;<em>t</em>&nbsp;then they form a queue in increasing order of their numbers and join the end of the queue already formed by people who arrived earlier;</li>\n	<li>if at time&nbsp;<em>t</em>&nbsp;in front of office&nbsp;<em>x</em>&nbsp;there is a queue of people who arrived earlier or at time&nbsp;<em>t</em>, then the first person from the queue enters office&nbsp;<em>x</em>. This person after a time unit (the doctors do a sloppy job, remember) exits the office and at time&nbsp;<em>t+1</em>&nbsp;appears at the next office from their list of offices to visit. At that time the first person from the queue enters office&nbsp;<em>x</em>;</li>\n	<li>if a visit at office&nbsp;<em>x</em>&nbsp;at time&nbsp;<em>t</em>&nbsp;was for the given visitor the last visit on their list, then at time&nbsp;<em>t+1</em>&nbsp;this visitor leaves the hospital.</li>\n</ul>\n<p style=\"font-family: ; \">\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1209_cc14a9f36f12c04637e304da7232e0c3.jpg\" /></p>\n<p style=\"font-family: ; \">Your task is to find the time when the last visitor leaves the hospital.</p>','<p style=\"font-family: ; \"></p>\n<p>The first line of input contains a natural number&nbsp;<em>c</em>&nbsp;giving the number of cases to handle. The following lines form the input for the&nbsp;<em>c</em>&nbsp;cases, each in the format described below. The first line of data for a case contains two natural numbers&nbsp;<em>n</em>&nbsp;and&nbsp;<em>m</em>, 1&nbsp;≤&nbsp;<em>n</em>,&nbsp;<em>m</em>&nbsp;≤&nbsp;1000, giving the number of the visitors and the number of doctors\' offices for the case. Each of the following&nbsp;<em>n</em>&nbsp;lines contains a sequence of natural numbers. Among these lines, line&nbsp;<em>i</em>&nbsp;(1 &nbsp;≤&nbsp;<em>i</em>&nbsp;≤&nbsp;<em>n</em>) has the following format</p>\n<center><em>t</em>&nbsp;&nbsp;<em>k</em>&nbsp;&nbsp;<em>g</em><sub>1</sub>&nbsp;&nbsp;<em>g</em><sub>2</sub>...&nbsp;<em>g</em><sub>k</sub></center><p>meaning that the&nbsp;</p>\n<p><em>i</em>th visitor arrives at time&nbsp;<em>t</em>&nbsp;and has to visit&nbsp;<em>k</em>&nbsp;offices in the order given by&nbsp;<em>g</em><sub>1</sub><em>g</em><sub>2</sub>&nbsp;...&nbsp;<em>g</em><sub>k</sub>&nbsp;where each&nbsp;<em>g</em><sub>j</sub>&nbsp;is a number of doctor\'s office, 1&nbsp;≤&nbsp;<em>g</em><sub>j</sub>&nbsp;≤&nbsp;<em>m</em>. We have that 0&nbsp;≤&nbsp;<em>t</em>&nbsp;≤&nbsp;1000000 and there is no more than 1000000 visits scheduled for a day at the hospital.&nbsp;</p>\n<p> </p>','<p><span style=\"font-family: ; \">For each of the&nbsp;</span><em style=\"font-family: ; \">c</em><span style=\"font-family: ; \">&nbsp;input cases print one line giving the time when the last visitor leaves the hospital.&nbsp;</span></p>\n<p><span style=\"font-family: ; \">&nbsp;input cases print one line giving the time when the last visitor leaves the hospital.&nbsp;</span></p>','2\n5 3\n1 3 3 2 1\n0 7 2 3 1 1 1 1 2\n2 1 1\n1 2 3 3\n4 3 1 1 1\n5 10\n3 1 6\n2 3 3 2 8\n2 1 4\n2 4 7 9 9 6\n0 2 8 7','12\n6','',55,0,0,64,2,0,0,38),(1322,'Numbersmun','<p>Anna and Bob are starting up a new high-tech company. Of course, one of their key considerations is choosing a good name for the company. Palindromes are cool. (A palindrome is a word that is the same when reversed, like the names of our two entrepreneurs.) They would really the name of their company to be a palindrome. Unfortunately, they cannot think of a nifty company name that is also a palindrome.\nMaybe at least the telephone number of their company could be a palindrome. However, they really want their customers to be able to call them, so they want to choose the company name so that, when it is typed using the letters printed on a phone keypad, the result is also their phone number. (On a standard phone keypad, the following keys contain the corresponding letters: 2: ABC, 3: DEF, 4: GHI, 5: JKL, 6: MNO, 7: PQRS, 8: TUV, 9: WXYZ.)</p>','<p>The first line of input contains a single integer, the number of lines to follow. Each following line contains a company name, which is a string of at most 20 letters, which may be either uppercase or lowercase.</p>','<p>For each company name, print a single line of output, containing the word YES if the phone number is a palindrome, or NO if it is not.</p>','2\nANBOBNA\niAmACoolCompany\n','YES\nNO\n','',-1,0,1,128,10,79,188,12),(1220,'Cash Machine','<p>A Bank plans to install a machine for cash withdrawal. The machine is able to deliver</p>\n<p>appropriate ♣1 bills for a requested cash amount. The machine uses exactly N distinct bill</p>\n<p>denominations, say Dk, k=1,N, and for each denomination Dk the machine has a supply of nk</p>\n<p>bills. For example,</p>\n<p>N=3, n1=10, D1=100, n2=4, D2=50, n3=5, D3=10</p>\n<p>means the machine has a supply of 10 bills of ♣100 each, 4 bills of ♣50 each, and 5 bills of ♣10</p>\n<p>each.</p>\n<p>Call cash the requested amount of cash the machine should deliver and write a program that</p>\n<p>computes the maximum amount of cash less than or equal to cash that can be effectively</p>\n<p>delivered according to the available bill supply of the machine. The program input is from a text</p>\n<p>file.</p>','<p>Each data set in the file stands for a particular transaction and has the format:</p>\n<p>cash N n1 D1 n2 D2 ... nN DN</p>\n<p>where 0 ≤ cash ≤ 100000 is the amount of cash requested, 0 ≤ N ≤ 10 is the number of bill</p>\n<p>denominations and 0 ≤ nk ≤ 1000 is the number of available bills for the Dk denomination, 1 ≤</p>\n<p>Dk ≤ 1000, k=1,N. White spaces can occur freely between the numbers in the input. The input</p>\n<p>data are correct.</p>','<p>For each set of data the program prints the result to the standard output on a</p>\n<p>separate line as shown in the examples below.</p>','735 3 4 125 6 5 3 350\n633 4 500 30 6 100 1 5 0 1\n735 0\n0 3 10 100 10 50 10 10','735\n630\n0\n0','',56,0,0,64,2,0,0,38),(1221,'Beer Land','<p>King ACM 2002 received some clear ground and some money through inheritance. Terms of</p>\n<p>the will and testament require the heir to build n towns. He was also required to build the least</p>\n<p>quantity of two-way roads between the towns such that one could travel from any town to any other</p>\n<p>town even if one road was closed under repair. Carefully, all such roads must be constructed as</p>\n<p>geometrically straight lines. Further, the condition that a traveller be able to get from one town to</p>\n<p>another (even with one road closed) needs to be satisfied by traversing the roads as straight lines in</p>\n<p>their entirety --- not stopping partway along one road to switch to another.</p>\n<p>Because of rich soil in those lands, the future inhabitants of the place have decided to produce</p>\n<p>beer. On the crossroads (a crossroad is merey the intersection of two or more roads) the king plans to</p>\n<p>build beer stands (one stand per a crossroad). So, if three or four (or twenty) roads intersect in a</p>\n<p>single point, there’s still only one appropriate place for a beer stand. The King must choose locations</p>\n<p>for the towns and the roads. You need to advise him so that he builds as many beer stands as</p>\n<p>possible.</p>','<p>The first line of input contains the number of test cases. For each case there is a line</p>\n<p>containing a single integer n (1 ≤ n ≤ 32767). This represents the number of towns to be built.</p>','<p>For each n, print a line containing the maximum number of beer stands possible to</p>\n<p>build.</p>','3\n3\n4\n5','0\n1\n5','',56,0,0,64,2,0,0,38),(1222,'BOAT','<p>You are the owner of a very nice boat. You have many requests to rent your beautiful boat</p>\n<p>during the summer time and you decided to maximize your profit. For each client you know the</p>\n<p>number of days he wants to rent the boat and a list of choices, where a choice means an</p>\n<p>amount of money and a deadline. The deadline is the number of days counted from a time</p>\n<p>origin. You get the money for a given deadline (when the holiday must end) only if you are able</p>\n<p>to rent the boat before that deadline.</p>\n<p>For example your friend Jack wants to travel on the Mediterranean Sea for 20 days and has</p>\n<p>the following choices:</p>\n<p>- if the holiday deadline is 60 days you can get 1000 EUR provided the boat is rented in</p>\n<p>between 0 and 41 (60days-20days+1) for 20 days;</p>\n<p>- if the holiday deadline is 70 days you can get 800 EUR.</p>\n<p>If a client does not contribute to the maximization of your profit you can drop that client. You</p>\n<p>know all the clients and their choices and you must rent the boat according to the order in which</p>\n<p>the clients submit their requests.</p>\n<p>Write a program that, given the clients, computes the largest profit you can get. The program</p>\n<p>input is from a text file.</p>','<p>Each data set in the input has the following format:</p>\n<p>• n - the number of clients (n ≤100)</p>\n<p>• on n separate lines the number of days (at most 100) each client wishes to rent the boat;</p>\n<p>• the total number of choices for all clients;</p>\n<p>• the list of choices in the format client_id, deadline, amount_of_money where the client id</p>\n<p>is a positive integer in the range 1..n and deadline ≤100.</p>\n<p><strong>An empty line separates the input data sets.</strong></p>','<p>For each data set the program must print (from the beginning of a line) the maximum profit for</p>\n<p>that set. The results must be printed on the standard output. An empty line separates the results</p>\n<p>of different data sets.</p>','3\n2\n2\n4\n4\n1 2 14\n3 4 25\n2 4 12\n3 3 10','26','',56,0,0,64,2,0,0,38),(1223,'Art Gallery','<p>The art galleries of the new and very futuristic building of the Center for Balkan</p>\n<p>Cooperation have the form of polygons (not necessarily convex). When a big exhibition is</p>\n<p>organized, watching over all of the pictures is a big security concern. Your task is that for a</p>\n<p>given gallery to write a program which finds the surface of the area of the floor, from which each</p>\n<p>point on the walls of the gallery is visible. On the figure 1. a map of a gallery is given in some</p>\n<p>co-ordinate system. The area wanted is shaded on the figure 2.</p>\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1223_5fffcb8c05271020810051108448c3b4.jpg\" />','<p>The number of tasks T that your program have to solve will be on the first row of the input</p>\n<p>file. Input data for each task start with an integer N, 5≤N≤1500. Each of the next N rows of the</p>\n<p>input will contain the co-ordinates of a vertex of the polygon – two integers that fit in 16-bit</p>\n<p>integer type, separated by a single space. Following the row with the co-ordinates of the last</p>\n<p>vertex for the task comes the line with the number of vertices for the next test and so on.</p>','<p>For each test you must write on one line the required surface - a number with exactly two</p>\n<p>digits after the decimal point (the number should be rounded to the second digit after the</p>\n<p>decimal point).</p>','1\n7\n0 0\n4 4\n4 7\n9 7\n13 -1\n8 -6\n4 -4','80.00','',56,0,0,64,2,0,0,38),(1224,'Game','<p>Recently, there was an international volleyball championship. Speaking of volleyball, we are</p>\n<p>interested in the probability of winning of one or another team, if we know some information about the</p>\n<p>teams. Here are the rules of the game and the necessary information:</p>\n<p>• the match is played by two teams: A and B;</p>\n<p>• the first team to win K games in a match, wins the match;</p>\n<p>• each game consists of rounds; each round is won by one of the teams, and the team adds</p>\n<p>one point to its score for the current game;</p>\n<p>• the first team to win L points in a game, wins the game;</p>\n<p>• if team A serves the ball in a round, it has Pa% chance to win the round (and (100-Pa)% to</p>\n<p>loose it);</p>\n<p>• if team B serves the ball in a round, it has Pb% chance to win the round (and (100-Pb)% to</p>\n<p>loose it);</p>\n<p>• if a round is not the first in a game, the ball in the round is served by the team that won the</p>\n<p>last round;</p>\n<p>• if a game is not the first in a match, the ball in the first round of the game is served by the</p>\n<p>team that did not served the ball in the first round of the previous game;</p>\n<p>• both teams have an equal chance to serve the ball in the first round of the very first game of a</p>\n<p>match.</p>\n<p>So, for given values of Pa, Pb, K, and L, you have to compute the probability, as a percent, for</p>\n<p>team A to win the match.</p>','<p>There is one number in the first line – the number of data sets. Each data set consists of a</p>\n<p>single line with four integers on it: Pa, Pb, K, and L (1&lt;= K&lt;=100, 1&lt;= L&lt;=100).</p>','<p>For each test you must write on one line the required result with exactly one digit after the</p>\n<p>decimal point (the number should be rounded to the first digit after the decimal point).</p>','2\n100 50 1 3\n100 1 1 1','93.8\n99.5','',56,0,0,64,2,0,0,38),(1225,'MANAGER','<p>One of the programming paradigm in parallel processing is the producer/consumer paradigm</p>\n<p>that can be implemented using a system with a \"manager\" process and several \"client\"</p>\n<p>processes. The clients can be producers, consumers, etc. The manager keeps a trace of client</p>\n<p>processes. Each process is identified by its cost that is a strictly positive integer in the range 1 ..</p>\n<p>10000. The number of processes with the same cost cannot exceed 10000. The queue is</p>\n<p>managed according to three types of requests, as follows:</p>\n<p>• a x - add to the queue the process with the cost x;</p>\n<p>• r - remove a process, if possible, from the queue according to the current manager policy;</p>\n<p>• p i - enforce the policy i of the manager, where i is 1 or 2. The default manager policy is 1</p>\n<p>• e - ends the list of requests.</p>\n<p>There are two manager policies:</p>\n<p>• 1 - remove the minimum cost process</p>\n<p>• 2 - remove the maximum cost process</p>\n<p>The manager will print the cost of a removed process only if the ordinal number of the removed</p>\n<p>process is in the removal list.</p>\n<p>Your job is to write a program that simulates the manager process.</p>','<p>The input is from a text file.</p>\n<p>Each data set in the input has the following format:</p>\n<p>• the maximum cost of the processes</p>\n<p>• the length of the removal list</p>\n<p>• the removal list - the list of ordinal numbers of the removed processes that will be displayed;</p>\n<p>for example 1 4 means that the cost of the first and fourth removed processes will be</p>\n<p>displayed</p>\n<p>• the list of requests each on a separate line.</p>\n<p>Each data set ends with an e request. The data sets are separated by empty lines.</p>','<p>The program prints on standard output the cost of each process that is removed, provided that</p>\n<p>the ordinal number of the remove request is in the list and the queue is not empty at that</p>\n<p>moment. If the queue is empty the program prints -1. The results are printed on separate lines.</p>\n<p>An empty line separates the results of different data sets.</p>','5\n2\n1 3\na 2\na 3\nr\na 4\np 2\nr\na 5\nr\ne','2\n5','',56,0,0,64,2,0,0,38),(1226,'Networking','<p>You are assigned to design network connections between certain points in a wide area. You are</p>\n<p>given a set of points in the area, and a set of possible routes for the cables that may connect</p>\n<p>pairs of points. For each possible route between two points, you are given the length of the</p>\n<p>cable that is needed to connect the points over that route. Note that there may exist many</p>\n<p>possible routes between two given points. It is assumed that the given possible routes connect</p>\n<p>(directly or indirectly) each two points in the area.</p>\n<p>Your task is to design the network for the area, so that there is a connection (direct or indirect)</p>\n<p>between every two points (i.e., all the points are interconnected, but not necessarily by a direct</p>\n<p>cable), and that the total length of the used cable is minimal.</p>','<p>The input file consists of a number of data sets. Each data set defines one required</p>\n<p>network. The first line of the set contains two integers: the first defines the number P of the</p>\n<p>given points, and the second the number R of given routes between the points. The following R</p>\n<p>lines define the given routes between the points, each giving three integer numbers: the first two</p>\n<p>numbers identify the points, and the third gives the length of the route. The numbers are</p>\n<p>separated with white spaces. A data set giving only one number P=0 denotes the end of the</p>\n<p>input. The data sets are separated with an empty line.</p>\n<p>The maximal number of points is 50. The maximal length of a given route is 100. The number of</p>\n<p>possible routes is unlimited. The nodes are identified with integers between 1 and P (inclusive).</p>\n<p>The routes between two points i and j may be given as i j or as j i.</p>','<p>For each data set, print one number on a separate line that gives the total length of the</p>\n<p>cable used for the entire designed network.</p>','1 0\n\n2 3\n1 2 37\n2 1 17\n1 2 68\n\n3 7\n1 2 19\n2 3 11\n3 1 7\n1 3 5\n2 3 89\n3 1 91\n1 2 32\n\n5 7\n1 2 5\n2 3 7\n2 4 8\n4 5 11\n3 5 10\n1 5 6\n4 2 12\n0','0\n17\n16\n26\n','',56,0,0,64,2,0,0,38),(1227,'Sly Number','<p>Let\'s consider so called \"sly number\" which is given as an array A of N integers from set</p>\n<p>{0,1,2}. For example A[0]=1, A[1]=1, A[2]=0 and A[3]=2. A sly number is called ONE, if A[0]=1</p>\n<p>and A[I]=0 for I=1,2,…,N-1.</p>\n<p>Consider following operation with two sly numbers A and B called ‘Star Multiplication’:</p>\n<p>k N-1</p>\n<p>C[k] = Σ A[i] * B[k-i] + Σ A[i] * B[N+k-i].</p>\n<p>i = 0 i = k+1</p>\n<p>here C – the result of the operation, even also presented in an array - not necessarily sly</p>\n<p>number. This operation we will denote by &lt;*&gt; symbol.</p>\n<p>Moreover, there is also module operation over the results of ‘Star Multiplication’:</p>\n<p>(C mod Q) [i] = C[i] mod Q,</p>\n<p>where Q is a positive integer.</p>\n<p>We are given a sly number A and a module Q. We need to find such ‘inverse sly number’ B:</p>\n<p>(A * B) mod Q = ONE.</p>','<p>The input file contains K data sets in text format. The first line of this file contains the number</p>\n<p>K of test cases. Each test consists of two lines. First line contains two integers separated by</p>\n<p>spaces: Q (2 &lt;= Q &lt;= 100) and N (5 &lt;= N &lt;= 50). Second line contains N integers from set</p>\n<p>{0,1,2} separated by spaces, which present sly number A.</p>','<p>The output should be printed on the standard output. It should contain K lines - one line for</p>\n<p>each test case. If a solution exists, the line should contain the string “A solution can be found”.</p>\n<p>In case there is no solution, the line should consist of string ‘No solution’.</p>','2\n2 5\n1 0 1 0 1\n65 8\n1 2 2 2 1 1 2 2','A solution can be found\nNo solution','',56,0,0,64,2,0,0,38),(1237,'Single Digit Adder','<p>Write a program that can evaluate expressions from the following roughly BNF (Backus Naur&nbsp;Form) grammar:&nbsp;</p>\n<p>expr ::= term | expr ‘+’ term | expr ‘-’ term ,&nbsp;unary_op ::= ‘+’ term | ‘-’ term ,&nbsp;term ::= ‘(’ expr ‘)’ | ‘(’ unary_op ‘)’ | literal ,&nbsp;literal ::= [0-9] &nbsp;There will be no white space within an expression. All expressions will consist solely of the&nbsp;characters (, ), +, -, and the digits 0 through 9. You may assume that all input is well-formed.&nbsp;</p>','<p>The input will consist of one expression per line followed by a newline. There will be no blank</p>\n<p>lines in the file.</p>','<p>For each expression, output its integer value, followed by a single newline.</p>','1\n(-2)+3\n(1-(2+3))\n(1-2+3)\n(1-(+(2-3)))','1\n1\n-4\n2\n2','',57,0,0,64,2,0,0,38),(1238,'Connect','<p>Your task is to decide if a specified sequence of moves in the board game Connect ends with a winning move.</p>\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1238_fd90b3fe8673f13d990a90cf6012968f.jpg\" />\n\n<p> </p>\n<p>In this version of the game, different board sizes may be specified. Pegs are placed on a board at&nbsp;integer coordinates in the range [0, N]. Players Black and White use pegs of their own color.&nbsp;Black always starts and then alternates with White, placing a peg at one unoccupied position&nbsp;(x,y). Black\'s endzones are where x equals 0 or N, and White\'s endzones are where y equals 0 or&nbsp;N. Neither player may place a peg in the other player\'s endzones. After each play, the latest&nbsp;position is connected by a segment to every position with a peg of the same color that is a chess&nbsp;knight\'s move away (2 away in one coordinate and 1 away in the other), provided that a&nbsp;new segment will touch no segment already added, except at an endpoint. Play stops after a&nbsp;winning move, which is when a player\'s segments complete a connected path between the&nbsp;player\'s endzones.&nbsp;For example, Figure 1 shows a board with N = 4 after the moves (0,2), (2,4), and (4,2). Figure 2&nbsp;adds the next move (3,2). Figure 3a shows a poor next move of Black to (2,3). Figure 3b shows&nbsp;an alternate move for Black to (2,1) which would win the game.&nbsp;Figure 4 shows the board with N=7 after Black wins in 11 moves:&nbsp;(0, 3), (6, 5), (3, 2), (5, 7), (7, 2), (4, 4), (5, 3), (5, 2), (4, 5), (4, 0), (2, 4)&nbsp;</p>','<p>The input contains from 1 to 20 datasets followed by a line containing only two zeroes, \"0 0\". The first line of each dataset contains the maximum coordinate N (3 &lt; N &lt; 21) and the number of total moves, M (4 &lt; M &lt; 250), with M odd, so Black will always be the last player. The dataset ends with one or more lines each containing two or more coordinate pairs,&nbsp;with a total of M coordinate pairs. All numbers on any line will be separated by blanks. All data will be legal. There will never be a winning move before the last move.</p>','<p>The output contains one line for each data set: \"yes\" if the last move is a winning move and \"no\" otherwise.</p>','4 5\n0 2 2 4 4 2 3 2 2 3\n4 5\n0 2 2 4 4 2 3 2 2 1\n7 11\n0 3 6 5 3 2 5 7 7 2 4 4\n5 3 5 2 4 5 4 0 2 4\n0 0','no\nyes\nyes','',57,0,0,64,2,0,0,38),(1239,'Consecutive Digits in a Rational Number','<p>As a recruiting ploy, Google once posted billboards in Harvard Square and in the Silicon Valley&nbsp;area just stating “{first 10-digit prime found in consecutive digits of e}.com”. In other words, find that 10-digit sequence and then connect to the web site — and find out that Google is trying to hire people who can solve a particular kind of problem.&nbsp;Not to be outdone, Gaggle (a loosey-goosey fuzzy logic search firm), has devised its own recruiting problem. Consider the base 7 expansion of a rational number. For example, the first few digits of the base 7 expansion of 1/510 = 0.12541...7, 33/410 = 11.15151...7,&nbsp;and 6/4910 = 0.060007. From this expansion, find the digits in a particular range of positions to the right of the \"decimal\" point.</p>','<p>The input file begins with a line containing a single integer specifying the number of problem sets in the file. Each problem set is specified by four base 10 numbers on a single line, n d f l, where n and d are the numerator and denominator of the rational number and 0 &lt;= n &lt;= 5,000 and 1 &lt;= d &lt;=5,000. f and l are the first and last positions for the desired range of digits, with 0 &lt;= f, l &lt;= 250 and 0 &lt;= (l-f) &lt;= 20. Note that 0 is the position immediately to the right of the decimal point.</p>','<p>Each problem set will be numbered (beginning at one) and will generate a single line: Problem set k: n / d, base 7 digits f through l: result where k is replaced by the problem set number, result is your computed result, and the other&nbsp;values are the corresponding input values. Make sure your output is formatted as shown in the sample output below.</p>','4\n1 5 0 0\n6 49 1 3\n33 4 2 7\n511 977 122 126','Problem set 1: 1 / 5, base 7 digits 0 through 0: 1\nProblem set 2: 6 / 49, base 7 digits 1 through 3: 600\nProblem set 3: 33 / 4, base 7 digits 2 through 7: 151515\nProblem set 4: 511 / 977, base 7 digits 122 through 126: 12425','',57,0,0,64,2,0,0,38),(1316,'Laser Turret Maintenance','<p>As the Chief Weapons Officer of an Imperial Star Destroyer, one of your duties is the routine maintenance of laser turret panels. Each panel is a square composed of n × n turret sockets, n of which house a turret. To avoid asymmetric wear and tear on the panel circuits, turrets should be regularly moved between sockets. Turrets are capable of rotating in-place in 45° increments, but may not fire in between such rotations. All turrets are aligned with the panel grid upon insertion.<br />The most important constraint on turret placement is that turrets should not \"conflict\", meaning they should not be able to shoot each other. Thus, they must be positioned such that no two turrets on the same panel share the same grid horizontal, vertical, or diagonal line. To streamline the process of turret maintenance and reduce placement errors, the Empire has mandated that all turret socket exchanges be performed as rotations or reflections of existing configurations, as conflict prevention is invariant under such transformations.<br />Given a valid (non-conflicting) n × n panel configuration, there are three clockwise rotations: 90°, 180°, and 270°. In addition there are four mirror planes: vertical, horizontal, diagonal (across the cells where row = col), and anti-diagonal (across the cells where row + col = n–1). Thus there are eight Empire-approved configurations (some of which may be identical for configurations that are symmetric under rotation by 90° and/or 180°). Figure 1 shows eight approved configurations for n=5, while Figure 2 shows an example from n=6 of a configuration with an 180° symmetry and an example from n=4 of a configuration with a 90° symmetry.<br />While the panel is a two-dimensional matrix, the nature of a valid configuration (that there is only one turret in each row) allows it to be represented by a one-dimensional vector, giving the column positions for the turret in each row. The top row of the panel has index zero, similar to the numbering of screen coordinates.<br />Write a method that receives one valid panel configuration and computes, in the same one-dimensional form, the other seven configurations that are approved by the Empire under the rotations and reflections listed above.<br />Specifically, your program is to write back the configuration received, followed by the configurations obtained by the 90°, 180°, and 270° rotations in that order followed by the reflections in the order vertical mirror, anti-diagonal mirror, horizontal mirror, and diagonal mirror.</p>','<p>Input consists of an indeterminate number of lines consisting of integers separated by white space. The first integer on the line gives the size of the problem (n); zero indicates the end of processing, otherwise 4 ≤ n ≤ 20.<br />Following that n will be n integers giving the column positions.</p>','<p>For each problem, print eight lines giving the approved configurations in the order specified above, in which on<br />each line the numbers are right justified in fields of three characters. These eight lines are followed by a blank<br />line, which is shown in Sample Output as ‘(blank line)’.</p>','4 1 3 0 2\n5 0 2 4 1 3\n6 1 3 5 0 2 4\n0\n','  1  3  0  2\n  1  3  0  2\n  1  3  0  2\n  1  3  0  2\n  2  0  3  1\n  2  0  3  1\n  2  0  3  1\n  2  0  3  1\n  \n  0  2  4  1  3\n  4  1  3  0  2\n  1  3  0  2  4\n  2  4  1  3  0\n  4  2  0  3  1\n  2  0  3  1  4\n  3  1  4  2  0\n  0  3  1  4  2\n  \n  1  3  5  0  2  4\n  2  5  1  4  0  3\n  1  3  5  0  2  4\n  2  5  1  4  0  3\n  4  2  0  5  3  1\n  3  0  4  1  5  2\n  4  2  0  5  3  1\n  3  0  4  1  5  2\n','',59,0,1,64,2,3,9,10),(1240,'Constant Irritation','<p>Even for a single architecture – or even a single processor – there may be multiple assembler (or&nbsp;assembly) languages with different syntax rules, different directives (or “pseudo-ops”), and different mnemonics for the operation codes. Even the definition of integer constants can differ! For example, one assembler for the Intel IA-32 architecture (that is, the x86, Pentium, and Xeon), uses a letter following a number to indicate the base, while another uses C/C++/Java style constants: 1f34h = 0x1f34 (a hex constant; C/C++/Java uses a leading 0x) 11001100b = 0xc0 (binary, but no direct C equivalent, so use hex)&nbsp;377o = 0377 (octal; C/C++/Java uses a leading zero) 925 = 925 (decimal; C/C++/Java decimals must NOT begin with 0) 925d = 925 (also decimal) And if that wasn’t sufficient, the directives used to allocate and initialize storage for constants also differ: db = .byte (one byte)&nbsp;dw = .word (two bytes) dd = .long (four bytes) dq = .quad (eight bytes) So using the assembler “A” (Intel IA-32 Architecture) we might write db 1fh, 377o, 99d but for assembler “B” (C/C++/Java style) we\'d have to write .byte 0x1f, 0377, 99 Each line of input for this problem will contain a directive that allocates and initializes storage, written in the style of assembler \"A\". Translate each such to the style required by assembler \"B\" and display it.&nbsp;</p>','<p>Each input line contains, in order, the following items:&nbsp;</p>\n<p>• zero or more whitespace characters (blanks and/or tabs)</p>\n<p>• one of the directives \"db\", \"dw\", \"dd\", or \"dq\", in lowercase</p>\n<p>• one or more whitespace characters</p>\n<p>• one or more constants, separated from each other by a comma and zero or more&nbsp;whitespace characters (in any order)</p>\n<p>• zero or more trailing whitespace characters</p>\n<p>• the end of line character</p>\n<p>There will be no more than 100 characters in any input line. The last input line (line with data) is&nbsp;followed by a line that contains only whitespace followed by an end of line character.</p>','<p>For each input line you are to display one output line. The line is to contain the equivalent assembler “B” line for the input assembler “A” line. Specifically, it will contain, in order, the following items:</p>\n<p>• exactly one tab character</p>\n<p>• one of the directives \".byte\", \".word\", \".long\" or \".quad\", in lowercase letters,&nbsp;corresponding to the directive in the input line</p>\n<p>• exactly one tab character</p>\n<p>• one or more constants, separated from each other by a comma and then a blank. Each&nbsp;constant must be in the style supported by assembler \"B\", and (if possible) use the&nbsp;same base as that given for the corresponding constant in the input line. For each&nbsp;binary constant in the assembler \"A\" form, use the hexadecimal form for assembler “B”.</p>\n<p>• the end of line character You are not to consider whether the given constant will fit in the storage allocated by the directive. Thus input like \" db 99999 \" is acceptable, even though that value will not fit in a byte.</p>','dd 1,2 , 13h, 1010b , 12d, 377o\ndw each , 0001b, 999999999999d\ndq 1234h, 1200h\n','.long 1, 2, 0x13, 0xa, 12, 0377\n.word 0xeac, 0x1, 999999999999\n.quad 0x1234, 0x1200','',57,0,0,64,2,0,0,38),(1241,'If only I could think Linearly…','<p>Any *true* algorithm junkie knows that a linear system with multiple inputs (vector x) and multiple outputs (vector y) can be characterized by a matrix M. Each column of M contains the values of the system outputs when the input with the same number as that column is unity, and all other inputs are zero. Because the system is linear, the outputs for an arbitrary configuration&nbsp;of inputs can be obtained from a linear combination of the columns of M, using the equation: y = Mx Your challenge is to determine the inputs (x) that produce a given output (y), given the matrix (M). Your solution must read the matrix M from a text file that contains the number of rows (m, an integer) on the first line, the number of columns (n, an integer) on the second line, and one&nbsp;row of the matrix for each following line (floating point numbers separated by whitespace). It&nbsp;must then read the output vector which contains one output value per line (m floating point&nbsp;numbers).</p>','<p>In other words, you are being given the matrix M of dimensions m x n and the column vector y&nbsp;of dimension m. Your assignment is to discover the column vector x of dimension n (with&nbsp;exactly three non-zero entries) that makes the following equation true (shown with m = 3 and n =4):</p>\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1241_284e0b5f1142e95b71e727d303be6bf4.jpg\" />\n\n<p> </p>\n<p>Your solution must handle cases where the number of inputs (n) is larger than the number of&nbsp;outputs (m). In other words, the matrix M is underdetermined and the system has a many-to-one&nbsp;mapping (more than one input, x, can produce a given output, y). In this case, however, you are&nbsp;guaranteed that x has exactly 3 non-zero entries. Your solution should be printed to standard out&nbsp;and should give the indices of the non-zero entries in x as integer values 1 through n, inclusive,&nbsp;along with the value of those three inputs.&nbsp;Matrix M, when multiplied by your solution for x, should be able to reproduce each entry in&nbsp;vector y to within 0.01%. The three indices that you output need not appear in increasing order,but they must match the correct solution exactly.</p>','<p>The value you print for each index must be&nbsp;correct to 3 significant digits, but you are free to output extra digits</p>','5\n8\n0.484734 -0.147660 -0.224671 -0.060712 -0.324758 0.209435 -0.461233 -0.402469\n-0.215098 0.008685 -0.254425 0.423113 -0.033949 0.003395 0.126518 -0.099603\n0.048778 0.156349 0.228357 0.068926 0.418765 -0.480551 -0.026597 -0.202028\n-0.317657 -0.181216 -0.043709 -0.207515 0.396223 0.028521 -0.091552 0.419526\n-0.000758 0.163841 0.294449 -0.223812 -0.456281 0.239201 0.452864 0.284574\n0.034654\n-2.504212\n-4.200988\n3.153023\n3.517523','input 1 = -4.0365696\ninput 4 = -8.028227\ninput 6 = 7.180792','',57,0,0,64,2,0,0,38),(1242,'Leaping Lizards','<p>Overview Your platoon of wandering lizards has entered a strange room in the labyrinth you are exploring. As you are looking around for hidden treasures, one of the rookies steps on an innocent-looking&nbsp;stone and the room\'s floor suddenly disappears! Each lizard in your platoon is left standing on a fragile looking pillar, and a fire begins to rage below...&nbsp;The Problem&nbsp;Leave no lizard behind! Get as many lizards as possible out of the room, and report the number of casualties. The pillars in the room are aligned as a grid, with each pillar one unit away from the pillars to its east, west, north and south. Pillars at the edge of the grid are one unit away from the edge of the room (safety). Not all pillars necessarily have a lizard. A lizard is able to leap onto any&nbsp;unoccupied pillar that is within d units of his current one. A lizard standing on a pillar within leaping distance of the edge of the room may always leap to safety... but there\'s a catch: each pillar becomes weakened after each jump, and will soon collapse and no longer be usable by&nbsp;other lizards. Leaping onto a pillar does not cause it to weaken or collapse; only leaping off of it causes it to weaken and eventually collapse. Only one lizard may be on a pillar at any given time.&nbsp;</p>','<p>The input file will begin with a line containing a single integer representing the number of test cases, which is at most 25. Each test case will begin with a line containing a single positive integer n representing the number of rows in the map, followed by a single non-negative integer d representing the maximum leaping distance for the lizards. Two maps will follow, each as a&nbsp;map of characters with one row per line. The first map will contain a digit (0-3) in each position representing the number of jumps the pillar in that position will sustain before collapsing (0 means there is no pillar there). The second map will follow, with an \'L\' for every position where a lizard is on the pillar and a \'.\' for every empty pillar. There will never be a lizard on a position&nbsp;where there is no pillar.</p>\n<p>• Each input map is guaranteed to be a rectangle of size n * m, where 1 &lt;= n &lt;= 20 and&nbsp;1 &lt;= m &lt;= 20.</p>\n<p>• Leaping distance is guaranteed to be in the range [1, 3].</p>','<p>For each input case, you should return the number of lizards that could not escape. There should be a newline after each case, and your output format should follow the sample provided below.</p>','4\n3 1\n1111\n1111\n1111\nLLLL\nLLLL\nLLLL\n3 2\n00000\n01110\n00000\n.....\n.LLL.\n.....\n3 1\n00000\n01110\n00000\n.....\n.LLL.\n.....\n5 2\n00000000\n02000000\n00321100\n02000000\n00000000\n........\n........\n..LLLL..\n........\n........','Case #1: 2 lizards were left behind.\nCase #2: no lizard was left behind.\nCase #3: 3 lizards were left behind.\nCase #4: 1 lizard was left behind.','',57,0,0,64,2,0,0,38),(1243,'Pascal\'s Travels','<p>An n x n game board is populated with integers, one nonnegative integer per square. The goal is to travel along any legitimate path from the upper left corner to the lower right corner of the board. The integer in any one square dictates how large a step away from that location must be. If the step size would advance travel off the game board, then a&nbsp;step in that particular direction is forbidden. All steps must be either to the right or toward the bottom.Consider the 4 x 4 board shown in Figure 1, where the solid circle identifies the start position and the dashed circle identifies the target. Figure 2 shows the three paths from&nbsp;the start to the target, with the irrelevant numbers in each removed.</p>\n<img style=\"-webkit-user-select: none\" src=\"http://sharecode.ir/assets/problem_images/1243_69b89727c5b1aa565767a120be458c71.jpg\" />','<p>The input contains data for one to thirty boards, followed by a final line containing only the integer -1. The data for a board starts with a line containing a single positive integer n, 4 &lt;= n &lt;= 34, which is the number of rows in this board. This is followed by n&nbsp;rows of data. Each row contains n single digits, 0-9, with no spaces between them..</p>','<p>The output consists of one line for each board, containing a single integer, which is the&nbsp;number of paths from the upper left corner to the lower right corner.&nbsp;NOTE: 64-bit integer values are available as long values in Java or long long values in C++ (g++ compiler).</p>','4\n2331\n1213\n1231\n3110\n4\n3332\n1213\n1232\n2120\n5\n11111\n11111\n11111\n11111\n11111\n-1','3\n0\n70','',57,0,0,64,2,0,0,38),(1244,'Job Scheduling by Open Bidding','<p>Your team is setting up a computing resource devoted to batch processing of compute-bound jobs. In addition, you have decided to use static scheduling for each period of time. Naturally, you wish to maximize the income for each set of jobs run, and you have been given the responsibility of finding an optimal mix of jobs for each set of candidate jobs. The jobs are&nbsp;submitted by an open bid process: clients will specify the amount of processor time they wish to reserve and the dollar amount that they wish to pay. If a job finishes early, the client will still pay the full amount, and if a job exceeds the requested time, it will be terminated and (of course) the client will still pay the full amount. For purposes of scheduling, your team assumes that each&nbsp;job will in fact use its entire scheduled time slot. In the interests of good customer relations, though, you are not to include a bid in the schedule if there is not sufficient time available to satisfy it — we’re not going to over-book like the airlines do, and then hope someone doesn’t use&nbsp;the full allotment!</p>','<p>The input file begins with a line containing a single integer (no white space) specifying the number of problem sets in the file.&nbsp;Each problem set consists of (n+2) lines (no white space except as specified):&nbsp;</p>\n<p>• a single integer n (n &lt;= 500) specifying the number of candidate jobs to be scheduled&nbsp;</p>\n<p>•&nbsp;n lines giving the bid as an integer specifying the number of seconds followed by a single space and then a dollar amount given in decimal form (always showing two digits to the&nbsp;right of the decimal point)</p>\n<p>• a single integer t (t &lt;= 2000) specifying the amount of time to be scheduled with these jobs&nbsp;</p>','<p>Each problem set will be numbered (beginning at one) and will generate a single line: Problem &lt;k&gt;: &lt;t&gt; seconds scheduled for $abc.de where &lt;k&gt; is replaced by the problem set number, &lt;t&gt; is replaced with the total time actually&nbsp;scheduled (possibly not the full input time), and $abc.de is replaced by the dollar amount, given always with the leading currency symbol and with two digits to the right of the decimal point. There will be no blank lines, and the final line will end with the new-line character.</p>','1\n10\n19 0.78\n12 0.31\n17 0.77\n22 0.77\n8 0.56\n10 0.33\n17 0.35\n24 0.12\n22 0.70\n5 0.52\n120','Problem 1: 120 seconds scheduled for $4.78','',57,0,0,64,2,0,0,38),(1247,'Who needs 8 Queens when you can have N?','<p>The N-Queens problem is an obvious expansion of the eight-queens problem that has been&nbsp;around for a long time: Given a board with NxN squares and N queens, position the queens on the board such that no two queens can attack each other; in other words, so that no two queens sit on the same horizontal row, vertical column, or along either possible diagonal (row+column = k for one, row–column = k for the other).&nbsp;Finding all the solutions to the problem for a given N is known to be worse than exponential in difficulty — O(N!). One can, however, find a single solution to the problem in significantly less&nbsp;time if one looks beyond the standard backtracking solution to another possible solution strategy.&nbsp;This problem asks you to find such a solution strategy. Note that the solution found may not necessarily be the one obtained first in the backtracking approach.&nbsp;Since there is a huge number of candidate solutions for any but the very smallest values of N, the judges have access to a solution validation program. Consequently it is critical that you abide by&nbsp;the output specifications, since they constitute the input specifications for the validator.</p>','<p>The input file begins with a line containing a single integer (no white space) specifying the&nbsp;number of problem specifications in the file. Exactly that many lines follow, each giving the&nbsp;value of N (with no white space) for which you are to solve the N-queens problem. The values&nbsp;of N may range from 4 up through 300; in other words, you should be able to find some solution&nbsp;to the 300-Queens problem in less than 120 seconds.</p>','<p>For each problem, output on a single line that number (N). Following that, give the permutation vector of column positions (0 through N–1) that specify the queen’s position on each succeeding row. The permutation vector is to be of N integers separated by white space. You may choose&nbsp;for yourself whether you use simple blanks for white space (giving the solution vector on one</p>\n<p>line) or you put each value on a separate line. In the interest of printing, the sample output here will use an approach that generates lines of values that do not exceed 65 characters in length. You are not held to that format.</p>','4\n4\n8\n25\n50','4\n2 0 3 1\n8\n2 7 3 6 0 5 1 4\n25\n14 7 18 22 13 10 24 11 1 20 6 0 15 8 5 16 23 17 4 21 12 2 19 3 9\n50\n22 13 15 44 27 3 1 4 19 40 20 5 31 49 7 29 18 6 2 36 28 12 38 43\n39 11 26 14 0 30 34 8 41 9 16 10 17 33 45 42 46 24 47 35 32 23\n25 37 21 48','',57,0,0,64,2,0,0,38),(1248,'Time to Graduate','<p>A prospective CS student is investigating how many semesters it will take to graduate from a variety of different universities. Each university provides a list of required courses, their prerequisites, and when each course is offered. Given this information,&nbsp;determine the minimum number of semesters to graduate. Consider the following example. A student is required to take 4 courses, mt42, cs123, cs456, and cs789. mt42 is only offered in the fall semester and has no prerequisites.Similarly, cs123 is only offered in the spring semester and has no prerequisites. cs456 is only offered in the spring semester and has both cs123 and mt42 as prerequisites. Finally,cs789 is offered in both fall and spring and has cs456 as its only prerequisite. The shortest time to graduate is 5 semesters, by taking mt42 in the fall, cs123 in the next spring, cs456 the following spring (since it is not offered in the fall) and finally cs789 the following fall.</p>\n<p>For this problem, there are only two semesters, fall and spring. Always start counting semesters from the fall.&nbsp;In addition to the fall/spring scheduling issues, there is one slight complication. In order&nbsp;to keep the dormitories full, each university limits the number of courses that can be&nbsp;taken in any semester. This limit appears as part of the input data. The third example&nbsp;below illustrates this issue.</p>','<p>There are one to twenty-five data sets, followed by a final line containing only the integers -1 -1. A data set starts with a line containing two positive integers n, 1 &lt;= n &lt;= 12, which is the number of courses in this data set and m, 2 &lt;= m &lt;=&nbsp;6, which is the maximum number of courses that can be taken in any single semester. The next line contains the n course identifiers. Each is a 1-5 character string from the set {a-z, 0-9}. Following the course identifiers is the individual course information.&nbsp;This consists of n lines, one line for each course, containing the course identifier, semester offered (\'F\'=Fall, \'S\'=Spring, \'B\'=Both semesters), the number of prerequisite courses, p, 0 &lt;= p &lt;= 5, and finally p prerequisite course identifiers. The first example data set below corresponds to the problem described above.</p>','<p>The output contains one line for each data set, formatted as shown in the sample output.</p>','4 6\ncs123 mt42 cs456 cs789\nmt42 F 0\ncs123 S 0\ncs456 S 2 cs123 mt42\ncs789 B 1 cs456\n3 6\nmath1 comp2 comp3\ncomp3 S 1 comp2\nmath1 S 0\ncomp2 F 1 math1\n4 3\nm10 m20 c33 c44\nm10 B 0\nm20 B 0\nc33 B 0\nc44 B 0\n-1 -1','The minimum number of semesters required to graduate is 5.\nThe minimum number of semesters required to graduate is 4.\nThe minimum number of semesters required to graduate is 2.','',57,0,0,64,2,0,0,12),(1211,'The Heart of the Country','<p>The nation of Graphia is at war. The neighboring nations have for long watched in jealousy as Graphia erected prosperous cities and connected them with a network of highways. Now they want a piece of the pie.<br />Graphia consists of several cities, connected by highways. Graphian terrain is rough, so the only way to move between the cities is along the highways. Each city has a certain number of troops quartered there. Graphia’s military command knows that it will require a certain number of troops, K, to defend any city. They can defend a city with the troops stationed there, supported by the troops in any other city which is directly connected with a highway, with no cities in between. </p>\n<div align=\"center\">Any troops further away than that simply cannot get there in time. They also know that their enemies will onlyattack one city at a time – so the troops in a city can be used to defend that city, as well as any of its neighbors. However, if a city can’t be defended, then the military command must assume that the troops quartered in that city will be captured, and cannot aid in the defense of Graphia. In the case below, suppose K=10. City C might seem well defended, but it will eventually fall.\n<img alt=\"http://sharecode.ir/assets/problem_images/1211_5674ed9a2d93994df63ed0474512dfb7.jpg\" src=\"assets/problem_images/1211_5674ed9a2d93994df63ed0474512dfb7.jpg\" /><br /></div><div align=\"center\"><br /><div align=\"left\">Graphia\'s leadership wants to identify the Heart of their country – the largest possible group of cities that can mutually defend each other, even if all of the other cities fall.<br />More formally, a city is defensible if it can draw a total of at least K troops from itself, and from cities directly adjacent to it. A set of cities is defensible if every city in it is defensible, using only troops from itself and adjacent cities in that set.<br />The Heart of the country is the largest possible defensible set of cities - that is, no other defensible set of cities has more cities in it.<br /><br /></div></div>','<p>There will be several data sets. Each set begins with two integers, N and K, where N is the number of cities (3 &lt;= N &lt;= 1000), and K is the number of troops required to defend a city. The cities are numbered 0 through N-1.<br />On the next N lines are descriptions of the cities, starting with city 0. Each of the city description lines begins with an integer T, indicating the number of troops quartered in that city (0 &lt;= T &lt;= 10000). This is followed by an integer M, indicating the number of highways going out of that city, and then M integers, indicating the cities those highways go to. No two highways will go from and to the same cities, so every city in each list will be unique. No highway will loop from a city back to the same city. The highways go both ways, so that if city I is in city J’s list, then it’s guaranteed that city J will be in city I’s list in the input. The input will end with a line with two space-separated 0’s.</p>','<p>For each data set, print two integers on a single line: The number of cities in the heart of the country, and the number of troops in the heart of the country. Print a space between the integers. There should be no blank lines between outputs.</p>','4 900\n100 2 1 2\n200 2 0 3\n500 2 0 3\n1000 2 1 2\n4 900\n100 3 1 2 3\n200 3 0 3 2\n500 3 1 3 0\n1000 3 2 1 0\n0 0\n','3 1700\n4 1800\n','',53,0,0,64,1,0,0,12),(1212,'Lawrence of Arabia','<p>T. E. Lawrence was a controversial figure during World War I. He was a British officer, who served in the Arabian theater. He led a group of Arab nationals in guerilla strikes against the Ottoman Empire. His primary targets were the railroads. A highly fictionalized version of his exploits was presented in the blockbuster movie, “Lawrence of Arabia”.</p>\n<p>You are to write a program to help Lawrence figure out how to best use his limited resources. You have some information from British Intelligence. First, the rail line is completely linear – there are no branches, no spurs. Next, British Intelligence has assigned a Strategic Value to each depot – an integer from 1 to 5. But, a depot is of no use on its own, it only has value if it is connected to other depots. The Strategic Value of the entire railroad is calculated by adding up the products of the Strategic Values for every pair of depots that are connected, directly or indirectly, by the rail line. Consider this railroad:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1212_2c99ae3d43bac73ea9a527b7280fe852.jpg\" src=\"assets/problem_images/1212_2c99ae3d43bac73ea9a527b7280fe852.jpg\" /> </p>\n<p align=\"left\">Its Strategic Value is 4*5 + 4*1 + 4*2 + 5*1 + 5*2 + 1*2 = 49.<br />Now, suppose that Lawrence only has enough resources for one attack. He cannot attack the depots themselves – they’re too well defended. He must attack the rail line between depots, in the middle of the desert. Consider what would happen if Lawrence attacked this rail line right in the middle:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1212_109991157660e69306ef4ca1d144a625.jpg\" src=\"assets/problem_images/1212_109991157660e69306ef4ca1d144a625.jpg\" /></p>\n<p align=\"left\">The Strategic Value of the remaining railroad is 4*5 + 1*2 = 22. But, suppose Lawrence attacks between the 4 and 5 depots:</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1212_b72cd4233886257f6b81223eb5f6de4e.jpg\" src=\"assets/problem_images/1212_b72cd4233886257f6b81223eb5f6de4e.jpg\" /></p>\n<p align=\"left\">The Strategic Value of the remaining railroad is 5*1 + 5*2 + 1*2 = 17. This is Lawrence’s best option.<br />Given a description of a railroad and the number of attacks that Lawrence can perform, figure out the smallest Strategic Value that he can achieve for that railroad.</p>','<p>There will be several data sets. Each data set will begin with a line with two integers, N and M. N is the number of depots on the railroad (1 &lt;= N &lt;= 500), and M is the number of attacks Lawrence has resources for (0 &lt;= M &lt; N). On the next line will be N integers, each from 1 to 5, indicating the Strategic Value of each depot in order. End of input will be marked by a line with two space-separated 0’s.</p>','<p>For each data set, print a single integer, indicating the smallest Strategic Value for the railroad that Lawrence can achieve with his attacks. Print each integer on its own line. There should be no blank lines between outputs.</p>','4 1\n4 5 1 2\n4 2\n4 5 1 2\n0 0\n','17\n2\n','',53,0,0,64,1,0,0,12),(1213,'Shoring Up the Levees','<p>The tiny country of Waterlogged is protected by a series of levees that form a quadrilateral as shown below:</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1213_bd02033e2f921bc5bf5f7e57bad13494.jpg\" src=\"assets/problem_images/1213_bd02033e2f921bc5bf5f7e57bad13494.jpg\" /><br /><div align=\"left\">The quadrilateral is defined by four vertices. The levees partition the country into four quadrants. Each quadrant is identified by a pair of vertices representing the outside edge of that quadrant. For example, Quadrant 1 shown below is defined by the points (x1,y1) and (x2,y2).<br /><div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1213_7c7a7f676e55cf479830f8f7015e838b.jpg\" src=\"assets/problem_images/1213_7c7a7f676e55cf479830f8f7015e838b.jpg\" /><br /></div>It happens very often that the country of Waterlogged becomes flooded, and the levees need to be reinforced, but their country is poor and they have limited resources. They would like to be able to reinforce those levees that encompass the largest area first, then the next largest second, then the next largest third,<br />and the smallest area fourth.<br />Help Waterlogged identify which quadrants are the largest, and the length of the levees around them<br /><br /><br /></div></div>','<p>There will be several sets of input. Each set will consist of eight real numbers, on a single line. Those numbers will represent, in order:<br />X1 Y1 X2 Y2 X3 Y3 X4 Y4<br />The four points are guaranteed to form a convex quadrilateral when taken in order – that is, there will be no concavities, and no lines crossing. Every number will be in the range from -1000.0 to 1000.0 inclusive. No Quadrant will have an area or a perimeter smaller than 0.001. End of the input will be a line with eight<br />0.0’s.</p>','<p>For each input set, print a single line with eight floating point numbers. These represent the areas and perimeters of the four Quadrants, like this:<br />A1 P1 A2 P2 A3 P3 A4 P4<br />Print them in order from largest area to smallest – so A1 is the largest area. If two Quadrants have the same area when rounded to 3 decimal places, output the one with the largest perimeter first. Print all values with 3 decimal places of precision (rounded). Print spaces between numbers. Do not print any blank lines between outputs.</p>','1 2 1 5 5 2 2 0\n3.5 2.2 4.8 -9.6 -1.2 -4.4 -8.9 12.4\n0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n','5.100 11.459 3.400 9.045 0.900 6.659 0.600 4.876\n44.548 38.972 21.982 25.997 20.342 38.374 10.038 19.043\n','',53,0,0,64,1,0,0,12),(1214,'Combination Lock','<p>A combination lock consists of a circular dial, which can be turned (clockwise or counterclockwise) and is embedded into the \"fixed\" part of the lock. The dial has N evenly spaced \"ticks\". The ticks are numbered from 0 to N-1, increasing in the clockwise direction. The fixed part of the lock has a \"mark\" which always \"points to\" a particular tick on the dial. Of course, the mark points to different ticks as the dial is turned.</p>\n<p>The lock comes with three code numbers T1, T2, T3. These are non-negative integers and each of them is less than N. No two of the three are the same<br />The lock is opened in three stages of operations:<br />1. Turn the dial clockwise exactly two full revolutions, and continue to turn it clockwise until the mark points to tick T1.<br />2. Turn the dial one full revolution counterclockwise and continue to turn it counterclockwise until the mark points to tick T2.<br />3. Turn the dial clockwise until the mark points to tick T3. The lock should now open.<br />You must find the maximum possible number of ticks the dial must be turned in order to open the lock. The number of ticks turned is defined to be the sum of the ticks turned in the three stages outlined above, and is always positive regardless of direction.</p>','<p>The input file consists of a number of test cases, one test case per line. Each line of the input file contains four integers: N, T1, T2, T3, in this order, separated by blank spaces. The integer N is a multiple of 5, 25 &lt;= N &lt;= 100. The numbers T1, T2 and T3 satisfy the constraints stated under the description above. The input will be terminated by a line with four blank-separated 0’s.</p>','<p>For each test case, print the maximum possible number of ticks the dial must be turned in order to open the lock. Print each on its own line. There should be no blank lines between outputs.</p>','80 20 40 50\n80 10 79 12\n0 0 0 0\n','409\n455\n','',53,0,0,64,1,0,0,12),(1215,'Fred’s Lotto Tickets','<p>Fred likes to play the lotto. Whenever he does, he buys lots of tickets. Each ticket has 6 unique numbers in the range from 1 to 49, inclusive. Fred likes to “Cover all his bases.” By that, he means that he likes for each set of lottery tickets to contain every number from 1 to 49, at least once, on some ticket. Write a program to help Fred see if his tickets “Cover all the bases.”</p>','<p>The input file consists of a number of test cases. Each case starts with an integer N (1 &lt;= N &lt;= 100), indicating the number of tickets Fred has purchased. On the next N lines are the tickets, one per line. Each ticket will have exactly 6 integers, and all of them will be in the range from 1 to 49 inclusive. No ticket will have duplicate numbers, but the numbers on a ticket may appear in any order. The input ends with a line containing only a 0.</p>','<p>Print a list of responses for the input sets, one per line. Print the word Yes if every number from 1 to 49 inclusive appears in some lottery ticket in the set, and No otherwise. Print these words exactly as they are shown. Do not print any blank lines between outputs.</p>','1\n1 2 3 4 5 6\n9\n1 2 3 4 5 6\n10 9 8 7 12 11\n13 14 15 16 17 18\n19 20 21 22 23 24\n25 26 27 28 29 30\n31 32 33 34 35 36\n37 38 39 40 41 42\n43 44 45 46 47 48\n49 19 34 27 25 13\n0','No\nYes','',53,0,0,64,1,0,0,12),(1216,'A No-Win Situation','<p>Consider a simple variation of the card game Blackjack. In this game, a single player plays against the dealer. The game uses a standard deck of cards, where numbered cards are worth the number of points on the card for the cards numbered 2 to 10, 10 points for the face cards (King, Queen, and Jack) and either 1 or 11 points for the Aces.<br />The dealer deals the first card in the deck to the player, the second to the dealer, the third to the player, and the fourth to the dealer. The player then may continue to draw cards until s/he decides that the total is as close as possible to 21 and stops voluntarily or until s/he goes over 21. If the player goes over 21, the player loses. Then the dealer must draw cards until s/he reaches 17 or more points (with aces counting as 11 when possible). If the dealer goes over 21, the dealer loses. If neither of them goes over 21, the winner is the one who comes as close as possible to 21. If the player and the dealer have the same total, the player wins.<br />For example, suppose the first cards in the deck are Queen, 6, 4, 9, and 10. On the initial deal, the player will receive Queen and 4 (for a total of 14) and the dealer will receive 6 and 9 (for a total of 15). If the player does not select a card,<br />the dealer will have to draw (because the dealer\'s total is less than 17) and will draw the 10, going over, so the player will win. But if the player draws a card (the 10), the player\'s total will be 24, so the player will lose.<br />In some situations, it is impossible for the player to win. Consider the case when the cards in the deck are: 10, 3, 4, King, 3, 5. The player will be dealt the cards 10 and 4. The dealer will have 3 and King. The table below illustrates what happens for each number of cards the player might draw:</p>\n<table width=\"468\" align=\"center\" border=\"1\" height=\"104\"><tbody><tr><td>Cards drawn</td><td>Player\'s hand (Points)</td><td>Dealer\'s hand (Points)</td></tr><tr><td>0</td><td>10, 4 (14)</td><td>3, King, 3, 5 (21)</td></tr><tr><td>1</td><td>10, 4, 3 (17)</td><td>3, King, 5 (18)</td></tr><tr><td>2</td><td>10, 4, 3, 5 (22)</td><td>3, King (13)<br /></td></tr></tbody></table> <p>No matter how many cards the player draws, the player cannot win. In this problem, you will analyze decks to determine if they lead to a situation in which the player cannot win.</p>','<p>The input to the program will be one or more decks. Each deck will be represented by a string, on its own line. Each deck will consist of at least 4 cards. where a card is either an integer d, 2 &lt;= d &lt;= 9, representing a numbered card, or one of the letters A, K, Q, J or T, representing Ace, King, Queen, Jack, or Ten,respectively. The letters will be in upper case. There will be no other characters on a line. In particular, there will be no spaces. There will always be enough cards to try all valid draws. End of input is indicated by the word JOKER, alone on a line.</p>','<p>Print a list of responses for the input sets, one per line. Print the word Yes if there is a number of cards the player can draw and win, and No if there is no way for the player to win. Print these words exactly as they are shown. Do not print any blank lines between outputs.</p>','Q649T\nT34K35\nAA2T34A5KKQAJ\nJOKER\n','Yes\nNo\nYes\n','',53,0,0,64,1,0,0,12),(1217,'A Walk in the Park','<p>You are responsible for inspecting the trees located in a park, to make sure they remain healthy. The location of each tree is given to you as a point in the two-dimensional plane, distinct from that of every other tree. Due to recently-replanted grass, you are only allowed to walk through the park along a collection of paths. Each path is described by an infinite-length horizontal or vertical line in the two-dimensional plane. No tree lies on any path.<br />You are concerned that it may not be possible to view all the trees in the park from the paths. In particular, a tree is visible only if you can view it by standing on some path while facing in a direction perpendicular to that path; there must be no intervening tree that obstructs your view. Given the geometrical configuration of the park, please report the number of visible trees.</p>','<p>There will be multiple input sets. For each input set, the first line will contain two integers, N and M, (0 &lt; N,M &lt;= 100000), separated by a space. N is the number of trees, and M is the number of paths.<br />The next N lines each contain two space-separated integers, X and Y, specifying the coordinates of a tree. X and Y may be any 32-bit integers.<br />The next M lines each describe a path (a vertical or horizontal line). They have the form x=K or y=K, with no spaces. K may be any 32-bit integer. x and y will be lower case.<br />End of the input is signified by a line with two space-separated 0’s.</p>','<p>For each input set, print a single line containing one integer, specifying the number of visible trees. There should be no blank lines between outputs.</p>','6 3\n-1 3\n4 2\n6 2\n6 3\n6 4\n4 3\nx=0\ny=-1\ny=5\n1 2\n2 3\nx=5\ny=5\n0 0\n','5\n1\n','',53,0,0,64,1,0,0,12),(1218,'Teleport Out!','<p>You are in a rectangular maze and you would like to leave the maze as quickly as possible. The maze is a rectangular grid of square locations. Some locations are blocked. Some other locations are exits. If you arrive at an exit location, you can immediately leave the maze.<br />You may walk one step at a time, onto one of the locations adjacent to your current location. Two locations are adjacent if they share a side. That is, you can only move one step North, South, East or West. Of course, you cannot step off the maze, and you cannot step onto a blocked location. <br />In addition, at any step, you may choose to use your teleport device. This device will send you to a random non-blocked location inside the maze with uniform probability (including, possibly, the one where you currently are standing!). If the device happens to send you onto a spot that is also an exit, then you leave the<br />maze immediately. Hooray!<br />The only way to leave the maze is by moving onto an exit (either by teleport or walking), you may not walk off the boundary of the maze. Write a program to calculate the expected number of steps you need in order to leave the maze.<br />Assume that you would choose your actions (movements and using teleport device) optimally in order to minimize the expected number of steps to leave the maze. Using the teleport device is considered one step.</p>','<p>There will be multiple test cases. Each test case starts with a line containing two positive integers R and C (R &lt;= 200, C &lt;= 200). Then, the next R lines each contain C characters, representing the locations of the maze. The characters will be one of the following:<br />E: represents an exit, there will be at least one E in every maze.<br />Y: represents your initial location, there will be exactly one Y in every maze.<br />X: represents a blocked location.<br />.: represents an empty space.<br />You may move/teleport onto any location that is marked E, Y or . . The end of input is marked by a line with two space-separated 0’s.</p>','<p>For each test case, print one line containing the minimum expected number of steps required to leave the maze, given that you make your choices optimally to minimize this value. Print your result to 3 decimal places. Do not print any blank lines between outputs.</p>','2 1\nE\nY\n2 2\nE.\n.Y\n3 3\nEX.\nXX.\n..Y\n3 3\nEXY\n.X.\n...\n0 0\n','1.000\n2.000\n6.000\n3.250\n','',53,0,0,64,1,0,0,12),(1219,'Worms','<p>Biologists are studying a certain, interesting kind of worm. Each worm can be seen as a line of cells of different types. When a worm is born, it only consists of a single cell. Every day, exactly 1 cell of the entire worm will grow and change into 2 cells. It is rather easy to determine the age of any such worm, since it’s<br />simply one less than the number of cells the worm has. During a worm’s growth, a cell does not change into any 2 arbitrary cells; each worm has a set of “growth rules” (encoded in its DNA) that it obeys. A growth rule<br />can be expressed as A→BC, where A, B and C are uppercase letters (with letters A-T), representing different types of the worm’s cells. The rule A→BC means that in one day, any single cell A can be grown into the 2 adjacent cells BC, in that order. Note that the rule I→JK is different from the rule I→KJ. Different worms may have a different set of growth rules.<br />The worms have now thrown the scientists for a loop. Due to some unknown reason, some worms have mutated into a new kind of specimen. This new kind of worm has the exact same properties, except that during its growth, multiple parts of its body can grow at the same time. That is, every day any (at least one,<br />at most all) of its cells can grow; each cell that grows will grow into exactly 2 cells (obeying growth rules similar to their older cousins).<br />As a result of the mutation, it is no longer trivial to determine the age of a worm. In fact, the exact age of some worms cannot be determined. As a simple example, if a worm has growth rules: A→BC, B→AC, C→AB, and the worm’s current cell structure is ACAB, the worm can be either 2 or 3 days old (A→BC→ACAB, or A→BC→ACC→ACAB). Your task is to find out the youngest possible age of any given mutated worm.</p>','<p>There will be multiple worms for examination in the input. Each worm’s data set begins with an integer N (1 &lt;= N &lt;= 80), the number of growth rules. The next N lines each contain 3 uppercase letters (with letters A-T), representing a growth rule for the current worm. The 1st cell can grow into (and be replaced by) the 2nd and 3rd cells, in order, during the growth process. That is, the line: </p>\n<p>ABC means A→BC is a growth rule for the current worm.</p>\n<p>The next (and last) line of each worm’s data set contains a string of uppercase letters (with letters A-T). This line represents the current cell structure of the worm. Every worm in the input will have at least 1 and at most 50 cells. The last worm will be followed by a line with a single 0.</p>\n<p> </p>','<p>For each worm, if the worm can be grown into the given cell sequence with the given growth rule set (starting with any arbitrary single cell), then print the minimum age, in days, of the worm, as an integer on its own line. If the worm cannot be grown into the given cell sequence with the given rule set (starting with any arbitrary single cell), then simply print the number -1 on its own line. Print no blank lines between outputs.</p>','3\nABC\nBAC\nCAB\nACAB\n1\nAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n2\nPAA\nAAA\nAAAAAAAAAAAAAAAP\n1\nBAB\nAAAAAAB\n0\n','2\n6\n-1\n6\n','',53,0,0,64,1,0,0,12),(1228,'Stock Exchange','<p>The world financial crisis is quite a subject. Some people are more relaxed while others are quite anxious. John is one of them. He is very concerned about the evolution of the stock exchange. He follows stock prices every day looking for rising trends. Given a sequence of numbers p<sub>1</sub>, p<sub>2</sub>,...,p<sub>n</sub> representing stock prices, a rising trend is a subsequence p<sub>i1</sub> &lt; p<sub>i2</sub> &lt; · · · &lt; p<sub>ik</sub>, with i<sub>1</sub> &lt; i<sub>2</sub> &lt; · · · &lt; i<sub>k</sub>. John’s problem is to find very quickly the longest rising trend.</p>','<p>The program input is from a text file. Each data set in the file stands \nfor a particular set of stock prices. A data set starts with the length L\n (L ≤ 100000) of the sequence of numbers, followed by the numbers (a \nnumber fits a long integer). The program prints the length of the \nlongest rising trend.<br />\nWhite spaces can occur freely in the input. The input data are correct and terminate with an end of file.</p>\nWhite spaces can occur freely in the input. The input data are correct and terminate with an end of file.','<p>For each set of data the program prints the result to the standard output from the beginning of a line.</p>','6\n5 2 1 4 5 3\n3\n1 1 1\n4\n4 3 2 1\n','3\n1\n1\n','<p>In the first case, the length L of the sequence is 6. The sequence is 5,\n 2, 1, 4, 5, 3. The result for the data set is the length of the longest\n rising trend: 3.</p>',58,0,0,64,1,0,0,12),(1229,'Sky Code','<p>Stancu likes space travels but he is a poor software developer and will never be able to buy his own spacecraft. That is why he is preparing to steal the spacecraft of Petru. There is only one problem – Petru has locked the spacecraft with a sophisticated cryptosystem based on the ID numbers of the stars from the Milky Way Galaxy. For breaking the system Stancu has to check each subset of four stars such that the only common divisor of their numbers is 1. Nasty, isn’t it? Fortunately, Stancu has succeeded to limit the number of the interesting stars to N but, any way, the possible subsets of four stars can be too many. Help him to find their number and to decide if there is a chance to break the system.</p>','<p>In the input file several test cases are given. For each test case on the first line the number N of interesting stars is given (1 ≤ N ≤ 10000). The second line of the test case contains the list of ID numbers of the interesting stars, separated by spaces. Each ID is a positive integer which is no greater than 10000. The input<br />data terminate with the end of file.</p>','<p>For each test case the program should print one line with the number of subsets with the asked property.</p>','4\n2 3 4 5\n4\n2 4 6 8\n7\n2 3 4 5 7 6 8\n','1\n0\n34\n','',58,0,0,64,1,0,0,12),(1230,'Perfect Election','<p>In a country (my memory fails to say which), the candidates {1, 2 ... N} are running in the parliamentary election. An opinion poll asks the question \"For any two candidates of your own choice, which election result would make you happy?\". The accepted answers are shown in the table below, where the candidates i and j are not necessarily different, i.e. it may happen that i=j. There are M poll answers, some of which may be similar or identical. The problem is to decide whether there can be an election outcome that conforms to all M answers. We say that such an election outcome is perfect. The result of the problem is 1 if a perfect election outcome does exist and 0 otherwise.</p>','<p>Write a program that reads sets of data from an input text file. Each data set corresponds to an<br />instance of the problem and starts with two integral numbers: 1≤N≤1000 and 1≤M≤1000000. The<br />data set continues with M pairs ±i ±j of signed numbers, 1≤i,j≤N. Each pair encodes a poll<br />answer as follows:<br />I would be happy if at least one from i and j is elected.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; +i +j<br />I would be happy if at least one from i and j is not elected.&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; -i&nbsp;&nbsp; -j<br />I would be happy if i is elected or j is not elected or both events happen.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +i&nbsp; -j<br />I would be happy if i is not elected or j is elected or both events happen.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -i +j<br />The input data are separated by white spaces, terminate with an end of file, and are correct. </p>','<p>For each data set the program prints the result of the encoded election problem. The result, 1 or 0, is printed on the standard output from the beginning of a line. There must be no empty lines on output.</p>','3 3 +1 +2 -1 +2 -1 -3\n2 3 -1 +2 -1 -2 +1 -2\n2 4 -1 +2 -1 -2 +1 -2 +1 +2\n2 8 +1 +2 +2 +1 +1 -2 +1 -2 -2 +1 -1 +1 -2 -2 +1 -1\n','1\n1\n0\n1\n','<p>For the first data set the result of the problem is 1; there are several perfect election outcomes, e.g. 1 is not elected, 2 is elected, 3 is not elected. The result for the second data set is justified by the perfect election outcome: 1 is not elected, 2 is not elected. The result for the third data set is 0. According to the answers -1 +2 and -1 -2 the candidate 1 must not be elected, whereas the answers +1 -2 and +1 +2 say that candidate 1 must be elected. There is no perfect election outcome. For the fourth data set notice that there are similar or identical poll answers and that some answers mention a single candidate. The result is 1.</p>',58,0,0,64,1,0,0,12),(1231,'Lucky cities','<p>John has recently arrived in Romania for the South Eastern European Regional competitions. John has never been to Romania before so Romanians decided to organize sightseeing tour for him. This tour will include several Romanian cities and none of them will be visited more than once. John will start in one city and will visit some other cities according to a guide tour. At the end of the tour John will return to the starting point.<br />There are N cities numbered from 1 to N and M two-way roads in the country. Each road connects two different cities. Consider a sightseeing tour for John c<sub>1</sub>,c<sub>2</sub>, ...,c<sub>n</sub>, where each c<sub>i</sub> denotes a city in Romania. Then all c<sub>i</sub> must be distinct, c<sub>i</sub> and c<sub>i+1</sub> must be connected by a road, where i=1,2,...,n-1, c<sub>n</sub> and c<sub>1</sub> must be connected by a road as well.<br />Being a odd person John would like to visit an odd number of cities. The organizers have drawn the plan of all possible tours with an odd number of cities.<br />Residents of the cities would like John to visit them. So if there is at least one tour passing through some city than this city is called lucky. Your task is to calculate the number of lucky cities in Romania.</p>','<p>The first line of input contains a single integer T - number of test cases. Every test case starts with a line containing two integers seperated by a single space - N and M. Each of the next M lines will contain two integers a<sub>i</sub> and b<sub>i</sub> separated by a single space - the labels of the cities that i-th road connects.</p>\n<p>Constrains:<br />1 ≤ T ≤ 77,<br />0 ≤ N, M ≤ 100000 (105),<br />1 ≤ a<sub>i</sub> &lt; b<sub>i</sub> ≤ N.</p>','<p>Output should contain T lines – answers for each of the test cases.</p>','1\n7 7\n1 5\n3 5\n3 7\n1 7\n6 7\n4 7\n4 6\n','3\n','',58,0,0,64,1,0,0,12),(1232,'Build Your Home','<p>Mr. Tenant is going to buy a new house. In fact, he is going to buy a piece of land and build his new house on it. In order to decide which piece of land to buy, Mr. Tenant needs a program which will give a score to each piece. Each candidate piece of land is a polygonal shape (not necessarily convex), and Mr. Tenant wonders what the best score is. Among possible scores, he considered the number of vertices, sum of angles, minimum number of required guards, and so forth. Finally, Mr. Tenant decided that the best score for a piece of land would simply be its area. Your task is to write the desired scoring program.</p>','<p>The input file consists of multiple pieces of land. Each piece is a simple polygon (that is, a polygon which does not intersect itself). A polygon description starts with a positive integer number k, followed by k vertices, where each vertex consists of two coordinates (floating-point numbers): x and y. Naturally, the last vertex is connected by an edge to the first vertex. Note that each polygon can be ordered either clockwise or counterclockwise. The input ends with a “0” (the number zero).</p>','<p>For each piece of land, the output should consist of exactly one line containing the score of that piece, rounded to the nearest integer number. (Halves should be rounded up, but Mr. Tenant never faced such cases.) Hint: The scoring program has to handle well degenerate cases, such as, polygons with only one or two vertices.</p>','1         123.45      67.890\n3         0.0001  0     1.999   0    0    2\n5         10 10      10  12   11   11           12   12        12.0   10.0\n0\n','0\n2\n3\n','',58,0,0,64,1,0,0,12),(1233,'Quick answer','<p>Joe is fond of computer games. Now, he must solve a puzzling situation. In front of his eyes lies a huge map with fortified towns. His enemy is a very powerful and tricky character who can connect and disconnect the towns by giving some commands. Two towns are connected if they have been directly connected or interconnected through some other connected towns at some moment in time. When a town is disconnected it gets isolated and clears its own connection history, not the connection history of the other towns. Each connection is bi-directional. Initially the towns are isolated. Joe is asked to answer quickly if two towns are connected, according to the history of the character’s commands.<br />Write a program which based on information input from a text file counts the number of yes answers and the number of no answers to questions of the kind: is town<sub>i</sub> connected with town<sub>j</sub>?</p>','<p>The program reads data from a text file. Each data set in the file stands for a particular map and the associated character’s commands, as follows:<br />1) The number of towns on the map N (N ≤ 10000);<br />2) A list of commands of the form:<br />a) c town<sub>i</sub> town<sub>j</sub>, where town<sub>i</sub> and town<sub>j</sub> are integers from 1 to no_of_towns. The command means that town<sub>i</sub> and town<sub>j</sub> get connected.<br />b) d town<sub>i</sub>, where town<sub>i</sub> is an integer from 1 to no_of_towns. The command means that town<sub>i</sub> gets disconnected.<br />c) q town<sub>i</sub> town<sub>j</sub> where town<sub>i</sub> and town<sub>j</sub> are integers from 1 to no_of_towns. The command stands for the question: is town<sub>i</sub> connected with town<sub>j</sub>?<br />d) e, that ends the list of commands<br />Each command is on a separate line. Commands (a), (b), (c) can appear in any order. The towns’ connectivity is updated after each command of type (a) or (b). Each command of type (c) is processed according to the current configuration.</p>','<p>The program outputs two numbers on the same line in the order N1 , N2.</p>\n<p>where N1 is the number of yes answers and N2 is the number of no answers.</p>','4\nc 1 2\nc 3 4\nq 1 3\nc 2 3\nq 1 4\nd 2\nq 4 1\nq 2 4\ne\n','2 , 2\n','',58,0,0,64,1,0,0,12),(1234,'Lucky numbers','<p>John has recently arrived in Bucharest for the South Eastern European Regional Contest. John is famous for his theory of lucky numbers. That’s why all the contestants and spectators are very happy. According to that theory 4 and 7 are lucky digits, and all the other digits are not lucky. A lucky number is a number that contains only lucky digits in decimal notation. A very lucky number is a number that can be expressed as a product of several lucky numbers. A lucky number by itself is considered to be very lucky. For example, numbers 47, 49, 112 are very lucky.<br />Your task is to calculate the number of very lucky numbers that are not less than A and not greater than B. Of course, numbers A and B are given by John.</p>','<p>The first line of the input contains a single integer T – a number of test cases. Each of the next T lines contains two integers separated by a single space – A and B.<br />Constrains:<br />1 ≤ T ≤ 7777,<br />1 ≤ A ≤ B ≤ 1000000000000 (10<sub>12</sub>).</p>','<p>Output must contain T lines – answers for the test cases.</p>','4\n1 2\n88 99\n112 112\n1 100\n','0\n0\n1\n10\n','<p>Very lucky numbers for the last case of the sample input are:<br />4, 7, 16, 28, 44, 47, 49, 64, 74 and 77.</p>',58,0,0,64,1,0,0,12),(1235,'GCD Determinant','<p>We say that a set S = {x1, x2, ..., xn} is factor closed if for any xi ∈ S and any<br />divisor d of xi we have d ∈ S. Let’s build a GCD matrix (S) = (sij), where sij =<br />GCD(xi, xj) – the greatest common divisor of xi and xj. Given the factor closed set<br />S, find the value of the determinant for:</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcd( x1 , x1 ) gcd( x1 , x 2 ) gcd( x1 , x3 ) ... gcd( x1 , x n ) <br />&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcd( x2 , x1 ) gcd( x2 , x 2 ) gcd( x2 , x3 ) ... gcd( x2 , x n )<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcd( x3 , x1 ) gcd( x3 , x 2 ) gcd( x3 , x3 ) ... gcd( x3 , x n )<br />&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ... &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; ... &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcd( xn , x1 ) gcd( xn , x 2 ) gcd( xn , x3 ) ... gcd( xn , x n )</p>\n<p> </p>','<p>The input file contains several test cases. Each test case starts with an integer n (0 &lt; n &lt; 1000), that stands for the cardinality of S. The next line contains the numbers of S: x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>. It is known that each x<sub>i</sub> is an integer, 0 &lt; x<sub>i</sub> &lt; 2*109. The input data set is correct and ends with an end of file. </p>','<p>For each test case find and print the value of the determinant mod 1000000007.</p>','2\n1 2\n3\n1 3 9\n4\n1 2 3 6\n','1\n12\n4\n','',58,0,0,64,1,0,0,12),(1236,'Service Providers','<p>A group of N Internet Service Provider companies (ISPs) use a private communication channel that has a maximum capacity of C traffic units per second. Each company transfers T traffic units per second through the channel and gets a profit that is directly proportional to the factor T(C - T N). The problem is to compute T_optim, the smallest value of T that maximizes the total profit the N ISPs can get from using the channel. Notice that N, C, T, and T_optim are integer numbers.</p>','<p>Write a program that reads sets of data from an input text file. Each data set corresponds to an instance of the problem above and contains two integral numbers – N and C – with values in the range from 0 to 109. The input data are separated by white spaces, are correct, and terminate with an end of file. For each data set the program computes the value of T_optim according to the problem instance that corresponds to the data set.</p>','<p>The result is printed on standard output from the beginning of a line. There must be no empty lines on the<br />output. An example of input/output is shown below.</p>','1 0\n0 1\n4 3\n2 8\n3 27\n25 1000000000\n','0\n0\n0\n2\n4\n20000000\n','',58,0,0,64,1,0,0,12),(1313,'This Can’t Go On Forever','<p>“A long time ago in a galaxy far, far away…”, so long ago, in fact, that the Empire did not exist and there were planets without space travel.&nbsp; In a far corner was a world in which the predominant pet, called tayes, reproduced by budding.&nbsp; Once a taye had separated from its parent, it took one time unit to mature to the point of breeding, which, coincidentally, was the length of time for a new bud to grow and separate from its parent.&nbsp; The tayes are extremely long-lived, so that it became important to investigate how many someone might have, assuming that at time zero the person did not have a taye, and at time one had acquired an immature one, freshly budded from the mature taye belonging to a friend. </p>\n<p>This ends up giving the following recurrence:&nbsp; T(0) = 0,&nbsp; T(1) = 1,&nbsp; T(n) = T(n–1) + T(n–2), for n &gt; 1.</p>\n<p>Computing at the time involved unsigned binary numbers with 24 bits.&nbsp; That motivated a particularly curious inhabitant, Leon, to investigate the series generated by that recurrence, but constrained by a modulus — and not just the modulo 224 forced by computing hardware.&nbsp; So the question becomes how long a series of number is generated by this recurrence, subject to arithmetic with a particular modulus, before it begins repeating.&nbsp; Here are the first few series: </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1313_128417c93204112c3ba675a2c9600481.jpg\" src=\"http://sharecode.ir/assets/problem_images/1313_128417c93204112c3ba675a2c9600481.jpg\" /></p>\n<p align=\"left\">The problem is to determine the length of the period for each modulus given in the input file and report it. </p>','<p>The input file contains an indeterminate number of lines, each containing a single integer <em>mod </em>guaranteed to be <br />in the range 2 ≤ mod ≤ 16777216 (2<sup>24</sup>).&nbsp; The final line contains a 0 as end of data and should not be processed. </p>','<p>For each modulus in the input file, print the modulus, one blank, and then the size of the smallest period of these T numbers under that modulus.</p>','2 \n3 \n4 \n5 \n6 \n12345678 \n16777216 \n0\n','2 3 \n3 8 \n4 6 \n5 20 \n6 24 \n12345678 700512 \n16777216 25165824\n','',59,0,1,64,2,20,37,10),(1314,'Rescue Beacon','<p>While attempting to evade some old and not-so-happy creditors of his, Han Solo crashed the Millennium Falcon on the ice-world of Hoth.&nbsp; Now he must get some sort of emergency signal working so that he can get rescued before his Wookiee friend becomes a fur-cicle or decides to eat a Hans-kabob.&nbsp; Can you help him? </p>\n<p>Han managed to salvage a really bright laser that can be seen from light-years away, and thought that would make a good signal.&nbsp; The downside is that if he just shines it straight up into the sky, there would only be a minimal chance that someone happens to be in the path of the light to see it.&nbsp; Chewbacca, in the meantime, was playing with a bunch of highly-reflective, multi-faceted crystals he found in a cave nearby.&nbsp; Then, in a moment of inspiration, Han realized he could assemble a rescue beacon by shining the light down on the crystal, whose facets will in turn reflect the light into the sky in a multitude of directions! </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1314_8642b66be93343847baac1feaa62e4be.jpg\" src=\"http://sharecode.ir/assets/problem_images/1314_8642b66be93343847baac1feaa62e4be.jpg\" /></p>\n<p align=\"center\">&nbsp;Figure 1: A simplified, two-dimensional illustration of Han\'s rescue beacon.</p>\n<p>The only problem that remains is in deciding which crystal to use as the light reflector.&nbsp; Each of the reflective crystals is a convex polyhedral shape whose surface consists solely of perfectly triangular facets, and can be fitted in the beacon in any orientation.&nbsp; Of course, the best crystal to use is the one that would reflect the laser beam (which consists of parallel light rays from a single direction) back in the greatest number of directions.&nbsp; In other words, you can think of the reflective merit of a crystal as simply the number of facets on it that you can see from any one viewing direction, as those are the facets that can be hit simultaneously by the laser beam.&nbsp; Given a description of the geometry of each of the crystals, can you compute the greatest number of directions the crystal can reflect the laser? </p>','<p>The input will consist of geometric descriptions of the crystals in Chewbacca\'s collection. The description of each crystal begins with an integer n (4 ≤ n ≤ 2000), the number of facets on the crystal, on a single line followed by n lines describing the facets.&nbsp; Each facet is described by 9 integers, x1 y1 z1 x2 y2 z2 x3 y3 z3, where the points (x1, y1, z1), (x2, y2, z2), and (x3, y3, z3) in three dimensions form the vertices of the triangular facet in counter-clockwise order (on a right-handed coordinate frame) as&nbsp; viewed from the exterior.&nbsp; All coordinates are in the range -2000 ≤ xi, yi, zi ≤ 2000, no single facet has a surface area greater than 200,000, and no two facets face the same direction.&nbsp; You can expect that when all facets of each crystal are assembled, they form a closed convex polyhedron.&nbsp; Lastly, no crystal will have a structure with any degeneracy that would cause ambiguity as to how many facets the laser can hit.&nbsp; In other words, it should not matter whether you consider facets parallel to the laser beam as capable of reflecting the beam or not -- the test data have been constructed such that either interpretation would yield the same answer.&nbsp; In other words, it should not matter whether you consider facets parallel to the laser beam as capable of reflecting the light or not.&nbsp; Input is terminated by a line containing the number 0 (do not process this as a test case). </p>','<p>For each crystal, output on a single line containing an integer m: the greatest number of directions that the crystal can simultaneously reflect the laser beam.</p>','4 \n0 1 1 -2 0 0 2 0 0 \n0 1 1 2 0 0 0 3 0 \n0 1 1 0 3 0 -2 0 0 \n-2 0 0 0 3 0 2 0 0 \n6 \n0 1 1 -2 0 0 2 0 0 \n0 1 1 2 0 0 0 3 0 \n0 1 1 0 3 0 -2 0 0 \n-2 0 0 0 1 -1 2 0 0 \n2 0 0 0 1 -1 0 3 0 \n0 3 0 0 1 -1 -2 0 0 \n0','3 \n4','',59,0,1,64,2,0,0,10),(1315,'Let the Wookiee Win!','<p>ou are playing against Chewbacca in a tough battle of Galactic Tic-Tac-Toe, which is just like simple Tic-Tac-Toe except that the playing board is 5 × 5 and the goal is to get 4 in a row. In response to a brilliant move, Chewbacca protests loudly and plays his next move, setting you up to win. However, before you can claim victory, Han Solo takes this opportunity to warn you that it’s not wise to upset a Wookiee. After all, they’re known to pull people’s arms out of their sockets when they lose. Wisely, you decide on a new strategy: <strong>Let the Wookiee Win!</strong></p>','<p>Input consists of a series of 5 × 5 playing boards, each separated by a blank line. Each square in a row is separated by a single space. You are <code>\'O\'</code>, Chewie is <code>\'X\'</code>, and empty squares are denoted by <code>\'*\'</code>. For each board, there is exactly one empty square that you can play that does not cause you to win and does not block any of Chewie\'s winning moves on his next turn. The final board is followed immediately by the word <code>\'Finished\'</code> on the next line. </p>','<p>For each board, print a line consisting of the number of the square that you should play to avoid having your arms pulled out of their sockets. The numbering should conform to the following table.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1315_9c65714dd5ffc0647ff267bb68e43ae9.jpg\" src=\"http://sharecode.ir/assets/problem_images/1315_9c65714dd5ffc0647ff267bb68e43ae9.jpg\" /></p>','X O * X X \nO O X X * \nO O * X X \nO X O O X \nX O O X O \n \nX X X * O \nO * * O X \nO O X * X \nO * X X O \n* X O O O \nFinished\n','3 \n17\n','',59,0,1,64,2,8,11,10),(1317,'George Lucas and 1138','<p>It’s well known in Star Wars culture that George Lucas was preoccupied with the number 1138.<br />THX 1138 is the title of his first movie, and—according to Wookieepedia: The Star Wars Wiki—George Lucas liked to reuse key words and numbers in later films as a way of unifying all of his works.<br />If you’re up on your Star Wars trivia, then you know that in Episode V a prisoner was transferred from cell block 1138. In Episode II, all clone troopers have the number 1138 prominently displayed on the back of their helmets. And if you type in 1138 while viewing the Episode III DVD, you immediately advance to the scene where Yoda does some break dancing. Less well known is the unpublished Episode Zero: The Birth of Death Kleene Star. The story begins with C3PO as a tween droid in school on his home planet of Tatooine, where he’s been instructed to determine all of the ways one can combine the numbers 1, 1, 3, and 8 using traditional +, -, *, /, and () to generate other positive numbers. He’s quick to observe that 8 / 3 / 1 – 1 generates 1, 3 / 8 + 1 + 1 generates 2, and that (8 / 3 + 1) * 1 generates 3. Within seconds, C3PO states that the smallest positive integer that can’t be generated is 29. But is C3PO correct?</p>\n<p>Given an n digit string (1 ≤ n ≤ 7), compute all of the ways that those n digits can be combined using +, -, *, /, and parentheses, and print out the smallest positive integer that can\'t be generated.<br />For the string \"12345\", the numbers 1 through 75 can be generated, but the number 76 can\'t be. For the string \"13555\", the numbers 1 through 55 can be generated, but 56 can\'t be. </p>\n<p>Additional Details<br />• You must use all of the digits, including duplicates.<br />• You can\'t combine digits using concatenation, so that 12 + 345 would *not* be relevant to the generation of all possibilities on behalf of \"12345\".<br />• Division is integer division, complete with the truncation you expect from integer division. That means that 4 * (5 / 4) is 4, not 5 (although (4 * 5) / 4 is, of course, the 5 you\'d expect.)<br />• You must avoid division by zero and disallow it from contributing to the set of generated numbers.<br />• The test inputs will be such that all intermediate and final results can fit into a 32-bit integer (long).</p>','<p>Expect a series of digit strings, one per line. End of input will be signaled by a 0 on its very own line. Do not process this case.</p>','<p>You should produce one line of output to standard out for every line of input. Each line of output should be the smallest positive integer that *cannot* be generated by some arithmetic expression involving all of the digits.</p>','1138\n12345\n13555\n167283\n123458\n4321678\n0\n','29\n76\n56\n524\n347\n1774\n','',59,0,1,64,2,0,0,12),(1318,'Spare the Ewoks!','<p>Rejuvenated after the successful siege of Cloud City, Emperor Palpatine has commissioned you to begin construction of a new Imperial base on the forest moon of Endor. Endor, however, is home to a species of cuddly creatures known as the ‘Ewoks.’<br />Having a soft spot in his otherwise callous heart for these Ewoks, Palpatine has ordered that none of the&nbsp; existing Ewok homes must be disturbed. Furthermore, he has asked that you make the base as large as possible in terms of total area, and that this area may be divided among up to three rectangular buildings. Help Palpatine in his quest for intergalactic domination!<br />For this problem, you are provided a map of Endor in the form of an m × n rectangular grid, where some of the cells have been marked as Ewok homes, and other cells are empty. Your goal is to place up to three (but&nbsp;possibly fewer) rectangular buildings on this grid in such a way that no two buildings overlap with each other,&nbsp;and no building is placed over an Ewok home.</p>','<p>The input will contain multiple test cases. Each test case begins with a single line containing a pair of integers &nbsp;m and n (where 1 ≤ m ≤ 250 and 1 ≤ n ≤ 250) representing the number of rows and columns in the grid. The&nbsp;next m lines then specify the map of Endor; specifically, each line will contain n characters, where each&nbsp;character is either ‘.’ (a period) standing for an empty space, or ‘e’ (lower case E) for an Ewok home. After&nbsp;the final test case will be a single line containing “0 0”; this line should not be processed.</p>','<p>For each input test case, print a single integer indicating the maximum area that can be covered by buildings.</p>','1 2\n..\n5 6\neee...\nee...e\nee...e\ne...ee\ne..eee\n8 12\neee...eee...\neee...eee...\nee...eee..ee\neee...eee...\nee...eee...e\neee..eee..ee\nee..eee..eee\neee..eee...e\n0 0\n','2\n13\n22\n','',59,0,1,64,2,0,0,12),(1319,'The History of the Sith Rulers','<p>As an archaeologist studying the history of Sith rulers, you regularly need to quickly look up what ruler was in power for a given galactic year. Given a list of Sith rulers and the years they were in power, write a program that will display which ruler (or rulers) ruled for a specified year. Note that no two rulers ever ruled simultaneously. Further note that some years and months had no ruler at all as the empire was in disarray.<br />Finally, some rulers led more than once, but always had a break in ruling before reassuming power (someone else ruled before they reassumed power).</p>','<p>The first entry in the input file will be an integer n (0 &lt; n ≤ 50) specifying the number of Sith rulers. Following this will be n entries, each representing a Sith ruler. The first line of the entry will contain the name of the ruler, which will be no more than 30 characters in length. The second line of the entry will contain the galactic date the ruler assumed power, followed by a space, followed by the date the ruler left power. Both of these dates will be real numbers greater than 0 and less than 5,000. The second date is guaranteed to be greater than the first date. These real numbers will be listed with one digit of precision to the right of the decimal point. The digit to the right of the decimal point effectively represents a galactic month (starting at 0). For the date the ruler leaves power, the assumption is that the ruler always serves to the end of the month listed. More specifically, another ruler never assumes power the same month the previous ruler leaves power. The minimum time a ruler ever serves is one month (thus a ruler could serve from 1.1 to 1.1, and any ruler that follows must start no earlier than 1.2). Following the entries for the Sith rulers will be an integer c (0 &lt; c ≤ 50) specifying the count of year entries that will follow. On the c lines that follow will be a galactic year in integer format. Each year is an integer y, 0 &lt; y &lt; 5000.</p>','<p>For each galactic year specified in the input file, display the Sith ruler (or rulers) in power during that year in the format shown in the sample output below. More specifically, print “Galactic year”, followed by a space, followed by the year, followed by a colon, followed by a space, followed by the name of the ruler for that year. If there was more than one ruler during that year, subsequent rulers for that year should be listed with a comma and a space preceding them. Furthermore, the rulers should be listed in the order of rule from earliest to latest in that year. If a ruler rules more than one time in a year, that ruler should be listed each time. A newline should immediately follow the last ruler listed. If no rulers are found for a given galactic year, specify “None” following the galactic year designation.</p>','8\nTulak Hord\n1000.0 1025.9\nLudo Kresh\n1026.0 1030.0\nDarth Revan\n2000.0 2003.0\nDarth Malak\n2003.1 2009.2\nExar Kun\n1500.0 1550.0\nDarth Sidious\n2500.0 2500.0\nDarth Nihilus\n2500.1 2500.1\nDarth Sidious\n2500.2 2500.4\n5\n1025\n2003\n1525\n1551\n2500\n','Galactic year 1025: Tulak Hord\nGalactic year 2003: Darth Revan, Darth Malak\nGalactic year 1525: Exar Kun\nGalactic year 1551: None\nGalactic year 2500: Darth Sidious, Darth Nihilus, Darth Sidious\n','',59,0,1,64,2,21,30,12),(1320,'Laser Shot','<p>You\'re a droid, and you want to try to shoot a Jedi in the room. It\'s well known that a Jedi can block a laser with his light saber, so shooting him directly won\'t work. What you can do, though, is shoot two lasers in such a way that they hit him simultaneously from different angles, in which case he can\'t block both. Conveniently, the (square) room is mirrored, so you can bounce laser shots off the walls. However, these are not perfectly silvered mirrors, so each laser can only bounce a limited number of times before it dissipates.<br />As a droid, you have other tasks to complete, so you want to minimize the time spent between firing the two<br />laser shots. You have two laser pistols and droid reflexes, so you can shoot them off at an arbitrarily small<br />interval (including simultaneously).<br />The room is a square, 1,000,000 feet on each side. Its lower left corner is at (0, 0) and its upper right corner is at (1,000,000, 1,000,000). You are at (x1, y1) and the Jedi is at (x2, y2). A laser that bounces around and then passes through (x1, y1) will continue along its path (you planned the shot, after all, so you can dodge it), but a laser immediately halts as soon as it hits (x2, y2). A laser fired at a wall follows the normal rules of reflection (angle of incidence = angle of reflection, and reflection introduces no extra delay). A laser fired directly at a corner will rebound exactly opposite the direction it was fired, and will count as having bounced twice. For simplicity, assume the speed of light (and therefore of the laser) is 1 foot per nanosecond.</p>','<p>Each test case consists of a single line of 5 space-separated integers x1, y1, x2, y2, n, where x1, y1, x2, and y2 are as described above, and n is the maximum number of bounces. 1 ≤ x1, y1, x2, y2 ≤ 999,999, and 1 ≤ n ≤ 100. You are guaranteed that the droid and Jedi are not in the same location, i.e., (x1, y1) != (x2, y2). The last test case is followed by “0 0 0 0 0”, which should not be processed.</p>','<p>For each test case, print on a single line the minimum delay between the firing of the lasers in nanoseconds,<br />accurate to 5 decimal places. Note that the test data have been constructed to ensure that no answers are within 1e-6 of a rounding boundary.</p>','100000 1 100000 999999 1\n100000 100000 800000 800000 1\n0 0 0 0 0\n','19801.94156\n0.00000\n','',59,0,1,64,2,0,0,12),(1321,'Power Grid','<p>After the untimely demise of its previous tenant, you have found yourself promoted to the position of the new “chief architect” of the Death Star by none other than Lord Vader himself. Your have been tasked with designing the wiring system for distributing power throughout each sector of the Death Star. Knowing that&nbsp; your life depends on your success, you have decided to be extremely meticulous and exhaustively&nbsp; numerate all valid wiring configurations so that you may choose the best one. You are given a map of the Death Star, in the form of an m × n grid, whose cells correspond to sectors. Exactly one of the sectors in the map is a power station; the remaining sectors are all either living quarters or storage units. You have the option of placing a connection between any two non-storage sectors that are either vertically or horizontally adjacent. A valid wiring configuration is one such that:<br />• Every living quarter sector is either directly or indirectly connected to the power station sector, and<br />• As few connections are used as possible (i.e., removing any connection would result in disconnecting<br />some living quarter from the power station).<br />For a given map, how many valid wiring configurations exist?</p>','<p>The input will contain multiple test cases. Each test case begins with a single line containing a pair of integers<br />m and n (where 1 ≤ m ≤ 8 and 1 ≤ n ≤ 8). The next m lines each contain n characters, representing the map of the Death Star. The map will contain exactly one sector marked as a power station (P); the remainder of the<br />sections will be either living quarters (.) or storage units (#). You are guaranteed that there exists at least one<br />valid wiring configuration. The end-of-input is denoted by a single line containing “0 0” and should not be<br />processed.</p>','<p>For each input test case, print the number of valid wiring configurations mod 1,000,000,000.</p>','2 2\n..\n.P\n4 5\n#####\n#.P.#\n#...#\n#####\n3 4\n....\nP#..\n...#\n6 6\n######\n##..##\n#....#\n#..P.#\n##..##\n######\n0 0\n','4\n15\n31\n768\n','',59,0,1,64,2,0,0,10),(1245,'Who needs 8 Queens when you can have N?','<p>The N-Queens problem is an obvious expansion of the eight-queens problem that has been&nbsp;around for a long time: Given a board with NxN squares and N queens, position the queens on the board such that no two queens can attack each other; in other words, so that no two queens sit on the same horizontal row, vertical column, or along either possible diagonal (row+column = k for one, row–column = k for the other).&nbsp;Finding all the solutions to the problem for a given N is known to be worse than exponential in difficulty — O(N!). One can, however, find a single solution to the problem in significantly less&nbsp;time if one looks beyond the standard backtracking solution to another possible solution strategy.&nbsp;This problem asks you to find such a solution strategy. Note that the solution found may not necessarily be the one obtained first in the backtracking approach.&nbsp;Since there is a huge number of candidate solutions for any but the very smallest values of N, the judges have access to a solution validation program. Consequently it is critical that you abide by&nbsp;the output specifications, since they constitute the input specifications for the validator.</p>','<p>The input file begins with a line containing a single integer (no white space) specifying the&nbsp;number of problem specifications in the file. Exactly that many lines follow, each giving the&nbsp;value of N (with no white space) for which you are to solve the N-queens problem. The values&nbsp;of N may range from 4 up through 300; in other words, you should be able to find some solution&nbsp;to the 300-Queens problem in less than 120 seconds.</p>','<p>For each problem, output on a single line that number (N). Following that, give the permutation vector of column positions (0 through N–1) that specify the queen’s position on each succeeding row. The permutation vector is to be of N integers separated by white space. You may choose&nbsp;for yourself whether you use simple blanks for white space (giving the solution vector on one</p>\n<p>line) or you put each value on a separate line. In the interest of printing, the sample output here will use an approach that generates lines of values that do not exceed 65 characters in length. You are not held to that format.</p>','4\n4\n8\n25\n50','4\n2 0 3 1\n8\n2 7 3 6 0 5 1 4\n25\n14 7 18 22 13 10 24 11 1 20 6 0 15 8 5 16 23 17 4 21 12 2 19 3 9\n50\n22 13 15 44 27 3 1 4 19 40 20 5 31 49 7 29 18 6 2 36 28 12 38 43\n39 11 26 14 0 30 34 8 41 9 16 10 17 33 45 42 46 24 47 35 32 23\n25 37 21 48','',-1,0,0,64,2,0,0,38),(1246,'Time to Graduate','<p>A prospective CS student is investigating how many semesters it will take to graduate from a variety of different universities. Each university provides a list of required courses, their prerequisites, and when each course is offered. Given this information,&nbsp;determine the minimum number of semesters to graduate. Consider the following example. A student is required to take 4 courses, mt42, cs123, cs456, and cs789. mt42 is only offered in the fall semester and has no prerequisites.Similarly, cs123 is only offered in the spring semester and has no prerequisites. cs456 is only offered in the spring semester and has both cs123 and mt42 as prerequisites. Finally,cs789 is offered in both fall and spring and has cs456 as its only prerequisite. The shortest time to graduate is 5 semesters, by taking mt42 in the fall, cs123 in the next spring, cs456 the following spring (since it is not offered in the fall) and finally cs789 the following fall.</p>\n<p>For this problem, there are only two semesters, fall and spring. Always start counting semesters from the fall.&nbsp;In addition to the fall/spring scheduling issues, there is one slight complication. In order&nbsp;to keep the dormitories full, each university limits the number of courses that can be&nbsp;taken in any semester. This limit appears as part of the input data. The third example&nbsp;below illustrates this issue.</p>','<p>There are one to twenty-five data sets, followed by a final line containing only the integers -1 -1. A data set starts with a line containing two positive integers n, 1 &lt;= n &lt;= 12, which is the number of courses in this data set and m, 2 &lt;= m &lt;=&nbsp;6, which is the maximum number of courses that can be taken in any single semester. The next line contains the n course identifiers. Each is a 1-5 character string from the set {a-z, 0-9}. Following the course identifiers is the individual course information.&nbsp;This consists of n lines, one line for each course, containing the course identifier, semester offered (\'F\'=Fall, \'S\'=Spring, \'B\'=Both semesters), the number of prerequisite courses, p, 0 &lt;= p &lt;= 5, and finally p prerequisite course identifiers. The first example data set below corresponds to the problem described above.</p>','<p>The output contains one line for each data set, formatted as shown in the sample output.</p>','4 6\ncs123 mt42 cs456 cs789\nmt42 F 0\ncs123 S 0\ncs456 S 2 cs123 mt42\ncs789 B 1 cs456\n3 6\nmath1 comp2 comp3\ncomp3 S 1 comp2\nmath1 S 0\ncomp2 F 1 math1\n4 3\nm10 m20 c33 c44\nm10 B 0\nm20 B 0\nc33 B 0\nc44 B 0\n-1 -1','The minimum number of semesters required to graduate is 5.\nThe minimum number of semesters required to graduate is 4.\nThe minimum number of semesters required to graduate is 2.','',-1,0,0,64,2,0,0,38),(1324,'How Big Is It?','<p>\'Ian\'s going to California, and he has to pack his things, including his collection of circles. Given a set of circles, your program must find the smallest rectangular box in which they fit. All circles must touch the bottom of the box. The figure below shows an acceptable packing for a set of circles (although this may not be the optimal packing for these particular circles). Note that in an ideal packing, each circle should touch at least one other circle (but you probably figured that out).</p>\n<div align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1324_7636f1bfc97e352304e59410ed6f78ce.jpg\" /></div>','<p>The first line of input contains a single positive decimal integer&nbsp;n,&nbsp;n&lt;=50. This indicates the number of lines which follow. The subsequent&nbsp;n&nbsp;lines each contain a series of numbers separated by spaces. The first number on each of these lines is a positive integer&nbsp;m,&nbsp;m&lt;=8, which indicates how many other numbers appear on that line. The next&nbsp;m&nbsp;numbers on the line are the radii of the circles which must be packed in a single box. These numbers need not be integers.</p>\n<p>&nbsp;numbers on the line are the radii of the circles which must be packed in a single box. These numbers need not be integers.</p>','<p>For each data line of input, excluding the first line of input containing&nbsp;n, your program must output the size of the smallest rectangle which can pack the circles. Each case should be output on a separate line by itself, with three places after the decimal point. Do not output leading zeroes unless the number is less than 1, e.g.&nbsp;<code>0.543</code>.</p>','3\n3 2.0 1.0 2.0\n4 2.0 2.0 2.0 2.0\n3 2.0 1.0 4.0','9.657\n16.000\n12.657\n','',-1,0,1,128,10,17,75,10),(1325,'Class Schedule','<p>At Fred Hacker\'s school, there are T × C classes, divided into C catagories of T classes each. The day begins with all the category 1 classes being taught simultaneously. These all end at the same time, and then all the category 2 classes are taught, etc. Fred has to take exactly one class in each category. His goal is to choose the set of classes that will minimize the amount of \"energy\'\' required to carry out his daily schedule.The energy requirement of a schedule is the sum of the energy requirement of the classes themselves, and energy consumed by moving from one class to the next through the schedule.&nbsp; More specifically, taking the jth class in the ith category uses E<sub>ij</sub>&nbsp;units of energy. The rooms where classes take place are located at integer positions (ranging from 0 to L) along a single hallway. The jth class in the ith category is located at position P<sub>ij</sub>. Fred starts the day at position 0, moves from class to class, according to his chosen schedule, and finally exits at location L. Moving a distance d uses d units of energy.Fred starts the day at position 0, moves from class to class, according to his chosen schedule, and finally exits at location L. Moving a distance d uses d units of energy.</p>','<p>The first line of the input is&nbsp;Z ≤ 20&nbsp;the number of test cases. This is followed by&nbsp;Z&nbsp;test cases. Each test case begins with three space-separated integers:&nbsp;C,&nbsp;T, and&nbsp;L. Each of the following&nbsp;C× T&nbsp;lines gives, respectively, the location and energy consumption of a class. The first&nbsp;T&nbsp;lines represent the classes of category 1, the next&nbsp;T&nbsp;lines represent the classes of category 2, and so on. No two classes in the same category will have the same location.\nlines represent the classes of category 2, and so on. No two classes in the same category will have the same location.</p>\n<p>\n1 ≤ C ≤ 25</p>\n<p>1 ≤ T ≤ 1000</p>\n<p>1 ≤ L ≤ 1,000,000</p>\n<p>1 ≤ E<sub>ij</sub>&nbsp;≤ 1,000,000</p>\n<p>0 ≤ P<sub>ij</sub>&nbsp;≤ L&nbsp;</p>','<p>For each input instance, the output will be a single integer on a line by itself which is the minimum possible energy of a schedule satisfying the constraints.</p>','1\n3 2 5\n2 1\n3 1\n4 1\n1 3\n1 4\n3 2','11','',-1,0,1,128,10,25,51,12),(1326,'487-3279','<p>Businesses like to have memorable telephone numbers. One way to make a telephone number memorable is to have it spell a memorable word or phrase. For example, you can call the University of Waterloo by dialing the memorable TUT-GLOP. Sometimes only part of the number is used to spell a word. When you get back to your hotel tonight you can order a pizza from Gino\'s by dialing 310-GINO. Another way to make a telephone number memorable is to group the digits in a memorable way. You could order your pizza from Pizza Hut by calling their ``three tens\'\' number 3-10-10-10.</p>\n<p>The standard form of a telephone number is seven decimal digits with a hyphen between the third and fourth digits (e.g. 888-1200). The keypad of a phone supplies the mapping of letters to numbers, as follows:&nbsp;<br />A, B, and C map to 2&nbsp;<br />D, E, and F map to 3&nbsp;<br />G, H, and I map to 4&nbsp;<br />J, K, and L map to 5&nbsp;<br />M, N, and O map to 6&nbsp;<br />P, R, and S map to 7&nbsp;<br />T, U, and V map to 8&nbsp;<br />W, X, and Y map to 9&nbsp;<br />There is no mapping for Q or Z.<br />Hyphens are not dialed, and can be added and removed as necessary. The standard form of TUT-GLOP is 888-4567, the standard form of 310-GINO is 310-4466, and the standard form of 3-10-10-10 is 310-1010.&nbsp;<br />Two telephone numbers are equivalent if they have the same standard form. (They dial the same number.)&nbsp;<br />Your company is compiling a directory of telephone numbers from local businesses. As part of the quality control process you want to check that no two (or more) businesses in the directory have the same telephone number. </p>','<p>The input will consists of multiple tests. The first line of each test specifies N, the number of telephone numbers in&nbsp;the directory (up to 100000) as a positive integer alone on the line. Then there will be N lines that list the telephone&nbsp;numbers in the directory, with each number alone on a line. Each telephone number consists of a string composed&nbsp;of decimal digits, uppercase letters (excluding Q and Z) and hyphens. Exactly seven of the characters in the string&nbsp;will be digits or letters.</p>','<p>For each test:</p>\n<p>Generate a line of output for each telephone number that appears more than once in any form. The&nbsp;line should give the telephone number in standard form, followed by a space, followed by the number&nbsp;of times the telephone number appears in the directory. Arrange the output lines by telephone numbering ascending lexicographical order.If there are no duplicates in the test print the line:</p>\n<p>No duplicates.</p>','12\n4873279\nITS-EASY\n888-4567\n3-10-10-10\n888-GLOP\nTUT-GLOP\n967-11-11\n310-GINO\nF101010\n888-1200\n-4-8-7-3-2-7-9-\n487-3279','310-1010 2\n487-3279 4\n888-4567 3','',-1,0,1,128,10,27,105,12),(1327,'Paper Route','<p>As a poor, tuition-ridden student, you\'ve decided to take up a part time job as a paperboy/papergirl. You\'ve just been handed your paper route: a set of addresses (conveniently labelled 1 to N).<br />Every morning, you start at the newspaper office (which happens to be address number 0). You have to plan a route to deliver a newspaper to every address - and you also want to get to class right after you\'re done.<br />Conveniently, there are only N roads in your area connecting the addresses, and each of them takes a known time to traverse.<br />Also, you\'ve precalculated the time it takes to get to Waterloo campus from each address, including the newspaper office (through some combination of biking, busing, or hitching a ride).<br />How soon can you be done delivering papers and be in your seat at school?</p>','<p>The input will consist of multiple tests. For each test, first there will be a single integer N (the number of addresses, 1 ≤ N ≤ 100,000).<br />Next, there will be N+1 lines, each with an integer c<sub>i</sub> (starting with i = 0, 0 ≤ c<sub>i</sub> ≤ 1,000,000,000), the time it takes to get from location i to campus. Finally, the test will contain N lines, each with three integers a, b, c (0 ≤ a, b ≤ N, a!= b, 0≤ c ≤1,000). Each of these lines describes a road between locations a and b taking c minutes to traverse.<br />It is guaranteed that you will be able to reach all the addresses. (Remember that location 0 is the newspaper office.)</p>','<p>For each test, output the minimum time it will take to deliver all the papers and get to class.</p>','2\n1\n3\n4\n0 1 1\n0 2 2','7','',-1,0,1,128,10,14,30,10),(1328,'Party Location','<p>After the programming contest, all of the contestants would like to throw a party. After the party, however, it will be late, and the contestants will be too tired to walk a long way home. In particular, each contestant refuses to come to the party if it is more than 2.5 km from his or her house.<br />The solution is to hold the party as close to as many of the contestants\' houses as possible. This is where you come in: your job is to determine the optimal location for the party, so that as many contestants as possible will be willing to attend it.<br />We consider the city to be a flat square, 50 km on each side. A contestant can walk directly from the party in a straight line to his or her house (there are no obstacles).</p>\n<p> </p>','<p>The input will consist of multiple tests. For each test there will be a single integer N ≤ 200, the number of contestants. Next there will be N lines, each containing two floating point numbers indicating the (x, y) coordinates of the house of one of the<br />contestants. Each coordinate is between 0.0 and 50.0 (km). Each house is at a distinct location.</p>','<p>For each test output a single integer, the maximum number of contestants that can attend the party.</p>','8\n4.0 4.0\n4.0 5.0\n5.0 6.0\n1.0 20.0\n1.0 21.0\n1.0 22.0\n1.0 25.0\n1.0 26.0','4\n','',-1,0,1,128,10,15,56,10),(1256,'Oh, Those Achin\' Feet','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">In recent days, a number of people have been injured after being pushed off the sidewalks due to overcrowding. City Hall is interested in figuring out how much pedestrian traffic its sidewalks receive every day. The results of this study will be used to determine whether the city needs to fund more sidewalks. The city has surveyed various buildings in several blocks to determine the traffic patterns they generate. Your job is to take this survey data and convert it into sidewalk utilization information.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Your program will read in the size of the map and a map of several city blocks. Buildings, streets, and building entrance/exits will be marked on the map. You will also be given a list of pedestrian load between several pairs of exits and entrances. Your program will determine the paths used by pedestrians between each source and destination, add up the total pedestrian load from all paths using each street, and output a table of the total pedestrian load on each square.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<h2 style=\"font-family: ; background-color: rgb(255, 255, 255); \"><a name=\"SECTION00001000000000000000\">Notes</a></h2><p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<ul style=\"font-family: ; background-color: rgb(255, 255, 255); \">\n	<li>The map is divided into squares. Each square of the map can be a street square, a building square, or an entrance/exit square. An entrance/exit square serves as both entrance and exit for that building. There will be no more than 90 street squares in the map.<p> </p>\n</li>\n	<li>People will always follow the shortest path between their origin and destination. No shortest path will exceed 75 squares.<p> </p>\n</li>\n	<li>If there are multiple equal-length shortest paths, the load will be divided equally amongst the paths. For shortest paths, there will be fewer than 50000 equal-length path combinations.<p> </p>\n</li>\n	<li>If a building entrance/exit has multiple sides facing a street (for example, a corner of a building), the pedestrians may enter or exit through any street-facing side.<p> </p>\n</li>\n	<li>All movement will be strictly N, E, S, or W. No diagonal movement is permitted.<p> </p>\n</li>\n	<li>Pedestrians cannot move through buildings or off the edge of the map.<p> </p>\n</li>\n	<li>For convenience, you may ignore the fact that each street section may have two sidewalks.<p> </p>\n</li>\n	<li>Traffic load is not applied to the actual exit/entrance squares themselves.<p> </p>\n</li>\n	<li>If an origin and destination are adjacent on the map, pedestrians may move directly between them. In this case, there is no resulting load placed on any portion of the map because no streets are used.</li>\n</ul>','<p><strong>Line 1:</strong><span style=\"background-color: rgb(255, 255, 255); \">&nbsp;</span><em>X</em><span style=\"background-color: rgb(255, 255, 255); \">&nbsp;</span><em>Y</em><span style=\"background-color: rgb(255, 255, 255); \">&nbsp;</span></p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"><em>X</em>&nbsp;is the number of columns in the map,&nbsp;<em>Y</em>&nbsp;is the number of rows. Each is a positive integer less than 20.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"><strong>Lines 2-(Y+1):</strong>&nbsp;<br />Each line contains exactly&nbsp;<em>X</em>&nbsp;symbols indicating the contents of that square on the map. The symbols are:&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;<tt>X</tt>: building, non-entrance/exit&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;<tt>.</tt>: (period) street&nbsp;<br />&nbsp;&nbsp;&nbsp; {<tt>A</tt>-<tt>O</tt>}: letter indicating exit/entrance. Each letter may occur at most once.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"><strong>Lines (Y+2)-?:</strong>&nbsp;<br />Each line indicates a pedestrian route and specifies a source, destination, and pedestrian load. Source and destination will each be a letter {<tt>A</tt>-<tt>O</tt>} with no spaces in between. The load factor will be a nonnegative integer, separated from the destination by whitespace. Source and destination will never be equal. At most 25 routes will be given. There will be a valid path in the map for each requested route.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The test case will terminate with the line:&nbsp;<br /><tt>XX 0</tt>&nbsp;<br />After this line, a next test case can follow. The input file is terminated by two zeros in place of a map size.</p>\n<p> </p>','<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">The output consists of&nbsp;</span><em>Y</em><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;lines, each with&nbsp;</span><em>X</em><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;space-separated fields indicating the load factor. Each load factor is printed to two decimal places with 3 spaces for integer digits (C 6.2 format).</span>&nbsp;</p>','4 4\n....\nA.X.\nXXX.\nB...\nAB 2\nBA 1\nXX 0\n0 0','1.50   3.00   3.00   3.00\n0.00   1.50   0.00   3.00\n0.00   0.00   0.00   3.00\n0.00   3.00   3.00   3.00','',61,0,0,64,5,0,0,38),(1329,'Next Prime','<p>Given an integer n, with 0 &lt;= n &lt;= 4*10^9, your task is to find the smallest prime number which is not less than n. </p>','<p>The first line of input will be a number specifying the number of lines \nthat follow. Each of the following lines will be an integer n.</p>','<p>For each of these lines, output the smallest prime not less than n, on a separate line.</p>','3\n6\n20\n100','7\n23\n101','',-1,0,1,128,10,89,414,12),(1330,'Triangle War','<p>Triangle War is a two-player game played on the following triangular grid:</p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1330_8e50346f59b6e452bd6c2dc74f8de4a3.jpg\" src=\"http://sharecode.ir/assets/problem_images/1330_8e50346f59b6e452bd6c2dc74f8de4a3.jpg\" /></div><p>Two players, A and B, take turns filling in any dotted line connecting two dots, with A starting first. Once a line is filled, it cannot be filled again. If the line filled by a player completes one or more triangles, she owns the completed triangles and she is awarded another turn (i.e. the opponent skips a turn). The game ends after all dotted lines are filled in, and the player with the most triangles wins the game. The diference in the number of triangles owned by the two players is not important.<br />For example, if A fills in the line between 2 and 5 in the partial game on the left below:</p>\n<p> </p>\n<div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1330_519d102e3207488128cee605adc48d24.jpg\" src=\"http://sharecode.ir/assets/problem_images/1330_519d102e3207488128cee605adc48d24.jpg\" /></div><p>Then, she owns the triangle labelled A and takes another turn to fill in the line between 3 and 5. B can now own 3 triangles (if he wishes) by filling in the line between 2 and 3, then the one between 5 and 6, and finally the one between 6 and 9. B would then make one more move before it is A\'s turn again. In this problem, you are given a number of moves that have already been&nbsp; made. From the partial game, you should determine which player will win assuming that each player plays a perfect game from that point on. That is, assume that each player always chooses the play that leads to the best possible outcome for&nbsp; himself/herself.</p>','<p>You will be given a number of games in the input. The first line of input is a positive integer indicating the number of games to follow. Each game starts with an integer 6 ≤ m ≤ 18 indicating the number of moves that have been made in the game. The next m lines indicate the moves made by the two players in order, each of the form i j (with i &lt; j) indicating that the line between i and j is called in that move. You may assume that all given moves are legal.</p>','<p>For each game, print the game number and the result on one line as shown below. If A wins, print the sentence \"A wins.\" If B wins, print \"B wins.\"</p>','4\n6\n2 4\n4 5\n5 9\n3 6\n2 5\n3 5\n7\n2 4\n4 5\n5 9\n3 6\n2 5\n3 5\n7 8\n6\n1 2\n2 3\n1 3\n2 4\n2 5\n4 5\n10\n1 2\n2 5\n3 6\n5 8\n4 7\n6 10\n2 4\n4 5\n4 8\n7 8','Game 1: B wins.\nGame 2: A wins.\nGame 3: A wins.\nGame 4: B wins.','',-1,0,1,128,10,6,10,12),(1331,'Octagons','<p>Below is a picture of an infinite hyperbolic tessellation of octagons. If we think of this as a graph of vertices (of degree three), then there exists an isomorphism of the graph which maps any vertex x onto any other vertex y. Every edge is given a label from the set {a,b,c} in such a way that every vertex has all three types of edges incident on it, and the labels alternate around each octagon. Part of this labeling is illustrated in the diagram.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1331_f824396339f09c53b05af675d6ef0b74.jpg\" src=\"http://sharecode.ir/assets/problem_images/1331_f824396339f09c53b05af675d6ef0b74.jpg\" /></p>\n<p align=\"left\">So a path in this graph (starting from any vertex) can be specified by a sequence of edge labels. Your job is to write a program which, given a squence of labels such as \"abcbcbcabcaccabb\", returns \"closed\" if the path ends on the same vertex where it starts, and returns \"open\" otherwise.</p>','<p>The input will begin with a number Z ≤ 200 on a line by itself. This is followed by Z lines, each of which is a squence of length at least 1 and at most 40 of \'a\'s \'b\'s and \'c\'s.</p>','<p>For each input instance, the output will be the words \"closed\" or \"open\", each on a single line.</p>','2\nabababab\nabcbcbcbcba','closed\nopen','',-1,0,1,128,10,5,14,12),(1258,'Human Gene Functions','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">It is well known that a human gene can be considered as a sequence, consisting of four nucleotides, which are simply denoted by four letters,&nbsp;<tt>A</tt>,&nbsp;<tt>C</tt>,&nbsp;<tt>G</tt>, and&nbsp;<tt>T</tt>. Biologists have been interested in identifying human genes and determining their functions, because these can be used to diagnose human diseases and to design new drugs for them.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">A human gene can be identified through a series of time-consuming biological experiments, often with the help of computer programs. Once a sequence of a gene is obtained, the next job is to determine its function. One of the methods for biologists to use in determining the function of a new gene sequence that they have just identified is to search a database with the new gene as a query. The database to be searched stores many gene sequences and their functions -- many researchers have been submitting their genes and functions to the database and the database is freely accessible through the Internet.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">A database search will return a list of gene sequences from the database that are similar to the query gene. Biologists assume that sequence similarity often implies functional similarity. So, the function of the new gene might be one of the functions that the genes from the list have. To exactly determine which one is the right one another series of biological experiments will be needed.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Your job is to make a program that compares two genes and determines their similarity as explained below. Your program may be used as a part of the database search if you can provide an efficient one.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Given two genes&nbsp;<tt>AGTGATG</tt>&nbsp;and&nbsp;<tt>GTTAG</tt>, how similar are they? One of the methods to measure the similarity of two genes is called alignment. In an alignment, spaces are inserted, if necessary, in appropriate positions of the genes to make them equally long and score the resulting genes according to a scoring matrix.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">For example, one space is inserted into&nbsp;<tt>AGTGATG</tt>&nbsp;to result in&nbsp;<tt>AGTGAT-G</tt>, and three spaces are inserted into&nbsp;<tt>GTTAG</tt>&nbsp;to result in&nbsp;<tt>GT-TAG</tt>. A space is denoted by a minus sign (<tt>-</tt>). The two genes are now of equal length. These two strings are aligned:</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<div align=\"CENTER\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"></div><table width=\"60\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre>AGTGAT-G\n-GT--TAG\n</pre></td></tr></tbody></table><div align=\"CENTER\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"></div><p style=\"font-family: ; background-color: rgb(255, 255, 255); \">In this alignment, there are four matches, namely,&nbsp;<tt>G</tt>&nbsp;in the second position,&nbsp;<tt>T</tt>&nbsp;in the third,&nbsp;<tt>T</tt>&nbsp;in the sixth, and&nbsp;<tt>G</tt>&nbsp;in the eighth. Each pair of aligned characters is assigned a score according to the following scoring matrix.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<div align=\"CENTER\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><table cellpadding=\"3\" cellspacing=\"0\" bordercolor=\"BLACK\" bordercolordark=\"WHITE\" border=\"1\"><tbody><tr><td align=\"CENTER\">&nbsp;</td><td align=\"CENTER\"><tt>A</tt></td><td align=\"CENTER\"><tt>C</tt></td><td align=\"CENTER\"><tt>G</tt></td><td align=\"CENTER\"><tt>T</tt></td><td align=\"CENTER\"><tt>-</tt></td></tr><tr><td align=\"CENTER\"><tt>A</tt></td><td align=\"CENTER\">5</td><td align=\"CENTER\">-1</td><td align=\"CENTER\">-2</td><td align=\"CENTER\">-1</td><td align=\"CENTER\">-3</td></tr><tr><td align=\"CENTER\"><tt>C</tt></td><td align=\"CENTER\">-1</td><td align=\"CENTER\">5</td><td align=\"CENTER\">-3</td><td align=\"CENTER\">-2</td><td align=\"CENTER\">-4</td></tr><tr><td align=\"CENTER\"><tt>G</tt></td><td align=\"CENTER\">-2</td><td align=\"CENTER\">-3</td><td align=\"CENTER\">5</td><td align=\"CENTER\">-2</td><td align=\"CENTER\">-2</td></tr><tr><td align=\"CENTER\"><tt>T</tt></td><td align=\"CENTER\">-1</td><td align=\"CENTER\">-2</td><td align=\"CENTER\">-2</td><td align=\"CENTER\">5</td><td align=\"CENTER\">-1</td></tr><tr><td align=\"CENTER\"><tt>-</tt></td><td align=\"CENTER\">-3</td><td align=\"CENTER\">-4</td><td align=\"CENTER\">-2</td><td align=\"CENTER\">-1</td><td align=\"CENTER\">*</td></tr></tbody></table></div><p style=\"font-family: ; background-color: rgb(255, 255, 255); \">* denotes that a space-space match is not allowed. The score of the alignment above is&nbsp;(- 3) + 5 + 5 + (- 2) + (- 3) + 5 + (- 3) + 5 = 9.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Of course, many other alignments are possible. One is shown below (a different number of spaces are inserted into different positions):</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<div align=\"CENTER\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"></div><table width=\"60\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre>AGTGATG\n-GTTA-G\n</pre></td></tr></tbody></table><div align=\"CENTER\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"></div><p style=\"font-family: ; background-color: rgb(255, 255, 255); \">This alignment gives a score of&nbsp;(- 3) + 5 + 5 + (- 2) + 5 + (- 1) + 5 = 14. So, this one is better than the previous one. As a matter of fact, this one is optimal since no other alignment can have a higher score. So, it is said that the similarity of the two genes is 14.</p>','<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">The input consists of&nbsp;</span><em>T</em><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;test cases. The number of test cases (</span><em>T</em><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">) is given in the first line of the input file. Each test case consists of two lines: each line contains an integer, the length of a gene, followed by a gene sequence. The length of each gene sequence is at least one and does not exceed 100.</span></p>\n<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">) is given in the first line of the input file. Each test case consists of two lines: each line contains an integer, the length of a gene, followed by a gene sequence. The length of each gene sequence is at least one and does not exceed 100.</span></p>','<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">The output should print the similarity of each test case, one per line.</span></p>','2\n7 AGTGATG\n5 GTTAG\n7 AGCTATT\n9 AGCTTTAAA','14\n21\n','',61,0,0,64,5,0,0,38),(1259,'Frame Stacking','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Consider the following 5 picture frames placed on an 9×8 array.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;</p>\n<table width=\"79\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre> ........\n EEEEEE..\n E....E..\n E....E..\n E....E..\n E....E..\n E....E..\n E....E..\n EEEEEE..\n</pre>&nbsp;1&nbsp;</td></tr></tbody></table><table width=\"79\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre> ........\n ........\n DDDDDD..\n D....D..\n D....D..\n D....D..\n DDDDDD..\n ........\n ........\n</pre>&nbsp;2&nbsp;</td></tr></tbody></table><table width=\"79\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre> ........\n ........\n ........\n ........\n ....AAAA\n ....A..A\n ....A..A\n ....AAAA\n ........\n</pre>&nbsp;3&nbsp;</td></tr></tbody></table><table width=\"79\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre> ........\n ..BBBB..\n ..B..B..\n ..B..B..\n ..B..B..\n ..BBBB..\n ........\n ........\n ........\n</pre>&nbsp;4&nbsp;</td></tr></tbody></table><table width=\"79\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre> .CCC....\n .C.C....\n .C.C....\n .CCC....\n ........\n ........\n ........\n ........\n ........\n</pre>&nbsp;5&nbsp;</td></tr></tbody></table><p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;</span></p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Now place them on top of one another starting with 1 at the bottom and ending up with 5 on top. If any part of a frame covers another it hides that part of the frame below. Viewing the stack of 5 frames we see the following.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<div align=\"CENTER\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"></div><table width=\"79\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"><tbody><tr><td><pre>.CCC....\nECBCBB..\nDCBCDB..\nDCCC.B..\nD.B.ABAA\nD.BBBB.A\nDDDDAD.A\nE...AAAA\nEEEEEE..\n</pre></td></tr></tbody></table><div align=\"CENTER\" style=\"font-family: ; background-color: rgb(255, 255, 255); \"></div><p style=\"font-family: ; background-color: rgb(255, 255, 255); \">In what order are the frames stacked from bottom to top? The answer is&nbsp;<tt>EDABC</tt>. Your problem is to determine the order in which the frames are stacked from bottom to top given a picture of the stacked frames. Here are the rules:</p>\n<ol style=\"font-family: ; background-color: rgb(255, 255, 255); \">\n	<li>The width of the frame is always exactly 1 character and the sides are never shorter than 3 characters.</li>\n	<li>It is possible to see at least one part of each of the four sides of a frame. A corner shows two sides.</li>\n	<li>The frames will be lettered with capital letters, and no two frames will be assigned the same letter.</li>\n</ol>','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Each input block contains the height,&nbsp;<em>h</em>&nbsp;(<em>h</em>&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;30) on the first line and the width&nbsp;<em>w</em>&nbsp;(<em>w</em>&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;30) on the second. A picture of the stacked frames is then given as&nbsp;<em>h</em>&nbsp;strings with&nbsp;<em>w</em>&nbsp;characters each.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Your input may contain multiple blocks of the format described above, without any blank lines in between. All blocks in the input must be processed sequentially. The file is terminated by two zeros in place of the dimensions.</p>','<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">Write the solution to the standard output. Give the letters of the frames in the order they were stacked from bottom to top. If there are multiple possibilities for an ordering, list all such possibilities in alphabetical order, each one on a separate line. There will always be at least one legal ordering for each input block. List the output for all blocks in the input sequentially, without any blank lines (not even between blocks).</span></p>','9\n8\n.CCC....\nECBCBB..\nDCBCDB..\nDCCC.B..\nD.B.ABAA\nD.BBBB.A\nDDDDAD.A\nE...AAAA\nEEEEEE..\n0\n0','EDABC','',61,0,0,64,5,0,0,38),(1260,'Number Game','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Christiane and Matthias are playing a new game, the&nbsp;<em>Number Game</em>. The rules of the Number Game are: Christian and Matthias take turns in choosing integer numbers greater than or equal to 2. The following rules restrict the set of numbers which may be chosen:</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<dl style=\"font-family: ; background-color: rgb(255, 255, 255); \"><dt><strong>R1:</strong></dt><dd>A number which has already been chosen by one of the players or a multiple of such a number cannot be chosen. (A number&nbsp;<em>z</em>&nbsp;is a&nbsp;<em>multiple</em>&nbsp;of a number&nbsp;<em>y</em>&nbsp;if&nbsp;<em>z</em>&nbsp;can be written as&nbsp;<em>y</em>.<em>x</em>and&nbsp;<em>x</em>&nbsp;is a positive integer.)<p> </p>\n</dd><dt><strong>R2:</strong></dt><dd>A sum of two such multiples cannot be chosen either.<p> </p>\n</dd><dt><strong>R3:</strong></dt><dd>For simplicity, a number which is greater than 20 cannot be chosen either. This enables a lot more NPCs (Non-Personal-Computers) to play this game.<p> </p>\n</dd></dl><p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The player who cannot choose any number anymore looses the Number Game.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Here is an example: Matthias starts by choosing 4. Then Christiane is not allowed to choose 4, 8, 12, etc. Let us assume her move is 3. Now, the numbers 3, 6, 9, etc. are excluded, too; furthermore, numbers like: 7 = 3 + 4,&nbsp;10 = 2.3 + 4,&nbsp;11 = 3 + 2.4,&nbsp;13 = 3.3 + 4, ... are not available. So, in fact, the only numbers left are 2 and 5. Matthias now says 2. Since 5 = 2 + 3 is now forbidden, too, he wins because there is no number for Christiane s move left.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Your task is to write a program which will help to play the Number Game. In general, i.e., without rule R3, this game may go on forever. However, with rule R3, it is possible to write a program that finds a strategy to win the game.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<h2 style=\"font-family: ; background-color: rgb(255, 255, 255); \"><a name=\"SECTION00002000000000000000\">Problem</a></h2><p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Given a game situation (a list of numbers which are not yet forbidden), your program should output all&nbsp;<em>winning moves</em>. A winning move is a move by which the player whose turn it is can force a win no matter what the other player will do. Now we define these terms more formally:</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<ul style=\"font-family: ; background-color: rgb(255, 255, 255); \">\n	<li>A&nbsp;<em>loosing position</em>&nbsp;is a position in which either<ol>\n	<li>all numbers are forbidden, or</li>\n	<li>no winning move exists.</li>\n</ol>\n<p> </p>\n</li>\n	<li>A&nbsp;<em>winning position</em>&nbsp;is a position in which a winning move exists.<p> </p>\n</li>\n	<li>A&nbsp;<em>winning move</em>&nbsp;is a move after which the position is a loosing position.</li>\n</ul>','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The first line contains the number of scenarios.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The input for each scenario describes a game position. It begins with a line containing the number&nbsp;<em>a</em>,0&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;<em>a</em>&nbsp;&lt; 20 of numbers which are still available. Next follows a single line with the&nbsp;<em>a</em>&nbsp;numbers still available, separated by single blanks.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">You may assume that all game positions in the input could really occur in the Number Game (for example, if 3 is not in the list of numbers available, 6 will not be, either).</p>','<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">The output for each scenario begins with a line containing \"</span><tt style=\"background-color: rgb(255, 255, 255); \">Scenario #i:</tt><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">\", where&nbsp;</span><em>i</em><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;is the number of the scenario starting at 1. In the next line either print \"</span><tt style=\"background-color: rgb(255, 255, 255); \">There is no winning move.</tt><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">\" if this is true for the position of the current scenario, or \"</span><tt style=\"background-color: rgb(255, 255, 255); \">The winning moves are: w1 w2 ...&nbsp;wk.</tt><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">\" where the&nbsp;</span><em>w</em><sub style=\"font-family: ; background-color: rgb(255, 255, 255); \">i</sub><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;are all the winning moves, in ascending order, separated by single blanks. The output for each scenario should be followed by a blank line.</span></p>\n<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">&nbsp;are all the winning moves, in ascending order, separated by single blanks. The output for each scenario should be followed by a blank line.</span></p>','2\n1\n2\n2\n2 3','Scenario #1:\nThe winning moves are: 2.\n\nScenario #2:\nThere is no winning move.\n','',61,0,0,64,5,0,0,38),(1261,'Number That Count','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">``Kronecker\'s Knumbers\'\' is a little company that manufactures plastic digits for use in signs (theater marquees, gas station price displays, and so on). The owner and sole employee, Klyde Kronecker, keeps track of how many digits of each type he has used by maintaining an inventory book. For instance, if he has just made a sign containing the telephone number \"5553141\", he\'ll write down the number ``5553141\'\' in one column of his book, and in the next column he\'ll list how many of each digit he used: two 1s, one 3, one 4, and three 5s. (Digits that don\'t get used don\'t appear in the inventory.) He writes the inventory in condensed form, like this: ``21131435\'\'.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The other day, Klyde filled an order for the number 31123314 and was amazed to discover that the inventory of this number is the same as the number -- it has three 1s, one 2, three 3s, and one 4! He calls this an example of a ``self-inventorying number\'\', and now he wants to find out which numbers are self-inventorying, or lead to a self-inventorying number through iterated application of the inventorying operation described below. You have been hired to help him in his investigations.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Given any non-negative integer&nbsp;<em>n</em>, its inventory is another integer consisting of a concatenation of integers&nbsp;<em>c</em><sub>1</sub><em>d</em><sub>1</sub><em>c</em><sub>2</sub><em>d</em><sub>2</sub>...<em>c</em><sub>k</sub><em>d</em><sub>k</sub>, where each&nbsp;<em>c</em><sub>i</sub>&nbsp;and&nbsp;<em>d</em><sub>i</sub>&nbsp;is an unsigned integer, every&nbsp;<em>c</em><sub>i</sub>&nbsp;is positive, the&nbsp;<em>d</em><sub>i</sub>satisfy&nbsp;0&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;<em>d</em><sub>1</sub>&nbsp;&lt;&nbsp;<em>d</em><sub>2</sub>&nbsp;&lt; ... &lt;&nbsp;<em>d</em><sub>k</sub>&nbsp;\n<img alt=\"&lt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/le.gif\" />&nbsp;9, and, for each digit&nbsp;<em>d</em>&nbsp;that appears anywhere in&nbsp;<em>n</em>,&nbsp;<em>d</em>&nbsp;equals&nbsp;<em>d</em><sub>i</sub>&nbsp;for some&nbsp;<em>i</em>&nbsp;and&nbsp;<em>d</em>&nbsp;occurs exactly&nbsp;<em>c</em><sub>i</sub>&nbsp;times in the decimal representation of&nbsp;<em>n</em>. For instance, to compute the inventory of 5553141 we set&nbsp;<em>c</em><sub>1</sub>&nbsp;= 2,&nbsp;<em>d</em><sub>1</sub>&nbsp;= 1,&nbsp;<em>c</em><sub>2</sub>&nbsp;= 1,&nbsp;<em>d</em><sub>2</sub>&nbsp;= 3, etc., giving 21131435. The number 1000000000000 has inventory 12011 (``twelve 0s, one 1\'\').</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">An integer&nbsp;<em>n</em>&nbsp;is called self-inventorying if&nbsp;<em>n</em>&nbsp;equals its inventory. It is called self-inventorying after&nbsp;<em>j</em>steps&nbsp;(<em>j</em>&nbsp;\n<img alt=\"&gt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/ge.gif\" />&nbsp;1) if&nbsp;<em>j</em>&nbsp;is the smallest number such that the value of the&nbsp;<em>j</em>-th iterative application of the inventory function is self-inventorying. For instance, 21221314 is self-inventorying after 2 steps, since the inventory of 21221314 is 31321314, the inventory of 31321314 is 31123314, and 31123314 is self-inventorying.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Finally,&nbsp;<em>n</em>&nbsp;enters an inventory loop of length&nbsp;<em>k</em>&nbsp;(<em>k</em>&nbsp;\n<img alt=\"&gt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/ge.gif\" />&nbsp;2) if&nbsp;<em>k</em>&nbsp;is the smallest number such that for some integer&nbsp;<em>j</em>&nbsp;(<em>j</em>&nbsp;\n<img alt=\"&gt;=\" src=\"http://contest.felk.cvut.cz/04fee/solved/ge.gif\" />&nbsp;0), the value of the&nbsp;<em>j</em>-th iterative application of the inventory function is the same as the value of the (<em>j</em>&nbsp;+&nbsp;<em>k</em>)-th iterative application. For instance, 314213241519 enters an inventory loop of length 2, since the inventory of 314213241519 is 412223241519 and the inventory of 412223241519 is 314213241519, the original number (we have&nbsp;<em>j</em>&nbsp;= 0 in this case).</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Write a program that will read a sequence of non-negative integers and, for each input value, state whether it is self-inventorying, self-inventorying after&nbsp;<em>j</em>&nbsp;steps, enters an inventory loop of length&nbsp;<em>k</em>, or has none of these properties after 15 iterative applications of the inventory function.</p>','<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">A sequence of non-negative integers, each having at most 80 digits, followed by the terminating value -1. There are no extra leading zeros.</span></p>','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">For each non-negative input value&nbsp;<em>n</em>, output the appropriate choice from among the following messages (where&nbsp;<em>n</em>&nbsp;is the input value,&nbsp;<em>j</em>&nbsp;is a positive integer, and&nbsp;<em>k</em>&nbsp;is a positive integer greater than 1):</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<ul style=\"font-family: ; background-color: rgb(255, 255, 255); \">\n	<li><tt>n is self-inventorying</tt></li>\n	<li><tt>n becomes self-inventorying after j steps</tt></li>\n	<li><tt>n enters an inventory loop of length k</tt></li>\n	<li><tt>n can not be classified after 15 iterations</tt></li>\n</ul>','22\n31123314\n314213241519\n21221314\n111222234459\n-1','22 is self-inventorying\n31123314 is self-inventorying\n314213241519 enters an inventory loop of length 2\n21221314 becomes self-inventorying after 2 steps\n111222234459 enters an inventory loop of length 2','',61,0,0,64,5,0,0,38),(1262,'Spell Checker','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">You, as a member of a development team for a new spell checking program, are to write a module that will check the correctness of given words using a known dictionary of all correct words in all their forms.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">If the word is absent in the dictionary then it can be replaced by correct words (from the dictionary) that can be obtained by one of the following operations:</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \"></p>\n<ul style=\"font-family: ; background-color: rgb(255, 255, 255); \">\n	<li>deleting of one letter from the word;</li>\n	<li>replacing of one letter in the word with an arbitrary letter;</li>\n	<li>inserting of one arbitrary letter into the word.</li>\n</ul>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">Your task is to write the program that will find all possible replacements from the dictionary for every given word.</p>','<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The first part of the input contains all words from the dictionary. Each word occupies its own line. This part is finished by the single character \"<tt>#</tt>\" on a separate line. All words are different. There will be at most 10000 words in the dictionary.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The next part of the input contains all words that are to be checked. Each word occupies its own line. This part is also finished by the single character \"<tt>#</tt>\" on a separate line. There will be at most 50 words that are to be checked.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">All words in the input file (words from the dictionary and words to be checked) consist only of small alphabetic characters and each one contains 15 characters at most.</p>\n<p style=\"font-family: ; background-color: rgb(255, 255, 255); \">The file may consist of more test cases. It is terminated by an empty dictionary.</p>','<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">Write to the output file exactly one line for every checked word in the order of their appearance in the second part of the input file. If the word is correct (i.e. it exists in the dictionary) write the message: \"</span><tt style=\"background-color: rgb(255, 255, 255); \">&lt;checked word&gt; is correct\"</tt><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">\". If the word is not correct then write this word first, then write the character \"</span><tt style=\"background-color: rgb(255, 255, 255); \"><tt>:</tt></tt><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">\" (colon), and after a single space write all its possible replacements, separated by spaces. The replacements should be written in the order of their appearance in the dictionary (in the first part of the input file). If there are no replacements for this word then the line feed should immediately follow the colon.</span></p>\n<p><span style=\"font-family: ; background-color: rgb(255, 255, 255); \">\" (colon), and after a single space write all its possible replacements, separated by spaces. The replacements should be written in the order of their appearance in the dictionary (in the first part of the input file). If there are no replacements for this word then the line feed should immediately follow the colon.</span></p>','i\nis\nhas\nhave\nbe\nmy\nmore\ncontest\nme\ntoo\nif\naward\n#\nme\naware\nm\ncontest\nhav\noo\nor\ni\nfi\nmre\n#\n#','me is correct\naware: award\nm: i my me\ncontest is correct\nhav: has have\noo: too\nor:\ni is correct\nfi: i\nmre: more me','',61,0,0,64,5,0,0,38),(1263,'Transmitters','<p style=\"font-family: ; ; \">In a wireless network with multiple transmitters sending on the same frequencies, it is often a requirement that signals don\'t overlap, or at least that they don\'t conflict. One way of accomplishing this is to restrict a transmitter\'s coverage area. This problem uses a shielded transmitter that only broadcasts in a semicircle.</p>\n<p style=\"font-family: ; ; \">A transmitter&nbsp;<em>T</em>&nbsp;is located somewhere on a 1,000 square meter grid. It broadcasts in a semicircular area of radius&nbsp;<em>r</em>. The transmitter may be rotated any amount, but not moved. Given&nbsp;<em>N</em>&nbsp;points anywhere on the grid, compute the maximum number of points that can be simultaneously reached by the transmitter\'s signal. Figure 1 shows the same data points with two different transmitter rotations.</p>\n<p style=\"font-family: ; ; \"></p>\n<div align=\"CENTER\" style=\"font-family: ; ; \"><table cellpadding=\"3\"><tbody><tr><td align=\"CENTER\">\n<img width=\"125\" height=\"163\" align=\"BOTTOM\" border=\"0\" src=\"http://contest.felk.cvut.cz/04fee/solved/img1.gif\" /></td><td align=\"CENTER\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img width=\"103\" height=\"163\" align=\"BOTTOM\" border=\"0\" src=\"http://contest.felk.cvut.cz/04fee/solved/img2.gif\" /></td><td align=\"CENTER\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img width=\"78\" height=\"163\" align=\"BOTTOM\" border=\"0\" src=\"http://contest.felk.cvut.cz/04fee/solved/img3.gif\" /></td></tr><tr><td align=\"CENTER\">Figure 1a</td><td align=\"CENTER\">Figure 1b</td><td align=\"CENTER\">Figure 2</td></tr></tbody></table></div><p style=\"font-family: ; \">All input coordinates are integers (0-1000). The radius is a positive real number greater than 0. Points on the boundary of a semicircle are considered within that semicircle. There are 1-150 unique points to examine per transmitter. No points are at the same location as the transmitter.</p>','<p><span style=\"font-family: ; ; \">Input consists of information for one or more independent transmitter problems. Each problem begins with one line containing the (</span><em>x</em><span style=\"font-family: ; \">,&nbsp;</span><em>y</em><span style=\"font-family:  \">) coordinates of the transmitter followed by the broadcast radius,&nbsp;</span><em>r</em><span style=\"font-family: ; \">. The next line contains the number of points&nbsp;</span><em>N</em><span style=\"font-family: ; \">&nbsp;on the grid, followed by&nbsp;</span><em>N</em><span style=\"font-family: ; \">&nbsp;sets of (</span><em>x</em><span style=\"font-family: ; \">,&nbsp;</span><em>y</em><span style=\"font-family: ; \">) coordinates, one set per line. The end of the input is signalled by a line with a negative radius; the (</span><em>x</em><span style=\"font-family: ; \">,</span><em>y</em><span style=\"font-family: ; \">) values will be present but indeterminate. Figures 1 and 2 represent the data in the first two example data sets below. Figures 1a and 2 show transmitter rotations that result in maximal coverage.</span></p>\n<p><span style=\"font-family: ; \">) values will be present but indeterminate. Figures 1 and 2 represent the data in the first two example data sets below. Figures 1a and 2 show transmitter rotations that result in maximal coverage.</span></p>','<p><span style=\"font-family: ; \">For each transmitter, the output contains a single line with the maximum number of points that can be contained in some semicircle.</span></p>','25 25 3.5\n7\n25 28\n23 27\n27 27\n24 23\n26 23\n24 29\n26 29\n350 200 2.0\n5\n350 202\n350 199\n350 198\n348 200\n352 200\n995 995 10.0\n4\n1000 1000\n999 998\n990 992\n1000 999\n100 100 -2.5','3\n4\n4','',61,0,0,64,5,0,0,38),(1332,'Anagrams','<p>Anagrams is\nword game that involves rearranging letter tiles to form words. Each piece has\na lower or upper Latin letter on it. </p>\n<p>Little Hamed\nhas received an Anagrams puzzle for his birthday. But he does not know the\nrules of the game. So he simply arranges tiles beside each other to form new\nwords and sentences. Little Hamed arranged the words to form a sentence. He was\nso happy because he managed to use all the pieces of letters he got. But after\na more careful look, he thought the sentence is not that beautiful. He decided\nto rearrange it to make a more beautiful sentence. This time he does not want\nto necessarily use all the pieces. The new puzzle Little Hamed wants to form,\nlack some letters and some letters are extra. </p>\n<p>There is a\ntoy shop in the vicinity that sells or exchanges letter tiles. Little Hamed can\nexchange a tile for a tile with the same letter but different case for <em>C</em>\nTomans. He can exchange a tile with a tile of any letter and any case for <em>S</em>\nTomans. He can also buy a new tile for <em>B</em> Tomans. The prices are\nreasonable relative to each, i.e. <em>C &lt; S &lt; B.</em></p>\n<p>Now, given\nthe first puzzle Little Hamed has arranged, help him obtain all the tiles that\nare required to form his new puzzle with minimum possible cost.</p>','<p>First line of input contains a single integer t (t ≤ 100), the number of tests that follow. The first line of each test contains three space-separated integers C, S, B (1 ≤ C &lt; S &lt; B ≤ 10<sup>6</sup>), the cost of changing case of a tile, exchange a tile with a different tile and buying a new tile, respectively.</p>\n<p>Next two lines describe the puzzle that Little Hamed has arranged and the new puzzle he wants to form. Each puzzle contains only lower and upper Latin letters and space character. Length of each puzzle does not exceed 100. There will be no leading or trailing spaces in description of a puzzle and two words in a puzzle are separated with a single space. Note that space is not puzzle tile and is only used to separate different words of the puzzle.</p>','<p>For each test you should output a single line, the minimum cost to prepare all the tiles required two form the second puzzle. </p>','3\n1 100 10000\nwrite SaMpLe\nis not sImPlE\n1 100 10000\nHappy PMP\nZart PMP\n1 100 10000\nLast war of PMP\nReincarnation of PMP\n','405\n300\n60300','',62,0,1,64,2,23,30,10),(1334,'Cards','<p>You have got a set of cards. On each card an integer between 1 to m is written. The number of cards that have number i written on their side is equal to n<sub>i</sub>.</p>\n<p>You shuffle the cards and distribute them among m bins so that i-th bin receives n<sub>i</sub> cards. In each bin cards are stacked on top of each other. All possible distributions of cards are equally likely to occur.&nbsp;</p>\n<p>We call a distribution of cards nice with respect to i-th bin, if it has the following property. Starting with i-th bin, in each step you pick (and remove) the topmost card from it. The number written on the card specifies the bin from which you should pick the next card. You keep picking cards in this way until you cannot pick any more cards. The distribution is nice if you can remove all the cards following these instructions. In other words, after the last move there should not be any cards remained.&nbsp;</p>\n<p>He is curious to find the probability that a random distribution of cards is n<sub>i</sub>ce with respect to first bin, and also with respect to a random bin. Put differently, can we remove all the cards if we pick the first card from the first bin? What if we choose the starting bin uniformly at random? </p>','<p>Input contains at most 150 tests. In the first line of each test there will be an integer m (2 ≤ m ≤ 1000). Parameter m is the number of bins that the cards are distributed among and also it is the greatest number written on a card. </p>\n<p>Next line will contain m integers n<sub>i</sub> (1 ≤ n<sub>i </sub>≤ 10<sup>9</sup>). Parameter n<sub>i </sub>is the number of cards that i-th bin receives and also it is the number of cards that number i is written on them. </p>\n<p>Input terminates with m=0.&nbsp; </p>','<p>For each test you should output the probabilities that a random distribution of cards is nice with respect to first bin followed by the answer to the same question with respect to a random bin. These two numbers should be separated with a single space and should be formatted as irreducible fraction p/q such that greatest common divisor of p and q is equal to 1.&nbsp; </p>','2 \n1 1 \n3\n10920 2184 6552 \n0','1/2 1/2 \n1/3 5/9 ','',62,0,1,64,2,4,6,10),(1335,'Dictionary attack','<p>You are performing a dictionary attack to hack an unfortunate user’s account. You have a list of n potential words that the user is most likely to use. This list is prefix free, i.e. no word in the list is a prefix of another. You guess that the password is concatenation of one or more words of the list without any delimiters.&nbsp; </p>\n<p>The average person usually uses passwords that have the following criteria:</p>\n<ul>\n<li>The number of words used in password is limited as the users can memorize only a few number words. Depending on the number of words in your dictionary, you assume the number of words used in a password is at most m. If a word is used multiple times, all occurrences of that word are taken into account.\n</li>\n<li>Users are reluctant to use long passwords as they are error prone to type. So the length of a password is at most L.\n</li>\n</ul>\n<p>You are setting up a program to run over all passwords one by one in lexicographical order. But even for computers it takes days to check all possible combinations. Especially if you setup a time interval between two consecutive queries to prevent system administrators become suspicious.</p>\n<p>The program you have written gives an index k in the input, and starts its work from the k-th lexicographically smallest word. In each run, the program iterates over possible words in search space until it finds the password. If it fails to identify the credentials for 12 hours, it exits. The only thing it reports is the index of last checked word. </p>\n<p>You noted that the program is inefficient when the input argument gets large. You want to optimize it. Your task is to find the k-th smallest possible password with a quick algorithm.</p>','<p>First line of input contains a single integer t (<em>t</em> ≤ 100), the number of tests that follow. The first line of each test contains four space separated integers n, m, L, k (1 ≤ n ≤ 1000,1 ≤ m ≤ 10,1 ≤ L ≤ 1000,1 ≤ k ≤ 10<sup>9</sup>), the number of words in the dictionary, maximum number of words used in a password, maximum length of a password and the index of the password in the sorted list of all&nbsp; possible combinations that you are looking for. </p>\n<p>Each of the next n lines contains a string of length at most 300. Words consist of only lowercase Latin letters. It is guaranteed that no word in the list is a prefix of another. </p>','<p>For each test you should output a single line, the k-th lexicographically smallest possible password. If the total number of possible password is less than k, you should print \"<code>empty</code>\" instead.</p>','6\n2 2 11 1\nsimple\nsample\n2 2 11 2\nsimple\nsample\n2 2 12 2\nsimple\nsample\n2 2 11 3\nsimple\nsample\n2 2 12 7\nsimple\nsample\n4 4 10 17\nzart\njamshid\npmp\nhappy\n','sample\nsimple\nsamplesample\nempty\nempty\nzartpmp\n','',62,0,1,64,2,2,3,10),(1336,'Eclipse','<p>When the Moon passes between the Sun and the Earth, it may fully or partially block the Sun. This phenomenon is called solar eclipse.</p>\n<p>Qiyās-ud-din Jamshid Kāshānī was one of the best Persian astronomers and mathematicians who lived in 8th century. He has written treatise on astronomical observational instruments and invented a mechanical planetary computer which could solve a number of planetary problems. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1336_17cf2f4aa0ba4fb4cbc87716bc26bb5e.jpg\" src=\"http://sharecode.ir/assets/problem_images/1336_17cf2f4aa0ba4fb4cbc87716bc26bb5e.jpg\" /></p>\n<p align=\"center\"><em>An example of total eclipse</em></p>\n<p>Jamshid is observing the sky to see the next happening of this beautiful and rare event. He has calculated exact location and radius of the Moon and the Sun. He wants to determine the type of eclipse that is happening.&nbsp;&nbsp;</p>\n<p>For simplicity, Jamshid assumes that he is standing in origin of a plane. He considers an object or part of it visible, if any point of that object except for the points on the boundary can be directly seen from the origin.</p>','<p>First line of input contains a single integer t (t ≤ 10000), the number tests that follow. Each test consists of two lines, describing the Moon and the Sun respectively. Astronomical objects are defined as three integers x, y, r (−10<sup>4</sup> ≤ x,y ≤ 10<sup>4</sup> ,1 ≤ r ≤ 1000) specifying their position and radius. It is guaranteed that radius of the Sun is greater than or equal to radius of the Moon.</p>\n<p>You are standing at the origin watching the sky. It is guaranteed that the Sun and the Moon are non-intersecting and do not touch each other. Also none of them encloses the origin neither on its interior nor its boundary.</p>','<p>For each test you should output a single line. If the disk of the Sun is fully obscured by the Moon, output \"<code>Total eclipse</code>\". Otherwise if the blocking is partial, that is you can directly see a point strictly inside the circle of the Sun, output \"<code>Annular eclipse</code>\". In the case when the Moon is not blocking the Sun at all and all points strictly inside the circle of the Sun are visible to you, output \"<code>None</code>\". </p>','3\n1 1 1\n10 10 2\n1 2 1\n5 5 2\n1 10 1\n10 2 2\n','Total eclipse\nAnnular eclipse\nNone','',62,0,1,64,2,3,27,10),(1337,'Farmers of Kasian','<p>The land of Kasian is in the form of an infinite strip. It has a width of W. Farmers of Kasian have divided their land into subdivisions with n line segments that fully extend across the strip and are non-intersecting. Subdivisions are numbered from 0 through n (inclusive) from left to right. </p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/1337_c7979238c64ba1864f3095a39281044f.jpg\" src=\"http://sharecode.ir/assets/problem_images/1337_c7979238c64ba1864f3095a39281044f.jpg\" /></p>\n<p align=\"center\">An example of subdivions of Kasian</p>\n<p>The governor of Kasian is collecting taxes from the farmers. He has sent an agent to calculate and collect the taxes. As there are quite a lot of subdivisions, the agent has decided to visit only m random locations and collect the tax from the owners of those subdivisions. </p>\n<p>Unfortunately because of the complications in the territory of farmers, the agent cannot accurately decide on which subdivision he is standing. So he asked you as an experienced programmer to do this job for him.</p>','<p>First line of input contains a single integer t (<em>t</em> ≤ 10), the number tests that follow. On the first line of each test there are two integers n, W (1 ≤ <em>n</em> ≤ 5 × 10<sup>4</sup>,1 ≤ <em>W</em> ≤ 10<sup>9</sup>), the number of subdivisions and the parameter <em>W</em> as defined in the problem statement. From now on we assume the land is the unbounded area in between lines <em>y</em> = 0 and <em>y</em> = <em>W</em>. </p>\n<p>Next n lines will contain two integers x1 and x2 (−10<sup>9</sup>≤ x1,x2 ≤ 10<sup>9</sup>). It means that there is line segment from (x1,0) to (x2,<em>W</em>). It is guaranteed that these line segments are disjoint.</p>\n<p>Next line consists of a single integer m (1 ≤ <em>m</em> ≤ 5 × 10<sup>4</sup>), the number of locations the agent checks. After that there are m lines follow, each containing two integers xi, yi (−10<sup>9</sup>≤ xi ≤ 10<sup>9</sup>,0 ≤ yi≤ <em>W</em>), the i-th location that the agent checks. No query point lie on any line segment.</p>','<p>For each test you should output m lines. i-th line for each test should be the number of subdivision for the i-th query point. The answer for each query should be a number from 0 to n.</p>\n<p>There should be exactly one empty line after each test. </p>','2\n1 2\n10 0\n2\n5 0\n5 2\n4 10\n8 8\n3 1\n4 5\n15 12\n5\n2 1\n9 10\n3 1\n6 0\n14 5\n','0\n1\n\n0\n3\n1\n2\n4','',62,0,1,64,5,8,17,10),(1338,'Goodfellas','<p>Ta’zieh is a special kind of traditional Persian performing arts. It dates before the Islamic era and the tragedy of Siawush is one of the best examples.</p>\n<p>Ta’zieh is usually performed on a round stage. Long ago when Ta’zieh was more popular, people of different families was gathering around the stage to watch the show. Each family had some male members and some female members. People could stand around the stage in any order although they should comply with these restrictions:</p>\n<ul>\n<li>A man and a woman from different families cannot stand beside each other.</li>\n	<li>People can stand in several circular rows. But in each row they should stand tight, so everybody is considered to be adjacent to the persons (if any) who are standing next and previous to him.\n</li>\n</ul>\n<p>You are studying the behavior of ancient people to learn more about their social attitude, traditions etc. Given description of some families in a Ta’zieh show, you have to find the minimum number of rows they could form while all restrictions are&nbsp; satisfied.</p>','<p>Input contains several test cases. Number of tests is at most 100. The first line of each test contains a single integer n (1 ≤<em> n</em> ≤ 100), the number of families.</p>\n<p>Next line will contain n integer’s m<sub>i</sub>, the number of men in the i-th family. Description of women in each family w<sub>i</sub> will follow in the same format (0 ≤ w<sub>i</sub>, m<sub>i</sub> ≤ 9). It is guaranteed that for any i between 1 and n, w<sub>i</sub>+m<sub>i</sub> &gt; 0.&nbsp; Input terminates with <em>n</em> = 0. </p>','<p>For each test you should output the minimum number of circular rows that are required, so that each people can watch the show without violating the rules.</p>','2\n1 1\n0 1\n3\n2 1 3\n0 9 2\n0\n','2\n1\n','',62,0,1,64,2,9,31,10),(1339,'Human experience','<p>Given n pairs of integers (a<sub>i</sub>,b<sub>i</sub>), you should calculate the following equation modulo 10<sup>9</sup>+ 7: </p>\n<p align=\"center\">LCM (a<sub>1</sub><sup>b<sub>1</sub></sup>, a<sub>2</sub><sup>b<sub>2</sub></sup>, ..., a<sub>n</sub><sup>b<sub>n</sub></sup>)</p>\n<p align=\"left\">where LCM is the least common multiple of a set of numbers. </p>','<p>The first line of input contains a single integer t (<em>t</em> ≤ 50), the number of tests that follow. The first line of each test contain an integer n (1 ≤ <em>n</em> ≤ 10<sup>5</sup>), the number of pairs of integers.&nbsp; The i-th of next n lines contains two integers a<sub>i</sub>, b<sub>i </sub>(1 ≤ a<sub>i </sub>≤ 10<sup>6</sup>,0 ≤ b<sub>i </sub>≤ 10<sup>9</sup>), the base and the power of i-th pair as described in the statement.</p>','<p>For each test you should output a single line, the answer of equation modulo 10<sup>9</sup>+ 7.</p>','2\n3\n2 4\n15 2\n6 3\n1\n2 1000\n','10800\n688423210\n','',62,0,1,63,3,9,34,10),(1341,'Joining vertices','<p>You are given a weighted undirected graph with n vertices and m edges. In one move you can join any two different vertices into a single vertex and the cost of this operation is the length of the shortest path between the two vertices. Please note that after joining some vertices, multiple edges or self-loops might appear in the graph. Joining vertices is continued with the induced graph until only one vertex remains. </p>\n<p>Your task is to join all vertices into one, such that total cost of operations is minimized.</p>\n<p> </p>','<p>First line of input contains a single integer t (<em>t</em> ≤ 40), the number tests that follow. First line of each test contains integers n, m (1 ≤ n ≤ 1000,m ≤ 200000) , the number of vertices and edges in the graph, respectively. Next m lines contain three integers u<sub>i</sub>, v<sub>i</sub>, w<sub>i</sub> (1 ≤ u<sub>i</sub>, v<sub>i</sub> ≤ n,1 ≤ w<sub>i</sub> ≤ 10<sup>6</sup>), which means there is an undirected edge between u<sub>i</sub>, v<sub>i</sub> with the weight of w<sub>i</sub>. The graph does not contain multiple edges or self-loops.</p>','<p>For each test you should output the minimum total cost of operations for contracting all vertices into one, on a single line. If it is not possible, print \"<code>impossible</code>\" instead.</p>','2\n4 5\n1 2 2\n3 1 1\n4 3 3\n2 4 3\n3 2 5\n4 2\n1 2 10\n3 4 20\n','6\nimpossible\n','',62,0,1,64,4,10,38,10),(1340,'Interesting knapsack','<p>Knapsack is well-known optimization problem. In 0-1 version of problem, you are given a list of n items each with a size and a value, and a bag of size B, you choose a subset of items that fit in the bag and their total value is maximized.&nbsp; This problem is proved to be NP-hard, but it has pseudo-polynomial time dynamic programming algorithm. </p>\n<p>In this problem you should solve the exact same problem with one additional constraint: either your bag is relatively small or the maximum value of items is limited. </p>\n<p> </p>','<p>Input contains at most 50 tests. The first line of each test contains n, B (1 ≤ n ≤ 100,1 ≤ B ≤ 10<sup>8</sup>), the number of items, and the size of the knapsack. The second line contains n integer with the i-th integer being v<sub>i</sub> (1 ≤ v<sub>i</sub> ≤ 10<sup>7</sup>), the values of i-th item. Third line describes the sizes of items s<sub>i </sub>(1 ≤ s<sub>i</sub> ≤ 10<sup>7</sup>) in the same format.&nbsp; </p>\n<p>It is guaranteed that in each test either B ≤ 50000 or max<sub>1 ≤ i ≤ n</sub> v<sub>i</sub> ≤ 500.</p>\n<p>Input terminates with a line \"<code>0 0</code>\". </p>','<p>For each test you should output a single line, the maximum total value of items in the knapsack. </p>','2 100000\n1 500\n1 100000\n3 10\n3 5 7\n4 6 7\n5 100\n1 2 3 4 5\n5 4 3 2 1\n0 0\n','500\n8\n15\n','',62,0,1,64,4,8,61,10),(1343,'Combination Lock','<p>The combination lock of this problem, as shown in the figure, consists of a circular dial, which can be turned (clockwise or counterclockwise) and is embedded into the \"fixed\" part of the lock. The dial has N evenly spaced \"ticks\". The ticks are numbered from 0 to N-1, increasing in the clockwise direction. The fixed part of the lock has a \"mark\" which always \"points to\" a particular tick on the dial. Of course, the mark points to different ticks as the dial is turned. (In the figure, N = 40 and the mark points to tick 14.)</p>\n<p style=\"text-align: center;\" align=\"center\">\n<img src=\"http://sharecode.ir/assets/problem_images/1343_7cec8deeffaca23028c3e7351bce018d.jpg\" />&nbsp;</p>\n<p>The lock comes with three code numbers T1,T2, T3. These are non-negative integers and each of them is less than N. No two of the three are the same.</p>\n<p>The lock is opened in three stages of operations:</p>\n<p>1. If the mark initially points to tick T1, turn the dial exactly two full revolutions clockwise and stop. Otherwise, turn the dial clockwise exactly two full revolutions clockwise and continue to turn it clockwise until the mark points to tick T1.</p>\n<p>2. Turn the dial one full revolution counterclockwise and continue to turn it counterclockwise until the mark points to tick T2.</p>\n<p>3. Turn the dial clockwise until the mark points to tick T3. The lock should now open.</p>\n<p>Given the numbers N, T1, T2, T3, the goal of this problem is to find the average number of ticks the dial must be turned in order to open the lock. For any particular N, T1, T2, T3 and a particular initial configuration of the lock, the number of ticks turned is defined to be the sum of the ticks turned in the three stages outlined above.</p>','<p>The input file consists of a number of test cases, one test case per line. Each line of the input file contains four integers: N, T1, T2, T3, in this order, separated by blank spaces. The integer N is a multiple of 5, 25 &lt;= N &lt;= 100. The numbers T1, T2 and T3 satisfy the constraints stated under the description above. The input will be terminated by a line containing only four zeroes, separated by blank spaces</p>','<p>For each test case, print the average number of ticks (rounded to three decimal places) the dial must be turned in order to open the lock. Assume that each of the N possible initial configurations of the lock is equally likely.</p>','80 20 40 50\n80 10 79 12\n0 0 0 0','369.500\n415.500','',-1,0,1,64,10,23,36,10),(1344,'Close Enough Computations','<p>The nutritional food label has become ubiquitous. A sample label is shown to the right. On the label the number of calories and the number of grams of fat, carbohydrate, and protein are given as integers.</p>\n<p>But carefully reading the label may cause the consumer to notice some inconsistencies. A gram of fat has 9 calories, a gram of carbohydrate has 4 calories, and a gram of protein has 4 calories. Consider the label to the right. A simple computation of the number of calories would indicate that the food should contain 12*9 + 31*4 + 5*4 or 252 calories, but the label indicates it has 250 calories.</p>\n<p>While sometimes the difference in calories is due to other circumstances (such as the presence of alcohol or soluble fiber), this problem will consider only the possibility of round-off error. This food actually has 12.1 grams of fat (yielding 108.9 calories), 30.6 grams of carbohydrate (122.4 calories), 4.7 grams of protein (18.8 calories), so it does in fact have 250 calories (actually 250.1 calories).</p>\n<p style=\"text-align: center;\">\n<img src=\"http://sharecode.ir/assets/problem_images/1344_aaeb9e0ded41c3b64cbd4caca114f078.jpg\" />&nbsp;</p>\n<p>Write a program that will determine if values for a nutritional label are consistent, that is, if there is a way the true values for the grams of nutrients can be rounded to the shown values and yield the number of calories shown.</p>\n<p>You should assume that standard rounding rules apply; that is any value less than 0.5 rounds down and those 0.5 or over round up.</p>','<p>The input will contain one or more sets of data about potential labels. Each data set will consist of 4 non-negative integers, separated by one or more blanks, on a single line. The integers represent the number of calories, the number of grams of fat, the number of grams of carbohydrates, and the number of grams of protein, in that order. The number of calories will not exceed 10000, and the number of grams of any component will not exceed 1000.</p>\n<p>End of input is indicated by a line containing 4 zeroes. This line should not be processed.</p>','<p>For each data set, print \"yes\" or \"no\" on its own line, indicating whether the given rounded values of the three nutrients can yield the given number of calories.</p>','250 12 31 5\n250 13 31 5\n122 10 10 0\n0 0 0 0','yes\nno\nno','',-1,0,1,64,10,36,100,12),(1345,'Balance','<p>An investor invests a certain percentage of his assets into NINSTRUMENTS financial instruments. After each term, these instruments deduct a certain fixed administrative cost, followed by a fee that is a percentage of the amount that was invested at the beginning of the term, and then add a return, which is a (positive or negative) percentage of the amount invested at the beginning of the term. If any account drops to zero or below after such a transaction, it is considered closed (no fees are charged against it, and is treated as simply zero) until a rebalancing occurs.</p>\n<p>Rebalancing occurs after every NREBALANCE terms, where the total assets of the investor are redistributed according to the original ratios for the instruments. Without rebalancing, the investor\'s assets would become dominated by the higher return instruments, which would expose them to more risk compared to a balanced investment plan. Note that it is possible that all instruments drop to zero, in which case they all remain closed for the remaining terms.</p>\n<p>You are to model the value of such an investment strategy and report the ending value in each instrument (before rebalancing, if it happens to land on a term when a rebalance is due). Compute your results using double precision (do not round intermediate values to pennies), but round your final answers to pennies.</p>','<p>The first line of the input contains the three positive integers:</p>\n<p>NINSTRUMENTS NTERMS NREBALANCE</p>\n<p>There are no more than 10 instruments, and the number of terms is at most 20. This is followed by 3 lines of floating-point numbers separated by spaces, in the following format:</p>\n<p>FIXED_FEE(1) .. FIXED_FEE(NINSTRUMENTS)</p>\n<p>PERCENTAGE_FEE(1) .. PERCENTAGE_FEE(NINSTRUMENTS)</p>\n<p>PRINCIPAL_START(1) .. PRINCIPAL_START(NINSTRUMENTS)</p>\n<p>Finally, there are NTERMS lines each containing NINSTRUMENTS floating-point numbers indicating the percentage return of each instrument in each term:</p>\n<p>RETURN(1,1) .. RETURN(1,NINSTRUMENTS)</p>\n<p>RETURN(2,1) .. RETURN(2,NINSTRUMENTS)</p>\n<p>.</p>\n<p>.</p>\n<p>RETURN(NTERMS,1) .. RETURN(NTERMS,NINSTRUMENTS)</p>\n<p>All percentages (PERCENTAGE_FEE and RETURN) are given as ratios, up to 4 decimal places. For example, a fee of 0.0002 means 0.02% of the investment in this instrument is deducted as a fee each term. FIXED_FEE and PRINCIPAL_START are non-negative floating-point numbers that are specified to 2 decimal places. At least one of the PRINCIPAL_START values is positive.</p>','<p>Write on a single line the principal of each investment (separated by a space) at the end of NTERMS terms. Round each principal to the nearest penny.</p>\n<p>PRINCIPAL_END(1) .. PRINCIPAL_END(NINSTRUMENTS)</p>','4 10 5\n5.00 10.00 20.00 50.00\n0.002 0.001 0.0008 0.0005\n150000.00 100000.00 75000.00\n50000.00\n0.10 0.05 -0.05 -0.85\n0.10 0.05 -0.10 -0.85\n0.10 0.05 -0.20 -0.85\n0.10 0.05 -0.40 -0.85\n0.10 0.05 -0.80 -0.85\n0.10 0.05 -0.05 -0.90\n0.10 0.05 -0.05 -0.90\n0.10 0.05 -0.05 -0.90\n0.10 0.05 -0.05 -0.85\n0.10 0.05 -0.05 -0.85','237698.69 126086.01 57298.74 0.00','',-1,0,1,64,10,13,16,12),(1346,'Dance','<p>For a dance to be proper in the Altered Culture of Machinema, it must abide by the following rules:</p>\n<p>1. A dip can only appear 1 or 2 steps after a jiggle, or before a twirl, as in:</p>\n<p>o ...jiggle dip...</p>\n<p>o ...jiggle stomp dip...</p>\n<p>o ...dip twirl...</p>\n<p>2. All dances end with a clap stomp clap.</p>\n<p>3. If a dance contains a twirl, it must have a hop.</p>\n<p>4. No dance can start with a jiggle.</p>\n<p>5. All dances must have a dip.</p>\n<p>As instructor at a dance composition school, you must grade many freshman attempts at composing dances. You decide to make an automatic grader that can check against these rules.</p>\n<p> </p>','<p>The input consists of a number of dances, one per line. Each dance has a maximum of 1000 steps. Each step is separated by a single space, and all steps are lowercase alphabetic words at most 100 letters long.</p>','<p>If a dance in the input has no mistakes, then the output should contain the words \"form ok: \" followed by the original composition. If a dance has a single type of form error, then the output should contain the words \"form error K: \" where K is the rule which failed, followed by the composition. If a dance has multiple types of form errors, then the output should contain the errors as a comma separated clause, as in \"form errors K(1), K(2), ..., K(N-1) and K(N): \" where the form errors are in increasing order, followed by the composition. If a dance has form error 1, every dip in the dance that violates rule 1 should be printed in upper case.</p>','dip twirl hop jiggle hop hop clap stomp clap\ndip hop jiggle hop hop clap stomp clap\ndip twirl hop jiggle hop hop clap clap stomp\njiggle dip twirl hop jiggle hop hop clap stomp clap\njiggle dip\njiggle\ndip twirl hop dip jiggle hop dip hop clap stomp clap','form ok: dip twirl hop jiggle hop hop clap stomp clap\nform error 1: DIP hop jiggle hop hop clap stomp clap\nform error 2: dip twirl hop jiggle hop hop clap clap stomp\nform error 4: jiggle dip twirl hop jiggle hop hop clap stomp clap\nform errors 2 and 4: jiggle dip\nform errors 2, 4 and 5: jiggle\nform error 1: dip twirl hop DIP jiggle hop dip hop clap stomp clap','',-1,0,1,64,10,19,48,12),(1347,'Prime Bases','<p>Given any integer base b &gt;= 2, it is well known that every positive integer n can be uniquely represented in base b. That is, we can write</p>\n<p>n = a<sub>0</sub> + a<sub>1</sub>*b + a<sub>2</sub>*b*b + a<sub>3</sub>*b*b*b + ...</p>\n<p>where the coefficients a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, ... are between 0 and b-1 (inclusive).</p>\n<p>What is less well known is that if p<sub>0</sub>, p<sub>1</sub>, p<sub>2</sub>, ... are the first primes (starting from 2, 3, 5, ...), every positive integer n can be represented uniquely in the \"mixed\" bases as:</p>\n<p>n = a<sub>0</sub> + a<sub>1</sub>*p<sub>0</sub> + a<sub>2</sub>*p<sub>0</sub>*p<sub>1</sub> + a<sub>3</sub>*p<sub>0</sub>*p<sub>1</sub>*p<sub>2</sub> + ...</p>\n<p>where each coefficient a<sub>i</sub> is between 0 and p<sub>i</sub>-1 (inclusive). Notice that, for example, a<sub>3</sub> is between 0 and p<sub>3</sub>-1, even though p<sub>3</sub> may not be needed explicitly to represent the integer n.</p>\n<p>Given a positive integer n, you are asked to write n in the representation above. Do not use more primes than it is needed to represent n, and omit all terms in which the coefficient is 0.</p>','<p>Each line of input consists of a single positive 32-bit signed integer. The end of input is indicated by a line containing the integer 0.</p>','<p>For each integer, print the integer, followed by a space, an equal sign, and a space, followed by the mixed base representation of the integer in the format shown below. The terms should be separated by a space, a plus sign, and a space. The output for each integer should appear on its own line.</p>','123\n456\n123456\n0','123 = 1 + 1*2 + 4*2*3*5\n456 = 1*2*3 + 1*2*3*5 + 2*2*3*5*7\n123456 = 1*2*3 + 6*2*3*5 + 4*2*3*5*7 + 1*2*3*5*7*11 + 4*2*3*5*7*11*13','',-1,0,1,64,10,15,28,12),(1348,'XML','<p>In this problem, you are asked to determine if a given document satisfies the syntax of an XML-like language.</p>\n<p>A simple XML-like document can be parsed as a sequence of the following:</p>\n<p>1. Plain text --- ASCII codes between 32 and 127 (inclusive), with none of the following symbols: &lt;, &gt;, &amp;</p>\n<p>2. The sequences:</p>\n<ul>\n<li> &amp;lt;</li>\n<li> &amp;gt;</li>\n<li> &amp;amp;</li>\n</ul>\n<p>These encode a &lt;, &gt;, or &amp; respectively.</p>\n<p>3. &amp;xHEX; HEX must be any even (positive) number of upper or lower case hexadecimal digits, and this represents the bytes given.</p>\n<p>4. &lt;tag&gt; Tag can be any lowercase alphanumeric string. This tag is pushed onto the context stack.</p>\n<p>5. &lt;tag/&gt; This tag is not pushed onto the context stack (there is no closing context).</p>\n<p>6. &lt;/tag&gt; This tag removes the &lt;tag&gt; context from the stack, which must be topmost on the stack.</p>\n<p>By the time the entire document is parsed, the context stack is empty for a valid document. We should also note that the empty string is considered valid.</p>','<p>You will be given a number of documents to process. Each document is given as one line of text which may be empty. The input is terminated by the end of file.</p>','<p>For each document given, print valid on a single line if it is a valid XML-like document, or invalid otherwise.</p>','the quick brown fox.\nthe &lt;i&gt;&lt;b&gt;quick&lt;/b&gt; brown&lt;/i&gt; fox.\n&lt;doc&gt;fox &amp;amp; socks.&lt;/doc&gt;\n3x+5&amp;gt;7\nNull: &x00;\n&lt;doc&gt;the quick brown fox.\nthe &lt;i&gt;quick &lt;b&gt;brown&lt;/i&gt;&lt;/b&gt; fox\nfox & socks.\n3x+5&gt;7\nNull: &x0;','valid\nvalid\nvalid\nvalid\nvalid\ninvalid\ninvalid\ninvalid\ninvalid\ninvalid','',-1,0,1,64,10,10,39,10),(1349,'Wax','<p>You are a flooring contractor with bickering employees. You need to have these employees work together to wax the floor of some rooms, each with 1 door.</p>\n<p>None of the workers want to work more than the others, and insist on working together so they can see if someone else is goofing off, so you must assign equal areas of each room to each employee. Each worker is assigned a contiguous portion of the room to wax. The portions assigned are separated by straight line segments that radiate out from the doorway to a wall in the room, so they can exit the room after the job is done.</p>','<p>The input is a series of problem definitions as follows:</p>\n<p>WIDTH HEIGHT DOOR WORKERS</p>\n<p>Each is a non-negative integer value less than or equal to 100, with at least 2 workers, and a positive WIDTH and HEIGHT. They specify the positions of the corners of the room: (0,0), (WIDTH,0), (WIDTH,HEIGHT), and (0,HEIGHT), as well as the location of the door: (DOOR,0), 0 &lt; DOOR &lt; WIDTH. Each problem definition is given on its own line.</p>\n<p>The end of input is indicated by a list of 4 zeros:</p>\n<p>0 0 0 0</p>','<p>The output are the coordinates, with 3 decimal digits of precision, of the ends of the WORKERS-1 line segments extending from the door to a wall of the room so that the room is divided into WORKERS parts with equal areas. The points should be given in counter-clockwise order.</p>','3 5 2 4\n10 10 5 2\n10 10 5 4\n0 0 0 0','2.500 5.000 1.000 5.000 0.000 3.750\n5.000 10.000\n10.000 10.000 5.000 10.000 0.000 10.000','',-1,0,1,64,10,9,25,12),(1350,'Resistors','\n<p>Every electrical appliance (such as a light bulb) has a certain resistance. If the appliance is connected to a given voltage, the higher its resistance, the lower the current flowing through the appliance. The unit of measurement for resistance is the ohm. In order to avoid round-off errors that can affect floating-point numbers, we will use rational numbers (quotients of positive integers) to represent the resistance of an appliance numerically.</p>\n<p>There are two basic ways to connect two or more appliances into a configuration of appliances: serially (Figure 1) or parallel (Figure 2).</p>\n<p>Two or more configurations can be further connected serially or parallel to yield another (more complex) configuration yet, and this process of building more complex configurations from existing ones can be repeated any number of times (Figure 3).</p>\n<p>In general, a configuration is either a single appliance, or a serial connection of two or more configurations, or a parallel connection of two or more configurations.</p>\n<p>The resistance of a configuration of resistors can be computed according to the following two rules:</p>\n<p>1. The resistance of a serial configuration is the sum of the resistances of its component configurations.</p>\n<p>2. The resistance of a parallel configuration is the reciprocal of the sum of the reciprocals of its component configurations.</p>\n<p> </p>\n<div style=\"text-align: center;\">\n<img src=\"http://sharecode.ir/assets/problem_images/1350_14546161f7c82e8cbd3b3bf568f23446.jpg\" /></div>\n<p>In Figure 1, the resistance of the configuration is 3/2 + 3/4 + 1/4 = 5/2 ohm.</p>\n<p>In Figure 2, the resistance of the configuration is 1/(1/(3/2) + 1/(1/2) + 1/ (1/4)) = 3/20 ohm</p>\n<p>In Figure 3, we first calculate 1/(1/(1/2) + 1/(2/3)) + 2/5 = 24/35 and 1/2 + 1/(1/(2/3) + 1/(2/5)) + 3/2 = 9/4. Adding the reciprocals of these two values and reciprocating the result, we get 72/137 ohm.</p>\n<div style=\"text-align: center;\">\n<img src=\"http://sharecode.ir/assets/problem_images/1350_ce8093b2cbdcf16764fb65ba907de482.jpg\" />&nbsp;<br /></div><p>A configuration can be represented in text format.</p>\n<p>• A single appliance is represented by the numerical value of its resistance (without enclosing parentheses).</p>\n<p>• A configuration that is the serial connection of several configurations is represented as a list of the representations of its components, separated by the ampersand character (\"&amp;\") and enclosed in a pair of parentheses.</p>\n<p>• A configuration that is the parallel connection of several configurations is represented as a list of the representations of its components, separated by the vertical bar character (\"|\") and enclosed in a pair of parentheses.</p>\n<p>Thus, figures 1, 2, and 3 are represented in text format by the respective expressions:</p>\n<p>(3/2 &amp; 3/4 &amp; 1/4)</p>\n<p>(3/2 | 1/2 | 1/4)</p>\n<p>(((1/2 | 2/3) &amp; 2/5) | (1/2 &amp; (2/3 | 2/5) &amp; 3/2))</p>\n','<p>The input consists of a number of test cases, one test case per line. Each line of the input contains a valid expression that defines a configuration according to the rules stated above. The resistance values of the appliances will be positive rational numbers, in the form NUMERATOR/DENOMINATOR. There will be one blank space on each side of every ampersand or vertical bar. There will be no other blank spaces in the expression.</p>','<p>For each test case, print the resistance of the configuration on a new line, in the form NUMERATOR/DENOMINATOR, with all common factors of NUMERATOR and DENOMINATOR cancelled. Do not print any blank spaces.</p>','15/1\n(3/2 & 3/4 & 1/4)\n(3/2 | 1/2 | 1/4)\n((1/2 | 2/3) & 2/5)\n(1/2 & (2/3 | 2/5) & 3/2)\n(((1/2 | 2/3) & 2/5) | (1/2 & (2/3 | 2/5) & 3/2))','15/1\n5/2\n3/20\n24/35\n9/4\n72/137\n','',-1,0,1,64,10,11,15,10),(1351,'Clickomania','<p>Clickomania is a puzzle in which one starts with a rectangular grid of cells of different colours. In each step, a player selects (\"clicks\") a cell. All connected cells of the same colour as the selected cell (including itself) are removed if the selected cell is connected to at least one other cell of the same colour. The resulting \"hole\" is filled in by adjacent cells based on some rule, and the object of the game is to remove all cells in the grid.</p>\n<p>In this problem, we are interested in the one-dimensional version of the problem. The starting point of the puzzle is a string of colours (each represented by an uppercase letter). At any point, one may select (click) a letter provided that the same letter occurs before or after the one selected. The substring of the same letter containing the selected letter is removed, and the string is shortened to remove the hole created. To solve the puzzle, the player has to remove all letters and obtain the empty string. If the player obtains a non-empty string in which no letter can be selected, then the player loses.</p>\n<p>For example, if one starts with the string \"ABBAABBAAB\", selecting the first \"B\" gives \"AAABBAAB\". Next, selecting the last \"A\" gives \"AAABBB\". Selecting an \"A\" followed by a \"B\" gives the empty string. On the other hand, if one selects the third \"B\" first, the string \"ABBAAAAB\" is obtained. One may verify that regardless of the next selections, we obtain either the string \"A\" or the string \"B\" in which no letter can be selected. Thus, one must be careful in the sequence of selections chosen in order to solve a puzzle. Furthermore, there are some puzzles that cannot be solved regardless of the choice of selections. For example, \"ABBAAAAB\" is not a solvable puzzle.</p>\n<p>Some facts are known about solvable puzzles:</p>\n<p>• The empty string is solvable.</p>\n<p>• If x and y are solvable puzzles, so are xy, AxA, and AxAyA for any uppercase letter A.</p>\n<p>• All other puzzles not covered by the rules above are unsolvable.</p>\n<p>Given a puzzle, your task is to determine whether it can be solved or not.</p>','<p>Each case of input is specified by a single line. Each line contains a string of uppercase letters. Each string has at least one but no more than 150 characters. The input is terminated by the end of file.</p>','<p>For each input case, print solvable on a single line if there is a sequence of selections that solves the puzzle. Otherwise, print unsolvable on a line.</p>','ABBAABBAAB\nABBAAAAB','solvable\nunsolvable','',-1,0,1,64,10,15,25,12),(1352,'Water Gate Management','<p style=\"text-align:justify\">A dam has <em>n</em> water\ngates to let out water when necessary. Each water gate has its own capacity, water\npath and affected areas in the downstream. The affected areas may have a risk\nof flood when the water gate is open. The cost of potential damage caused by a\nwater gate is measured in number calculated from the number of people and areas\nestimated to get affected.</p>\n<p style=\"text-align:justify\">Suppose a water\ngate <em>G<sub>i</sub></em> has the volumetric flow rate of <em>F<sub>i</sub></em>\nm<sup>3</sup>/hour and the damage cost of <em>C<sub>i</sub></em>. In a certain\nsituation, the dam has the volume <em>V</em> m<sup>3 </sup>of water to flush out\nwithin <em>T</em> hours. Your task is to manage the opening of the water gates in\norder to get rid of <em>at least</em> the specified volume of water within a\nlimited time in condition that the damage cost is minimized.<span style=\"mso-spacerun: yes\">&nbsp; </span></p>\n<p style=\"text-align:justify\">For example, a dam has 4 water\ngates and their properties are shown in the following table.</p>\n<p style=\"text-align:justify\">&nbsp;</p>\n<table style=\"margin-left:29.4pt;\n border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;\n mso-padding-alt:0in 5.4pt 0in 5.4pt\" cellpadding=\"0\" cellspacing=\"0\" border=\"1\">\n <tbody><tr>\n  <td style=\"width:1.5in;border:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"144\">\n  <p style=\"text-align:center\" align=\"center\"><strong>Water Gate</strong></p>\n  </td>\n  <td style=\"width:1.0in;border:solid windowtext .5pt;\n  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:center\" align=\"center\"><strong>G<sub>1</sub></strong></p>\n  </td>\n  <td style=\"width:1.0in;border:solid windowtext .5pt;\n  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:center\" align=\"center\"><strong>G<sub>2</sub></strong></p>\n  </td>\n  <td style=\"width:1.0in;border:solid windowtext .5pt;\n  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:center\" align=\"center\"><strong>G<sub>3</sub></strong></p>\n  </td>\n  <td style=\"width:1.0in;border:solid windowtext .5pt;\n  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:center\" align=\"center\"><strong>G<sub>4</sub></strong></p>\n  </td>\n </tr>\n <tr>\n  <td style=\"width:1.5in;border:solid windowtext .5pt;\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"144\">\n  <p>Flow rate (m<sup>3</sup>/hour)</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">720,000</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">50,000</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">130,000</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">1,200,000</p>\n  </td>\n </tr>\n <tr>\n  <td style=\"width:1.5in;border:solid windowtext .5pt;\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"144\">\n  <p style=\"text-align:justify\">Cost</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">120,000</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">60,000</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">50,000</p>\n  </td>\n  <td style=\"width:1.0in;border-top:none;border-left:none;\n  border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\n  padding:0in 5.4pt 0in 5.4pt\" valign=\"top\" width=\"96\">\n  <p style=\"text-align:right\" align=\"right\">150,000</p>\n  </td>\n </tr>\n</tbody></table><p style=\"text-align:justify\">&nbsp;</p>\n<p style=\"text-align:justify\"><em>Case 1:</em><span style=\"mso-spacerun: yes\">&nbsp; </span>You have to flush out the water 5 million m<sup>3\n</sup>within 7 hours. The minimum cost will be 120,000 by letting the water gate\nG1 open for 7 hours. </p>\n<p style=\"text-align:justify;text-indent:.5in\"><em>Case 2:</em><span style=\"mso-spacerun: yes\">&nbsp; </span>You have to flush out the water 5 million m<sup>3\n</sup>within 30 hours. The minimum cost will be 110,000 by letting the water\ngates G<sub>2</sub> and G<sub>3</sub> open, for example, G<sub>2</sub> is open\nfor 29 hours and G<sub>3</sub> is open for 28 hours.</p>\n<p style=\"text-align:justify;text-indent:.5in\">Note that each water\ngate is independent and it can be open only in a unit of whole hour (no\nfraction of hour). </p>','<p>The first line includes an\ninteger <em>n</em> indicating number of water gates (1 ≤ <em>n </em>≤\n20). Then the next <em>n</em> lines contain, in each line, two integers: <em>F<sub>i</sub></em>\nand <em>C<sub>i</sub></em> corresponding to the flow rate (m<sup>3</sup>/hour)\nand the damage cost of the water gate <em>G<sub>i </sub></em><sub><span style=\"mso-spacerun: yes\">&nbsp;</span></sub>respectively. The next line contains\nthe number <em>m</em> which is the number of test cases (1 ≤ <em>m </em>≤\n50). The following <em>m</em> lines contain, in each line, two integers: <em>V</em>\nand <em>T</em> corresponding to the volume (m<sup>3</sup>) of water to let out\nwithin <em>T</em> hours.<br />\n(1 ≤ <em>F<sub>i</sub></em> ,<em>V, C<sub>i</sub> </em>≤ 10<sup>9 </sup>,\n1 ≤ <em>T </em>≤ 1000)</p>','<p>or each test case, print out the\nminimum cost in the exact format shown in the sample output below. If it is <strong>not</strong>\npossible to let out the water of volume <em>V</em> in <em>T</em> hours from the\ndam, print out “<span style=\"font-size:10.0pt;font-family:&quot;Courier New&quot;\">IMPOSSIBLE</span>”\n(without quotation marks).</p>','4 \n720000 120000 \n50000 60000 \n130000 50000 \n1200000 150000 \n3 \n5000000 7 \n5000000 30 \n63000000 24','Case 1: 120000 \nCase 2: 110000 \nCase 3: IMPOSSIBLE','',-1,0,1,64,2,15,21,10),(1353,'Binary Search Tree','<p>A binary search tree is a binary tree that satisfies the following properties:</p>\n<ul>\n<li>The left subtree of a node contains only nodes with keys less than the node\'s key.</li>\n	<li>The right subtree of a node contains only nodes with keys greater than the node\'s key. &nbsp;</li>\n	<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1353_a60ea8e2a625a8b30eba5c6095803164.jpg\" src=\"http://sharecode.ir/assets/problem_images/1353_a60ea8e2a625a8b30eba5c6095803164.jpg\" /></p>\n<p>Pre-order traversal (Root-Left-Right) prints out the node’s key by visiting the root node then traversing the left subtree and then traversing the right subtree. Post-order traversal (Left – Right-Root)&nbsp; prints out the left subtree first and then right subtree and finally the root node. For example, the results of pre-order traversal and post-order traversal of the binary tree shown in <br />Figure 1 are as follows:&nbsp;</p>\n<p>Pre-order:&nbsp; 50, 30, 24, 5, 28, 45, 98, 52, 60&nbsp;&nbsp; <br />Post-order:&nbsp; 5, 28, 24, 45, 30, 60, 52, 98, 50</p>\n<p>Given the pre-order traversal of a binary search tree, you task is to find the post-order traversal of this tree. </p>','<p>The keys of all nodes of the input binary search tree are given according to pre-order traversal. Each node has a key value which is a positive integer less than 1000000. All values are given in separate lines (one integer per line). You can assume that a binary search tree does not contain more than 10,000 nodes and there are no duplicate nodes.</p>','<p>The output contains the result of post-order traversal of the input binary tree. Print out one key per line.</p>','50 \n30 \n24 \n5 \n28 \n45 \n98\n52\n60','5 \n28 \n24 \n45 \n30 \n60 \n52 \n98 \n50','',-1,0,1,64,10,37,60,10),(1354,'Fun Coloring','<p>Consider the problem called <strong>FUN COLORING</strong> below. <br /><br /><strong>-=FUN COLORING PROBLEM=-</strong><br />INSTANCE: A finite set U and sets S1, S2, S3,…,Sm ⊆ U and |Si| ≤ 3. PROBLEM: Is there a function f : U -&gt;{RED, BLUE} such that at least one member of each Si is assigned a different color from the other members?</p>\n<p>Given an instance of FUN COLORING PROBLEM, your job is to find out whether such function f exists for the given instance. </p>','<p>In this problem U = {x1, x2, x3,…,xn}. There are k instances of the problem. The first line of the input file contains a single integer k and the following lines describe k instances, each instance separated by a blank line. In each instance the first line contains two integers n and m with a blank in between. The second line contains some integers i’s representing xi’s in S1, each i separated by a blank. The third line contains some integers i’s representing xi’s in S2 and so on. The line m+2 contains some integers i’s representing xi’s in Sm. Following a blank line, the second instance of the problem is described in the same manner and so on until the kth instance is described. In all test cases, 1 ≤ k ≤ 13, 4 ≤ n ≤ 22, and 6 ≤ m ≤ 111. </p>','<p>For each instance of the problem, if f exists, print a Y. Otherwise, print N. Your solution will contain one line of k Y’s (or N’s) without a blank in between. The first Y (or N) is the solution for instance 1. The second Y (or N) is the solution for instance 2, and so on. The last Y (or N) is the solution for instance k. </p>',' 2 \n5 3 \n1 2 3 \n2 3 4 \n1 3 5 \n \n7 7 \n1 2 \n1 3 \n4 2 \n4 3 \n2 3 \n1 4 \n5 6 7 ','YN\n','&nbsp;',-1,0,1,64,10,12,25,10),(1355,'Twin Apparent Primes','<p>Prime numbers have very\ninteresting applications in Computer Science. This problem is obviously related\nwith prime numbers but you need to know the following two definitions to solve\nthis problem.</p>\n<p class=\"MsoNormal\" style=\"text-align:justify\"><strong>Apparent Prime:</strong> A positive\nnumber that is not divisible by all integer numbers greater than 1 and less\nthan or equal to t is called apparent prime. The value of t will be supplied\nfor you.</p>\n<p class=\"MsoNormal\" style=\"text-align:justify\"><strong>Twin Apparent Primes:</strong> If\nthe difference of two apparent primes is 2 then they are called twin apparent\nprimes. </p>\n<p class=\"MsoNormal\" style=\"text-align:justify\">Given the value of n and t you\nwill have to find two n-digit apparent prime numbers p and (p+2).</p>','<p class=\"MsoNormal\" style=\"text-align:justify\">The input file contains at most\n1001 lines of inputs. Each line contains two positive integers n (3500 ≤\nn ≤ 5000) and t (t ≤ 8000).</p>\n<p class=\"MsoNormal\" style=\"text-align:justify\">Input is terminated by a line\ncontaining two zeroes. These two numbers are of course invalid input and should\nnot be processed. </p>','<p>For each line\nof input produce one line of output. This line contains an n-digit apparent prime\nnumber p, such that (p+2) is also an apparent prime. If here is more than one\nsuch number, anyone will do.</p>\n<p>Although n&gt;=3500, in the sample n=2 so that the output fits in reasonable space. </p>','2 6\n0 0','17','',-1,0,1,64,10,0,26,10),(1356,'Queen Game','<p>Queen game\nis played in a chessboard of size R rows and C columns. Rows are numbered from\n1 to R and columns are numbered from 1 to C. The topmost square is in row 1 and\ncolumn 1. The game is a 2 player game. Initially there are N queens placed in\nvarious squares of the chessboard. In his turn, the player picks a queen and\nmoves it either towards the top vertically, or towards the left horizontally or\ntowards the top-left diagonally and the queen should always stay on the board.\nWhen the queen reaches square (1, 1) it is removed from the board. The player\nwho gives the last move wins. Each square is big enough to accommodate infinite\nnumber of queens. The players give their moves by turns. You are given the size\nof the chessboard and the initial positions of the N queens. Assuming that both\nof the players play perfectly your task is to determine who will win this game.</p>','<p>First line of the input contains T\nthe number of test cases. Each test case starts with a line containing 3\nintegers R(1<span style=\"mso-bidi-font-family:Calibri\">≤</span>R<span style=\"mso-bidi-font-family:Calibri\">≤25)</span>, C(1<span style=\"mso-bidi-font-family:Calibri\">≤</span>C<span style=\"mso-bidi-font-family:\nCalibri\">≤10<sup>15</sup>)</span> and N(1<span style=\"mso-bidi-font-family:\nCalibri\">≤N≤1000)</span>. Each of the next N lines contains the\npositions of N queens. The position is denoted by two integers. The first\ninteger is the row number and the second integer is the column numbers.</p>','<p class=\"MsoBodyText2\">For each test case output “YES” if the first player has a\nwinning strategy and “NO” otherwise. Look at the output for sample input for\ndetails.</p>','3\n5 5 1\n2 3\n5 5 2\n4 4\n4 4\n5 5 3\n1 2\n2 1\n2 2','NO\nNO\nYES','',-1,0,1,64,10,2,15,10),(1357,'Spelling Suggestion','<p class=\"Standard\" style=\"text-align:justify\">A spelling suggestion is a part of\nspelling correction program that generates a set of plausible replacements for words\nthat are likely to be misspelled. One way to measure the plausibility of these\nreplacements is to compute their edit distance against a given misspelled word.\nThe edit distance between two words is the total number of edit operations that\nhave to be done in order to transform one word into the other. Normally these\nedit operations are insertion, deletion and substitution of a single character\nincluding transposition of 2 consecutive characters.</p>\n<p class=\"Standard\" style=\"text-align:justify\">For example, for a word <span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;\nmso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">“</span>wonder<span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;\nmso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">”</span>, if the deletion is applied\nat the character \'o\', this word will transform into <span style=\"font-family:\n&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;mso-hansi-font-family:\n&quot;Nimbus Roman No9 L&quot;\">“</span>wnder<span style=\"font-family:&quot;DejaVu Sans&quot;;\nmso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;mso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">”</span>.\nAnd if the substitution with \'a\' is applied at \'o\', it will become <span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;\nmso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">“</span>wander<span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;\nmso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">”</span>. And if the transposition\nis applied at <span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:\n&quot;Nimbus Roman No9 L&quot;;mso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">“</span>er<span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;\nmso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">”</span>, it will become <span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;\nmso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">“</span>wondre<span style=\"font-family:&quot;DejaVu Sans&quot;;mso-ascii-font-family:&quot;Nimbus Roman No9 L&quot;;\nmso-hansi-font-family:&quot;Nimbus Roman No9 L&quot;\">”</span>.</p>\n<p class=\"Standard\" style=\"text-align:justify\">In this edit distance strategy,\nthe degree of similarity between two words is up to their minimum edit\ndistance. If the minimum edit distance between <em>word</em><em><sub><span style=\"font-size:10.5pt;mso-bidi-font-size:12.0pt\">1</span></sub></em> and <em>word<sub>2</sub></em>\nis lower than the distance between <em>word</em><i><sub><span style=\"font-size:\n10.5pt;mso-bidi-font-size:12.0pt\">1</span></sub></i> and <em>word<sub>3</sub></em>,\nthen <em>word<sub>1</sub></em> is more similar to <em>word<sub>2</sub></em> than to\n<em>word<sub>3</sub></em>. So the <em>word<sub>2</sub></em> is a better spelling\nsuggestion for <em>word<sub>1</sub></em>, comparing with <em>word<sub>3</sub></em>. </p>\n<p class=\"Standard\" style=\"text-align:justify\">Suppose that you are an employee\nof a software company which needs to build up a prototype of spelling\nsuggestion program. This prototype tends to be a part of word processing\nsoftware. The requirement is that it has to use the edit distance strategy for\ntheir spelling suggestion. But the substitution operation has to be redefined\nto match the behavior of mistyping. The cost of substitution of a character\nwith another character depends on the position of them on the keyboard layout.\nIf they are close to each other, the cost is only half of the normal one. For\nthis purpose, the substitution is categorized into near-substitution and\nfar-substitution. Their costs are defined as 1 and 2 respectively. And the\ncosts for insertion, deletion and transposition are 2. In addition, this\nprogram must run fast enough to pass the time limit that is set by your\nmanager. By the way for this prototype, an English QWERTY keyboard layout is\nchosen to be used.</p>\n<p class=\"Standard\"><strong>Goal</strong></p>\n<p class=\"Standard\" style=\"text-align:justify\">To generate optimum spelling\nsuggestions for each input word, where each optimum spelling suggestion is a\nword in dictionary that has the least minimum edit distance from the given\ninput word. The time limit for 5,000 misspelled words is less than or equal to\n5 minutes.</p>','<p class=\"Standard\">Input is a standard input which contains 3 parts of data.\nEach of these three parts ends with a blank line.</p>\n<p class=\"Standard\" style=\"margin-left:.5in;text-indent:-.25in;mso-list:l19 level1 lfo8\"><span style=\"font-family:Symbol\">·<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The first part is a set of near-substitution rules,\nwhere each rule is kept in one line. Each line has two fields. Each filed is\nseparated by a space. The total no. of rules is less than or equal to 150</p>\n<p class=\"Standard\" style=\"margin-left:.75in;text-indent:-.25in;mso-list:l16 level1 lfo10\"><span style=\"font-family:&quot;Courier New&quot;\">o<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The first field is a character where it can be\nnear-substituted with other characters.</p>\n<p class=\"Standard\" style=\"margin-left:.75in;text-indent:-.25in;mso-list:l16 level1 lfo10\"><span style=\"font-family:&quot;Courier New&quot;\">o<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span><span style=\"mso-spacerun: yes\">&nbsp;</span>The second\nfield is a sequence of characters which can be near-substituted for the character\nin the previous field. There is no space in this field.</p>\n<p class=\"Standard\" style=\"margin-left:.75in;text-indent:-.25in;mso-list:l16 level1 lfo10\"><span style=\"font-family:&quot;Courier New&quot;\">o<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The characters that may be contained in this part are\ncharacters that can be typed in using a generic English keyboard layout, which\nare alpha-numeric characters and some punctuations without space or tab.<span style=\"mso-spacerun: yes\">&nbsp; </span>They are listed as the following.</p>\n<p class=\"Standard\"><span style=\"font-family:&quot;Courier New&quot;\">&nbsp;</span></p>\n<p class=\"Standard\"><span style=\"font-family:&quot;Courier New&quot;\">abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789`~!@#$%^&amp;*()-_=+\\|[{]};:\'”,&lt;.&gt;/?</span></p>\n<p class=\"Standard\">&nbsp;</p>\n<p class=\"Standard\" style=\"margin-left:.5in;text-indent:-.25in;mso-list:l19 level1 lfo8\"><span style=\"font-family:Symbol\">·<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The second part is a sequence of words in dictionary,\nwhere each word is kept in one line. The total no. of words is less than or\nequal to 150,000.</p>\n<p class=\"Standard\" style=\"margin-left:1.0in;text-indent:-.25in;mso-list:l19 level2 lfo8\"><span style=\"font-family:&quot;Courier New&quot;\">o<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The characters in dictionary are alphabetical\ncharacters with an apostrophe punctuation. </p>\n<p class=\"Standard\" style=\"margin-left:1.5in;text-indent:-.25in;mso-list:l19 level3 lfo8\"><span style=\"font-size:11.0pt;font-family:Wingdings;mso-bidi-font-family:&quot;Courier New&quot;\">§<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span><span style=\"font-size:11.0pt;font-family:&quot;Courier New&quot;\">abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ’</span></p>\n<p class=\"Standard\" style=\"margin-left:.5in;text-indent:-.25in;mso-list:l19 level1 lfo8\"><span style=\"font-family:Symbol\">·<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The third part is a sequence of words that need to be checked\nfor their spellings. Each of these words is also kept in one line. The total\nno. of words is less than or equal to 5,000.</p>\n<p class=\"Standard\" style=\"margin-left:1.0in;text-indent:-.25in;mso-list:l19 level2 lfo8\"><span style=\"font-family:&quot;Courier New&quot;\">o<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The characters that may be contained in this part are\nthe same as characters in the first part, which are alpha-numeric characters\nand some punctuation. (See the first part.)</p>\n<p class=\"Standard\" style=\"margin-left:.5in;text-indent:-.25in;mso-list:l19 level1 lfo8\"><span style=\"font-family:Symbol\">·<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>Since each of these three parts end with a blank line,\nthe third blank line is the termination of the input.</p>\n<p class=\"Standard\"><strong>More Explanations</strong></p>\n<p class=\"Standard\"><strong>&nbsp;</strong></p>\n<p class=\"Standard\">In this sample input, there are 5 near-substitution rules\n(line no. 1-5), 10 words in dictionary (line no. 7-16) and 12 words looking for\ntheir suggestions (line no. 18-29).</p>\n<p class=\"Standard\">In the sample output, there are 12 lines for each\ncorresponding 12 words from the input.</p>\n<p class=\"Standard\">For the 1<sup>st</sup> word, the minimum edit distance\nbetween <span style=\"font-family:FreeMono\">x</span> and its suggestions (<span style=\"font-family:FreeMono\">A B Z a b</span>) is 2. All of them are the (far)\nsubstitution costs.</p>\n<p class=\"Standard\">For the 2<sup>nd</sup> word, the minimum edit distance\nbetween <span style=\"font-family:FreeMono\">s</span> and its suggestion (<span style=\"font-family:FreeMono\">a</span>) is 1, which is a near-substitution cost,\nguided by the 1<sup>st</sup> substitution rule.</p>\n<p class=\"Standard\">For the 3<sup>rd</sup> word, the minimum edit distance\nbetween <span style=\"font-family:FreeMono\">z</span> and its suggestion (<span style=\"font-family:FreeMono\">A Z a</span>) are 1, which is a near-substitution\ncost, guided by the 1<sup>st</sup> or 5<sup>th</sup> substitution rule.</p>\n<p class=\"Standard\">For the 4<sup>th</sup> word, the minimum edit distance is 4,\nwhich are summed from one far-substitution cost and one deletion cost.</p>\n<p class=\"Standard\">For the 5<sup>th</sup> word, the minimum edit distance is 6.\nThe costs between <span style=\"font-family:FreeMono\">xxx</span> and (<span style=\"font-family:FreeMono\">A B Z a b)</span> are from two deletion and one\nfar-substitution costs. The cost between <span style=\"font-family:FreeMono\">xxx</span>\nand <span style=\"font-family:FreeMono\">ABC</span> re from three\nfar-substitution costs.</p>\n<p class=\"Standard\">For the 6<sup>th</sup> word, the cost between <span style=\"font-family:FreeMono\">angre</span> and <span style=\"font-family:FreeMono\">anger</span>\nis from one transposition costs. The costs between <span style=\"font-family:\nFreeMono\">angre</span> and (<span style=\"font-family:FreeMono\">angle angry)</span>\nare from one far-substitution costs.</p>\n<p class=\"Standard\">For the 7<sup>th</sup> word and 8<sup>th</sup> word, seem to\nbe similar. But the cost of 7<sup>th</sup> word is from one far-substitution\ncosts. But the cost between <span style=\"font-family:FreeMono\">angrt</span> and\n<span style=\"font-family:FreeMono\">anger</span> is from 2 near-substitution\ncosts (<span style=\"font-family:FreeMono\">r</span> substitutes with <span style=\"font-family:FreeMono\">e</span> and <span style=\"font-family:FreeMono\">t</span>\nsubstitutes with <span style=\"font-family:FreeMono\">r</span>) according to the\nnear-substitution rule no. 4.</p>\n<p class=\"Standard\">For the 9<sup>th</sup> word, the word is exactly matched\nwithin dictionary. So the cost is 0.</p>\n<p class=\"Standard\">For the 10<sup>th</sup> and 11<sup>th</sup> words, each cost\nis from one transposition costs.</p>\n<p class=\"Standard\">For the 12<sup>th</sup> words, the cost between <span style=\"font-family:FreeMono\">CAB</span> and (<span style=\"font-family:FreeMono\">A\nB</span>) is from two deletion costs. The cost between <span style=\"font-family:\nFreeMono\">CAB</span> and (<span style=\"font-family:FreeMono\">ABC</span>) is\nfrom one deletion and one insertion costs. Please be notify that it is not from\n2 transpositions of <span style=\"font-family:FreeMono\">CAB</span> to <span style=\"font-family:FreeMono\">ACB</span> and then <span style=\"font-family:FreeMono\">ACB</span>\nto <span style=\"font-family:FreeMono\">ABC</span>.<span style=\"mso-spacerun:\nyes\">&nbsp;&nbsp;&nbsp; </span></p>','<p class=\"Standard\">For each word in the third part, write a line which contains\n3 parts of information, separated with a colon.</p>\n<p class=\"Standard\" style=\"margin-left:1.0in;text-indent:-.25in;mso-list:l20 level1 lfo12\"><span style=\"font-family:Symbol\">·<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The first part is the given input word.</p>\n<p class=\"Standard\" style=\"margin-left:1.0in;text-indent:-.25in;mso-list:l20 level1 lfo12\"><span style=\"font-family:Symbol\">·<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The second part is the minimum edit distance between\nthe input word and suggestion word(s).</p>\n<p class=\"Standard\" style=\"margin-left:1.0in;text-indent:-.25in;mso-list:l20 level1 lfo12\"><span style=\"font-family:Symbol\">·<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span>The third part is an ascending sorted sequence of\nsuggestion word(s), separated with a space. There is no space left after the\nlast word.</p>','a AqQsSzZ\nb BgGvVnN\np P0);:oO[{\nr R4$fFeEtT\nz ZaAxX\n \na\nA\nb\nB\nZ\nangel\nangle\nanger\nangry\nABC\n \nx\ns\nz\nxx\nxxx\nangre\nangri\nangrt\nangel\nACB\nBAC\nCAB\n','x:2:A B Z a b\ns:1:a\nz:1:A Z a\nxx:4:A B Z a b\nxxx:6:A ABC B Z a b\nangre:2:anger angle angry\nangri:2:angry\nangrt:2:anger angry\nangel:0:angel\nACB:2:ABC\nBAC:2:ABC\nCAB:4:A ABC B\n','',-1,0,1,64,30,0,0,10),(1358,'Coalescing Continents','<p>Continental drift refers to the idea that once the earth’s continents \nwere all in one piece and with time they drifted away from each other \nand arrived at their present positions.<br />In this problem, we are concerned with the reverse process – <em>Continental Coalesce.</em><br /><br />For\n the sake of brevity, let’s assume the continents were initially merged \ntogether forming a square. With time, the square disintegrated into <strong>K</strong> different continents in the shape of rectangles and drifted away from its source.<br /><br />You\n are provided with the current locations of the continents (i.e. \nrectangles). These locations were outlined with the help of satellites. \nYour first job is to figure out whether the data provided is a valid \none. The data is valid if you can move the rectangles and form a square.\n In one move, you can pick any rectangle and push it one unit in one of \nthe four directions (north, south, east or west). The continents can \nslide underneath one another during movement – meaning, more than one \ncontinent can occupy a particular position simultaneously. If it is \npossible to form a square then you are also required to find the minimum\n number of moves to do that. The final position of the square is not the\n primary concern here. Note that in the final position, two continents \ncannot overlap and the desired square cannot have any holes in it. </p>','<p>The first line of input is an integer T (T &lt;= 200) that indicates the number of test cases. Each case  consists of 20 lines containing 20 characters. Each character can either be a dot(.) representing an  empty space or an x (ASCII value 120). Every x character will be part of some continent. </p>\n<p>Notes:&nbsp;</p>\n<ul>\n<li>In&nbsp;the&nbsp;input&nbsp;grid,&nbsp;it’s&nbsp;guaranteed&nbsp;that,&nbsp;x&nbsp;characters&nbsp;from&nbsp;different&nbsp;continents&nbsp;will&nbsp;not&nbsp;be&nbsp;adjacent&nbsp;\nto&nbsp;each&nbsp;other.&nbsp;Any&nbsp;x&nbsp;character&nbsp;will&nbsp;be&nbsp;part&nbsp;of&nbsp;some&nbsp;rectangle&nbsp;</li>\n<li>\nTwo&nbsp;cells&nbsp;are&nbsp;adjacent&nbsp;if&nbsp;they&nbsp;share&nbsp;a&nbsp;common&nbsp;edge.&nbsp;</li>\n<li>\nThere&nbsp;will&nbsp;be&nbsp;exactly&nbsp;25&nbsp;x&nbsp;characters&nbsp;in&nbsp;the&nbsp;grid.&nbsp;</li>\n<li>\nThe&nbsp;number&nbsp;of&nbsp;continents,&nbsp;K,&nbsp;will&nbsp;be&nbsp;at&nbsp;most&nbsp;5.&nbsp;</li>\n<li>\nThere&nbsp;is&nbsp;a&nbsp;blank&nbsp;line&nbsp;before&nbsp;the&nbsp;start&nbsp;of&nbsp;every&nbsp;case.&nbsp;</li>\n<li>\nThe&nbsp;rectangles&nbsp;and&nbsp;the&nbsp;desired&nbsp;square&nbsp;are&nbsp;axis&nbsp;parallel.&nbsp;</li>\n<li>\nThe&nbsp;earth&nbsp;here&nbsp;is&nbsp;flat.&nbsp;That&nbsp;is,&nbsp;the&nbsp;first&nbsp;and&nbsp;last&nbsp;row&nbsp;is&nbsp;NOT&nbsp;adjacent&nbsp;to&nbsp;each&nbsp;other.&nbsp;Same&nbsp;thing&nbsp;\nholds&nbsp;for&nbsp;the&nbsp;first&nbsp;and&nbsp;last&nbsp;column.&nbsp;</li>\n</ul>','<p>For each case, output the case number first. If it’s not possible to form a square by moving the \nrectangle around, output&nbsp;\'invalid data\', quotes for clarity. If it is possible, output the minimum number \nof moves required to complete the task.</p>','2\n\n....................\n....................\n....................\n....................\n....................\n....................\n..xxxxx.............\n..xxxxx.............\n....................\n....................\n..xx..........xxx...\n....................\n..xxxxx.............\n..xxxxx.............\n....................\n....................\n....................\n....................\n....................\n....................\n\n.................x..\n....................\n....................\n....................\n..xx................\n..xx................\n..xx................\n..xx................\n..xx................\n..xx................\n.......xxxxxx.......\n.......xxxxxx.......\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................','Case 1: 13\nCase 2: invalid data','',-1,0,1,64,10,4,10,10),(1359,'Fence Making','<p class=\"MsoNormal\" style=\"text-align:justify;mso-hyphenate:auto\"><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">The City\nof Haka is very famous for its traffic jam. This has given birth to many problem-setters (Those who pose questions for programming contests) as in\ntraffic jam some people have nothing meaningful to do other than thinking about\nnew problems. Most wide roads in Haka have fence along the divider. Perforated\nsteel sheets (As shown in the figure on the left) are often used in these\nfences.</span></p>\n<p><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">In\nthis problem we will discuss the manufacturing process of one kind of\nperforated steel strips and ask you to solve a problem related to this building\nprocess.</span></p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1353_e392c1f79b30c8ca944fa076376c8054.jpg\" src=\"http://sharecode.ir/assets/problem_images/1353_e392c1f79b30c8ca944fa076376c8054.jpg\" /></p>\n<p><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">For\nthis problem the rectangular perforated steel strips have two circular holes in\neach row.<span style=\"mso-spacerun: yes\">&nbsp; </span>Circular holes in the same\nrow are 2d distance apart. Two consecutive circular holes in the same column\nare also 2d distance apart. The distance of each circle from its nearest side\nis d. The radius of all the circles is r. So automatically the width of the\nmetal sheet/strip becomes (4d+4r). The length of the initial sheet is S. Such a\nsheet with holes in it is shown in the picture on the right. Holes are only\ndrilled if they can be cut according to rules mentioned above. The circular\nsteel sheets which are obtained by cutting the holes and part of the sheet that\nis unused (Such as portion below the red dotted line in the figure on the\nright) are melted to create a new steel sheet/strip of width (4d+4r). Now holes\nare cut according to the rules mentioned above. This process is repeated until\nthe newly created sheet is so small that two holes (In the same row) cannot be created\nin it following the above-mentioned restrictions. Suppose C(d, r, S) denote the\ntotal number of holes that are created. Now given the minimum possible value of\nr (r<sub>min</sub>), maximum possible value of r (r<sub>max</sub>), minimum\npossible value of d (d<sub>min</sub>) and maximum possible value of d (d<sub>max</sub>)\nyou will have to find the total number of holes created. </span><br /><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">In other words you will have to find:</span></p>\n<p align=\"center\"><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\"> <sub>\n<img src=\"http://sharecode.ir/assets/problem_images/1353_88c74865218c7fc19b1722aa9595fda2.jpg\" /></sub><br /></span></p>\n<p><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">It\nshould be clear to you now that the value of d and r are always integer. Your method\nshould be quite efficient. You must assume that the initial given strip and the\nstrips created later on have equal and uniform thickness in all places.<span style=\"mso-spacerun: yes\">&nbsp; <br /></span></span></p>','<p><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">nput\nfile contains 1000 sets of inputs. The input for each set is given in a single\nline. Each line contains five integers r<sub>min</sub> (5,000 ≤ r<sub>min</sub>\n≤ 10,000), r<sub>max </sub>(0 ≤ r<sub>max</sub> - r<sub>min</sub>\n≤ 1,000) , dmin (1 ≤ d<sub>min</sub> ≤ 21), dmax (0 ≤ d<sub>max</sub>\n- d<sub>min</sub> ≤ 100)and S (1,000,000 ≤ S ≤\n2,000,000,000). By now it should be clear to you that value of r and d can only\nbe a round number.</span></p>\n<p class=\"MsoNormal\" style=\"mso-hyphenate:auto\"><span style=\"mso-bidi-font-size:\n10.0pt;color:black;mso-fareast-language:EN-US\">Input is terminated by a line\ncontaining five zeroes. This line should not be processed.</span></p>','<p><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">For\neach set/line of input produce one line of output. This line contains an\ninteger, which denotes the value of <br /></span></p>\n<p align=\"center\"><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\"></span><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\"><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\"><sub>\n<img src=\"http://sharecode.ir/assets/problem_images/1353_88c74865218c7fc19b1722aa9595fda2.jpg\" /></sub></span><br /></span></p>\n<p><span style=\"mso-bidi-font-size:10.0pt;color:black;mso-fareast-language:EN-US\">You can\nsafely assume that the value of this integer will comfortably fit in a 64-bit\nsigned integer. Errors not exceeding 10<sup>-7 </sup>% will be ignored.</span></p>','9682 9719 18 29 71757646\n5746 5958 19 24 1942485264\n0 0 0 0 0','15404518\n1918408970','<p> </p>',-1,0,1,64,10,6,12,10),(1360,'Paths in a Tree','<p><span style=\"mso-spacerun: yes\"> </span><span style=\"mso-bidi-font-size:11.0pt;mso-fareast-language:EN-US\">You are given a\ntree (a connected graph with no cycles), and the edges of the tree which are\nfor some reason directed; your task is to add <strong>minimum</strong> number of</span><span style=\"mso-bidi-font-size:12.0pt;\nmso-fareast-language:EN-US\"> special paths in the tree such that it\'s possible\nto go from any node to another. The rules for the special paths are noted\nbelow:</span></p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:10.0pt;\nmargin-left:.5in;text-align:justify;text-indent:-.25in;line-height:115%;\nmso-list:l18 level1 lfo16;mso-hyphenate:auto\"><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">1.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">A special path\nconsists of some continuous edges (from the tree) and nodes.</span></p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:10.0pt;\nmargin-left:.5in;text-align:justify;text-indent:-.25in;line-height:115%;\nmso-list:l18 level1 lfo16;mso-hyphenate:auto\"><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">2.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">In a special path,\nthe edges should be in opposite directions as they are in the tree.</span></p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:10.0pt;\nmargin-left:.5in;text-align:justify;text-indent:-.25in;line-height:115%;\nmso-list:l18 level1 lfo16;mso-hyphenate:auto\"><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">3.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">A node or an edge\ncan be visited at most once in a special path.</span></p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:10.0pt;\nmargin-left:.5in;text-align:justify;text-indent:-.25in;line-height:115%;\nmso-list:l18 level1 lfo16;mso-hyphenate:auto\"><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">4.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:EN-US\">Multiple special\npaths may have common nodes or edges.</span></p>\n<p class=\"MsoNormal\" style=\"margin-bottom:10.0pt;text-align:justify;line-height:\n115%;mso-hyphenate:auto\"><span style=\"mso-bidi-font-size:12.0pt;mso-fareast-language:\nEN-US\">For exa</span><span style=\"mso-bidi-font-size:11.0pt;mso-fareast-language:\nEN-US\">mple, in the picture below, a tree is drawn, the black arrows represent\nthe edges and their directions, circles represent nodes. Then we need two\nspecial paths. One path is <strong>2-1-0</strong>\n(green arrow), another is <strong>3-1</strong> (blue\narrow). Instead of the path <strong>3-1</strong> we\ncan add <strong>3-1-0</strong>. You cannot add a path\nlike <strong>1-3</strong> or <strong>0-1-2</strong> because of rule 2. You cannot add <strong>0-2</strong> or <strong>2-3-0</strong> because of\nrule 1.</span></p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1353_48d7d3d8e3c6ae45befc041d583cb289.jpg\" src=\"http://sharecode.ir/assets/problem_images/1353_48d7d3d8e3c6ae45befc041d583cb289.jpg\" /></p>\n<p class=\"MsoNormal\" style=\"margin-bottom:10.0pt;text-align:justify;line-height:\n115%;mso-hyphenate:auto\"></p>','<p> Input starts with an integer <strong><span style=\"mso-bidi-font-style:italic\">T ( </span></strong><b>= 30<span style=\"mso-bidi-font-weight:\nbold;mso-bidi-font-style:italic\">) </span></b>, denoting the number of test\ncases. <strong><span style=\"font-size:14.0pt;mso-fareast-language:EN-US\"> </span></strong> Each case starts with a line containing an integer <strong>N (2 = N = 20000)</strong>, where <strong>N</strong> denotes the number of nodes. The nodes are numbered from <strong>0</strong> to <strong>N-1</strong>.Each of the next&nbsp;<strong>N-1</strong>&nbsp;lines\ncontains two integers&nbsp;<strong>u v (0 = u, v &lt; N, u ? v)</strong>&nbsp;meaning\nthat there is an edge from&nbsp;<strong>u</strong>&nbsp;to&nbsp;<strong>v</strong> .</p>','<p>For each case, print the case number and the minimum number of special paths\nrequired such that it\'s possible to go from any node to another.</p>','2 \n4 \n0 1 \n1 2 \n1 3 \n5 \n0 1 \n1 2 \n1 3 \n0 4 ','Case 1: 2 \nCase 2: 3','',-1,0,1,64,10,1,44,10),(9010,'Calendar Game','<p>Adam and Eve enter this year\'s ACM International Collegiate Programming Contest. \n  Last night, they played the Calendar Game, in celebration of this contest. This game\n  consists of the dates from January 1, 1900 to November 4, 2001, the contest day. The\n  game starts by randomly choosing a date from this interval. Then, the players, Adam \n  and Eve, make moves in their turn with Adam moving first: Adam, Eve, Adam, Eve, etc.\n  There is only one rule for moves and it is simple: from a current date, a player in \n  his/her turn can move either to the next calendar date or the same day of the next \n  month. When the next month does not have the same day, the player moves only to the\n  next calendar date. For example, from December 19, 1924, you can move either to\n  December 20, 1924, the next calendar date, or January 19, 1925, the same day of the\n  next month. From January 31 2001, however, you can move only to February 1, 2001, \n  because February 31, 2001 is invalid. <br /><br />\n  A player wins the game when he/she exactly reaches the date of November 4, 2001. \n  If a player moves to a date after November 4, 2001, he/she looses the game. <br /><br />\n  Write a program that decides whether, given an initial date, Adam, the first \n  mover, has a winning strategy. <br /><br />\n  For this game, you need to identify leap years, where February has 29 days. In the\n  Gregorian calendar, leap years occur in years exactly divisible by four. So, 1993, 1994,\n  and 1995 are not leap years, while 1992 and 1996 are leap years. Additionally, the years\n  ending with 00 are leap years only if they are divisible by 400. So, 1700, 1800, 1900, 2100,\n  and 2200 are not leap years, while 1600, 2000, and 2400 are leap years.</p>','<p>The input consists of T test cases. The number of test cases (T) is given in the first line\n  of the input. Each test case is written in a line and corresponds to an initial date.\n  The three integers in a line, YYYY MM DD, represent the date of the DD-th day of MM-th month\n  in the year of YYYY. Remember that initial dates are randomly chosen from the interval between\n  January 1, 1900 and November 4, 2001.</p>','<p>Print exactly one line for each test case. The line should contain the answer \"YES\" or \"NO\"\n  to the question of whether Adam has a winning strategy against Eve. Since we have T test cases,\n  your program should output totally T lines of \"YES\" or \"NO\".</p>','3\n2001 11 3\n2001 11 2\n2001 10 3 ','YES\nNO\nNO ','',-1,0,0,64,2,0,0,10),(1361,'Consecutive Sums','<p class=\"MsoNormal\" style=\"text-align:justify\">The sum of p (p&gt;0) consecutive\nintegers can often be equal to the sum of next q consecutive positive integers.\nFor example:</p>\n<p class=\"MsoNormal\" style=\"text-align:justify\">9+10+11+12 = 13+14+15, Here p = 4\nand q = 3<br />4+5+6+7+8 = 9+10+11, Here p = 5\nand q = 3.</p>\n<p class=\"MsoNormal\" style=\"text-align:justify\">Given the value of q, how many\npossible values of p are there? </p>','<p class=\"MsoBodyText2\" style=\"line-height:normal\"><span style=\"mso-bidi-font-weight:\nbold\">The input file contains at most 1500 lines of inputs. Each line contains\na positive integer less than 10<sup>14</sup>, which denotes the value of q.\nInput is terminated by a line containing a single zero. This line should not be\nprocessed. </span></p>','<p class=\"MsoNormal\" style=\"text-align:justify;tab-stops:143.25pt\">For each line\nof input produce one line of output. This line contains an integer, which\ndenotes the total number of possible values of p. </p>','5\n1\n0\n','6\n2\n','',-1,0,1,64,10,25,52,10),(9011,'-T9-','<p>A while ago it was quite cumbersome to create a message for the Short Message \n  Service (SMS) on a mobile phone. This was because you only have nine keys and \n  the alphabet has more than nine letters, so most characters could only be entered \n  by pressing one key several times. For example, if you wanted to type \"hello\"\n  you had to press key 4 twice, key 3 twice, key 5 three times, again key 5 three \n  times, and finally key 6 three times. This procedure is very tedious and keeps \n  many people from using the Short Message Service.<br /><br />\n  This led manufacturers of mobile phones to try and find an easier way to enter \n  text on a mobile phone. The solution they developed is called T9 text input. \n  The \"9\" in the name means that you can enter almost arbitrary words with just \n  nine keys and without pressing them more than once per character. The idea of \n  the solution is that you simply start typing the keys without repetition, and \n  the software uses a built-in dictionary to look for the \"most probable\" word \n  matching the input. For example, to enter \"hello\" you simply press keys 4, 3, \n  5, 5, and 6 once. Of course, this could also be the input for the word \"gdjjm\", \n  but since this is no sensible English word, it can safely be ignored. By ruling \n  out all other \"improbable\" solutions and only taking proper English words into \n  account, this method can speed up writing of short messages considerably. Of \n  course, if the word is not in the dictionary (like a name) then it has to be \n  typed in manually using key repetition again.\n</p>\n<p align=\"center\">&nbsp;\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/9011_72cee22858ab48683ffdb05630416591.jpg\" src=\"http://sharecode.ir/assets/problem_images/9011_72cee22858ab48683ffdb05630416591.jpg\" /><br />\n  Figure 8: The Number-keys of a mobile phone.</p>\n<p align=\"left\">More precisely, with every character typed, the phone will show \n  the most probable combination of characters it has found up to that point. Let \n  us assume that the phone knows about the words \"idea\" and \"hello\", with \"idea\" \n  occurring more often. Pressing the keys 4, 3, 5, 5, and 6, one after the other, \n  the phone offers you \"i\", \"id\", then switches to \"hel\", \"hell\", and finally \n  shows \"hello\".<br />\n  <br />\n  Write an implementation of the T9 text input which offers the most probable \n  character combination after every keystroke. The probability of a character \n  combination is defined to be the sum of the probabilities of all words in the \n  dictionary that begin with this character combination. For example, if the dictionary \n  contains three words \"hell\", \"hello\", and \"hellfire\", the probability of the \n  character combination \"hell\" is the sum of the probabilities of these words. \n  If some combinations have the same probability, your program is to select the \n  first one in alphabetic order. The user should also be able to type the beginning \n  of words. For example, if the word \"hello\" is in the dictionary, the user can \n  also enter the word \"he\" by pressing the keys 4 and 3 even if this word is not \n  listed in the dictionary.</p>','<p>The first line contains the number of scenarios.<br /><br />\n  Each scenario begins with a line containing the number w of distinct words in \n  the dictionary (0&lt;=w&lt;=1000). These words are given in the next w lines.\n  (They are not guaranteed in ascending alphabetic order, although it\'s a dictionary.)\n  Every line starts with the word which is a sequence \n  of lowercase letters from the alphabet without whitespace, followed by a space \n  and an integer p, 1&lt;=p&lt;=100, representing the probability of that word. \n  No word will contain more than 100 letters.<br /><br />\n  Following the dictionary, there is a line containing a single integer m. Next \n  follow m lines, each consisting of a sequence of at most 100 decimal digits \n  2-9, followed by a single 1 meaning \"next word\".</p>','<p>The output for each scenario begins with a line containing \"Scenario #i:\", where \n  i is the number of the scenario starting at 1.<br /><br />\n  For every number sequence s of the scenario, print one line for every keystroke \n  stored in s, except for the 1 at the end. In this line, print the most probable \n  word prefix defined by the probabilities in the dictionary and the T9 selection \n  rules explained above. Whenever none of the words in the dictionary match the \n  given number sequence, print \"MANUALLY\" instead of a prefix.<br /><br />\n  Terminate the output for every number sequence with a blank line, and print \n  an additional blank line at the end of every scenario.</p>','2\n5\nhell 3\nhello 4\nidea 8\nnext 8\nsuper 3\n2\n435561\n43321\n7\nanother 5\ncontest 6\nfollow 3\ngive 13\ninteger 6\nnew 14\nprogram 4\n5\n77647261\n6391\n4681\n26684371\n77771','Scenario #1:\ni\nid\nhel\nhell\nhello\n\ni\nid\nide\nidea\n\n\nScenario #2:\np\npr\npro\nprog\nprogr\nprogra\nprogram\n\nn\nne\nnew\n\ng\nin\nint\n\nc\nco\ncon\ncont\nanoth\nanothe\nanother\n\np\npr\nMANUALLY\nMANUALLY','',-1,0,0,64,2,1,1,10),(9012,'Roman Forts','<p>This program will acquaint you with the judicious method used by rulers of \n  the ancient Roman empire to choose the locations of their military forts.<br />\n  <br />\n  You are given a collection of cities.<br />\n  <br />\n  The cities will be labeled by upper case letters in alphabetical order, starting \n  with \'A\'.<br />\n  <br />\n  Given any pair of cities, there is one and only one path between them (see Figure \n  1).<br />\n  <br />\n  This path may be a direct connection (as between J and C in Figure 1) or it \n  may pass through a number of intermediate cities (as between J and B in Figure \n  1).<br />\n  <br />\n  In the example of Figure 1, the path from J to B passes through C, G, and F. \n</p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/9012_de12968bcfe90e5e95732b1728b4f1f7.jpg\" src=\"http://sharecode.ir/assets/problem_images/9012_de12968bcfe90e5e95732b1728b4f1f7.jpg\" /> \n</p>\n<p align=\"left\">The actual number of miles between cities is irrelevant. The distance \n  between a pair of cities is defined as the number of hops (each \"hop\" \n  being taken over a over a direct connection) between them.<br />\n  <br />\n  In Figure 1, the number of hops between J and C is 1, and the number of hops \n  between J and B is 4.<br />\n  <br />\n  Initially, only one of the cities is fortified (by a military fort). As your \n  program executes, additional cities will be fortified.<br />\n  <br />\n  If a city is not fortified, we say it is vulnerable .<br />\n  <br />\n  Furthermore, if a city is vulnerable, its degree of vulnerability is defined \n  as the shortest distance between it and a fortified city.<br />\n  <br />\n  When one or more cities have already been fortified, the location of an additional \n  fort is chosen by a simple rule: it is the most vulnerable city (the one having \n  the highest degree of vulnerability).<br />\n  <br />\n  In case of a tie, choose the alphabetically first city among those tied as the \n  most vulnerable city. </p>','<p align=\"left\">The first line of the input contains three items of information, \n  separated by one or more blank spaces:<br />\n  <br />\n  The total number of cities in the given collection. It will be in the range \n  3..26. In this example, it is 11, which means that the cities are labeled A..K.<br />\n  <br />\n  An upper case letter in the valid range of cities, denoting the city which is \n  initially fortified.<br />\n  <br />\n  The total number of cities that are to be fortified, including the initially \n  fortified one.<br />\n  <br />\n  It will be at least three and not greater than the total number of cities in \n  the collection<br />\n  <br />\n  Each of the remaining lines of the input file will contain two upper case letters, \n  separated by one or more blank spaces.<br />\n  <br />\n  Each letter will be in the range of labels of cities in the given collection.<br />\n  <br />\n  Each pair of letters on one line of input determines a direct connection between \n  two cities.<br />\n  <br />\n  The direct connections listed in the input file shown on the right is identical \n  to the direct connections of Figure 1.<br />\n  <br />\n  The set of direct connections listed in the input file will satisfy all previously \n  stated conditions.<br />\n  <br />\n  All lines of input will be free of leading or trailing blank spaces.</p>\n<p>\nThe output will list the \n  cities to be fortified, as upper case letters, in the correct order</p>','<p>When there is only one fortified city, the degree of vulnerability of each vulnerable \n  city is its distance from the fortified city.<br /><br />\n  Initially, with J being the only fortified city, E is the most vulnerable city \n  with degree of vulnerability 5.<br /><br />\n  With J and E being fortified, D, H, I, and K contend for being the most vulnerable \n  city, all having degree of vulnerability 3.<br /><br />\n  For example, the distance from D to E is 6, the distance from D to J is 3; the \n  smaller of these two numbers is 3.<br /><br />\n  Therefore, the degree of vulnerability of D is 3.<br /><br />\n  The alphabetically first city among the four contenders (D, H, I, and K) is \n  D, which will be the next city to be fortified.<br /><br />\n  Similarly, H, and then K, will be selected as the next city to be fortified. \n  At this point, the number of fortified cities is 5 (as specified in the input), \n  and the program terminates<br /><br />\n  Note that city I is not fortified, because its degree of vulnerability drops \n  from 3 to 2 once H is fortified, making K the most vulnerable city.<br /><br />\n  Formatting details:<br /><br />\n  The upper case letters denoting the cities in the output will be separated by \n  one blank space.<br /><br />\n  There will not be any blank lines or leading blank spaces in the output.</p>','11 J 5\nA D\nB E\nF B\nC G\nF G\nC A\nG H\nG I\nJ C\nK F','Program 8 by team X\nJ E D H K\nEnd of program 8 by team X','',-1,0,0,64,2,0,0,10);
INSERT INTO `problems` VALUES (9013,'S-Trees','<p>A Strange Tree (S-tree) over the variable set Xn = {x1,x2,...,xn} is a binary \ntree representing a Boolean function f:{0,1}-&gt;{0,1}. Each path of the S-tree \nbegins at the root node and consists of n+1 nodes. Each of the S-tree\'s nodes \nhas a depth, which is the amount of nodes between itself and the root (so the \nroot has depth 0). The nodes with depth less than n are called non-terminal nodes. \nAll non-terminal nodes have two children: the right child and the left child. \nEach non-terminal node is marked with some variable xi from the variable set Xn. \nAll non-terminal nodes with the same depth are marked with the same variable, \nand non-terminal nodes with different depth are marked with different variables. \nSo, there is a unique variable xi1 corresponding to the root, a unique variable \nxi2 corresponding to the nodes with depth 1, and so on. The sequence of the variables \nxi1,xi2,...,xin is called the variable ordering. The nodes having depth n are \ncalled terminal nodes. They have no children and are marked with either 0 or 1. \nNote that the variable ordering and the distribution of 0\'s and 1\'s on terminal \nnodes are sufficient to completely describe an S-tree. \n</p>\n<p>As stated earlier, each S-tree represents a Boolean function f. If you have \n  an S-tree and values for the variables x1,x2,...,xn, then it is quite simple \n  to find out what f(x1,x2,...,xn) is: start with the root. Now repeat the following: \n  if the node you are at is labelled with a variable xi, then depending on whether \n  the value of the variable is 1 or 0, you go its right or left child, respectively. \n  Once you reach a terminal node, its label gives the value of the function. </p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/9013_791babd0b313bdf5b82b009f346b21b2.jpg\" src=\"http://sharecode.ir/assets/problem_images/9013_791babd0b313bdf5b82b009f346b21b2.jpg\" /></p>\n<p align=\"center\">Figure 1: S-trees for the x1 and (x2 or x3) function </p>\n<p>On the picture, two S-trees representing the same Boolean function,f(x1,x2,x3) \n  = x1 and (x2 or x3), are shown. For the left tree, the variable ordering is \n  x1, x2, x3, and for the right tree it is x3, x1, x2. </p>\n<p>The values of the variables x1,x2,...,xn, are given as a Variable Values Assignment \n  (VVA) </p>\n<p align=\"center\">(x1 = b1, x2 = b2, ..., xn = bn)</p>\n<p> </p>\n<p>with b1,b2,...,bn in {0,1}. For instance, ( x1 = 1, x2 = 1 x3 = 0) would be \n  a valid VVA for n = 3, resulting for the sample function above in the value \n  f(1,1,0) = 1 and (1 or 0) = 1. The corresponding paths are shown bold in the \n  picture. <br />\n  <br />\n  Your task is to write a program which takes an S-tree and some VVAs and computes \n  f(x1,x2,...,xn) as described above. </p>','<p>The input contains the description of several S-trees with associated VVAs which \n  you have to process. Each description begins with a line containing a single \n  integer n, 1 &lt;= n &lt;= 7, the depth of the S-tree. This is followed by a \n  line describing the variable ordering of the S-tree. The format of that line \n  is xi1 xi2 ...xin. (There will be exactly n different space-separated strings). \n  So, for n = 3 and the variable ordering x3, x1, x2, this line would look as \n  follows: <br /><br />\n  x3 x1 x2 \n</p>\n<p>In the next line the distribution of 0\'s and 1\'s over the terminal nodes is \n  given. There will be exactly 2^n characters (each of which can be 0 or 1), followed \n  by the new-line character. The characters are given in the order in which they \n  appear in the S-tree, the first character corresponds to the leftmost terminal \n  node of the S-tree, the last one to its rightmost terminal node. </p>\n<p>The next line contains a single integer m, the number of VVAs, followed by \n  m lines describing them. Each of the m lines contains exactly n characters (each \n  of which can be 0 or 1), followed by a new-line character. Regardless of the \n  variable ordering of the S-tree, the first character always describes the value \n  of x1, the second character describes the value of x2, and so on. So, the line \n</p>\n<p>110 </p>\n<p>corresponds to the VVA ( x1 = 1, x2 = 1, x3 = 0). </p>\n<p>The input is terminated by a test case starting with n = 0. This test case \n  should not be processed. </p>','<p>For each S-tree, output the line ``S-Tree #j:\", where j is the number of \n  the S-tree. Then print a line that contains the value of f(x1,x2,...,xn) for \n  each of the given m VVAs, where f is the function defined by the S-tree. <br /><br />\n  Output a blank line after each test case.</p>','3\nx1 x2 x3\n00000111\n4\n000\n010\n111\n110\n3\nx3 x1 x2\n00010011\n4\n000\n010\n111\n110\n0','S-Tree #1:\n0011\n\nS-Tree #2:\n0011','',-1,0,0,64,2,0,0,10),(9014,'Currency Exchange','<p>When Issac Bernand Miller takes a trip to another country, say to France, he exchanges \nhis US dollars for French francs. The exchange rate is a real number such that \nwhen multiplied by the number of dollars gives the number of francs. For example, \nif the exchange rate for US dollars to French francs is 4.81724, then 10 dollars \nis exchanged for 48.1724 francs. Of course, you can only get hundredth of a franc, \nso the actual amount you get is rounded to the nearest hundredth. (We\'ll round \n.005 up to .01.) All exchanges of money between any two countries are rounded \nto the nearest hundredth. \nSometimes Issac\'s trips take him to many countries and he exchanges money from \n  one foreign country for that of another. When he finally arrives back home, \n  he exchanges his money back for US dollars. This has got Issac thinking about \n  how much if his unspent US dollars is lost (or gained!) to these exchange rartes. \n  You\'ll compute how much money Issac ends up with if he exchanges it many times. \n  You\'ll always start with US dollars and you\'ll always end with US dollars.</p>','<p>The first 5 lines of input will be the exchange rates between 5 countries, \n  numbered 1 through 5. Line i will five the exchange rate from country i to each \n  of the 5 countries. Thus the jth entry of line i will give the exchange rate \n  from the currency of country i to the currency of country j. the exchange rate \n  form country i to itself will always be 1 and country 1 will be the US. Each \n  of the next lines will indicate a trip and be of the form</p>\n<p>N c1 c2 ... cn m</p>\n<p>\nWhere 1 &lt;= n &lt;= 10 and c1, ..., cn are integers from 2 through 5 indicating \n  the order in which Issac visits the countries. (A value of n = 0 indicates end \n  of input, in which case there will be no more numbers on the line.) So, his \n  trip will be 1 -&gt; c1 -&gt; c2 -&gt; ... -&gt; cn -&gt; 1. the real number m \n  will be the amount of US dollars at the start of the trip.</p>','<p>Each trip will generate one line of output giving the amount of US dollars \n  upon his return home from the trip. The amount should be fiven to the nearest \n  cent, and should be displayed in the usual form with cents given to the right \n  of the decimal point, as shown in the sample output. If the amount is less than \n  one dollar, the output should have a zero in the dollars place.</p>\n<p><strong>This problem contains multiple test cases!</strong></p>\n<p>The first line of a multiple input is an integer N, then a blank line followed \n  by N input blocks. Each input block is in the format indicated in the problem \n  description. There is a blank line between input blocks.</p>\n<p>The output format consists of N output blocks. There is a blank line between \n  output blocks.</p>','1\n\n1 1.57556 1.10521 0.691426 7.25005\n0.634602 1 0.701196 0.43856 4.59847\n0.904750 1.42647 1 0.625627 6.55957\n1.44616 2.28059 1.59840 1 10.4843\n0.137931 0.217555 0.152449 0.0953772 1\n3 2 4 5 20.00\n1 3 100.00\n6 2 3 4 2 4 3 120.03\n0','19.98\n99.99\n120.01','',-1,0,0,64,2,0,0,10),(9015,'Water Glass','<p>Steve is a glass blower. He has an order to make water glass (clocks) from \n  one very eccentric lady. Because that person is eccentric she does not want \n  her water glass have usual form. Instead she would like one made of two symmetric \n  prisms based on some polygon. Of course that polygon has a base side the glass \n  should stand on and single vertex the water should flow through. As a good professional \n  Steve has made what he has been asked for but he has difficulties to calculate \n  where the time measures should be marked. Assume the water is flowing evenly \n  through the hole, the upper prism is full with the water in the initial time, \n  all the water completely flows into the lower prism in exactly 24 hours. You \n  are to write program that being given the form of the polygon calculates the \n  water level in the lower prism each half-hour period starting from initial time.</p>\n<p align=\"center\">\n<img class=\"decoded\" alt=\"http://sharecode.ir/assets/problem_images/9015_c9e3d060c6d13597ed51b7f5b029a4d7.jpg\" src=\"http://sharecode.ir/assets/problem_images/9015_c9e3d060c6d13597ed51b7f5b029a4d7.jpg\" /> \n</p>','<p align=\"left\"><strong>This problem contains multiple test cases!</strong></p>\n<p>The first line of a multiple input is an integer N, then a blank line followed \n  by N input blocks. Each input block is in the format indicated in the problem \n  description. There is a blank line between input blocks.</p>\n<p>The output format consists of N output blocks. There is a blank line between \n  output blocks.</p>\n<p>\n  <strong> Input</strong><br />\n  <br />\n  Input starts with a single line containing 3 &lt;= N &lt;= 20 - number of vertices \n  in the polygon. Next N lines each contain 2 integers -50 &lt;= xi &lt;= 50 and \n  0 &lt;= yi &lt;= 50 - coordinates of ith vertex. Note that x1, y1 are coordinates \n  of the vertex the water would flow through. You can assume the following conditions \n  are true: if (xk, yk), (xk+1, yk+1) - coordinates of the vertices that form \n  the glass base then<br />\n  <br />\n  1. yk = yk+1 = 0<br />\n  2. For all 1 &lt; i &lt; k, yi &lt; yi-1<br />\n  3. For all k+1 &lt; i &lt; N, yi+1 &gt; yi</p>','<p>Output should contain 48 lines in the format presented in a sample (exactly \n  three digits after the decimal point should be printed).</p>','1\n\n3\n10 20\n0 0\n20 0','00:00 0.000\n00:30 0.209\n01:00 0.421\n01:30 0.635\n02:00 0.851\n02:30 1.070\n03:00 1.292\n03:30 1.516\n04:00 1.743\n04:30 1.972\n05:00 2.205\n05:30 2.441\n06:00 2.679\n06:30 2.922\n07:00 3.167\n07:30 3.417\n08:00 3.670\n08:30 3.927\n09:00 4.189\n09:30 4.454\n10:00 4.725\n10:30 5.000\n11:00 5.280\n11:30 5.566\n12:00 5.858\n12:30 6.156\n13:00 6.460\n13:30 6.771\n14:00 7.090\n14:30 7.417\n15:00 7.753\n15:30 8.098\n16:00 8.453\n16:30 8.820\n17:00 9.199\n17:30 9.592\n18:00 10.000\n18:30 10.426\n19:00 10.871\n19:30 11.340\n20:00 11.835\n20:30 12.362\n21:00 12.929\n21:30 13.545\n22:00 14.226\n22:30 15.000\n23:00 15.918\n23:30 17.113','',-1,0,0,64,2,0,0,10),(1370,'Problem A','<p>Airplanes fly close to the Great Circle Route between two cities. The Great Circle Route is the shortest arc concentric with the earth that joins the two cities; that is, the shortest distance between the two cities following the surface of the earth.</p>\n<p>Given the latitude and longitude of two cities, find the most northerly latitude reached on the Great Circle Route between the cities. Print \"undefined\" if there is no unique answer.</p>\n<p> </p>\n<p> </p>','<p>The first line of input contains N, the number of test cases. N lines follow, one for each case, containing the latitude and longitude of the two cities, in degrees, minutes, and direction. [A minute is 1/60 degree; Points on the equator have latitude denoted 0,0N (not 0,0S); points on the poles have longitude denoted 0,0W; points with 180 degrees longitude are denoted 180,0W (not 180,0E).]</p>','<p>For each case your program should produce one line of output giving the most northerly latitude reached, in the given format. Round your answer to the nearest minute.</p>','3\n50,13N 45,10W 75,0N 44,50E\n50,13N 90,10W 75,0N 89,50E\n10,0N 129,30E 10,0S 50,30W','75,41N\n90,0N\nUndefined','',-1,0,0,64,10,0,0,12),(1362,'Misspelling','<p>\nMisspelling is an art form that students seem to excel at.  Write a program that removes the \n<em>n</em>th character from an input string.\n</p>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset consists of a single line of input containing <em>M</em>, a space, and a single word made up of uppercase letters only.\n<em>M</em> will be less than or equal to the length of the word. The length of the word is guaranteed to be less than or equal to 80.\n</p>','<p>\nFor each dataset, you should generate one line of output with the \nfollowing values:  The dataset number as a decimal integer (start \ncounting at one), a space, and the misspelled word.  The misspelled word\n is the input word with the indicated character deleted.\n</p>','4\n4 MISSPELL\n1 PROGRAMMING\n7 CONTEST\n3 BALLOON','1 MISPELL\n2 ROGRAMMING\n3 CONTES\n4 BALOON','',-1,0,1,64,2,113,187,10),(1363,'Conversions','<p>\nConversion between the metric and English measurement systems is \nrelatively simple.  Often, it involves either multiplying or dividing by\n a constant.  You must write a program that converts between the \nfollowing units:\n</p>\n	<table id=\"table1\" border=\"1\" height=\"205\" width=\"749\"><tbody><tr>\n		<td width=\"103\">Type</td>\n		<td width=\"96\">Metric</td>\n		<td width=\"102\">English </td>\n		<td>equivalent </td>\n	</tr>\n	<tr>\n		<td width=\"103\">Weight</td>\n		<td width=\"96\">1.000 </td>\n		<td width=\"102\">kilograms</td>\n		<td>2.2046 pounds </td>\n	</tr>\n	<tr>\n		<td width=\"103\">Weight</td>\n		<td width=\"96\">0.4536</td>\n		<td width=\"102\">kilograms</td>\n		<td>1.0000 pound</td>\n	</tr>\n	<tr>\n		<td width=\"103\">Volume</td>\n		<td width=\"96\">1.0000</td>\n		<td width=\"102\">liter</td>\n		<td>0.2642 gallons</td>\n	</tr>\n	<tr>\n		<td width=\"103\">Volume</td>\n		<td width=\"96\">3.7854</td>\n		<td width=\"102\">liters</td>\n		<td>1.0000 gallon</td></tr></tbody></table>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset consists of a single line of input containing a floating \npoint (double precision) number, a space and the unit specification for \nthe measurement to be converted.  The unit specification is one of kg, \nlb, l, or g referring to kilograms, pounds, liters and gallons \nrespectively.\n</p>','<p>\nFor each dataset, you should generate one line of output with the \nfollowing values:  The dataset number as a decimal integer (start \ncounting at one), a space, and the appropriately converted value rounded\n to 4 decimal places, a space and the unit specification for the \nconverted value.\n</p>','5\n1 kg\n2 l\n7 lb\n3.5 g\n0 l\n','1 2.2046 lb\n2 0.5284 g\n3 3.1752 kg\n4 13.2489 l\n5 0.0000 g','',-1,0,1,64,2,53,112,10),(1364,'Encoding','<p>\nChip and Dale have devised an encryption method to hide their (written) \ntext messages. They first agree secretly on two numbers that will be \nused as the number of rows (R) and columns (C) in a matrix. The sender \nencodes an intermediate format using the following rules:\n</p>\n<p>\n1.\n</p>\n<p>\nThe text is formed with uppercase letters [A-Z] and &lt;space&gt;.\n</p>\n<p>\n2.\n</p>\n<p>\nEach text character will be represented by decimal values as follows:\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2989%2FEncoding.jpg\" /><br /></center>\n<p>\n&lt;space&gt; = 0, A = 1, B = 2, C = 3, ..., Y = 25, Z = 26 The sender \nenters the 5 digit binary representation of the characters\' values in a\n spiral pattern along the matrix as shown below. The matrix is padded \nout with zeroes (0) to fill the matrix completely. For example, if the \ntext to encode is: \"ACM\" and R=4 and C=4, the matrix would be filled in \nas follows:\n</p>\n<p>\nA = 00001, C = 00011, M = 01101(one extra 0) The bits in the matrix are \nthen concatenated together in row major order and sent to the receiver. \nThe example above would be encoded as: 0000110100101100\n</p>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset consists of a single line of input containing <em>R </em>(1 &lt;= <em>R</em> &lt;= 21), a space,  \n<em>C</em> (1 &lt;= <em>C</em> &lt;= 21), a space, and a text string \nconsisting of uppercase letters [A-Z] and &lt;space&gt;. The length of \nthe text string is guaranteed to be &lt;=(<em>R</em>*<em>C</em>)/5.\n</p>','<p>\nFor each dataset, you should generate one line of output with the \nfollowing values:  The dataset number as a decimal integer (start \ncounting at one), a space, and a string of binary digits (<em>R</em>*<em>C</em>)\n long describing the encoded text. The binary string represents the \nvalues used to fill in the matrix in row-major order.  You may have to \nfill out the matrix with zeroes (0) to complete the matrix.\n</p>','4\n4 4 ACM\n5 2 HI\n2 6 HI\n5 5 HI HO','1 0000110100101100\n2 0110000010\n3 010000001001\n4 0100001000011010110000010','',-1,0,1,64,2,28,64,10),(1365,'Decoding','<p>\nChip and Dale have devised an encryption method to hide their (written) \ntext messages. They first agree secretly on two numbers that will be \nused as the number of rows (R) and columns (C) in a matrix. The sender \nencodes an intermediate format using the following rules:\n</p>\n<p>\n1.\n</p>\n<p>\nThe text is formed with uppercase letters [A-Z] and &lt;space&gt;.\n</p>\n<p>\n2.\n</p>\n<p>\nEach text character will be represented by decimal values as follows:\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2990%2FDecoding.jpg\" /><br /></center>\n<p>\n&lt;space&gt; = 0, A = 1, B = 2, C = 3, ..., Y = 25, Z = 26 The sender \nenters the 5 digit binary representation of the characters\' values in a \nspiral pattern along the matrix as shown below. The matrix is padded out\n with zeroes (0) to fill the matrix completely. For example, if the text\n to encode is: \"ACM\" and R=4 and C=4, the matrix would be filled in as \nfollows:\n</p>\n<p>\nA = 00001, C = 00011, M = 01101(one extra 0) The bits in the matrix are \nthen concatenated together in row major order and sent to the receiver. \nThe example above would be encoded as: 0000110100101100 \n</p>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset consists of a single line of input containing <em>R</em> (1 &lt;= <em>R</em> &lt;= 21), a space,  \n<em>C </em>(1 &lt;= <em>C</em> &lt;= 21), a space, and a string of binary digits that represents the contents of the matrix (<em>R</em> * \n<em>C </em>binary digits). The binary digits are in row major order.\n</p>','<p>\nFor each dataset, you should generate one line of output with the \nfollowing values:  The dataset number as a decimal integer (start \ncounting at one), a space, and the decoded text message.  You should \nthrow away any trailing spaces and/or partial characters found while \ndecoding.\n</p>','4\n4 4 0000110100101100\n5 2 0110000010\n2 6 010000001001\n5 5 0100001000011010110000010','1 ACM\n2 HI\n3 HI\n4 HI HO','',-1,0,1,64,2,21,105,10),(1366,'Spatial Concepts Test','<p>\nThe Flathead Testing Corporation (FTC) supplies various tests for Human \nResources departments at many companies. One type of test they supply \nincludes spatial concepts questions such as:\n</p>\n<p>\nWhen the following figure is folded back on the interior lines it forms a cube.\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2995%2FSpatial_Concepts_Test_1.jpg\" /><br /></center>\n<p>\nWhich of the following could be an image of one corner of the resulting cube?\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2995%2FSpatial_Concepts_Test_2.jpg\" /><br /></center>\n<p>\nUnfortunately, FTC was recently embarrassed when one such question on a \ntest had no solution among the choices and another (given in the \nexample) had two solutions among the choices (1 and 3).\n</p>\n<p>\nFTC needs a routine which will read in a specification of the unfolded \ncube and specifications of corner views and determine, for each corner \nview, whether it is a view of a corner of the cube specified in the \nunfolded part.\n</p>\n<p>\nFTC uses the following images as faces of each cube. Each image is \nsymmetrical about the vertical axis and has a distinguished end (up in \neach image).\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2995%2FSpatial_Concepts_Test_3.jpg\" /><br /></center>\n<p>\nThe unfolded cube is specified by a string of six pairs of a letter \nindicating the image on the face and a number indicating the orientation\n of the distinguished end of the face: 1 is up, 2 is right, 3 is down \nand 4 is left. The faces are specified in the order given in the \nfollowing figure with the orientations  indicated in the square to the \nright. </p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2995%2FSpatial_Concepts_Test_4.jpg\" /><br /></center><p>So the unfolded cube in the example is specified as \"F3E4E2D3C2F3\". FTC \nhas a routine which reads this specification and generates the unfolded \nimage for the question.\n</p>\n<p>\nThe answer images are specified by three pairs of a letter and a digit \nindicating a face image and an orientation as indicated in the following\n diagram.  The faces are specified in the order top, right, left \n(indicated by numbers in brackets in the figures), that is clockwise \naround the center vertex starting at the top. The orientation of the \ndistinguished end of each face is indicated by the numbers on the edges \nin the diagram. They circle each face clockwise, starting at the center \nvertex.\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2995%2FSpatial_Concepts_Test_5.jpg\" /><br /></center>\n<p>\nFor the example, the answer figures are specified as \"C2D2F2\", \"E3F3C4\",\n \"F2C2D2\", \n\"D1E1F3\" and \"E1C1E1\". Again, FTC has a routine which reads this \nspecification and generates each answer image for the question. They \njust need your routine to make sure there is exactly one correct answer \nto each question.\n</p>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset consists of six lines of input.  The first line of input is\n the specification for the folded out cube as described above. This line\n is followed by five lines, each of which gives the specification of one\n answer image as described above.\n</p>','<p>\nFor each dataset, output on a single line the dataset number, (1 through <em>N</em>),\n a blank, the number of answers which are solutions of the problem \n(corners of the cube specified in the folded out line), a blank and five\n \n\'Y\' or \'N\' characters separated by a blank indicating which of the \nanswer images was a solution (\'Y\' for a solution, \n\'N\' for not a solution).\n</p>','2\nF3E4E2D3C2F3\nC2D2F2\nE3F3C4\nF2C2D2\nD1E1F3\nE1C1E1\nA2F4F1A3A3C4\nC3A4A2\nF3F4A1\nF3C4A1\nA2C3A2\nA4A4F1','1 2 Y N Y N N\n2 0 N N N N N','',-1,0,1,64,2,4,5,10),(1367,'Monkey Vines','<p>\nDeep in the Amazon jungle, exceptionally tall trees grow that support a \nrich biosphere of figs and juniper bugs, which happen to be the culinary\n delight of brown monkeys.\n</p>\n<p>\nReaching the canopy of these trees requires the monkeys to perform \ncareful navigation through the tall tree\'s fragile vine system.  These \nvines operate like a see-saw: an unbalancing of weight at any vine \njunction would snap the vine from the tree, and the monkeys would \nplummet to the ground below. The monkeys have figured out that if they \nwork together to keep the vines properly balanced, they can all feast on\n the figs and juniper bugs in the canopy of the trees.\n</p>\n<p>\nA vine junction supports exactly two sub-vines, each of which must \ncontain the same number of monkeys, or else the vine will break, leaving\n a pile of dead monkeys on the jungle ground.  For purposes of this \nproblem, a vine junction is denoted by a pair of matching square \nbrackets [ ], which may contain nested information about junctions \nfurther down its sub-vines. The nesting of vines will go no further than\n 25 levels deep.\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2992%2FMonkey_Vines.jpg\" /><br /></center>\n<p>\nYou will write a program that calculates the minimum number of monkeys \nrequired to balance a particular vine configuration.  There is always at\n least one monkey needed, and, multiple monkeys may hang from the same \nvine.\n</p>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset consists of a single line of input containing a vine \nconfiguration consisting of a string of [ and ] characters as described \nabove. The length of the string of [ and ] will be greater than or equal\n to zero, and less than or equal to 150.</p>\n<p>\nNote: The second line of sample input is a blank line.\n</p>','<p>\nFor each dataset, you should generate one line of output with the \nfollowing values:  The dataset number as a decimal integer (start \ncounting at one), a space, and the minimum number of monkeys required to\n reach the canopy successfully.  Assume that all the hanging vines are \nreachable from the jungle floor, and that all monkeys jump on the vines \nat the same time.\n</p>','3\n[]\n\n[[][[]]]','1 2\n2 1\n3 8','',-1,0,1,64,2,23,37,10),(1368,'Model Rocket Height','<p>\nJust when you thought we had run out of model rocket height problems...</p>\n<p>\nYet another method used to determine the height achieved by a model \nrocket is the vertical line method. Two observers A and B  are spaced D \nfeet apart along a base line along one edge of the flat test field. The \nlaunch platform is equidistant from observers A and B and L feet from \nthe base line. Each observer has a theodolite or some other device for \nmeasuring angle above the horizontal (elevation angle) of a distant \nobject and the azimuth angle (the angle the vertical plane of the sight \nline makes with the line from A through B measured counter-clockwise). \nEach measuring device is on a stand. A\'s device is HA feet above the \nlevel of the launch platform and B\'s device is HB feet above the level \nof the launch platform. When a rocket is fired, near the top of its \nflight, it deploys a parachute and emits a puff of smoke. Each observer \nmeasures the elevation angle and azimuth angle of the puff of smoke from\n their location. If the peak location is on the wrong side of the \nbaseline or outside the lines determined by A and B perpendicular to the\n base line, it is out of bounds and disqualified. From this information,\n the height of the rocket may be determined as follows:\n</p>\n<p>\nEach sight line determines a vertical plane. These two planes intersect \nin a vertical line (thus the name of the method). Each sight line \nintersects this vertical line in a point. If these points are more than \nERRDIST feet apart, an error is assumed and the flight is rejected. \nOtherwise, the point halfway between the two points where a sight line \nintersects the vertical line is computed. The rocket height is the \ndistance of this midpoint above the launch platform.\n</p>\n<p>\nYou must write a program which, given the parameters D (the distance in \nfeet between observers A and B), L (the distance in feet from the base \nline to the launch platform), HA (the distance of the measuring device A\n above the launch platform in feet), HB (the distance of the measuring \ndevice B above the launch platform in feet), ERRDIST (the maximum \ndistance between the intersection points of a sight line with the \nvertical line),\n<em>a1</em>(the elevation angle of the rocket in degrees measured by the left observer A),<em>a2</em> (the elevation angle of the rocket in degrees observed by the right observer B),\n<em>a3</em>(the azimuth angle in degrees measured by the left observer A) and <i>\na4</i>(the azimuth angle in degrees measured by the right observer B), \ncomputes the height of the rocket above the launch platform in feet to \nthe nearest foot.\n</p>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nThe second line contains the parameters <em>D, L, HA, HB</em> and <em>ERRDIST</em>\n in that order as (floating point) decimal values. These values would be\n measured once at the beginning of the day and remain fixed through all \nrocket shots.\n</p>\n<p>\nEach succeeding line of input represents a single dataset.  Each dataset will contain the angles \n<em>a1</em>, <em>a2</em>, \n<em>a3 </em>and <em>a4</em> in that order (measured in degrees) as (floating point) decimal values for a rocket shot.\n</p>','<p>\nFor each dataset of four angles, the output consists of a single line . If  angles \n<em>a1</em>, <em>a2</em> and \n<em>a3</em> are not strictly between 0 and 90 degrees or \na4 is not strictly between 90 degrees and 180 degrees, the line should \ncontain the dataset number, a space and the word \n\"DISQUALIFIED\" (without the quotes). Otherwise, if the distance between \nthe intersection points of a sight line with the vertical line is more \nthat ERRDIST feet, the line should contain the dataset number, a space \nand the word \n\"ERROR\" (without the quotes). Otherwise, the line should contain the \ndataset number, a space and the height above the launch platform in feet\n to the nearest foot.\n</p>','4\n100.0 300.0 5.25 2.92 5.00\n40.1 36.2 35.3 151.6\n64.9 71.1 15.7 160.1\n44.9 41.2 33.1 152.5\n44.9 41.2 33.1 52.5','1 50\n2 ERROR\n3 58\n4 DISQUALIFIED','',-1,0,1,64,2,4,6,10),(1369,'Tiling a Grid With Dominoes','<p>\nWe wish to tile a grid 4 units high and N units long with rectangles \n(dominoes) 2 units by one unit (in either orientation). For example, the\n figure shows the five different ways that a grid 4 units high and 2 \nunits wide may be tiled.\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2994%2FTiling_a_Grid_With_Dominoes.jpg\" /><br /></center>\n<p>\nWrite a program that takes as input the width, W, of the grid and outputs the number of different ways to tile a 4-by-W grid.\n</p>','<p>\nThe first line of input contains a single integer <em>N</em>, (1 &lt;= <em>N</em> &lt;= 1000) which is the number of datasets that follow.\n</p>\n<p>\nEach dataset contains a single decimal integer, the width, W, of the grid for this problem instance.\n</p>','<p>\nFor each problem instance, there is one line of output:  The problem \ninstance number as a decimal integer (start counting at one), a single \nspace and the number of tilings of a 4-by-W grid. The values of W will \nbe chosen so the count will fit in a 32-bit integer.\n</p>','3\n2\n3\n7','1 5\n2 11\n3 781','',-1,0,1,64,2,14,15,10),(1371,'Problem B','<p>The Babylonians had n types of blocks, and an unlimited supply of blocks of each type. Each type-i block was a rectangular solid with linear dimensions (xi, yi, zi). A block could be reoriented so that any two of its three dimensions determined the dimensions of the base and the other dimension was the height. They wanted to construct the tallest tower possible by stacking blocks. The problem was that, in building a tower, one block could only be placed on top of another block as long as the two base dimensions of the upper block were both strictly smaller than the corresponding base dimensions of the lower block. This meant, for example, that blocks oriented to have equal-sized bases couldn\'t be stacked.</p>\n<p>Your job is to write a program that determines the height of the tallest tower the Babylonians can build with a given set of blocks.</p>','<p>The input file will contain one or more test cases. The first line of each test case contains an integer n, representing the number of different blocks in the following data set.</p>\n<p>The maximum value for n is 30. Each of the next n lines contains three integers representing the values xi, yi and zi. Input is terminated by a value of zero (0) for n.</p>','<p>For each test case, print one line containing the case number and the height of the tallest possible tower in the format \"Case case: maximum height = height\"</p>','1\n10 20 30\n2\n6 8 10\n5 5 5\n7\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n5\n31 41 59\n26 53 58\n97 93 23\n84 62 64\n33 83 27\n0','Case 1: maximum height = 40\nCase 2: maximum height = 21\nCase 3: maximum height = 28\nCase 4: maximum height = 342','',-1,0,0,64,10,0,0,12),(1372,'Problem C','<p>Every summer, Ali and Reza attend the Ex together. Ali likes to play Crown &amp; Anchor, a gambling game in which one bets on one of: Crown, Anchor, Club, Diamond, Heart, Spade. A wheel is spun and stops in a position marked by three of the above symbols (not necessarily distinct). If Ali has bet on one of the three symbols indicated, he receives his bet back plus n times his bet, where n is the number of times that his symbol appears.</p>\n<p>Every year, Ali loses money and Reza ridicules him for it. This year, Ali has made a side bet with Reza: that he can make money playing Crown &amp; Anchor. Reza is not stupid and realizes that Ali might be lucky and win the first few rounds, so he insists that, to win the bet, Ali must be ahead after at least k rounds. Also, so that the issue may be resolved before the Ex closes, to win Ali must show a profit within at most m rounds.</p>\n<p>Ali has a trick up his sleeve. He has recently learned of the Monte Carlo strategy for betting. The idea is that he first places the minimum bet. If he wins, he collects his winnings and once again places the minimum bet. If he loses, he doubles his bet so that if he wins the next round, he will win enough to recoup his previous losses and make a profit. This doubling continues until he wins. Whenever he wins, he pockets the profit and starts over with the minimum bet.</p>\n<p>Ali thinks this is a great strategy but the establishment thought of it first and implemented a house limit - the maximum bet that Ali can place in any given round. Ali modifies his strategy so that if doubling his bet would exceed the house limit, he starts over at the minimum bet, hoping to recover his loss.</p>\n<p>Ali wins the bet if, following this strategy, his net winnings are positive at any time after playing k and before playing the m+1st round. What\'s the probability that Ali win the bet?</p>\n<p> </p>\n<p> </p>','<p>The first line of input contains n, the number of test cases. Each test case is represented by a line containing integers k, m, and l, the minimum number of rounds, the maximum number of rounds, and the house limit. 0 &lt; k &lt; m ≤ 30; 2 ≤ l ≤ 1000. The minimum bet is 1.</p>','<p>For each test case, print the probability that Ali will win the bet, rounded to 4 decimal places.</p>\n<p>The design of the wheel can be seen in the illustration. It has 28 possible stopping positions, only 14 different combinations of symbols, each of which appears twice. The 14 combinations include: 6 that contain three identical symbols; 6 that contain two identical symbols, and 2 that contain three distinct symbols. The patterns are designed so that each symbol appears once, twice, and three times in an equal number of wheel positions.</p>','1\n3 4 10','0.5835','',-1,0,0,64,10,0,0,12),(1373,'Problem D','<p>A friend of you is doing research on the Traveling Knight Problem (TKP) where you are to find the shortest closed tour of knight moves that visits each square of a given set of n squares on a chessboard exactly once. He thinks that the most difficult part of the problem is determining the smallest number of knight moves between two given squares and that, once you have accomplished this, finding the tour would be easy. Of course you know that it is vice versa. So you offer him to write a program that solves the \"difficult\" part.</p>\n<p>Your job is to write a program that takes two squares a and b as input and then determines the number of knight moves on a shortest route from a to b.</p>','<p>The input file will contain one or more test cases. Each test case consists of one line containing two squares separated by one space. A square is a string consisting of a letter (a-h) representing the column and a digit (1-8) representing the row on the chessboard.</p>','<p>For each test case, print one line saying \"To get from xx to yy takes n knight moves.\".</p>','e2 e4\na1 b2\nb2 c3\na1 h8\na1 h7\nh8 a1\nb1 c3\nf6 f6','To get from e2 to e4 takes 2 knight moves.\nTo get from a1 to b2 takes 4 knight moves.\nTo get from b2 to c3 takes 2 knight moves.\nTo get from a1 to h8 takes 6 knight moves.\nTo get from a1 to h7 takes 5 knight moves.\nTo get from h8 to a1 takes 6 knight moves.\nTo get from b1 to c3 takes 1 knight moves.\nTo get from f6 to f6 takes 0 knight moves.','',-1,0,0,64,10,0,0,12),(1374,'Problem E','<p>A palindrome is a string of symbols that is equal to itself when reversed. Given an input string, not necessarily a palindrome, compute the number of swaps necessary to transform the string into a palindrome. By swap we mean reversing the order of two adjacent symbols. For example, the string \"mamad\" may be transformed into the palindrome \"madam\" with 3 swaps:</p>\n<p>• swap \"ad\" to yield \"mamda\"</p>\n<p>• swap \"md\" to yield \"madma\"</p>\n<p>• swap \"ma\" to yield \"madam\"</p>\n<p> </p>','<p>The first line of input gives n, the number of test cases. For each test case, one line of input follows, containing a string of up to 100 lowercase letters.</p>','<p>Output consists of one line per test case. This line will contain the number of swaps, or \"Impossible\" if it is not possible to transform the input to a palindrome.</p>','3\nmamad\nasflkj\naabb','3\nImpossible\n2','',-1,0,0,64,10,0,0,12),(1375,'Problem F','<p>TDP Inc. has decided to sue JCN Inc. for copyright infringement. To this end, TDP wishes to find infringing segments within JCN\'s code base, to show to selected media representatives. Since TDP has fired all its technical staff, it is looking to hire a consultant to be paid on a contingency basis should the lawsuit be successful. To demonstrate your qualifications for this position, you are to solve the problem on a number of test cases.</p>\n<p> </p>\n<p> </p>','<p>Each test case begins with a positive integer k, the number of infringing segments to be found. Following this line are two code bases. The first code base is preceded by the line \"BEGIN TDP CODEBASE\" and contains a number of lines followed by the line \"END TDP CODEBASE\". The second code base is preceded by \"BEGIN JCN CODEBASE\" and followed by \"END JCN CODEBASE\". The line \"END TDP CODEBASE\" does not appear in the first code base and the line \"END JCN CODEBASE\" does not appear in the second. A line containing 0 follows the last test case.</p>','<p>For each test case you should output: (1) a line containing \"CASE n\" where n is the number of the test case; (2) up to k infringing segments. Each segment should be printed exactly as it appears in the JCN code base (including newlines and whitespace) and should be preceded by a line containing \"INFRINGING SEGMENT m LENGTH l POSITION p\" where m is the number of the segment within the test case, l is the length of the segment (in characters) and p is the position of the segment (in characters from the start of the JCN codebase). Output an empty line between test cases.</p>\n<p>A code base is simply a string of characters. An infringing segment is a non-empty contiguous sequence of characters in the JCN code base that is textually identical to some contiguous sequence of characters in the TDP code base, and is not contained in a larger infringing segment. You should consider all characters in the code base, including spaces and the newline character at the end of each line.</p>\n<p>If there are k or fewer common segments, print them all in decreasing order by length; if several segments have the same length, print them in the order they occur in JCN\'s code base. If there are more than k segments, print the first k according to the given order.</p>\n<p>You may assume that no code base contains more than 50,000 characters.</p>','6\nBEGIN TDP CODEBASE\nthe quick brown fox\njumps over the lazy dog.\nso there!\nEND TDP CODEBASE\nBEGIN JCN CODEBASE\nnow is the time for all\ngood men to come to the aid\nof the party.\nso there!\nEND JCN CODEBASE\n100\nBEGIN TDP CODEBASE\nxyzzy\nEND TDP CODEBASE\nBEGIN JCN CODEBASE\nxyzzabczzyy\nEND JCN CODEBASE\n0','CASE 1\nINFRINGING SEGMENT 1 LENGTH 12 POSITION 64\n.\nso there!\nINFRINGING SEGMENT 2 LENGTH 5 POSITION 6\nthe\nINFRINGING SEGMENT 3 LENGTH 5 POSITION 42\no the\nINFRINGING SEGMENT 4 LENGTH 5 POSITION 43\nthe\nINFRINGING SEGMENT 5 LENGTH 5 POSITION 54\nthe\nINFRINGING SEGMENT 6 LENGTH 3 POSITION 15\nfo\nCASE 2\nINFRINGING SEGMENT 1 LENGTH 4 POSITION 0\nxyzz\nINFRINGING SEGMENT 2 LENGTH 3 POSITION 7\nzzy\nINFRINGING SEGMENT 3 LENGTH 2 POSITION 10\ny','',-1,0,0,64,10,0,0,12),(9016,'Closest Pair','<p>Have you ever played quoit in a playground? Quoit is a game in which flat rings are pitched at some toys, with all the toys encircled awarded. In the field of Cyberground, the position of each toy is fixed, and the ring is carefully designed so it can only encircle one toy at a time. On the other hand, to make the game look more attractive, the ring is designed to have the largest radius. Given a configuration of the field, you are supposed to find the radius of such a ring.</p>\n<p>Assume that all the toys are points on a plane. A point is encircled by the ring if the distance between the point and the center of the ring is strictly less than the radius of the ring. If two toys are placed at the same point, the radius of the ring is considered to be 0.</p>','<p>The input consists of several test cases. For each case, the first line contains an integer N (2 &lt;= N &lt;= 100,000), the total number of toys in the field. Then N lines follow, each contains a pair of (x, y) which are the coordinates of a toy. The input is terminated by N = 0.</p>\n<p> </p>','<p>For each test case, print in one line the radius of the ring required by the Cyberground manager, accurate up to 2 decimal places.</p>\n<p> </p>','2\n0 0\n1 1\n2\n1 1\n1 1\n3\n-1.5 0\n0 0\n0 1.5\n0\n','0.71\n0.00\n0.75\n','',-1,0,1,32,5,92,854,10),(9017,'Digital Sums','<p>\n  The digital root of a positive integer is found by summing the digits of the \n  integer. If the resulting value is a single digit then that digit is the digital \n  root. If the resulting value contains two or more digits, those digits are summed \n  and the process is repeated. This is continued as long as necessary to obtain \n  a single digit.<br /><br />\n  For example, consider the positive integer 24. Adding the 2 and the 4 yields \n  a value of 6. Since 6 is a single digit, 6 is the digital root of 24. Now consider \n  the positive integer 39. Adding the 3 and the 9 yields 12. Since 12 is not a \n  single digit, the process must be repeated. Adding the 1 and the 2 yeilds 3, \n  a single digit and also the digital root of 39.</p>','<p>The input file will contain a list of positive integers, one per line. The end \n  of the input will be indicated by an integer value of zero.</p>','<p>For each integer in the input, output its digital root on a separate line of \n  the output.</p>','24\n39\n0\n','6\n3\n','',-1,0,0,64,2,13,28,10),(9018,'Transmitters','<p>In a wireless network with multiple transmitters sending on the same frequencies, \n  it is often a requirement that signals don\'t overlap, or at least that they \n  don\'t conflict. One way of accomplishing this is to restrict a transmitter\'s \n  coverage area. This problem uses a shielded transmitter that only broadcasts \n  in a semicircle.</p>\n<p>\n  A transmitter T is located somewhere on a 1,000 square meter grid. It broadcasts \n  in a semicircular area of radius r. The transmitter may be rotated any amount, \n  but not moved. Given N points anywhere on the grid, compute the maximum number \n  of points that can be simultaneously reached by the transmitter\'s signal. Figure \n  1 shows the same data points with two different transmitter rotations. </p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/9018_f8f95b6217ac6c68e1dd65c07165528f.jpg\" src=\"http://sharecode.ir/assets/problem_images/9018_f8f95b6217ac6c68e1dd65c07165528f.jpg\" /></p>\n<p> </p>\n<p> </p>','<p>All input coordinates are integers (0-1000). The radius is a positive \n  real number greater than 0. Points on the boundary of a semicircle are considered \n  within that semicircle. There are 1-150 unique points to examine per transmitter. \n  No points are at the same location as the transmitter.<br /><br />  Input consists of information for one or more independent transmitter problems. \n  Each problem begins with one line containing the (x,y) coordinates of the transmitter \n  followed by the broadcast radius, r. The next line contains the number of points \n  N on the grid, followed by N sets of (x,y) coordinates, one set per line. The \n  end of the input is signalled by a line with a negative radius; the (x,y) values \n  will be present but indeterminate. Figures 1 and 2 represent the data in the \n  first two example data sets below, though they are on different scales. Figures \n  1a and 2 show transmitter rotations that result in maximal coverage.</p>\n<p> </p>','<p>For each transmitter, the output contains a single line with the maximum number \n  of points that can be contained in some semicircle.</p>','25 25 3.5\n7\n25 28\n23 27\n27 27\n24 23\n26 23\n24 29\n26 29\n350 200 2.0\n5\n350 202\n350 199\n350 198\n348 200\n352 200\n995 995 10.0\n4\n1000 1000\n999 998\n990 992\n1000 999\n100 100 -2.5','3\n4\n4','<p> </p>',-1,0,0,64,2,6,15,10),(9026,'Coverage','<p>\nGiven n points (x<sub>i</sub>, y<sub>i</sub>) (i = 1, 2 ... n) in a plane, where all x<sub>i</sub>\n will be distinct. After connecting the n points with staight lines in \norder from the leftmost point to the rightmost point, the area below the\n lines is called coverage.\nNow, it\'s your job to calculate the maximum coverage area, if y<sub>i</sub> (i = 1, 2 ... n) can be swapped arbitrarily.\n</p>','<p>\nThe first line of the input is an integer <em>t</em> (<em>t</em> &lt;= 100), indicate the number of cases.\n</p>\n<p>\nEach case starts with one integer <em>n</em> (2 &lt;= <em>n</em> &lt;= 1000) in a line. Then follows <em>n</em> lines, each consists of two integers <em>x</em> <em>y</em> (1 &lt;= <em>x</em>, <em>y</em> &lt;= 10<sup>5</sup>) representing a point.\n</p>\n<p>\nCases are separated by one blank line.\n</p>','<p>\nFor each case, output the answer in a line, keep 1 digit after the decimal point.\n</p>','2\n3\n1 1\n2 2\n3 3\n\n3\n1 2\n4 1\n2 5','4.5\n10.0','',-1,0,0,32,1,3,6,10),(9019,'Crossed Matchings','<p>There are two rows of positive integer numbers. We can draw one line segment \n  between any two equal numbers, with values r, if one of them is located in the \n  first row and the other one is located in the second row. We call this line \n  segment an r-matching segment. The following figure shows a 3-matching and a \n  2-matching segment.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/9019_6250db74dfc54017743d4295257d55d2.jpg\" src=\"http://sharecode.ir/assets/problem_images/9019_6250db74dfc54017743d4295257d55d2.jpg\" /></p>\n<p> </p>\n<p>We want to find the maximum number of matching segments possible to draw for \n  the given input, such that:<br />\n  <br />\n  1. Each a-matching segment should cross exactly one b-matching segment, where \n  a != b.<br />\n  <br />\n  2. No two matching segments can be drawn from a number. For example, the following \n  matchings are not allowed.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/9019_f5bdd4447e8c52b983aaa9a6da320147.jpg\" src=\"http://sharecode.ir/assets/problem_images/9019_f5bdd4447e8c52b983aaa9a6da320147.jpg\" /></p>\n<p> </p>\n<p>Write a program to compute the maximum number of matching segments for the \n  input data. Note that this number is always even.</p>','<p>The first line of the file is the number M, which is the number of test cases \n  (1 &lt;= M &lt;= 10). Each test case has three lines. The first line contains \n  N1 and N2 (N1,N2&lt;=100), the number of integers on the first and the second row respectively. \n  The next line contains N1 integers which are the numbers on the first row. The \n  third line contains N2 integers which are the numbers on the second row. All \n  numbers are positive integers less than 100.</p>','<p>Output file should have one separate line for each test case. The maximum number \n  of matching segments for each test case should be written in one separate line.</p>','3\n6 6\n1 3 1 3 1 3\n3 1 3 1 3 1\n4 4\n1 1 3 3\n1 1 3 3\n12 11\n1 2 3 3 2 4 1 5 1 3 5 10\n3 1 2 3 2 4 12 1 5 5 3 ','6\n0\n8','',-1,0,0,64,2,2,3,12),(9020,'Unimodal Palindromic Decompositions','<p>A sequence of positive integers is Palindromic if it reads the same forward and \nbackward. For example:\n</p>\n<p>23 11 15 1 37 37 1 15 11 23</p>\n<p>1 1 2 3 4 7 7 10 7 7 4 3 2 1 1</p>\n<p>A Palindromic sequence is Unimodal Palindromic if the values do not decrease \n  up to the middle value and then (since the sequence is palindromic) do not increase \n  from the middle to the end For example, the first example sequence above is \n  NOT Unimodal Palindromic while the second example is.</p>\n<p>A Unimodal Palindromic sequence is a Unimodal Palindromic Decomposition of \n  an integer N, if the sum of the integers in the sequence is N. For example, \n  all of the Unimodal Palindromic Decompositions of the first few integers are \n  given below:</p>\n<p>1: (1) <br />\n  2: (2), (1 1)<br />\n  3: (3), (1 1 1)<br />\n  4: (4), (1 2 1), (2 2), (1 1 1 1)<br />\n  5: (5), (1 3 1), (1 1 1 1 1)<br />\n  6: (6), (1 4 1), (2 2 2), (1 1 2 1 1), (3 3), (1 2 2 1), ( 1 1 1 1 1 1)<br />\n  7: (7), (1 5 1), (2 3 2), (1 1 3 1 1), (1 1 1 1 1 1 1)<br />\n  8: (8), (1 6 1), (2 4 2), (1 1 4 1 1), (1 2 2 2 1), (1 1 1 2 1 1 1), ( 4 4), \n  (1 3 3 1), (2 2 2 2), (1 1 2 2 1 1), (1 1 1 1 1 1 1 1)</p>\n<p>\nWrite a program, which computes the number of Unimodal Palindromic Decompositions \n  of an integer.</p>','<p>Input consists of a sequence of positive integers, one per line ending with \n  a 0 (zero) indicating the end.</p>','<p>For each input value except the last, the output is a line containing the input \n  value followed by a space, then the number of Unimodal Palindromic Decompositions \n  of the input value. </p>','2\n3\n4\n5\n6\n7\n8\n10\n23\n24\n131\n213\n92\n0\n\n\n','2 2\n3 2\n4 4\n5 3\n6 7\n7 5\n8 11\n10 17\n23 104\n24 199\n131 5010688\n213 1055852590\n92 331143','',-1,0,0,64,2,5,7,12),(9021,'Points Within','<p>Several drawing applications allow us to draw polygons and almost all of them \n  allow us to fill them with some color. The task of filling a polygon reduces \n  to knowing which points are inside it, so programmers have to colour only those \n  points.</p>\n<p>\nYou\'re expected to write a program which tells us if a given point lies inside \n  a given polygon described by the coordinates of its vertices. You can assume \n  that if a point is in the border of the polygon, then it is in fact inside the \n  polygon.</p>','<p>The input file may contain several instances of the problem. Each instance \n  consists of: (i) one line containing integers N, 0 &lt; N &lt; 100 and M, respectively \n  the number of vertices of the polygon and the number of points to be tested. \n  (ii) N lines, each containing a pair of integers describing the coordinates \n  of the polygon\'s vertices; (iii) M lines, each containing a pair of integer \n  coordinates of the points which will be tested for \"withinness\" in \n  the polygon.</p>\n<p>\nYou may assume that: the vertices are all distinct; consecutive vertices in \n  the input are adjacent in the polygon; the last vertex is adjacent to the first \n  one; and the resulting polygon is simple, that is, every vertex is incident \n  with exactly two edges and two edges only intersect at their common endpoint. \n  The last instance is followed by a line with a 0 (zero).</p>\n<p> </p>','<p>For the ith instance in the input, you have to write one line in the output \n  with the phrase \"Problem i:\", followed by several lines, one for each \n  point tested, in the order they appear in the input. Each of these lines should \n  read \"Within\" or \"Outside\", depending on the outcome of \n  the test. The output of two consecutive instances should be separated by a blank \n  line.</p>','3 1\n0 0\n0 5\n5 0\n10 2\n3 2\n4 4\n3 1\n1 2\n1 3\n2 2\n0\n','Problem 1:\nOutside\n\nProblem 2:\nOutside\nWithin','',-1,0,0,64,2,5,19,12),(9022,'Perfection','<p>From the article Number Theory in the 1994 Microsoft Encarta: \"If a, b, c are \nintegers such that a = bc, a is called a multiple of b or of c, and b or c is \ncalled a divisor or factor of a. If c is not 1/-1, b is called a proper divisor \nof a. Even integers, which include 0, are multiples of 2, for example, -4, 0, \n2, 10; an odd integer is an integer that is not even, for example, -5, 1, 3, 9. \nA perfect number is a positive integer that is equal to the sum of all its positive, \nproper divisors; for example, 6, which equals 1 + 2 + 3, and 28, which equals \n1 + 2 + 4 + 7 + 14, are perfect numbers. A positive number that is not perfect \nis imperfect and is deficient or abundant according to whether the sum of its \npositive, proper divisors is smaller or larger than the number itself. Thus, 9, \nwith proper divisors 1, 3, is deficient; 12, with proper divisors 1, 2, 3, 4, \n6, is abundant.\" \n</p>\n<p> Given a number, determine if it is perfect, abundant, or deficient. </p>','<p>A list of N positive integers (none greater than 60,000), with 1 &lt; N &lt; \n  100. A 0 will mark the end of the list.</p>','<p>The first line of output should read PERFECTION OUTPUT. The next N lines of \n  output should list for each input integer whether it is perfect, deficient, \n  or abundant, as shown in the example below. Format counts: the echoed integers \n  should be right justified within the first 5 spaces of the output line, followed \n  by two blank spaces, followed by the description of the integer. The final line \n  of output should read END OF OUTPUT.</p>','15 28 6 56 60000 22 496 0','PERFECTION OUTPUT\n   15  DEFICIENT\n   28  PERFECT\n    6  PERFECT\n   56  ABUNDANT\n60000  ABUNDANT\n   22  DEFICIENT\n  496  PERFECT\nEND OF OUTPUT','',-1,0,0,64,2,11,34,12),(9023,'The Circumference of the Circle','<p>\nTo calculate the circumference of a circle seems to be an easy task - provided you know its\ndiameter. But what if you don\'t?\n</p>\n<p>\nYou are given the cartesian coordinates of three non-collinear points in the plane.<br />\nYour job is to calculate the circumference of the unique circle that\nintersects all three points.</p>','<p>The input file will contain one or more test cases. Each test case consists\nof one line containing six real numbers <i>x<sub>1</sub>,y<sub>1</sub>,\nx<sub>2</sub>,y<sub>2</sub>,x<sub>3</sub>,y<sub>3</sub></i>, \nrepresenting the coordinates of the three points.\nThe diameter of the circle determined by the three points will never exceed\na million. Input is terminated by end of file.</p>\n<p> </p>','<p>For each test case, print one line containing one real number telling\nthe circumference of the circle determined by the three points.\nThe circumference is to be printed accurately rounded to two decimals.\nThe value of pi is approximately 3.141592653589793.</p>','0.0 -0.5 0.5 0.0 0.0 0.5\n0.0 0.0 0.0 1.0 1.0 1.0\n5.0 5.0 5.0 7.0 4.0 6.0\n0.0 0.0 -1.0 7.0 7.0 7.0\n50.0 50.0 50.0 70.0 40.0 60.0\n0.0 0.0 10.0 0.0 20.0 1.0\n0.0 -500000.0 500000.0 0.0 0.0 500000.0','3.14\n4.44\n6.28\n31.42\n62.83\n632.24\n3141592.65','',-1,0,0,64,2,0,0,10),(9024,'Radar Installation','<p>Assume the coasting is an infinite straight line. Land is in one side of coasting, \nsea in the other. Each small island is a point locating in the sea side. And any \nradar installation, locating on the coasting, can only cover d distance, so an \nisland in the sea can be covered by a radius installation, if the distance between \nthem is at most d.\nWe use Cartesian coordinate system, defining the coasting is the x-axis. The \n  sea side is above x-axis, and the land side below. Given the position of each \n  island in the sea, and given the distance of the coverage of the radar installation, \n  your task is to write a program to find the minimal number of radar installations \n  to cover all the islands. Note that the position of an island is represented \n  by its x-y coordinates.</p>\n<p align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/9024_d8eb469fb6a659c94062c571e7f4f2a3.jpg\" src=\"http://sharecode.ir/assets/problem_images/9024_d8eb469fb6a659c94062c571e7f4f2a3.jpg\" /></p>\n<p> </p>\n<p> </p>','<p>The input consists of several test cases. The first line of each case contains \n  two integers n (1 n 1000) and d, where n is the number of islands in the sea \n  and d is the distance of coverage of the radar installation. This is followed \n  by n lines each containing two integers representing the coordinate of the position \n  of each island. Then a blank line follows to separate the cases.<br /><br />\n  The input is terminated by a line containing pair of zeros.</p>\n  The input is terminated by a line containing pair of zeros.','<p>For each test case output one line consisting of the test case number followed \n  by the minimal number of radar installations needed. \"-1\" installation \n  means no solution for that case. </p>','3 2\n1 2\n-3 1\n2 1\n\n1 2\n0 2\n\n0 0\n\n\n','Case 1: 2\nCase 2: 1','',-1,0,0,64,2,0,0,12),(9025,'Binary Stirling Numbers','<p>The Stirling number of the second kind S(n, m) stands for the number of ways \n  to partition a set of n things into m nonempty subsets. For example, there are \n  seven ways to split a four-element set into two parts:</p>\n<p align=\"center\"><br />\n  {1, 2, 3} U {4}, {1, 2, 4} U {3}, {1, 3, 4} U {2}, {2, 3, 4} U {1}<br />\n  {1, 2} U {3, 4}, {1, 3} U {2, 4}, {1, 4} U {2, 3}.</p>\n<p> </p>\n<p>\n  Your task is much \"easier\". Given integers n and m satisfying 1 &lt;= \n  m &lt;= n, compute the parity of S(n, m), i.e. S(n, m) mod 2.</p>\n<p>Write a program which for each data set:<br />\n  <br />\n  reads two positive integers n and m,<br />\n  <br />\n  computes S(n, m) mod 2,<br />\n  <br />\n  writes the result.\n</p>','<p>The first line of the input contains exactly one positive integer d equal to \n  the number of data sets, 1 &lt;= d &lt;= 200. The data sets follow.\n</p>\n<p> Line i + 1 contains the i-th data set - exactly two integers ni and mi separated \n  by a single space, 1 &lt;= mi &lt;= ni &lt;= 10^9.</p>','<p>The output should consist of exactly d lines, one line for each data set. Line \n  i, 1 &lt;= i &lt;= d, should contain 0 or 1, the value of S(n<sub>i</sub>, m<sub>i</sub>) mod 2.</p>','1\n4 2','1','',-1,0,0,64,2,1,3,12),(9027,'Directory Tree','<p>In the ZIP archive, it maintains the relative path and name of all \nthe compressed files and directories in it. When the GUI software(such \nas WinZIP) opens the archive, it can reconstruct the tree structure from\n these information. Now it\'s your task to write a program to do the job.</p>','<p>The input have multiple cases.<br />\nIn each test case, the first line is a number N (1&lt;=N&lt;=20000), \nindicating the number of files and directories in the ZIP archive.<br />\nThen n lines follows, each line has the relative path and name of the \nfile or directory(each line has no more than 260 characters).</p>\n<p>Notice:<br />\n1.The ASCII value of all the characters in the path and file name lies \nin [0x20,0x7F]. And the following characters will not appear in the path\n and file name:\'/:*?\"&lt;&gt;|\'. \'\\\' is only used as path delimiter.<br />\n2.The path and name is case-sensitive.<br />\n3.Directory is ended by \'\\\'.<br />\n4.There will not be duplicated items in the input.<br />\n5.The size of whole input will not exceeds 2MB.</p>','<p>Assume all the paths are relative to the \'root\' directory. Start from\n the root directory, for each directory, first output its name, then \noutput all the subdirectories recursively in alphabatic order, then \noutput all the files in it alphabatically.<br />\nNotice:To make the tree look nice, before printing the name, you should \nfirst output n leading tabs(\'\\t\') according to its level relative to the\n root directory(for example, you should output one tab if the file is in\n the \'root\' folder and output two tabs if it is in the subdirectories of\n the \'root\' folder).<br />\n<br />\nTo keep the size of output, you are not required to output the tree directly. Just output its \'hash\' which is defined as:</p>\n<pre>unsigned int Hash(const char *Key) {\n	unsigned int HashVal=0,i=1;\n	while (*Key) {\n		HashVal+=(*Key++)*(i++);\n		HashVal%=0x8000000B;\n		HashVal*=0xFFFFFFEF;\n	}\n	return HashVal;\n}</pre><p>Notice:\ncin and cout is not recommended here, use them at your own risk!</p>\n<p>Hint for sample output:<br />The directory tree is as follows:<br />root<br />&nbsp;&nbsp;&nbsp; a<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; d<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; a<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; bc<br />&nbsp;&nbsp;&nbsp; ab<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; cd<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; d<br />&nbsp;&nbsp;&nbsp; c<br />&nbsp;&nbsp;&nbsp; b<br /><br />and 966637654=hash(\"root\\n\\ta\\n\\t\\td\\n\\t\\t\\ta\\n\\t\\tbc\\n\\tab\\n\\t\\tcd\\n\\t\\td\\n\\tc\\n\\tb\\n\")</p>','6\nb\nc\\\nab\\cd\na\\bc\nab\\d\na\\d\\a','966637654','',-1,0,0,65,2,0,9,10),(9028,'Rectangular Polygons','<p>\nIn this problem, we will help the Faculty of Civil Engineering. They \nneed a software to analyze ground plans of buildings. Specifically, your\n task is to detect outlines of a building when all of its corners are \ngiven.\n</p>\n<center>\n<img src=\"http://acm.zju.edu.cn/onlinejudge/showImage.do?name=0000%2F2983%2Fpolygon_0.jpg\" /></center>\n<p>\nYou may assume that each building is a rectangular polygon with each of \nits sides being parallel either with X or Y axis. Therefore, each of its\n vertex angles is exactly either 90 or 270 degrees.\n</p>','<p>\nThe input contains several buildings. The description of each building starts with a single positive integer <em>N</em>, the number of corners (polygon vertices), 1 &lt;= N &lt;= 1000. Then there are <em>N</em> pairs of integer numbers <em>X<sub>i</sub></em>, <em>Y<sub>i</sub></em> giving coordinates of individual corners, |<em>X<sub>i</sub></em>|, |<em>Y<sub>i</sub></em>| &lt; 10 000. \n</p>\n<p>\nYou may assume that all corners are listed and no two of them have the \nsame coordinates. The polygon does always exist, it is closed, its sides\n do not intersect or touch (except neighboring sides, of course), and it\n contains no \"holes\" inside. In other words, the outline is formed by \none closed line. The order of corners in the input file may be \narbitrary.\n</p>\n<p>\nThere is an empty line after each building, then the next one is \ndescribed. After the last building, there is a single zero that signals \nthe end of input.\n</p>','<p>\nFor each building, output one line containing <em>N</em> characters \nwithout any whitespace between them. The characters should be uppercase \nletters that specify directions of individual walls (sides) when the \nbuilding outline is followed. \"N\" stands for North (the positive \ndirection of the Y axis), \"E\" for East (the positive direction of the X \naxis), \"W\" for West, and \"S\" for South. The \"walk\" should start in the \nvertex that has been given first in the input and always proceed in the \nclockwise direction.\n</p>','4\n0 0\n2 2\n0 2\n2 0\n\n6\n1 1\n2 2\n0 1\n1 0\n0 2\n2 0\n\n0','NESW\nWNESWN','',-1,0,0,65,2,3,7,10),(9029,'Areas','<p>Consider N different lines on the plane. They divide it to several parts, some of which are finite, some infinite.</p>\n<p>Your task in this problem is for each finite part to find its area.</p>\n<p><strong></strong></p>\n<p><strong>This problem contains multiple test cases!</strong></p>\n<p> </p>\n<p>The first line of a multiple input is an integer N, then a blank line\n followed by N input blocks. Each input block is in the format indicated\n in the problem description. There is a blank line between input blocks.</p>\n<p>The output format consists of N output blocks. There is a blank line between output blocks.</p>','<p>The first line of the input file contains N the number of lines (1 &lt;= N &lt;= 80). Each of next N lines\ncontains four integer numbers x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub> and y<sub>2</sub> - the coordinates of two different points of the line.</p>\n<p>All coordinates do not exceed 10<sup>2</sup> by their absolute value.</p>\n<p>No two lines coincide.</p>','<p>First output K - the number of finite parts among those the lines divide the plane to.</p>\n<p>Next K lines of the output file must contain area parts sorted in non-decreasing order. You answer\nmust be accurate up to 10<sup>-4</sup>.</p>\n<p>Due to floating point precision losses possible, do not consider parts with area not exceeding 10<sup>-8</sup>.</p>','1\n\n5\n0 0 1 0\n1 0 1 1\n1 1 0 1\n0 1 0 0\n0 0 1 1','2\n0.5000\n0.5000','',-1,1,0,64,2,1,8,10),(9030,'Robbers','<p>N robbers have robbed the bank. As the result of their crime they chanced to get M golden coins.\nBefore the robbery the band has made an agreement that after the robbery i-th gangster would get X<sub>i</sub>=Y\nof all money gained. However, it turned out that M may be not divisible by Y.</p>\n<p>The problem which now should be solved by robbers is what to do with the coins. They would like to\nshare them fairly. Let us suppose that i-th robber would get K<sub>i</sub> coins. In this case unfairness of this fact\nis |X<sub>i</sub>/Y - K<sub>i</sub>/M|. The total unfairness is the sum of all particular unfairnesses. Your task as the leader\nof the gang is to spread money among robbers in such a way that the total unfairness is minimized.</p>\n<p><strong></strong></p>\n<p><strong>This problem contains multiple test cases!</strong></p>\n<p> </p>\n<p>The first line of a multiple input is an integer N, then a blank line\n followed by N input blocks. Each input block is in the format indicated\n in the problem description. There is a blank line between input blocks.</p>\n<p>The output format consists of N output blocks. There is a blank line between output blocks.</p>','<p>The first line of the input file contains numbers N, M and Y (1 &lt;= N &lt;= 1000, 1 &lt;= M, Y &lt;= 10000). N\ninteger numbers follow - X<sub>i</sub> (1 &lt;= X<sub>i</sub> &lt;= 10000, sum of all X<sub>i</sub> is Y).</p>','<p>Output N integer numbers - K<sub>i</sub> (sum of all K<sub>i</sub> must be M), so that the total unfairness is minimal.</p>','1\n\n3 10 4\n1 1 2','2 3 5','',-1,1,0,64,5,2,2,10),(9031,'Tree Grafting','<p>\nTrees have many applications in computer science. Perhaps the most \ncommonly used trees are rooted binary trees, but there are other types \nof rooted trees that may be useful as well. One example is ordered \ntrees, in which the subtrees for any given node are ordered. The number \nof children of each node is variable, and there is no limit on the \nnumber. Formally, an ordered tree consists of a finite set of nodes T \nsuch that  </p>\n<p>\n* there is one node designated as the root, denoted root(T);\n</p>\n<p>\n* the remaining nodes are partitioned into subsets T1, T2, ..., Tm, each of which is also a tree (subtrees).\n</p>\n<p>\nAlso, define root(T1), ..., root(Tm) to be the children of root(T), with\n root(Ti) being the i-th child. The nodes root(T1), ..., root(Tm) are \nsiblings.\n</p>\n<p>\nIt is often more convenient to represent an ordered tree as a rooted \nbinary tree, so that each node can be stored in the same amount of \nmemory. The conversion is performed by the following steps:\n</p>\n<p>\n1. remove all edges from each node to its children;\n</p>\n<p>\n2. for each node, add an edge to its first child in T (if any) as the left child;\n</p>\n<p>\n3. for each node, add an edge to its next sibling in T (if any) as the right child.\n</p>\n<p>\nThis is illustrated by the following:\n</p>\n<p>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;|&nbsp;\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;===&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;\\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;3<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5</p>\n<p>\n5  In most cases, the height of the tree (the number of edges in the \nlongest root-to-leaf path) increases after the conversion. This is \nundesirable because the complexity of many algorithms on trees depends \non its height.\n</p>\n<p>\nYou are asked to write a program that computes the height of the tree before and after the conversion.\n</p>','<p>\nThe input is given by a number of lines giving the directions taken in a\n depth-first traversal of the trees. There is one line for each tree. \nFor example, the tree above would give dudduduudu, meaning 0 down to 1, 1\n up to 0, 0 down to 2, etc.For each test cases, input is terminated by a\n line whose first character is #. You may assume that each tree has at \nleast 2 and no more than 10000 nodes.\n</p>','<p>\nFor each tree, print the heights of the tree before and after the conversion specified above. Use the format:\n</p>\n<p>\nTree t: h1 =&gt; h2  where t is the case number (starting from 1), h1 is\n the height of the tree before the conversion, and h2 is the height of \nthe tree after the conversion.\n</p>','dudduduudu\nddddduuuuu\ndddduduuuu\ndddduuduuu\n#\n','Tree 1: 2 => 4\nTree 2: 5 => 5\nTree 3: 4 => 5\nTree 4: 4 => 4','',-1,0,0,64,2,3,17,10),(9032,'Phone List','<p>\nGiven a list of phone numbers, determine if it is consistent in the \nsense that no number is the prefix of another. Let\'s say the phone \ncatalogue listed these numbers:</p>\n<pre>- Emergency 911\n- Alice 97 625 999\n- Bob 91 12 54 26\n</pre><p>In this case, it\'s not possible to call Bob, because the central would \ndirect your call to the emergency line as soon as you had dialled the \nfirst three digits of Bob\'s phone number. So this list would not be \nconsistent.</p>','<p>\nThe first line of input gives a single integer, 1 &lt;= <em>t</em> &lt;= 40, the number of test cases. Each test case starts with <em>n</em>, the number of phone numbers, on a separate line, 1 &lt;= <em>n</em> &lt;= 10000.Then follows <em>n</em> lines with one unique phone number on each line. A phone number is a sequence of at most ten digits.</p>','<p>\nFor each test case, output \"YES\" if the list is consistent, or \"NO\" otherwise.\n</p>','2\n3\n911\n97625999\n91125426\n5\n113\n12340\n123440\n12345\n98346','NO\nYES','',-1,0,0,32,5,10,17,10),(1376,'Linear world','<p>The Disc, being flat, has no real horizon. Any adventurous sailors who \nget funny ideas from staring at eggs and oranges for too long and set \nout for the antipodes soon learned that the reason why distant ships \nsometimes looked as though they were disappearing over the edge of the \nworld was that they were disappearing over the edge of the world. (Terry\n Pratchett -Colour of Magic) \n<br />Not so long time ago people used to believe that they live on 2-D \nworld and if they will travel long enough in one direction, they will \nfall down over the edge. Even when it was proved that the Earth is \nrounded some of them were still afraid to travel to the southern \nhemisphere. \n<br />Try to imagine one 1-D (linear) world. On such world there are only \ntwo possible directions (left and right). All inhabitants of such world \nwere created exactly at the same time and suddenly all of them start to \nmove (all with same constant velocity) in one or the other direction. If\n two inhabitants encounter each other, they politely exchange greetings \nand then they turn around and start to move in an opposite direction. \nWhen an inhabitant reaches the end of the world he falls away and \ndisappears. \n<br />Your task is to determine, for a given scenario of creation, which \ninhabitant and when (counting from the moment of creation) will be the \nlast one to fall away. You can assume that the time required to exchange\n greetings and turn around is 0.</p>\n<p>\nYour task is to determine, for a given scenario of creation, which \ninhabitant and when (counting from the moment of creation) will be the \nlast one to fall away. You can assume that the time required to exchange\n greetings and turn around is 0.</p>','<p>The input consists of multiple descriptions (data sets) of the creation moment. File structure is as follows: \n<br />N \n<br />LV \n<br />DIR POS NAME \n<br />... \n<br />The first line defines the number of inhabitants (N&lt;32000). Data \nset starting with value N=0 represents the end of the input file. The \nsecond line contains length of the world L(float) and velocity of \ninhabitants V(float). Both values are always positive. In next N lines \nthe data about inhabitants are given in an order of increasing POS \n(positive direction): \n<br />DIR – initial direction (\'p\' or \'P\' for positive and \'n\' or \'N\' for negative) \n<br />POS – position in the time of creation (0&lt;=POS&lt;=L) \n<br />NAME – name of inhabitant (string up to 250 characters) \n<br />Input values within one line are separated with at least one space \nand there will be no empty lines in input. You may assume that input is \nalways correct and that each data set has only one unique solution.</p>\n<p>\nInput values within one line are separated with at least one space \nand there will be no empty lines in input. You may assume that input is \nalways correct and that each data set has only one unique solution.</p>','<div class=\"ptx\" lang=\"en-US\">The output consists of one line per each \ninput data set. The first value should be the time when the last \ninhabitant will fall of the linear world counting from the moment of \ncreation. Value should be printed truncated to two decimal places in a \nfield 13 characters wide. The second value should be the name of the \ninhabitant. Values should be separated with single space character. </div>','1   \n13.5 2   \np 3.5 Smarty  \n4\n10  1\np  1  Helga\nn 3 Joanna\np  5  Venus\nn  7  Clever\n0','         5.00 Smarty\n         9.00 Venus','',63,0,0,64,3,0,2,10),(1377,'Songs','<p>John Doe is a famous DJ and, therefore, has the problem of optimizing \nthe placement of songs on his tapes. For a given tape and for each song \non that tape John knows the length of the song and the frequency of \nplaying that song. His problem is to record the songs on the tape in an \norder that minimizes the expected access time. If the songs are recorded\n in the order S<sub>(s1)</sub>, ..., S<sub>s(n)</sub> on the tape then the function that must be minimized is \n<br /><font size=\"4\"></font></p>\n<pre><font size=\"4\">  n	s(i) \n<br /> ∑f<sub>s(i)</sub>∑l<sub>s(j)</sub>\n<br /> i=1	j=1 </font></pre><p> </p>\n<p>where f<sub>s(i)</sub> is the frequency of playing the i<sup>th</sup> song and l is the length of the song. Can you help John?</p>\n<p> </p>\n<p>\n song and l is the length of the song. Can you help John?</p>','<p>Each data set in the input stands for a particular set of songs that \nmust be recorded on a tape. A data set starts with the number N (fits a \n16 bit integer) of songs. Follow N the song specifications, and in the \nend, a number representing the position of a song S on the optimized \ntape. A song specification consists of the song identifier (fits an \ninteger), the length of the song (fits a 16 bit integer), and the \nfrequency of playing the song (a floating-point number). The program \nprints the identifier of the song S. \n<br />White spaces can occur freely in the input. The input data are correct and terminate with an end of file.</p>','<p>For each set of data the program prints \nthe result to the standard output from the beginning of a line. An \ninput/output sample is in the table below. There is a single data set \nthat contains 5 song specifications. The first song has the identifier \n1, length 10 and playing frequency 45.5 etc. The result for the data set\n is the identifier of the 3rd song on the optimized tape. It is 2 for \nthe given example. </p>','5\n1  10  45.5\n2  5  20\n30  20  10\n400  50  35\n15  17  89.9\n3','2','',63,0,1,64,1,1,1,10),(1378,'Sudoku','<div class=\"ptx\" lang=\"en-US\">Sudoku is a very simple task. A square \ntable with 9 rows and 9 columns is divided to 9 smaller squares 3x3 as \nshown on the Figure. In some of the cells are written decimal digits \nfrom 1 to 9. The other cells are empty. The goal is to fill the empty \ncells with decimal digits from 1 to 9, one digit per cell, in such way \nthat in each row, in each column and in each marked 3x3 subsquare, all \nthe digits from 1 to 9 to appear. Write a program to solve a given \nSudoku-task.\n<br /><div align=\"center\">\n<img src=\"http://poj.org/images/2676_1.jpg\" /></div></div>','<div class=\"ptx\" lang=\"en-US\">The input data will start with the number \nof the test cases. For each test case, 9 lines follow, corresponding to \nthe rows of the table. On each line a string of exactly 9 decimal digits\n is given, corresponding to the cells in this line. If a cell is empty \nit is represented by 0.</div>','<div class=\"ptx\" lang=\"en-US\">For each test case your program should \nprint the solution in the same format as the input data. The empty cells\n have to be filled according to the rules. If solutions is not unique, \nthen the program may print any one of them. </div>','1\n103000509\n002109400\n000704000\n300502006\n060000050\n700803004\n000401000\n009205800\n804000107','143628579\n572139468\n986754231\n391542786\n468917352\n725863914\n237481695\n619275843\n854396127','',63,1,1,64,2,9,20,10),(1379,'Tour','<p>John Doe, a skilled pilot, enjoys traveling. While on vacation, he rents\n a small plane and starts visiting beautiful places. To save money, John\n must determine the shortest closed tour that connects his destinations.\n Each destination is represented by a point in the plane pi = &lt; xi,yi\n &gt;. John uses the following strategy: he starts from the leftmost \npoint, then he goes strictly left to right to the rightmost point, and \nthen he goes strictly right back to the starting point. It is known that\n the points have distinct x-coordinates. \n<br />Write a program that, given a set of n points in the plane, computes\n the shortest closed tour that connects the points according to John\'s \nstrategy.</p>\nWrite a program that, given a set of n points in the plane, computes\n the shortest closed tour that connects the points according to John\'s \nstrategy.','<div class=\"ptx\" lang=\"en-US\">The program input is from a text file. \nEach data set in the file stands for a particular set of points. For \neach set of points the data set contains the number of points, and the \npoint coordinates in ascending order of the x coordinate. White spaces \ncan occur freely in input. The input data are correct.</div>','<div class=\"ptx\" lang=\"en-US\">For each set of data, your program should \nprint the result to the standard output from the beginning of a line. \nThe tour length, a floating-point number with two fractional digits, \nrepresents the result. An input/output sample is in the table below. \nHere there are two data sets. The first one contains 3 points specified \nby their x and y coordinates. The second point, for example, has the x \ncoordinate 2, and the y coordinate 3. The result for each data set is \nthe tour length, (6.47 for the first data set in the given example). </div>','3\n1 1\n2 3\n3 1\n4\n1 1\n2 3\n3 1\n4 2','6.47\n7.89','',63,0,1,64,1,5,8,10),(1380,'Mothy','<p>Mothy is a small moth. Mothy and his mother are placed on a very old \npair of jeans. Because the jeans are very old they are covered with \npatches. Sometimes the patches overlap each other. Every patch is a \nconvex polygon and is made by some material different from cotton. Mothy\n wants to go to his mother in the fastest possible way. He cannot move \nwithout eating and because of his age he cannot eat anything except \njeans and cotton thread. Despite his age Mothy is very intelligent, he \ncan move following precise coordinates but he is unable to compute them.\n Write a program that calculates the length of the minimal path from the\n position of Mothy to the position of his mother. Mothy must be able to \npass through this path. Consider that the pair of old jeans is placed on\n a plane surface and is big enough. Mothy can move only at the surface \nof the jeans because he is not big enough to penetrate through them. \n<br />Because Mothy is so small he should be considered as a point. Mothy \nalso can move on the edges of any of the patches because they are sewed \nwith cotton threads. Mothy can move on common edges but cannot be on top\n of any patch.</p>\nBecause Mothy is so small he should be considered as a point. Mothy \nalso can move on the edges of any of the patches because they are sewed \nwith cotton threads. Mothy can move on common edges but cannot be on top\n of any patch.','<div class=\"ptx\" lang=\"en-US\">The first line of input contains a single \ninteger T indicating the number of test cases. Each test case starts \nwith number N of patches, and four integer numbers – the coordinates X \nand Y of Mothy’s position and coordinates U and V of his mother’s \nposition, separated by white spaces (-10000 &lt;= X, Y, U, V &lt;= \n10000). Each patch is described on a separate line starting with the \nnumber of vertices and followed by a pair of integer coordinates (-10000\n &lt;= Xi, Yi &lt;= 10000) for each of the vertices of the patch, \nseparated by white spaces. The total number of vertices of polygons will\n not exceed 300. </div>','<div class=\"ptx\" lang=\"en-US\">For each of the test cases program has to \noutput on a separate line the length of the shortest path between Mothy \nand his mother. The result should be rounded to 3 digits after the \ndecimal point. The program has to output -1 if Mothy cannot reach his \nmother. </div>','2\n1 0 0 4 3\n3 1 1 4 4 1 4\n2 0 0 5 5\n4 1 0 4 0 4 1 1 2\n3 3 3 4 4 5 2','5.000\n7.236','',63,0,1,64,5,3,18,10),(1381,'Adventurous Driving','<div class=\"ptx\" lang=\"en-US\">After a period of intensive development of\n the transportation infrastructure, the government of Ruritania decides \nto take firm steps to strengthen citizens\' confidence in the national \nroad network and sets up a compensation scheme for adventurous driving \n(CSAD). Those driving on a road with holes, bumps and other entertaining\n obstacles get compensation; those driving on a decent road pay tax. \nThese compensations and taxes are obtained and paid in cash on entry on \neach road and depend on the entry point on the road. What you get and \npay driving on a road from A to B may be different from what you get and\n pay driving on the same road from B to A. The Ruritarian authorities \ncall fee the amount of money paid as tax or obtained as compensation on \nentry on a road. A positive fee is a tax; a negative fee stands for \ncompensation. \n<br />John Doe plans to take advantage of CSAD for saving money he needs \nto repair his old car. When driving from A to B, John follows a path he \ncalls optimal: a path that is rewarding and has the minimal length out \nof the paths with the minimal weight from A to B. In John\'s opinion, a \npath is rewarding if all the roads in the path are rewarding, and a road\n (X,Y) is rewarding if it has the minimal entry fee out of the roads \nleaving X. The weight of a path is the sum of the entry fees paid along \nthe path. The length of a path cumulates the length of the roads in the \npath. The problem is helping John to compute the weight and the length \nof an optimal path from A to B on a given map. \n<br /><div align=\"center\">\n<img alt=\"http://sharecode.ir/assets/problem_images/1381_dda6fbbdd4b713201fe84ab566b2e250.jpg\" src=\"http://sharecode.ir/assets/problem_images/1381_dda6fbbdd4b713201fe84ab566b2e250.jpg\" /><br /></div>For example, on the illustrated road map vertices designate cities \nand edges stand for roads. The label fuv[L]fvu of the road (u,v) shows \nthe fee fuv for driving from u to v, the fee fvu for driving from v to \nu, and the length L of the road. The path (0,2,4,3,5) from 0 to 5 is \noptimal: it is rewarding, has weight 2 (-1+3+0+0) and length 50 \n(5+10+5+30). The path (0,1,4,3,5), although rewarding and of weight 2, \nhas length 51. The path (0,3,5) has weight 0 and length 20 but it is not\n rewarding. </div>','<div class=\"ptx\" lang=\"en-US\">Write a program that reads several data \nsets from a text file. Each data set encodes a road map and starts with \nfour integers: the number 1&lt;=n&lt;=1100 of towns on the map, the \nnumber 0&lt;=m&lt;=5000 of roads, the departure town 0&lt;=A&lt;=n-1, \nand the destination town 0&lt;=B&lt;=n-1. Follow m data quintuples \n(u,v,fuv[L]fvu), where u and v are town identifiers (integers in the \nrange 0..n-1), 100&lt;=fuv, fvu&lt;=100 are integer fees for driving on \nthe road (u,v), and 1&lt;=L&lt;=100 is the integer length of the road. \nThe quintuples may occur in any order. Except the quintuples, which do \nnot contain white spaces, white spaces may occur freely in input. Input \ndata terminate with an end of file and are correct.<br /><br /><div class=\"ptx\" lang=\"en-US\">An input/output sample is in the table \nabove. The first data set encodes a road map with no optimal path from 0\n to 2. The second data set corresponds to a map whose optimal path from 0\n to 2 has an unbound weight. The third data set encodes the road map \nshown in the above figure. </div></div>','<div class=\"ptx\" lang=\"en-US\">For each data set, the program prints – \nfrom the beginning of a line – the weight and the length of an optimal \npath, according to John\'s oppinion, from A to B. If there is no optimal \npath from A to B the text VOID is printed. If the weight of the optimal \npath from A to B has no lower bound the text UNBOUND is printed. </div>','3 3 0 2 (0,1,0[1]0) (0,2,1[1]0) (1,2,1[1]0)\n3 3 0 2 (0,1,-1[1]1) (0,2,0[1]0) (1,2,0[1]1)\n7 11 0 5 (0,1,-1[6]4) (0,2,-1[5]4) (0,3,0[1]0)  (1,4,3[10]1)\n(2,4,3[10]1) (3,4,0[5]0)  (3,5,0[30]0) (3,5,1[20]0)\n (4,6,0[3]1)  (6,5,1[8]0)  (6,6,0[2]-1)','VOID\nUNBOUND\n2 50','',63,0,1,64,1,0,0,10),(1382,'Computer Transformation','<p>A sequence consisting of one digit, the number 1 is initially written \ninto a computer. At each successive time step, the computer \nsimultaneously tranforms each digit 0 into the sequence 1 0 and each \ndigit 1 into the sequence 0 1. So, after the first time step, the \nsequence 0 1 is obtained; after the second, the sequence 1 0 0 1, after \nthe third, the sequence 0 1 1 0 1 0 0 1 and so on.\n<br /><br />How many pairs of consequitive zeroes will appear in the sequence after n steps?</p>\nHow many pairs of consequitive zeroes will appear in the sequence after n steps?','<div class=\"ptx\" lang=\"en-US\">Every input line contains one natural number n (0 &lt; n &lt;= 1000).</div>','<div class=\"ptx\" lang=\"en-US\">For each input n print the number of consequitive zeroes pairs that will appear in the sequence after n steps.</div>','2\n3','1\n1','',63,0,1,64,1,17,36,10),(1383,'Anagrammatic Distance','<p>Two words are said to be anagrams of each other if the letters from one \nword can be rearranged to form the other word. For example, occurs is an\n anagram of succor; however, dear is not an anagram of dared (because \nthe d appears twice in dared, but only once in dear). The most famous \nanagram pair (in English) is dog and god. \n<br />The anagrammatic distance between any two words is the minimum \nnumber of letters which must be removed so that the remaining portions \nof the two words become anagrams. For example, given the words sleep and\n leap, we need to remove a minimum of three letters ---two from sleep \nand one from leap ---before what\'s left are anagrams of each other (in \neach case, lep). With words such as dog and cat, where the two have \nabsolutely no letters in common, the anagrammatic distance is an extreme\n (explicitly 6) since all the letters need to be removed. (Here, a word \nis always an anagram of itself.) \n<br />You must write a program to calculate the anagrammatic distance between any two given words.</p>','<p>The first line of the input will contain a positive integer value N \n(less than 60,000) indicating the number of cases. Each case will \nconsist of two words, possibly empty, each given on a single line (for a\n total of 2N additional lines). \n<br />Although they may have zero length, the words are simple ---the \nletter are all lowercase and are taken from the usual twenty-six letter \nEnglish alphabet (abcdefghijklmnopqrstuvwxyz). The longest word is \npneumonoultramicroscopicsilicovolcanoconiosis.</p>','<div class=\"ptx\" lang=\"en-US\">The output should consist of the case number and the anagrammatic distance, formatted as shown. </div>','4\ncrocus\nsuccor\ndares\nseared\nempty\n\nsmell\nlemon','Case #1:  0\nCase #2:  ۱\nCase #3:  5\nCase #4:  4','',63,0,1,64,1,20,74,10),(8000,'Another lottery','<p style=\"font-family: \'Times New Roman\'; \">ven in times of an economic crisis, people in Byteland still like to participate in lotteries. With a bit of luck, they might get rid of all their sorrows and become rich.</p>\n<p style=\"font-family: \'Times New Roman\'; \">The most popular lottery in Byteland consists of&nbsp;<strong><em>m</em></strong>&nbsp;rounds. In each round, everyone can purchase as many tickets as he wishes, and among all tickets sold in this round, one ticket is chosen randomly, each one with the same probability. The owner of that ticket wins the prize money of this round. Since people in Byteland like powers of 2, the prize money for the winner of round&nbsp;<strong><em>i</em></strong>&nbsp;amounts to&nbsp;<strong><em>2<sup>i</sup></em></strong>&nbsp;Bytelandian Dollars.</p>\n<p style=\"font-family: \'Times New Roman\'; \">Can you determine for each participant in the lottery the probability that he will win more money than anybody else?</p>','<p style=\"font-family: \'Times New Roman\'; \">The input consists of several test cases. Each test case starts with a line containing two integers&nbsp;<strong><em>n</em></strong>&nbsp;and&nbsp;<strong><em>m</em></strong>, the number of participants in the lottery and the number of rounds in the lottery. You may assume that&nbsp;<strong><em>1 ≤ n ≤ 10000</em></strong>&nbsp;and&nbsp;<strong><em>1 ≤ m ≤ 30</em></strong>.</p>\n<p style=\"font-family: \'Times New Roman\'; \">The following&nbsp;<strong><em>n</em></strong>&nbsp;lines contain the description of the tickets bought by the participant. The&nbsp;<strong><em>i<sup>th</sup></em></strong>&nbsp;such line contains&nbsp;<strong><em>m</em></strong>&nbsp;non-negative integers&nbsp;<strong><em>c<sub>1</sub>, ..., c<sub>m</sub></em></strong>, where&nbsp;<strong><em>c<sub>j</sub></em></strong>&nbsp;(<strong><em>1 ≤ j ≤ m</em></strong>) is the amount of tickets of round&nbsp;<strong><em>j</em></strong>&nbsp;bought by partipant&nbsp;<strong><em>i</em></strong>. The total number of tickets sold in each round is between&nbsp;<strong><em>1</em></strong>&nbsp;and&nbsp;<strong><em>10<sup>9</sup></em></strong>.</p>\n<p style=\"font-family: \'Times New Roman\'; \">The input ends with a line containing 2 zeros.</p>','<p style=\"font-family: \'Times New Roman\'; \">For each test case, print&nbsp;<strong><em>n</em></strong>&nbsp;lines of output, where line&nbsp;<strong><em>i</em></strong>&nbsp;contains the probability as a reduced fraction that participant&nbsp;<strong><em>i</em></strong>&nbsp;wins the most money. See the sample output for details.</p>\n<p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p>','5 4\n3 1 2 3\n3 1 2 4\n3 1 3 5\n4 4 4 0\n5 5 0 0\n1 1\n1\n0 0','1 / 4\n1 / 3\n5 / 12\n0 / 1\n0 / 1\n1 / 1','',-1,0,0,65,10,5,7,14),(1384,'Tomato Automata','<p>Tomato Automata are small cool programs. You give them an infinite \nsequence of ones and zeros, and they give you a sequence of numbers. \nThey are widely used in the Stanescu Operating System (SOS). They are \nwritten in Tomato Programming Language that is very simple. Here is its \nspecification, tutorial and reference: \n<br />1.Tomato is a very simple but powerful language. \n<br /><br />2.Lines in a Tomato program are numerated with integers from 1 to N (N&lt;=100000) in the order they appear in the input. \n<br /><br />3.There is exactly one command on a line. \n<br /><br />4.The execution starts from the first line. \n<br /><br />5.There are exactly five Tomato commands – ifgo, jump, pass, loop, and die. \n<br /><br />6.When executed, each command prints its line number (into the output sequence). \n<br /><br />7.The ifgo command has one argument – the line number of another \ninstruction. It reads one bit from the input stream. If the bit is one, \nthe execution jumps to the line with the given as argument line number. \nOtherwise the execution continues with the next line. \n<br /><br />8.The jump command has one argument – the line number of another \ninstruction. When executed, the execution jumps to the line with the \ngiven line number. \n<br /><br />9.The pass command has no arguments. It does nothing (except \nprinting its line number like all other commands). Then the execution \ncontinues with the next line. \n<br /><br />10.The die command has no arguments. It terminates the execution of \nthe program (printing its line number before that). The die command can \nnot be used inside a loop. \n<br /><br />11.The loop command is the only one with two arguments. It may be \nused to construct loops. The first argument is the starting line number \n&lt; line&gt; (less than the line number of the loop command), and the \nsecond is a positive integer &lt; count&gt;. When executed, it loops \nfrom the start line a &lt; count&gt;─1 number of times (because it is \nalready executed once). When the loop is executed the given number of \ntimes, the execution continues with the next line. \n<br /><br />12.The jump and ifgo commands must be used only with line numbers in\n the scope of the innermost loop containing them (they can not jump \noutside of the innermost loop or inside loops nested in the innermost \nloop that does not contain the command). \n<br /><br />13.The loop command can not be used to create overlapping loops. \nNested loops must be strictly nested (they can not use the same starting\n line). \n<br /><br />14.When the last line of the program is executed, the execution \ncontinues from the first except when the last line is die command. \n<br /><br />15.White spaces may occur freely before or after the command name and their arguments. \n<br /><br />16.The maximal length of a line in Tomato Programming Language is 80 characters including spaces. \n<br /><br /><br />Stanescu has lots of Tomato programs. He is interested in maximal \nlength of output sequence that specific program can generate, where the \nlength is the number of printed line numbers. Obviously, it is not \npossible to test each possible input sequence (of ones and zeros), so he\n needs a program that computes this.</p>\nStanescu has lots of Tomato programs. He is interested in maximal \nlength of output sequence that specific program can generate, where the \nlength is the number of printed line numbers. Obviously, it is not \npossible to test each possible input sequence (of ones and zeros), so he\n needs a program that computes this.','<div class=\"ptx\" lang=\"en-US\">The input contains several programs, separated with an empty line. Each of them is a correct Tomato program. </div>','<div class=\"ptx\" lang=\"en-US\">For each given program your solution has \nto print on a separate line the maximal length of the output sequence \nthe program could generate. Print infinity if there is no maximal length\n for the output sequence. When finite, the maximal length will not \nexceed 10<sup>9</sup>. </div>','Ifgo 2  \nloop 1 3  \ndie  \n\nifgo 2  \nifgo 3  \npass  \ndie  \n\npass  \nifgo 4  \njump 5  \nifgo 3  \nloop 2 2  \npass  \nloop 1 2  \ndie  ','7\n4\n23','',63,0,1,64,2,0,0,10),(8001,'Ballot evaluation','<p><span style=\"font-family: \'Times New Roman\'; \">Before the 2009 elections at the European Parliament, Bill and Ted have asked their friends to make guesses about the outcome of the ballot. Now, the results have been published, so Bill and Ted want to check who was right. But checking the results of their many friends would take a very long time, and they need the evaluation to be done by a computer. Since they are not so good at programming, they ask you for help.</span></p>','<p><span style=\"font-family: \'Times New Roman\'; \">The data provided by Bill and Ted has the following format: The first line consists of the number&nbsp;</span><strong><em>p</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;of parties followed by the number&nbsp;</span><strong><em>g</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;of guesses (with&nbsp;</span><strong><em>1 ≤ p ≤ 50</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;and&nbsp;</span><strong><em>1 ≤ g ≤ 10000</em></strong><span style=\"font-family: \'Times New Roman\'; \">). Then follow&nbsp;</span><strong><em>p</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;lines, each line consisting of a unique party name of length ≤ 20 (only containing letters a-z, A-Z and digits 0-9) and the achieved vote percentage of this party with one digit after the decimal point. After the parties follow&nbsp;</span><strong><em>g</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;lines, each consisting of a guess. A guess has the form&nbsp;</span><strong><em>P<sub>1</sub>&nbsp;+ P<sub>2</sub>&nbsp;+ ... + P<sub>k</sub>&nbsp;COMP n</em></strong><span style=\"font-family: \'Times New Roman\'; \">, where&nbsp;</span><strong><em>P<sub>1</sub></em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;to&nbsp;</span><strong><em>P<sub>k</sub></em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;are party names,&nbsp;</span><strong><em>COMP</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;is one of the comparison operators &lt;, &gt;, &lt;=, &gt;= or = and&nbsp;</span><strong><em>n</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;is an integer between 0 and 100, inclusively. Each party name occurs at most once in each guess.</span></p>\n<span style=\"font-family: \'Times New Roman\'; \">&nbsp;is an integer between 0 and 100, inclusively. Each party name occurs at most once in each guess.</span>','<p style=\"font-family: \'Times New Roman\'; \">For each guess, sum up the vote percentages of the parties and compare them with the specified integer&nbsp;<strong><em>n</em></strong>. Then, print a line stating whether the guess was correct. See the sample output for details.</p>\n<p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p>','6 5\nCDU 30.7\nSPD 20.8\nGruene 12.1\nFDP 11.0\nDIELINKE 7.5\nCSU 7.2\nFDP > 11\nCDU + SPD < 50\nSPD + CSU >= 28\nFDP + SPD + CDU <= 42\nCDU + FDP + SPD + DIELINKE = 70','Guess #1 was incorrect.\nGuess #2 was incorrect.\nGuess #3 was correct.\nGuess #4 was incorrect.\nGuess #5 was correct.','',-1,0,0,65,10,4,15,14),(8002,'Cyclic antimonotonic permutations','<p style=\"font-family: \'Times New Roman\'; \">A&nbsp;<strong>permutation</strong>&nbsp;is a sequence of integers which contains each integer from&nbsp;<strong><em>1</em></strong>&nbsp;to&nbsp;<strong><em>n</em></strong>&nbsp;exactly once. In this problem we are looking for permutations with special properties:</p>\n<ol style=\"font-family: \'Times New Roman\'; \">\n	<li><strong>Antimonotonic:</strong>&nbsp;for each consecutive 3 values&nbsp;<strong><em>p<sub>i-1</sub></em></strong>,&nbsp;<strong><em>p<sub>i</sub></em></strong>,&nbsp;<strong><em>p<sub>i+1</sub></em></strong>&nbsp;(<strong><em>1 &lt; i &lt; n</em></strong>),&nbsp;<strong><em>p<sub>i</sub></em></strong>&nbsp;should either be the smallest or the biggest of the three values.</li>\n	<li><strong>Cyclic:</strong>&nbsp;The permutation should consist of only one cycle, that is, when we use&nbsp;<strong><em>p<sub>i</sub></em></strong>&nbsp;as a pointer from&nbsp;<strong><em>i</em></strong>&nbsp;to&nbsp;<strong><em>p<sub>i</sub></em></strong>, it should be possible to start at position&nbsp;<strong><em>1</em></strong>&nbsp;and follow the pointers and reach all&nbsp;<strong><em>n</em></strong>&nbsp;positions before returning to position&nbsp;<strong><em>1</em></strong>.</li>\n	<li></li>\n</ol>','<p style=\"font-family: \'Times New Roman\'; \">The input file contains several test cases. Each test case consists of a line containing an integer&nbsp;<strong><em>n</em></strong>, (<strong><em>3 ≤ n ≤ 10<sup>6</sup></em></strong>), the number of integers in the permutation. Input is terminated by&nbsp;<strong><em>n=0</em></strong>.</p>\n<p> </p>','<p style=\"font-family: \'Times New Roman\'; \">For each test case print a permutation of the integers&nbsp;<strong><em>1</em></strong>&nbsp;to&nbsp;<strong><em>n</em></strong>&nbsp;which is both antimonotonic and cyclic. In case there are multiple solutions, you may print any one. Separate all integers by whitespace characters.</p>\n<p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p>','3\n5\n10\n0','3 1 2\n4 5 2 3 1\n6 10 2 9 3 5 4 7 1 8','',-1,0,0,64,10,0,2,14),(8003,'Dark roads','<p style=\"font-family: \'Times New Roman\'; \">Economic times these days are tough, even in Byteland. To reduce the operating costs, the government of Byteland has decided to optimize the road lighting. Till now every road was illuminated all night long, which costs 1 Bytelandian Dollar per meter and day. To save money, they decided to no longer illuminate every road, but to switch off the road lighting of some streets. To make sure that the inhabitants of Byteland still feel safe, they want to optimize the lighting in such a way, that after darkening some streets at night, there will still be at least one illuminated path from every junction in Byteland to every other junction.</p>\n<p><p style=\"font-family: \'Times New Roman\'; \">What is the maximum daily amount of money the government of Byteland can save, without making their inhabitants feel unsafe?</p>\n<p> </p>','<p style=\"font-family: \'Times New Roman\'; \">The input file contains several test cases. Each test case starts with two numbers&nbsp;<strong><em>m</em></strong>&nbsp;and&nbsp;<strong><em>n</em></strong>, the number of junctions in Byteland and the number of roads in Byteland, respectively. Input is terminated by&nbsp;<strong><em>m=n=0</em></strong>. Otherwise,&nbsp;<strong><em>1 ≤ m ≤ 200000</em></strong>&nbsp;and&nbsp;<strong><em>m-1 ≤ n ≤ 200000</em></strong>. Then follow&nbsp;<strong><em>n</em></strong>&nbsp;integer triples&nbsp;<strong><em>x, y, z</em></strong>&nbsp;specifying that there will be a bidirectional road between&nbsp;<strong><em>x</em></strong>&nbsp;and&nbsp;<strong><em>y</em></strong>&nbsp;with length&nbsp;<strong><em>z</em></strong>&nbsp;meters (<strong><em>0 ≤ x, y &lt; m</em></strong>&nbsp;and&nbsp;<strong><em>x ≠ y</em></strong>). The graph specified by each test case is connected. The total length of all roads in each test case is less than 2<sup>31</sup>.</p>\n<p> </p>','<p style=\"font-family: \'Times New Roman\'; \">For each test case print one line containing the maximum daily amount the government can save.</p>\n<p> </p>','7 11\n0 1 7\n0 3 5\n1 2 8\n1 3 9\n1 4 7\n2 4 5\n3 4 15\n3 5 6\n4 5 8\n4 6 9\n5 6 11\n0 0','51','',-1,0,0,64,10,4,3,14),(8004,'Elias gamma coding','<p style=\"font-family: \'Times New Roman\'; \">The Elias gamma code is a simple code which can be used to encode a sequence of positive integers. We will use a modified code which is also able to encode zeros. To encode an integer&nbsp;<strong><em>n</em></strong>, do the following:</p>\n<ol style=\"font-family: \'Times New Roman\'; \">\n	<li>Let&nbsp;<strong><em>k</em></strong>&nbsp;be the number of bits of&nbsp;<strong><em>n</em></strong></li>\n	<li>Write&nbsp;<strong><em>k-1</em></strong>&nbsp;zeros followed by a&nbsp;<strong><em>1</em></strong></li>\n	<li>Write&nbsp;<strong><em>n</em></strong>&nbsp;in binary</li>\n</ol>\n<table style=\"font-family: \'Times New Roman\'; \"><tbody><tr><th>Examples</th></tr><tr><td width=\"20%\">Number</td><td width=\"20%\">Binary</td><td width=\"20%\">Number of bits</td><td width=\"20%\">Prefix</td><td width=\"20%\">Code</td></tr><tr><td>0</td><td>0</td><td>1</td><td>1</td><td>10</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>11</td></tr><tr><td>2</td><td>10</td><td>2</td><td>01</td><td>0110</td></tr><tr><td>3</td><td>11</td><td>2</td><td>01</td><td>0111</td></tr><tr><td>4</td><td>100</td><td>3</td><td>001</td><td>001100</td></tr><tr><td>5</td><td>101</td><td>3</td><td>001</td><td>001101</td></tr><tr><td>6</td><td>110</td><td>3</td><td>001</td><td>001110</td></tr><tr><td>7</td><td>111</td><td>3</td><td>001</td><td>001111</td></tr><tr><td>8</td><td>1000</td><td>4</td><td>0001</td><td>00011000</td></tr></tbody></table><p style=\"font-family: \'Times New Roman\'; \">A sequence of integers is encoded by writing the codes of the individual integers of the sequence in the same order as the integers appear in the sequence. The prefix of&nbsp;<strong><em>k</em></strong>&nbsp;additional bits before the binary representation of each integer is needed to be able to decode the encoded integers. So when reading the encoding of a sequence of integers, if we read&nbsp;<strong><em>k-1</em></strong>&nbsp;zeros followed by a one, it means that there are&nbsp;<strong><em>k</em></strong>&nbsp;bits following which are the binary representation of the next encoded integer.</p>\n<p style=\"font-family: \'Times New Roman\'; \">If we want to shorten the length of the encoding of a sequence of integers, there may be still some room for improvement; we will consider the following two optimizations:</p>\n<ol style=\"font-family: \'Times New Roman\'; \">\n	<li>If there is a prefix which indicates that&nbsp;<strong><em>k</em></strong>&nbsp;bits are following, but there is no integer in the sequence with&nbsp;<strong><em>k</em></strong>&nbsp;bits, we can use this prefix to indicate that&nbsp;<strong><em>k+1</em></strong>&nbsp;bits are following. If there already was a prefix which indicates that&nbsp;<strong><em>k+1</em></strong>&nbsp;bits are following, this prefix is not needed anymore, and it can be used to indicate that&nbsp;<strong><em>k+2</em></strong>&nbsp;bits are following, and so on.</li>\n	<li>We can add a leading zero to the binary representation of all integers in the sequence with&nbsp;<strong><em>k</em></strong>&nbsp;bits, which then become integers with&nbsp;<strong><em>k+1</em></strong>&nbsp;bits, and then the first optimization can be used. This optimization seems especially useful if there are few integers with&nbsp;<strong><em>k</em></strong>bits, but many integers with more than&nbsp;<strong><em>k</em></strong>&nbsp;bits.</li>\n</ol>\n<p style=\"font-family: \'Times New Roman\'; \">When we are minimizing the length of the encoding of a sequence of integers, we only care about how many integers in the sequence have a certain number of bits. Let&nbsp;<strong><em>c<sub>i</sub></em></strong>&nbsp;denote the number of integers in a sequence with&nbsp;<strong><em>i</em></strong>&nbsp;bits.</p>\n<p style=\"font-family: \'Times New Roman\'; \">Let us look at the following example:&nbsp;<strong><em>c<sub>1</sub>&nbsp;= 2, c<sub>2</sub>&nbsp;= 4, c<sub>3</sub>&nbsp;= 0, c<sub>4</sub>&nbsp;= 1</em></strong>&nbsp;(which, for example, could correspond to a sequence&nbsp;<strong><em>2, 1, 3, 8, 0, 2, 3</em></strong>). With the original elias gamma coding, the encoding of the sequence would have length&nbsp;<strong><em>2 × (1 + 1) + 4 × (2 + 2) + 0 × (3 + 3) + 1 × (4 + 4) = 28</em></strong>. By using optimization 1 we can save 1 bit by using prefix&nbsp;<strong><em>001</em></strong>&nbsp;for the integer with 4 bits. Then, we could use optimization 2 and add leading zeros to the integers with 1 bit, making them use 2 bits. Then, we use optimization 1 and use prefix&nbsp;<strong><em>1</em></strong>&nbsp;for the integers with 2 bits, prefix&nbsp;<strong><em>01</em></strong>&nbsp;for the integer with 4 bits, and we get the new length of&nbsp;<strong><em>6 × (1 + 2) + 1 × (2 + 4) = 24</em></strong>.</p>\n<p style=\"font-family: \'Times New Roman\'; \">Both optimizations can possibly be used several times. Note that for the second optimization, it is not easy to decide when and how to use it. The goal is to combine these two optimizations in the best possible way, that means we want to find an encoding of a given sequence of integers that has minimum length among all encodings using elias gamma coding with any combination of these two optimizations.</p>','<p style=\"font-family: \'Times New Roman\'; \">The input file contains several test cases. Each test case starts with a line containing an integer&nbsp;<strong><em>n</em></strong>, (<strong><em>1 ≤ n ≤ 128</em></strong>). The next line contains the values&nbsp;<strong><em>c<sub>1</sub>, ..., c<sub>n</sub></em></strong>&nbsp;(<strong><em>0 ≤ c<sub>i</sub>&nbsp;≤ 10000</em></strong>). Input is terminated by&nbsp;<strong><em>n=0</em></strong>.</p>\n<p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p>','<p style=\"font-family: \'Times New Roman\'; \">For each test case print one line with the minimum length of an encoding of the given input sequence.</p>\n<p> </p>','4\n2 4 0 1\n5\n9 4 2 4 3\n11\n44 56 96 26 73 80 77 50 33 16 78\n0','24\n99\n5494','',-1,0,0,64,10,2,2,14),(8005,'Food portion size','<p style=\"font-family: \'Times New Roman\'; \">The university canteen does not want any student to leave the canteen hungry. Therefore, as long as a student is hungry, he can get another portion of food for free. The canteen uses a fixed food portion size, because it would take too much time to first ask a student how much food he wanted. It can happen that a student doesn\'t finish his last portion of food and the remainder has to be thrown away.</p>\n<p style=\"font-family: \'Times New Roman\'; \">To minimize costs, the manager of the canteen wants to determine a food portion size&nbsp;<strong><em>S</em></strong>&nbsp;such that the amount of food that is wasted is small, but also the number of times the students have to fetch another portion of food is not too big. Note that these two goals can be conflicting:</p>\n<ul style=\"font-family: \'Times New Roman\'; \">\n	<li>By choosing a very small food portion size, one does not waste food, but simultaneously the number of times the students have to fetch food is big.</li>\n	<li>By choosing a large food portion size, one can make sure each student has to fetch only one portion, but at the same time it may happen that a large quantity of food is wasted.</li>\n</ul>\n<p style=\"font-family: \'Times New Roman\'; \">The manager of the canteen has collected data about how many units of food each student eats. The problem to be solved can now be formulated mathematically as follows: Let&nbsp;<strong><em>x</em></strong>&nbsp;be the amount of food that is wasted, and&nbsp;<strong><em>y</em></strong>&nbsp;the number of times the students go to fetch food. Then, the goal is to minimize&nbsp;<strong><em>a × x + b × y</em></strong>, where&nbsp;<strong><em>a, b</em></strong>&nbsp;are weights that represent the relative importance of the two opposing goals. Note that&nbsp;<strong><em>x</em></strong>&nbsp;and&nbsp;<strong><em>y</em></strong>&nbsp;depend on the food portion size&nbsp;<strong><em>S</em></strong>&nbsp;and the quantities of food each student eats. We impose the additional constraint that no student should have to go more than 3 times to fetch food.</p>','<p style=\"font-family: \'Times New Roman\'; \">The input file contains several test cases. Each test case starts with a line containing an integer&nbsp;<strong><em>n</em></strong>, (<strong><em>1 ≤ n ≤ 1000</em></strong>), the number of students eating in the canteen. The next line contains the values&nbsp;<strong><em>a</em></strong>&nbsp;and&nbsp;<strong><em>b</em></strong>&nbsp;(<strong><em>1 ≤ a, b ≤ 10</em></strong>). The third line of each test case consists of&nbsp;<strong><em>n</em></strong>integers&nbsp;<strong><em>y<sub>1</sub>, ..., y<sub>n</sub></em></strong>&nbsp;(<strong><em>1 ≤ y<sub>i</sub>&nbsp;≤ 100</em></strong>), where&nbsp;<strong><em>y<sub>i</sub></em></strong>&nbsp;is the amount of food student&nbsp;<strong><em>i</em></strong>&nbsp;eats. Input is terminated by&nbsp;<strong><em>n=0</em></strong>.</p>','<p style=\"font-family: \'Times New Roman\'; \">For each test case print one line containing the costs resulting from an optimal choice of the food portion size. Print each value as a reduced fraction. If the result is an integer, do not print the denominator 1. See the sample output for details.</p>','5\n1 1\n3 7 1 9 12\n3\n10 1\n11 13 17\n2\n2 3\n6 3\n0','35 / 2\n154 / 3\n9','',-1,0,0,64,10,2,2,14),(8006,'Generate random numbers','<p style=\"font-family: \'Times New Roman\'; \">John von Neumann suggested in 1946 a method to create a sequence of pseudo-random numbers. His idea is known as the \"middle-square\"-method and works as follows: We choose an initial value&nbsp;<strong><em>a<sub>0</sub></em></strong>, which has a decimal representation of length at most&nbsp;<strong><em>n</em></strong>. We then multiply the value&nbsp;<strong><em>a<sub>0</sub></em></strong>&nbsp;by itself, add leading zeros until we get a decimal representation of length&nbsp;<strong><em>2 × n</em></strong>&nbsp;and take the middle&nbsp;<strong><em>n</em></strong>&nbsp;digits to form&nbsp;<strong><em>a<sub>i</sub></em></strong>. This process is repeated for each&nbsp;<strong><em>a<sub>i</sub></em></strong>&nbsp;with&nbsp;<strong><em>i&gt;0</em></strong>. In this problem we use&nbsp;<strong><em>n = 4</em></strong>.</p>\n<p style=\"font-family: \'Times New Roman\'; \">Example 1:&nbsp;<strong><em>a<sub>0</sub></em></strong>=5555,&nbsp;<strong><em>a<sub>0</sub><sup>2</sup></em></strong>=30858025,&nbsp;<strong><em>a<sub>1</sub></em></strong>=8580,...</p>\n<p style=\"font-family: \'Times New Roman\'; \">Example 2:&nbsp;<strong><em>a<sub>0</sub></em></strong>=1111,&nbsp;<strong><em>a<sub>0</sub><sup>2</sup></em></strong>=01234321,&nbsp;<strong><em>a<sub>1</sub></em></strong>=2343,...</p>\n<p style=\"font-family: \'Times New Roman\'; \">Unfortunately, this random number generator is not very good. When started with an initial value it does not produce all other numbers with the same number of digits.</p>\n<p style=\"font-family: \'Times New Roman\'; \">Your task is to check for a given initial value&nbsp;<strong><em>a<sub>0</sub></em></strong>&nbsp;how many different numbers are produced.</p>','<p style=\"font-family: \'Times New Roman\'; \">The input contains several test cases. Each test case consists of one line containing&nbsp;<strong><em>a<sub>0</sub></em></strong>&nbsp;(<strong><em>0 &lt; a<sub>0</sub>&nbsp;&lt; 10000</em></strong>). Numbers are possibly padded with leading zeros such that each number consists of exactly 4 digits. The input is terminated with a line containing the value 0.</p>','<p style=\"font-family: \'Times New Roman\'; \">For each test case, print a line containing the number of different values&nbsp;<strong><em>a<sub>i</sub></em></strong>&nbsp;produced by this random number generator when started with the given value&nbsp;<strong><em>a<sub>0</sub></em></strong>. Note that&nbsp;<strong><em>a<sub>0</sub></em></strong>&nbsp;should also be counted.</p>','5555\n0815\n6239\n0','32\n17\n111\n','',-1,0,0,65,10,5,5,14),(8007,'Hotel booking','<p><span style=\"font-family: \'Times New Roman\'; \">A transport company often needs to deliver goods from one city to another city. The transport company has made a special deal with a hotel chain which allows its drivers to stay in the hotels of this chain for free. Drivers are only allowed to drive up to 10 hours a day. The transport company wants to find a route from the starting city to the destination city such that a driver can always spend the night in one of the hotels of the hotel chain, and that he needs to drive at most 10 hours from one hotel to the next hotel (or the destination). Of course, the number of days needed to deliver the goods should also be minimized.</span></p>','<p><span style=\"font-family: \'Times New Roman\'; \">The input file contains several test cases. Each test case starts with a line containing an integer&nbsp;</span><strong><em>n</em></strong><span style=\"font-family: \'Times New Roman\'; \">, (</span><strong><em>2 ≤ n ≤ 10000</em></strong><span style=\"font-family: \'Times New Roman\'; \">), the number of cities to be considered when planning the route. For simplicity, cities are numbered from 1 to&nbsp;</span><strong><em>n</em></strong><span style=\"font-family: \'Times New Roman\'; \">, where 1 is the starting city, and&nbsp;</span><strong><em>n</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;is the destination city. The next line contains an integer&nbsp;</span><strong><em>h</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;followed by the numbers&nbsp;</span><strong><em>c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>h</sub></em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;indicating the numbers of the cities where hotels of the hotel chain are located. You may assume that&nbsp;</span><strong><em>0 ≤ h ≤ min(n, 100)</em></strong><span style=\"font-family: \'Times New Roman\'; \">. The third line of each test case contains an integer&nbsp;</span><strong><em>m</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;(</span><strong><em>1 ≤ m ≤ 10<sup>5</sup></em></strong><span style=\"font-family: \'Times New Roman\'; \">), the number of roads to be considered for planning the route. The following&nbsp;</span><strong><em>m</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;lines describe the roads. Each road is described by a line containing 3 integers&nbsp;</span><strong><em>a, b, t</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;(</span><strong><em>1 ≤ a, b ≤ n</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;and&nbsp;</span><strong><em>1 ≤ t ≤ 600</em></strong><span style=\"font-family: \'Times New Roman\'; \">), where&nbsp;</span><strong><em>a, b</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;are the two cities connected by the road, and&nbsp;</span><strong><em>t</em></strong><span style=\"font-family: \'Times New Roman\'; \">&nbsp;is the time in minutes needed by the driver to drive from one end of the road to the other. Input is terminated by&nbsp;</span><strong><em>n = 0</em></strong><span style=\"font-family: \'Times New Roman\'; \">.</span></p>\n<span style=\"font-family: \'Times New Roman\'; \">.</span>','<p style=\"font-family: \'Times New Roman\'; \">For each test case, print one line containing the minimum number of hotels the transport company has to book for a delivery from city 1 to city&nbsp;<strong><em>n</em></strong>. If it is impossible to find a route such that the driver has to drive at most 10 hours per day, print&nbsp;<strong><em>-1</em></strong>&nbsp;instead.</p>','6\n3 2 5 3\n8\n1 2 400\n3 2 80\n3 4 301\n4 5 290\n5 6 139\n1 3 375\n2 5 462\n4 6 300\n3\n0\n2\n1 2 371\n2 3 230\n0','2\n-1','',-1,0,0,65,10,2,2,14),(8008,'Folding','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">Bill is trying to compactly represent sequences of capital alphabetic characters from \'A\' to \'Z\' by folding repeating subsequences inside them. For example, one way to represent a sequence AAAAAAAAAABABABCCD is 10(A)2(BA)B2(C)D. He formally defines folded sequences of characters along with the unfolding transformation for them in the following way:</span></p>\n<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">&gt; A sequence that contains a single character from \'A\' to \'Z\' is considered to be a folded sequence. Unfolding of this sequence produces the same sequence of a single character itself.<br /><br />&gt; If S and Q are folded sequences, then SQ is also a folded sequence. If S unfolds to S\' and Q unfolds to Q\', then SQ unfolds to S\'Q\'.<br /><br />&gt; If S is a folded sequence, then X(S) is also a folded sequence, where X is a decimal representation of an integer number greater than 1. If S unfolds to S\', then X(S) unfolds to S\' repeated X times.<br /><br />According to this definition it is easy to unfold any given folded sequence. However, Bill is much more interested in the reverse transformation. He wants to fold the given sequence in such a way that the resulting folded sequence contains the least possible number of characters.</p>\n<p> </p>','<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The input file contains a single line of characters from \'A\' to \'Z\' with at least 1 and at most 100 characters.</p>\n<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">Process to the end of input.</p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">Write to the output file a single line that contains the shortest possible folded sequence that unfolds to the sequence that is given in the input file. If there are many such sequences then write any one of them.</span></p>','AAAAAAAAAABABABCCD\nNEERCYESYESYESNEERCYESYESYES','9(A)3(AB)CCD\n2(NEERC3(YES))','',-1,1,1,32,10,4,23,12),(8009,'Magazine Delivery','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The TTT Taxi Service in Tehran is required to deliver some magazines to N locations in Tehran. The locations are labeled L1 to LN. TTT assigns 3 cars for this service. At time 0, all the 3 cars and magazines are located at L1. There are plenty of magazines available in L1 and the cars can take as many as they want. Copies of the magazine should be delivered to all locations, observing the following rules:</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">1. For all i = 2 .. N, magazines should be delivered at Li only after magazines are delivered at Li-1.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">2. At any time, only one of the three cars is driving, and the other two are resting in other locations.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The time to go from Li to Lj (or reverse) by any car is a positive integer denoted by D[i , j].</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The goal is to organize the delivery schedule for the cars such that the time by which magazines are delivered to all N locations is minimum.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">Write a program to compute the minimum delivery time.</span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The input file contains M instances of this problem (1 &lt;= M &lt;= 10). The first line of the input file is M. The descriptions of the input data follows one after the other. Each instance starts with N in a single line (N &lt;= 30). Each line i of the following N-1 lines contains D[i , j], for all i=1..N-1, and j=i+1..N.</span></p>','<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The output file contains M lines, each corresponding the solution to one of the input data. In each line, the minimum time it takes to deliver the magazines to all N locations is written.</p>\n<p> </p>','1\n5\n10 20 3 4\n5 10 20\n8 18\n19\n','22','',-1,0,1,64,2,36,182,12),(1385,'Ardenia','<p>\nWelcome to Ardenia. Ardenia is a mythical land, filled with adventure and danger, dwarves \nand dragons, mages and rouges. And puzzles. Lots of puzzles. Actually, the love for puzzles \nis the most important life ingredient of the inhabitants, and the only part they have in \ncommon. </p>\n<p>\nThis month, the people of Ardenia wonder what is the distance between two line \nsegments in three dimensional space. (The distance between segments is defined as the \nminimum among distances between two points of different segments.) Actually, this problem \nhad originally some motivation, but as nobody from Ardenia cares about motivations, \nneither should you.</p>','<p>\nThe input contains several test cases. The first line of the input contains a positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4973img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>5</sup></span> , denoting the number of test cases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the \nformat described below. </p>\n<p>\nThe first line of the input instance contains six space-separated integers \n<span class=\"MATH\"><em>x</em><sub>1</sub>, <em>y</em><sub>1</sub>, <em>z</em><sub>1</sub>, <em>x</em><sub>2</sub>, <em>y</em><sub>2</sub>, <em>z</em><sub>2</sub> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4973img2.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [- 20, 20]</span>. Points \n<span class=\"MATH\">(<em>x</em><sub>1</sub>, <em>y</em><sub>1</sub>, <em>z</em><sub>1</sub>)</span> and <span class=\"MATH\">(<em>x</em><sub>2</sub>, <em>y</em><sub>2</sub>, <em>z</em><sub>2</sub>)</span> are the (different) endpoints of the first segment. \nThe second line contains six integers in the same format, describing the \nsecond segment.</p>','<p>For each test case, your program has to write an output conforming\nto the format described below.</p>\n<p>\nYou should output a single line consisting of two co-prime integers <span class=\"MATH\"><em>l</em></span> and <span class=\"MATH\"><em>m</em> &gt; 0</span>, such that \n<span class=\"MATH\"><em>l</em> /<em>m</em></span> is the square distance between the given two segments. </p>','2 \n0 0 0 1 1 1\n1 1 1 2 2 2\n1 0 0 0 1 0\n1 1 0 2 2 0','0 1 \n1 2','',64,0,1,128,3,0,4,10),(8010,'Win the Bonus','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">There is a game with m bankers, each holding a string of integers of length 3 (note: an integer that has less than 3 digits has zeros filled to the left, e.g. 5 is considered as 005). Each banker assigns to his\\her string some bonus or penalty points. As a player, you are supposed to select n digits from the set {0,1,2,3,4,5,6,7,8,9} to form your own integer string. If your string contains some of the bankers\' strings, then you will gain or lose points accordingly. For example, if there are two bankers assigning 20 bonus points to 356 and 10 penalty points to 674 respectively, and your string is 035674, then since 356 and 674 both appear once in your string, the score you get will be 20-10=10. The player getting the most points wins the game. If there are more than one player getting the most points, the one with the smallest string number wins.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">Now, suppose that Harry Potter gets to know all the bankers\' secret strings and their assigned points by waving his magic wand, it is still not an easy task to win the game even with Hermione on his side. So he has come to you for help -- given the string length n, you may write a program to find the winning string.</span></p>\n<p> </p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The input consists of several test cases.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The first line of each test case contains two integers m and n (1&lt;=n&lt;=10000), where m is the number of bankers and n is the required length of the player\'s string.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">The following m lines contain m pairs of integers which are the banker\'s string and the points assigned to it.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">You may assume that all the bankers\' strings are distinct.</span></p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); \">For each test case you are supposed to output the winning string you find in a line. No extra spaces are allowed.</span></p>\n<p> </p>','2 5\n356 20\n674 -10\n','00356','',-1,0,1,32,10,5,97,12),(1395,'Beehives','','','','','','',-1,0,1,128,10,2,7,10),(1396,'Bits Equalizer','','','','','','',-1,0,1,128,10,11,34,10),(1397,'LCM Pair Sum','<p> </p>','','','','','',-1,0,1,128,20,2,6,14),(1398,'RNA Secondary Structure','','','','','','',-1,0,1,128,10,0,0,10),(1386,'Beasts','<p>\nThe Fiery Beast and the Ice Beast are relicts of the early days of Ardenia. They live \nin their lairs and they are kept in the lairs\' neighborhoods by powerful magic lines \ndrawn by the Elders. These lines must not be crossed by the beasts. However, in the \nrecent years some of these lines vanished. And if the beasts came too close to each \nother, the consequences for the whole human race would be catastrophic. </p>\n<p>\nYou, the king of the land, are certainly worried about it and gathered all \nthe information about the existing magic lines. It appears that the land \ncan be treated as an infinite plane (this fact was established by Herman \nthe Wise, who traveled for many days in one direction and was still able \nto see new things!) The lair of the Ice Beast is at point \n<span class=\"MATH\">(0, 10<sup>10</sup>)</span> and \nthe lair of the Fiery Beast is at point \n<span class=\"MATH\">(0, -10<sup>10</sup>)</span>. There are several \nmagic straight infinite lines and neither Fiery nor Ice Beast can cross \nany of it. You want to know what is the minimum distance which always \nseparates the beasts. </p>\n<p>\nAn example is presented below. I and F denote the beasts\' lairs and the \ngray regions denote the areas on which they may freely walk. Dotted \nsegment corresponds to the minimum distance between these areas.</p>\n<p> </p>\n<div align=\"CENTER\">\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/p4974.png\" alt=\"\\epsfbox{p4974.eps}\" align=\"BOTTOM\" border=\"0\" height=\"284\" width=\"312\" />\n</div>','<p>\nThe input contains several test cases. The first line of the input \ncontains a positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4974img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />20</span>, denoting the number of test cases. \nThen <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format described below.</p>\n<p>\nThe first line of the input instance contains one positive integer <span class=\"MATH\"><em>n</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4974img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />2<sup> . </sup>10<sup>5</sup></span>, being the number of magical lines. Each of the \nnext n lines contains three space-separated integers <span class=\"MATH\"><em>a</em></span>, <span class=\"MATH\"><em>b</em></span>, <span class=\"MATH\"><em>c</em></span>, such \nthat \n<span class=\"MATH\">-10<sup>9</sup>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4974img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" /><em>a</em>, <em>b</em>, <em>c</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4974img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>9</sup></span> and <span class=\"MATH\"><em>b</em> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4974img3.png\" alt=\"$ \\neq$\" align=\"MIDDLE\" border=\"0\" height=\"34\" width=\"18\" /> 0</span>. These numbers denote \nthe magic line \n<span class=\"MATH\"><em>ax</em> + <em>by</em> + <em>c</em> = 0</span>.</p>','<p>For each test case, your program has to \nwrite an output conforming to the format described below.</p>\n<p>\nYou should output a single line containing one number, being the square \nof the minimum distance between beasts. Your result is going to be \naccepted if and only if it is accurate to within a relative or absolute \nvalue of at most <span class=\"MATH\">10<sup>-5</sup></span>.</p>','2 \n5 \n1 -1 0 \n1 1 0 \n0 1 -6 \n0 1 -10 \n0 1 10 \n4 \n1 1 10 \n2 6 7 \n-1 2 10 \n0 1 12','400.000000 \n93.250000','',64,1,1,128,3,0,0,10),(1387,'Casting Spells','<p>\nCasting spells is the least understood technique of dealing with real life. \nActually, people find it quite hard to distinguish between a real spells \nlike ``abrahellehhelleh\" (used in the battles and taught at the mage \nuniversities) and screams like ``rachelhellabracadabra\" (used by \nuneducated witches for shouting at cats). </p>\n<p>\nFinally, the research conducted at the Unheard University showed how one \ncan measure the power of a word (be it a real spell or a scream). It \nappeared that it is connected with the mages\' ability to pronounce words \nbackwards. (Actually, some singers were burned at the stake for exactly \nthe same ability, as it was perceived as demonic possession.) Namely, the \npower of a word is the length of the maximum subword of the form <span class=\"MATH\"><em>ww</em><sup>R</sup><em>ww</em><sup>R</sup></span> (where <span class=\"MATH\"><em>w</em></span> is an arbitrary sequence of characters and \n<span class=\"MATH\"><em>w</em><sup>R</sup></span> is <span class=\"MATH\"><em>w</em></span> written backwards). If no such subword exists, then the \npower of the word is 0. For example, the power of <tt>abrahellehhelleh</tt> \nis 12 as it contains hellehhelleh and the power of \n<tt>rachelhellabracadabra</tt> is 0. Note that the power of a word is \nalways a multiple of 4.</p>','<p>\nThe input contains several test cases. The first line of the input contains \na positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4975img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />40</span>, denoting the number of test cases. Then \n<span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format described below.</p>\n<p>\nThe input is one line containing a word of length at most \n<span class=\"MATH\">3</span><span class=\"MATH\"><span class=\"MATH\">*</span>10<sup>5</sup></span>, \nconsisting of (large or small) letters of the English alphabet.</p>','<p>For each test case, your program has to write an output \nconforming to the format described below.</p>\n<p>\nYou should output one integer <span class=\"MATH\"><em>k</em></span> being the power of the word.</p>','2 \nabrahellehhelleh \nrachelhellabracadabra\n','12 \n0','',64,0,1,128,10,1,2,10),(1388,'Defense Lines','<p>\nAfter the last war devastated your country, you - as the king of the \nland of Ardenia - decided it was high time to improve the defense of your \ncapital city. A part of your fortification is a line of mage towers, \nstarting near the city and continuing to the northern woods. Your advisors \ndetermined that the quality of the defense depended only on one factor: \nthe length of a longest contiguous tower sequence of increasing heights. \n(They gave you a lengthy explanation, but the only thing you understood \nwas that it had something to do with firing energy bolts at enemy forces). </p>\n<p>\nAfter some hard negotiations, it appeared that building new towers is out \nof question. Mages of Ardenia have agreed to demolish some of their \ntowers, though. You may demolish arbitrary number of towers, but the \nmages enforced one condition: these towers have to be consecutive. </p>\n<p>\nFor example, if the heights of towers were, respectively, 5, 3, 4, 9, 2, \n8, 6, 7, 1, then by demolishing towers of heights 9, 2, and 8, the \nlongest increasing sequence of consecutive towers is 3, 4, 6, 7.</p>','<p>The input contains several test cases. The first line of the input \ncontains a positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4976img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />25</span>, denoting the number of test \ncases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format \ndescribed below.  </p>\n<p>\nThe input instance consists of two lines. The first one contains one \npositive integer \n<span class=\"MATH\"><em>n</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4976img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />2<sup> . </sup>10<sup>5</sup></span> denoting the number of towers. \nThe second line contains <span class=\"MATH\"><em>n</em></span> positive integers not larger than <span class=\"MATH\">10<sup>9</sup></span> \nseparated by single spaces being the heights of the towers.</p>','<p>For each test case, your program \nhas to write an output conforming to the format described below.</p>\n<p>\nYou should output one line containing the length of a longest increasing \nsequence of consecutive towers, achievable by demolishing some \nconsecutive towers or no tower at all.</p>','2 \n9 \n5 3 4 9 2 8 6 7 1 \n7 \n1 2 3 10 4 5 6','4 \n6','',64,0,1,128,3,2,6,10),(1389,'Enter The Dragon','<p>\nThe capital of Ardenia is surrounded by several lakes, and each of them \nis initially full of water. Currently, heavy rainfalls are expected over \nthe land. Such a rain falls to one of the lakes: if the lake is dry and \nempty, then it will be filled with water; if the lake is already full, \nthen it will overflow, which will result in a natural disaster. \nFortunately, the citizens have a dragon at their disposal (and they will \nnot hesitate to use it). The dragon may drink the whole water from a lake \nin one sitting. Also, the mages of Ardenia already predicted the weather \nconditions for the next couple of years. The only question is: from which \nlake and when should the dragon drink to prevent a catastrophe?</p>','<p>The input contains several test cases. The first line of the input \ncontains a positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4977img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />40</span>, denoting the number of test \ncases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format \ndescribed below. </p>\n<p>\nThe first line of the input instance contains two space-separated \npositive integers \n<span class=\"MATH\"><em>n</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4977img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>6</sup></span> and \n<span class=\"MATH\"><em>m</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4977img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>6</sup></span> , where <span class=\"MATH\"><em>n</em></span> is the \nnumber of lakes. (There are at most 10 input instances for which <span class=\"MATH\"><em>n</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4977img2.png\" alt=\"$ \\ge$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>5</sup></span> or \n<span class=\"MATH\"><em>m</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4977img2.png\" alt=\"$ \\ge$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>5</sup></span>.) The second line contains the weather \nforecast for the next <span class=\"MATH\"><em>m</em></span> days: <span class=\"MATH\"><em>m</em></span> space-separated integers <span class=\"MATH\"><em>t</em><sub>1</sub>, <em>t</em><sub>2</sub>,..., <em>t</em><sub>m</sub></span> \n<span class=\"MATH\">(<em>t</em><sub>i</sub> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4977img3.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [0, <em>n</em>])</span>. If <span class=\"MATH\"><em>t</em><sub>i</sub> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4977img3.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [1, <em>n</em>]</span>, it means a heavy rainfall over lake <span class=\"MATH\"><em>t</em><sub>i</sub></span> at day \n<span class=\"MATH\"><em>i</em></span>. If <span class=\"MATH\"><em>t</em><sub>i</sub> = 0</span>, there is no rain at day <span class=\"MATH\"><em>i</em></span>, and the dragon has the \ntime to drink the water from one lake of your choice. Note that \nthe dragon does not drink on a rainy day.</p>','<p>\nFor each test case, your program has to write an output conforming to the format \ndescribed below.</p>\n<p>\nIn the first line your program should output word `<tt>YES</tt>\' if it is \npossible to prevent a catastrophic overflow and `<tt>NO</tt>\' otherwise. In \nthe former case, you should output the second line containing <span class=\"MATH\"><em>l</em></span> integers \nfrom the range <span class=\"MATH\">[0, <em>n</em>]</span>, where <span class=\"MATH\"><em>l</em></span> is the number of zeros in the \nweather forecast description, i.e., the number of non-rainy days. Each \nof these integers denotes the number of the lake from which the dragon \nshould drink; zero means the dragon should not drink from any lake \n(this might be necessary, as even the dragon cannot drink from an empty \nlake).</p>','4 \n2 4 \n0 0 1 1\n2 4 \n0 1 0 2\n2 3 \n0 1 2 \n2 4 \n0 0 0 1','NO \nYES \n1 2 \nNO \nYES \n0 1 0','',64,1,1,200,10,3,6,10),(1390,'Fields and Farmers','<p>\nBeing a farmer in Ardenia is a tough job. We do not mean only the dry \nand hostile environment where they have to pasture sheep. The government \n(or actually the king himself) wants his people to invade foreign lands \nrather than to harvest theirs, and thus tries to make the lives of poor \nfarmers as hard as possible. All difficulties start with a seemingly \nsimple task: purchasing a piece of land, called farming parcel. </p>\n<p>\nThe whole farming territory is a huge rectangular grid consisting of \nsquare fields; a farming parcel consists of some of these fields. At \nthe beginning a farmer buys an <span class=\"textit\">initial set of fields</span>; his parcel \nconsists initially just of these fields. However, the actual farming parcel is \ndetermined with the help of string and poles, by repeating the following \nsteps. </p>\n<p> </p>\n<ol>\n	<li>Stick a pole into the middle of each field from the farming parcel. \n</li>\n	<li>Surround the poles with a string, creating the smallest region enclosing all \nthe poles. \n</li>\n	<li>The new farming parcel is the set of all fields having a non-empty \nintersection with this region. A field sharing just the edge or a corner \nwith the region does not count. \n</li>\n</ol>\n<p>\nOf course, the parcel may only increase by implementing the operation \nabove, so each farmer makes sure these steps are repeated till the \nfarming parcel does not change; we call such a parcel <span class=\"textit\">final</span>. \nAn example is depicted below. The initial farming parcel consists of four \nfields (figure A), after one iteration it grows (figure B), and after \nanother one it becomes final (figure C).</p>\n<p> </p>\n<div align=\"CENTER\">\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/p4978.png\" alt=\"\\epsfbox{p4978.eps}\" align=\"BOTTOM\" border=\"0\" height=\"143\" width=\"701\" />\n</div><p>\nIt appears, however, that the final farming parcel would sometimes be the \nsame even if the farmer did not buy all the initial fields but just a \nsubset of them. A subset of this property is called <span class=\"textit\">valid</span>. The \nfarmer wants to know in how many ways he may choose a valid subset of \ninitial fields.</p>','<p>The input contains several test cases. The first line of the input \ncontains a positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4978img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />50</span>, denoting the number of test \ncases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format \ndescribed below.</p>\n<p>\nThe first line of the input instance contains a positive integer <span class=\"MATH\"><em>n</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4978img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>6</sup></span> , being the number of initial fields of the parcel. Each \nof the following <span class=\"MATH\"><em>n</em></span> lines contain two integers \n<span class=\"MATH\"><em>x</em><sub>i</sub>, <em>y</em><sub>i</sub> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4978img3.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [- 10<sup>9</sup>, 10<sup>9</sup>]</span>, being the coordinates of these fields. All initial fields are \ndifferent.</p>','<p>For each test case, your program \nhas to write an output conforming to the format described below.</p>\n<p>\nLet <span class=\"MATH\"><em>k</em></span> be the number of valid subsets of the initial fields. You should \noutput a line containing the number \n<span class=\"MATH\"><em>k</em> mod(10<sup>9</sup> + 7)</span>.</p>','2 \n4 \n0 0 \n0 1 \n0 2 \n0 3 \n5 \n0 0 \n-1 0 \n1 0 \n0 -1 \n0 1','4\n2','',64,0,1,128,3,0,0,10),(1391,'Game','<p>\nTic-tac-toe is the third most popular activity to kill a lazy afternoon \nin Ardenia (right after solving puzzles and insulting your neighbors). \nArthum and Breece are not fans of this game, but their mother told them \nto play, so they sit at a \n<span class=\"MATH\">5 <tt>x</tt> 5</span> board. Both have a large pile of \nmarbles: marbles of Arthum have an <span class=\"MATH\"><em>A</em></span> written on them and that of Breece \nhave a <span class=\"MATH\"><em>B</em></span>. However, as they are both two years old, they have no concept \nof rounds. Instead, they just toss their marbles as quick as possible, so \nafter a while each board field has either marble <span class=\"MATH\"><em>A</em></span> or marble <span class=\"MATH\"><em>B</em></span>. </p>\n<p>\nAt that point, they would like to determine the winner, but counting is not \ntheir strong point, either. (They are two years old, remember?) Recall \nthat the goal of tic-tac-toe is to have three own marbles in a row, i.e., \nlying at three consecutive fields horizontally, vertically or diagonally. \nIf both Arthum and Breece have their three marbles in a row, or \nneither of them has it, we call it a draw.</p>','<p>The input contains several test cases. The first line of the input \ncontains a positive integer \n<span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4979img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />10<sup>5</sup></span>, denoting the number of test \ncases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format \ndescribed below. </p>\n<p>\nThe input instance describes marbles placed on the board in a single \ngame. The instance consists of 5 rows and each of them consists of 5 \nletters: <tt>A</tt> or <tt>B</tt>.</p>','<p>For each test case, your program \nhas to write an output conforming to the format described below.</p>\n<p>\nYou should output one line describing the outcome of the game, i.e., \none of the three possible strings: <tt>A wins</tt>, <tt>B wins</tt>, \nor <tt>draw</tt>.</p>','2 \nAABBA \nBAAAB \nAAABA \nABAAB \nBAAAB \nAAAAA \nAAAAA \nBAAAA \nABAAA \nAABAA','A wins \ndraw','',64,0,1,128,3,7,17,10),(1392,'Hanging Hats','<p>\nIt is a well-known fact that all mages wear pointed hats. However, \ncontrary to popular belief, mages do not sleep in them, and those of \nthe Unheard University hang them on one common, very large wall before \ngoing to bed. Mages\' hats come only in two shapes: a <span class=\"textit\">wide</span> one \nand a <span class=\"textit\">narrow</span> one. </p>\n<p>\nThe mages go to sleep one after another (it is easily assured \nas due to a tight budget, they have only one bathroom and one towel). \nBefore going to bed, the <span class=\"MATH\"><em>i</em></span>-th mage takes its hat and chooses an \narbitrary position \n<span class=\"MATH\">(<em>x</em><sub>i</sub>, <em>y</em><sub>i</sub>)</span> on the wall, where <span class=\"MATH\"><em>y</em><sub>i</sub></span> is the \n(positive) distance from the ground. Then he hammers a nail at \nposition \n<span class=\"MATH\">(<em>x</em><sub>i</sub>, <em>y</em><sub>i</sub>)</span> and hangs his hat on this nail. </p>\n<p>\nNot surprisingly, the hats are magical, which means that they magically \nunfold to a given height. Hence, when hung, a hat looks exactly like a \nisosceles triangle of height <span class=\"MATH\"><em>y</em><sub>i</sub></span>, i.e., its left and right \nedges are of equal length. Its top vertex is exactly at the nail and its \nbottom edge touches the ﬂoor. If the hat is narrow, then the length \nof its bottom edge is <span class=\"MATH\"><em>y</em><sub>i</sub></span>; if it is wide, it is equal to <span class=\"MATH\">2<em>y</em><sub>i</sub></span>. </p>\n<p>\nAll nails are provided by the university and they have nice heads which \nglow in the dark. If a nail becomes covered by a hat hung later (even \nby its boundary), its glow is no longer visible. Moreover, if a mage tries \nto hammer a nail at an already hanging hat (also even at its boundary), \nthis nail and his hat are thrown away, and he himself becomes expelled \nfrom the university. The Chancellor of the University (apparently not \nhaving more important things to worry about) wants to know how the number \nof visible glowing nail heads changes in time. </p>\n<p>\nAn example consisting of 7 hats is presented below. Dots correspond to \nglowing nail heads; numbers represent the order in which they are hung. \nHats 2 and 6 are narrow, the remaining ones are wide. Mages 3 and 4 were \nexpelled while trying to hang their hats (their hats were not hung). \nAfter mage 7 hung his hat, hats of mages 1, 2 and 7 were visible.</p>\n<p> </p>\n<div align=\"CENTER\">\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/p4980.png\" alt=\"\\epsfbox{p4980.eps}\" align=\"BOTTOM\" border=\"0\" height=\"246\" width=\"535\" />\n</div>','<p>The input contains several test cases. The first line of the input \ncontains a positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4980img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />30</span>, denoting the number of test \ncases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format \ndescribed below.</p>\n<p>\nThe first line of the input instance contains \n<span class=\"MATH\"><em>n</em> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4980img3.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [1, 10<sup>5</sup>]</span>, the \nnumber of mages. The <span class=\"MATH\"><em>i</em></span>-th of the following <span class=\"MATH\"><em>n</em></span> lines contains two \nspace-separated integers \n<span class=\"MATH\"><em>x</em><sub>i</sub> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4980img3.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [- 10<sup>9</sup>, 10<sup>9</sup>]</span> and <span class=\"MATH\"><em>y</em><sub>i</sub> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4980img3.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [1, 10<sup>9</sup>]</span>, followed by a letter <tt>W</tt> or <tt>N</tt>. These numbers \nare the coordinates where the <span class=\"MATH\"><em>i</em></span>-th mage tries to hammer a nail; the \nletter denotes whether his hat is wide or narrow.</p>','<p>For each test case, your program has to write an output conforming to the format \ndescribed below.</p>\n<p>\nFor each input instance you should output <span class=\"MATH\"><em>n</em></span> lines. The <span class=\"MATH\"><em>i</em></span>-th line \nshould contain the word `<tt>FAIL</tt>\' if by hammering the nail the \n<span class=\"MATH\"><em>i</em></span>-th mage got himself expelled from the university. Otherwise, it \nshould contain a positive integer, the number of nail heads visible \nafter the <span class=\"MATH\"><em>i</em></span>-th mage hangs his hat.</p>','2 \n3 \n0 1 W \n0 2 N \n0 1 W \n7 \n4 3 W \n8 8 N \n3 2 W \n9 5 W \n12 1 W \n14 2 N \n13 4 W','1 \n1 \nFAIL \n1 \n2 \nFAIL \nFAIL \n3 \n4 \n3','',64,0,1,128,10,0,0,10),(1393,'Insults','<p>\nInsulting your friends and neighbors is the Ardenia national sport. \nHowever, as every sport, it has a certain set of rules which are quite \nhard to learn even by natives, not to mention the tourists. First of \nall, the insults are single words consisting entirely of four vowels: \n<tt>a</tt>, <tt>e</tt>, <tt>i</tt>, and <tt>o</tt>. But not all words \nthat consist of these letters are insults. The only two letter insults \nare <tt>ae</tt> and <tt>io</tt>. If words <span class=\"MATH\"><em>w</em><sub>1</sub></span> and <span class=\"MATH\"><em>w</em><sub>2</sub></span> are insults, \nthen words \n<span class=\"MATH\"><em>w</em><sub>1</sub><em>w</em><sub>2</sub></span> and <tt>a</tt><span class=\"MATH\"><em>w</em><sub>1</sub></span><tt>e</tt> and <tt>i</tt>\n<span class=\"MATH\"><em>w</em><sub>1</sub></span><tt>o</tt> are insults as well. Insults are created only in \nsuch way. </p>\n<p>\nUsually, if somebody is insulting you, then you better have a sharp \nresponse insult prepared. Obviously, most of the answers are \ninappropriate. For example if you hear <tt>aaeeio</tt> (meaning <span class=\"textit\">you \nfight like a dairy farmer</span>) you should not reply with <tt>aeio</tt> \n(<span class=\"textit\">you are stupid</span>). To everybody\'s surprise, the linguists have \nfound out that in all the cases the most appropriate reply is the insult \nof the same length and alphabetically next. Thus, for the insult above, \nthe best reply would be <tt>aaeioe</tt> (<span class=\"textit\">how appropriate; you fight like \na cow</span>). This rule implies also the existence of so called ultimate \ninsults, i.e., the ones for which there is no good reply. The eight \nletter ultimate insult is <tt>ioioioio</tt> (<span class=\"textit\">your mother was a \nhamster and your father smelt of elderberries</span>).</p>','<p>The input contains several test cases. The first line of the input \ncontains a positive integer \n<span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4981img1.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />2000</span>, denoting the number of test \ncases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format \ndescribed below.  </p>\n<p>\nThe input instance is one line containing a string of length at most \n<span class=\"MATH\">10<sup>6</sup></span>. The only letters occurring in the string will be <tt>a</tt>, \n<tt>e</tt>, <tt>i</tt> and <tt>o</tt>.</p>','<p>For each test case, your program \nhas to write an output conforming to the format described below.</p>\n<p>\nYou should output a single line containing the word `<tt>INVALID</tt>\' if \nthe string is not an insult. Otherwise, you should output the best reply \nto the insult read or word `<tt>ULTIMATE</tt>\' if no such reply exists.</p>','3 \neaeeio \naaeeio \nioioioioio','INVALID \naaeioe \nULTIMATE','',64,0,1,128,3,1,1,10),(1394,'Justice for All','<p>\nArdenia is going to war! The famous and prestigious Ardenia\'s military \nunit consisting of 200 knights and 200 horses started to prepare for \nbattles. During the preparation, <span class=\"MATH\"><em>k</em></span> knights and <span class=\"MATH\"><em>k</em></span> horses are chosen \n(the remaining ones simply stay at their barracks) and a special kind of \nmutual <span class=\"textit\">trust</span> relation is established between certain knights and certain \nhorses. In such case, we simply say that knight <span class=\"MATH\"><em>A</em></span> <span class=\"textit\">trusts</span> horse <span class=\"MATH\"><em>B</em></span> (and \nvice versa). One horse can trust arbitrarily many knights and one knight \ncan trust arbitrarily many horses. </p>\n<p>\nFor a given team of <span class=\"MATH\"><em>k</em></span> knights and <span class=\"MATH\"><em>k</em></span> horses, the trust relations \nbetween them determines the number of battles they are willing to fight. \nFor each battle, each knight chooses a single horse he or she trusts: \nthis creates an <span class=\"textit\">assignment</span>. An example of 4 knights (<span class=\"MATH\"><em>K</em><sub>1</sub></span>, <span class=\"MATH\"><em>K</em><sub>2</sub></span>, \n<span class=\"MATH\"><em>K</em><sub>3</sub></span> and <span class=\"MATH\"><em>K</em><sub>4</sub></span>) and 4 horses (<span class=\"MATH\"><em>H</em><sub>1</sub></span>, <span class=\"MATH\"><em>H</em><sub>2</sub></span>, <span class=\"MATH\"><em>H</em><sub>3</sub></span> and <span class=\"MATH\"><em>H</em><sub>4</sub></span>) \nwith trust relations is depicted below. There are 3 possible different \nassignments.</p>\n<p> </p>\n<div align=\"CENTER\">\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/p4982.png\" alt=\"\\epsfbox{p4982.eps}\" align=\"BOTTOM\" border=\"0\" height=\"212\" width=\"874\" />\n</div><p>\nThe assignments for two different battles have to be different (the \nknights would get bored otherwise) and all possible assignments have to \nbe tried out (the knights are curious enough to test them all). They are \npretty good at their fighting skills, which means that no knight or \nhorse will be harmed during the making of the war. </p>\n<p>\nYour mages predicted that the war would consist of <span class=\"MATH\"><em>n</em></span> battles. Your task \nis to choose <span class=\"MATH\"><em>k</em></span> knights and <span class=\"MATH\"><em>k</em></span> horses and establish trust relations \nbetween them, so that they are prepared for exactly <span class=\"MATH\"><em>n</em></span> battles.</p>','<p>The input contains several test cases. The first line of the input \ncontains a positive integer <span class=\"MATH\"><em>Z</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4982img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />100</span>, denoting the number of test \ncases. Then <span class=\"MATH\"><em>Z</em></span> test cases follow, each conforming to the format \ndescribed below. </p>\n<p>\nThe input instance is one line containing the number of battles, <span class=\"MATH\"><em>n</em> \n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4982img3.png\" alt=\"$ \\in$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"16\" /> [1, 10<sup>6</sup>]</span>.</p>','<p>For each test case, your program \nhas to write an output conforming to the format described below.</p>\n<p>\nThe first line of the output should contain a single positive integer \n<span class=\"MATH\"><em>k</em>\n<img src=\"https://icpcarchive.ecs.baylor.edu/external/49/4982img2.png\" alt=\"$ \\le$\" align=\"MIDDLE\" border=\"0\" height=\"31\" width=\"18\" />200</span>. Each of the next <span class=\"MATH\"><em>k</em></span> lines should consist of <span class=\"MATH\"><em>k</em></span> binary \ndigits (<tt>0</tt> or <tt>1</tt>, without spaces between them), where \n<tt>1</tt> in the <span class=\"MATH\"><em>j</em></span>-th column of the <span class=\"MATH\"><em>i</em></span>-th line means that knight \n<span class=\"MATH\"><em>i</em></span> trusts horse <span class=\"MATH\"><em>j</em></span> (and vice versa). The number of possible battles \nthese knights and horses are prepared for should be exactly <span class=\"MATH\"><em>n</em></span>.</p>','3 \n1 \n3 \n4','1 \n1 \n4 \n1000 \n0110 \n0101 \n0111 \n4 \n1100 \n1100 \n0011 \n0011','',-1,1,1,128,3,0,0,10),(1399,'Old School Days','','','','','','',-1,0,1,128,10,0,0,10),(1400,'Sentry Robots','','','','','','',-1,0,1,128,10,2,4,10),(1401,'How do spiders walk on water?','','','','','','',-1,0,1,128,10,0,22,10),(1402,'Shares','','','','','','',-1,0,1,128,10,1,1,10),(1403,'The Moon of Valencia','','','','','','',-1,1,1,128,10,0,0,10),(1404,'Countdown','','','','','','',-1,1,1,128,30,1,2,10),(5000,'test','','','','','','',-1,1,0,128,10,0,0,10),(1405,'Admiral','<p> </p>','','','','','',-1,0,0,128,10,4,12,10),(1406,'Beer Pressure','','','','','','',-1,0,0,128,10,1,5,10),(1407,'Cycling','','','','','','',-1,0,0,128,10,1,2,10),(1408,'Digital Clock','','','','','','',-1,0,0,128,10,5,12,10),(1409,'Edge Case','','','','','','',-1,0,0,128,10,6,7,10),(1410,'Foul Play','','','','','','',-1,1,0,128,10,1,1,10),(1411,'Guards','','','','','','',-1,0,0,128,10,0,4,10),(1412,'Hip To Be Square','','','','','','',-1,0,0,128,10,0,2,10),(1413,'Idol','','','','','','',-1,0,0,128,10,4,17,10),(1414,'Joint Venture','','','','','','',-1,0,0,128,10,7,33,10),(1415,'Key Insight','','','','','','',-1,0,0,128,10,6,12,10),(1416,'AAA','','','','','','',-1,0,0,128,20,2,2,10),(1417,'BBB','','','','','','',-1,0,0,128,10,1,1,10),(1418,'CCC','<p> </p>','','','','','',-1,0,0,128,10,2,4,10),(1419,'DDD','','','','','','',-1,0,0,128,10,0,0,10),(1420,'EEE','','','','','','',-1,0,0,128,10,1,1,10),(1421,'FFF','','','','','','',-1,0,0,128,10,0,0,10),(1422,'GGG','','','','','','',-1,0,0,128,10,1,2,10),(1423,'HHH','','','','','','',-1,0,0,128,10,0,0,10),(1424,'III','','','','','','',-1,0,0,128,10,0,0,10),(1425,'JJJ','','','','','','',-1,0,0,128,10,0,0,10),(2020,'Setting up a Football Team','<p>Sharif is to put together a football team from the students who have \nvolunteered to play in the team. A group of ex-players have set up some \nphysical criteria for each position which are Maximum Age, Minimum \nWeight, and Minimum Strength. The criteria for each position in the team\n are as follows:</p>\n<table border=\"0\" height=\"65\" width=\"629\"><tbody><tr><td>Position</td><td>Max. age</td><td>Min. Weight</td><td>Min. Strength</td></tr><tr><td>Mid-field</td><td>30</td><td>&nbsp;70</td><td>&nbsp;500</td></tr><tr><td>Forward</td><td>&nbsp;26</td><td>&nbsp;60</td><td>&nbsp;200</td></tr><tr><td>&nbsp;Defense</td><td>&nbsp;36</td><td>&nbsp;80</td><td>&nbsp;300</td></tr></tbody></table>\n<p>Using this information, you need to develop a program that reads in the physical attributes of several students and outputs what position(s) they are able to play.</p>','<p>In each line of the input, the age, weight and strength of a student are given as integer numbers&nbsp;(less than 1000);all separated with spaces. The input terminates with “0 0 0”.</p>','<p>For each student, you must print one line listing the positions that student can play. A student can play a position if his weight and strength are not less than those specified in the above table and his age is not greater than that specified in the above table. If a student can play multiple positions, output them in the order listed above, separated by a space. If a student cannot play any position, print “No positions” on the line.</p>','27 85 350\n24 65 630\n23 75 550\n37 210 500\n0 0 0\n','Defense\nForward\nMid-field Forward\nNo positions\n','',65,0,1,64,2,213,1046,12),(8021,'Fractals','<p>Fractals are self-similar patterns. One simple example is to perform the following step on a string of dashes with length 3<sup>k</sup> to produce similar patterns. </p>\n<center><p><em> Replace the middle third of each piece of dashes with spaces. Repeat until each piece consists of a single dash.</em></p>\n</center>\n<p>For instance, if k&nbsp;is&nbsp;3,&nbsp;we&nbsp;start&nbsp;with&nbsp;a&nbsp;string&nbsp;of&nbsp;27&nbsp;dashes:</p>\n<p>---------------------------</p>\n<p>Remove&nbsp;the&nbsp;middle&nbsp;third&nbsp;of&nbsp;the&nbsp;string:</p>\n<p>---------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------</p>\n<p>and&nbsp;remove&nbsp;the&nbsp;middle&nbsp;third&nbsp;of&nbsp;each&nbsp;piece:</p>\n<p>---&nbsp;&nbsp;&nbsp;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---&nbsp;&nbsp;&nbsp;---</p>\n<p>and&nbsp;again:</p>\n<p>-&nbsp;-&nbsp;&nbsp;&nbsp;-&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;-&nbsp;&nbsp;&nbsp;-&nbsp;-</p>\n<p>The process stops when each group of dashes has length 1. You must write a program to specify whether i<sup>th</sup> character in the output of the last step is \"-\" or  not. </p>','<p>There are multiple test cases in the input. Each test case is given in a line containing two numbers <em>k</em> (less than 30) and <em>i</em> (at most 3<sup>k</sup>). The goal is to find whether i<sup>th</sup> character in the output of the last step of the above process working on a initial string of length 3<sup>k</sup> is','<p>For each test case if the i<sup>th</sup> character in the last output is \"-\" you must print \"Yes\"; otherwise print “No”.</p>','3 6\r\n3 7\r\n0 0\r\n','No\r\nYes\r\n','',0,0,0,64,2,0,0,10),(2022,'Cutting a Cake','<p>We have a large cake of size 100 × 100 × 1 cm. The surface of the cake can be viewed as a 100 × 100 grid, with each grid box being 1 × 1 cm. We want to cut the cake into pieces using a knife, initially located at a vertex of the grid. We are restricted to move the knife only along the edges of the grid, without lifting up the knife at any step. After finishing the cut, we can pick only those pieces of the cake which are cut completely from all sides. In other words, if the trajectory of the knife is given as a rectilinear curve along the grid edges, we can pick only those pieces which are enclosed by the trajectory curve. Note that if a piece has a side on the grid boundary, the piece can picked provided that all its sides even its side on the grid boundary are cut by the knife. We want to compute the amount of cake we can pick if the trajectory of the knife on the cake is given.</p>','<p>There are multiple test cases in the input. The first line of each test case contains three integers<em> x, y</em> and&nbsp; <em>n</em> , where (<em>x,&nbsp; y</em>) denotes the starting point of the knife on the grid, and n is the number of knife moves. (<em>x,&nbsp; y</em>, and <em>n</em> are all non-negative integers,&nbsp; <em>x</em> is the distance in centimeters from the left edge of the cake, <em>y</em> is the distance in centimeters from the bottom edge of the cake.&nbsp; <em>x, y</em> and <em>n</em> range from 0 to 100, inclusive.)<br />The next <em>n</em> lines will contain a character <em>d</em> and an integer <em>i</em> , separated by a space. The character <em>d</em> is from the set {‘L’, ‘R’, ‘U’, ‘D’}, indicating the left, right, up, and down directions, respectively, and the integer <em>i</em> indicates how far in that direction the knife is moved.<br />You can assume that the knife trajectory will never leave the 100 × 100-surface of the cake. The trajectory may or may not be closed. It may cross itself, or may trace an edge several times even boundary edges. The input terminates with a line containing 0 0 0.</p>','<p>For each data set, output a single line containing the volume of cake in cubic centimeters that can be picked after the cut (i.e., enclosed by the knife trajectory).</p>','10 10 8\nU 20\nR 50\nU 20\nL 30\nD 40\nR 20\nU 30\nR 20\n0 0 8\nU 25\nR 25\nU 25\nR 25\nD 25\nL 25\nD 25\nL 25\n0 0 0\n','1000\n1250\n','',65,0,1,64,2,25,43,12),(2023,'Placing a disk inside a polygon','<p>A simple polygon is defined as a flat shape consisting of straight, non-intersecting line segments that are joined pair-wise to form a closed path. A simple polygon is called convex if for every pair of points within the polygon, every point on the straight line segment that joins them is also within the polygon. A disk can be placed inside a simple polygon if its center can be placed inside the simple polygon in such a way that the whole disk lies inside the polygon. You are responsible to compute the largest disk can be placed inside a convex polygon. </p>','<p>There are multiple test cases.&nbsp; The first line of each test case contains a single number<em> n</em> (at most 100) which is the number of vertices. Then <em>n</em> lines coming: the <em>i</em><sup>th</sup> line contains the <em>x</em> and <em>y</em> coordinates of vertex <em>v</em><sub>i</sub>&nbsp; respectively separated with spaces. Both coordinates are real numbers with absolute value at most 10,000. The polygon is obtained by joining <em>v</em><sub>i</sub> to <em>v</em><sub>i+1</sub> for all <em>i</em> from 1 to <em>n</em> (<em>v</em><sub>n+1</sub> = <em>v</em><sub>1</sub>).The input terminates with a line containing 0.</p>','<p>For each test case, the output is just a line as described next. If the polygon is not convex, output “Non convex polygon”. Otherwise, output the radius of the maximum disk can be placed inside the polygon with exactly two digits after the decimal point.</p>','5\n1.0 1.0\n2.0 2.0\n1.75 2.0\n1.0 3.0\n0.0 2.0\n5\n1.0 1.0\n2.0 2.0\n1.75 2.5\n1.0 3.0\n0.0 2.0\n0\n','Non convex polygon\n0.71\n','',65,0,1,64,5,6,40,12),(1426,'Kingdoms','<p> </p>','','','','','',66,0,1,128,9,10,98,10),(1427,'Who wants to live forever?','','','','','','',66,0,1,128,5,3,54,10),(1428,'Chemist’s vows','','','','','','',66,0,1,128,7,14,74,10),(1429,'Non-boring sequences','<p> </p>','','','','','',66,0,1,128,10,6,53,10),(1430,'Word equations','','','','','','',66,0,1,128,7,6,55,10),(2024,'Hubs','<p>As Bob is forgetful, he has a strange plan of driving around the city which reduces the number of routes he must memorize. He selects two distinct locations as hubs (H<sub>1</sub> and H<sub>2</sub>) and partitions other locations into two groups. One group is assigned to H<sub>1</sub> while the other is assigned to H<sub>2</sub>. He then memorizes the shortest route from each location to the hub associated with. If he wants to drive from A to B, he first drives from A to the hub associated with A, then to the other hub (if A and B are not in the same group), and then to B along the shortest route. Note that Bob always drives to hubs even if he visits the destination several times on the path.  You should help Bob to find the best two hubs and the best partitioning which minimize the average distance of the trips between any two locations. </p>','<p>The input contains several test cases. The input of each test case is a weighted undirected graph which models the city map. The first line contains two numbers 2 ≤ n ≤ 100, 1 ≤ m ≤ 1000 which are the number of vertices (locations) and the number of edges (streets), respectively.&nbsp; Each of the next m line describe one edge of the graph with three numbers a, b and d where&nbsp; 1 ≤ a ≤ n, 1 ≤ b ≤ n are location ids and 1 ≤ d ≤ 1000 is the length of the street connecting&nbsp; a to b (all streets are bidirectional). There may be more than one street between a pair of locations, and a street may start and end at the same location. You may assume there exists a path between any two locations. The input terminates with 0 0.</p>','<p>For each test case, output the minimum average distance of the trips between any two distinct locations with exactly two digits after the decimal point.</p>','3 2\n1 2 40\n2 3 20\n5 5\n1 2 2\n2 3 3\n2 4 3\n3 4 5\n3 5 1\n0 0\n','40.00\n4.20','',65,0,1,64,3,9,64,10),(2025,'Auctions','<p>An auction is a process of buying and selling goods or services by offering them up for bid, taking bids, and then selling the good to the highest bidder. Precisely, first a minimum price is set for an item, then bidders propose their bids. At the auction end time of the item, it is sold to the bidder who proposed the maximum bid. You are to write a program that tracks auctions for several items and output the results.</p>','<p>Input consists of three sections namely items, bidders and bids coming respectively in the input.</p>\n<p><strong>Item section:</strong> The first line of the item section contains a single number k &lt; 100 denoting the number of items. Each next k lines contain item id, its minimum price and its auction end time. Item id is a non-negative integer number, and minimum price is a non-negative real number,&nbsp; and auction end time is in the&nbsp; 24-hour format of XX:YY:ZZ where XX is in hours from 00 to 23, YY is in minutes from 00 to 59, and ZZ is in seconds from 00 to 59. Note a bid for an item is acceptable if it is proposed not later than the auction end time of the item and the proposed price is not less than the minimum price of the item.</p>\n<p><strong>Bidder section:</strong> This section starts with a line containing a single number m &lt; 100 which is the number of bidders. Each next m lines contains bidder id and its balance account separated by spaces. Bidder id is a non-negative integer number, and balance account is a non-negative real number. Note that a bidder can propose a price larger than its account balance but at the auction end time this bid is considered as an invalid bid and is not taken into account. At the auction end time of an item, the account balance of the winner is deducted by her/his bid amount for that item.</p>\n<p><strong>Bid section</strong>: This section also starts with a line containing a single number n &lt; 100, the number of bids. Each next n lines contains item id, bidder id, bid amount and bid time all separated with spaces. This means given bidder proposes the given bid amount at the given bid time for the given item.&nbsp; Their formats are as described above. Recall that a bidder can buy a item (win the auction for the item) if he propose a bid not later than the auction end time of the item and his bid amount is not less than the minimum price of the item and moreover his bid is highest among all valid bids for the item. Note that at the auction end time of the item, the winner is specified and the account-balance of the winner is updated. <br />You are guaranteed that no two items have the same auction end time and no two bids have the same bid time and bid amount. Note that bidder ids and item ids are unique but a bidder id can be equal to an item id and you may assume all ids in the input are valid.</p>','<p>Output one line for each item being auctioned, in order of their auction end time, printing \"Item  &lt;item  id&gt;  Bidder &lt;bidder  id&gt;  Price  &lt;winning bid amount&gt;\". Note there should be a space between any two words in the output. If there is not a winning bid for an item, print \"Item &lt;item id&gt; is not sold\".  Price in the output must be printed with exactly 2 digits after the decimal point.</p>','2\n1 10.00 04:27:31\n5 31.00 19:25:44\n2\n13 41.33\n95 77.77\n3\n1 13 60.00 02:26:32\n5 13 41.21 04:45:21\n5 95 51.00 08:43:25\n','Item 1 is not sold\nItem 5 Bidder 95 Price 51.00\n','',65,0,1,64,2,27,107,12),(2026,'Electing SSC Chair','<p>Student Scientific Committee (SSC) has several members. In their first meeting, the SSC Chair is elected by the following rule. Every member votes and gives an ordered list of other members (including him/herself) who are candidate to be SSC chair. An election subcommittee (ES) will announce the winner (if there exists any) following this procedure which may be repeated in several rounds.<br />In the first round, ES will consider only the first choices in each member’s vote list. If a candidate gets more than half of the votes, he/she wins the election. Otherwise, the candidate with the lowest vote counts (or candidates, in the case of a tie for fewest votes) is eliminated from all vote lists and the procedure is repeated. This is continued until a winner is found, or ES realizes there is no winner. Note in each round empty vote lists are non-viable and if a candidate is the first choice in more than half of viable vote list, the candidate is winner. </p>','<p>There are&nbsp; multiple test cases in the input.&nbsp; For each test case, first the number of candidates and the number of voter (all SSC members) are given respectively in one line separated with spaces (both values are at most 1000).&nbsp; Next vote lists are coming; a line for the vote list of each member. For each vote list, the names of the candidates are listed in the order of preference. A candidate may not appear in a voted list. A candidate name is an alphanumeric (case-sensitive) string with no space in middle. No candidate is repeated on a single vote. The input terminate with “0 0”.</p>','<p>For each test case, output a single line containing the name of the winner as it is in the input. If no one wins, print “There is no winner”.</p>','3 8\nSaeed Ali\nSaeed Ali\nSaeed Ali\nMohammad Ali\nMohammad Ali\nMohammad Ali\nAli Saeed\nAli Saeed\n2 2\nAli Reza\nReza Ali\n0 0\n','Saeed\nThere is no winner\n','',65,0,1,64,3,37,225,12),(2027,'Mastermind','<p>Mastermind is a code-breaking game for two players. One player is the code-maker, the other one is the code-breaker. The code-maker secretly chooses a code: an array of N integers <em>C<sub>1</sub>,C<sub>2</sub> ,..., C<sub>n</sub></em>, each with a value in the range [1, <em>k</em>]&nbsp; (Some numbers of [1, <em>k</em>] may not appear in the code, and some may appear more than once). N and k are set at the beginning of the game. The code-breaker tries to find the code through a number of guesses. Each guess itself is also similar to the code; an array of N integers <em>g<sub>1</sub>,g<sub>2</sub> ,..., g<sub>n</sub></em>in the range[1, <em>k</em>] . After each guess, the code-maker provides the code-breaker with a hint showing the extent to which the guess matched the code. The hint consists of two numbers: the black points, and the <em>white points</em>. The black points is the number of correctly guessed slots, i.e. the number of indices <em>i</em> (1 ≤ <em>i</em> ≤ N) such that <em>g<sub>i</sub> = C<sub>i</sub></em>. The white points shows the number of correctly guessed integers which appear in the code but not at the place they were in the guessed array. Each integer slot of the code (<em>C<sub>u</sub></em>) must be considered at most once during the calculation of the two hint points together, with a higher priority for the black points. For example if the code is “12234” and the guess is “22542”, then the black and white points will be 1 and 2 respectively.</p>\n<p>You have just joined a friend of yours while she was playing Mastermind as the code-breaker. After a number of guesses and receiving the hints, she is asking if you could help her find all the possible solutions according to the current state of the game. You must write a program to find any possible code which is consistent with all the guesses and their respective hints. </p>','<p>There are multiple test cases in the input.  Each test case starts with a line containing three integers, N, k, and G - the number of guesses made up-to-now (1≤N≤20, 1≤k≤9, 0≤G≤100, and k<sup>N</sup>≤10<sup>5</sup>). Then, G lines follow, showing the guesses and their respective hints. Each line starts with a string of N digits (in the range [1, <em>k</em>]) as the guess, followed by two space-separated integers as the black points and the white points for that guess. The input terminates with a line of the form “0 0 0” which should not be processed as a test case.</p>','<p>For each test case, write all the possible solutions of the game in the lexicographic order. Each solution must be printed as a string of N digits (in the range [1, <em>k</em>]) in a single line. On the last line of output for each test case, write the total number of possible solutions in the format \"Total: X\".</p>\n<p> </p>','4 4 1\n1234 2 2\n4 4 2\n1234 2 2\n4321 2 2\n3 2 1\n111 2 0\n3 3 1\n111 2 1\n0 0 0\n','1243\n1324\n1432\n2134\n3214\n4231\nTotal: 6\n1324\n4231\nTotal: 2\n112\n121\n211\nTotal: 3\nTotal: 0\n','',65,0,1,64,2,30,86,12),(2021,'Fractals','<p>Fractals are self-similar patterns. One simple example is to perform the following step on a string of dashes with length 3<sup>k</sup> to produce similar patterns.&nbsp; </p>\n<p align=\"center\"><em>&nbsp;Replace the middle third of each piece of dashes with spaces. Repeat until each piece consists of a single dash.</em></p>\n<p>For instance, if k is 3, we start with a string of 27 dashes:<br />---------------------------<br />Remove the middle third of the string:<br />---------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ---------<br />and remove the middle third of each piece:<br />---&nbsp;&nbsp; ---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ---&nbsp;&nbsp; ---<br />and again:<br />- -&nbsp;&nbsp; - -&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - -&nbsp;&nbsp; - -<br />The process stops when each group of dashes has length 1. You must write a program to specify whether ith character in the output of the last step is “-“ or&nbsp; not. </p>','<p>There are multiple test cases in the input. Each test case is given in a line containing two numbers k (less than 30) and i (at most&nbsp; 3<sup>k</sup>). The goal is to find whether i<sup>th</sup> character in the output of the last step of the above process working on a initial string of length&nbsp; 3<sup>k</sup> is “-“ or not. The input terminates with a line containing 0 0.</p>','<p>For each test case if the i<sup>th</sup> character in the last output is “-“ you must print “Yes”; otherwise print “No”.</p>','3 6\n3 7\n0 0\n','No\nYes\n','',65,0,1,64,2,108,514,12),(1431,'Farm and factory','','','','','','',66,1,1,128,10,2,5,10),(1432,'Jewel heist','','','','','','',66,0,1,128,15,1,2,10),(1433,'Darts','','','','','','',66,0,1,128,3,35,205,10),(1434,'The Dragon and the knights','','','','','','',66,0,1,128,5,1,6,10),(1435,'Conservation','','','','','','',66,0,1,128,13,3,9,10),(1436,'Graphic Madness','','','','','','',66,1,1,128,3,1,3,10),(1437,'AAA','<p> </p>','','','','','',-1,0,0,128,10,3,7,10),(1438,'BBB','','','','','','',-1,0,0,128,10,3,4,10),(1439,'CCC','','','','','','',-1,0,0,128,60,0,0,10),(1440,'DDD','','','','','','',-1,0,0,128,10,0,0,10),(1441,'EEE','','','','','','',-1,0,0,128,60,1,1,10),(1442,'FFF','','','','','','',-1,0,0,128,60,0,0,10),(1443,'GGG','','','','','','',-1,0,0,128,10,1,6,10),(1444,'HHH','','','','','','',-1,0,0,128,10,1,5,10),(1445,'III','','','','','','',-1,0,0,128,10,0,0,10),(1446,'JJJ','','','','','','',-1,0,0,128,10,1,5,10),(1447,'KKK','','','','','','',-1,0,0,128,10,0,0,10),(1448,'LLL','','','','','','',-1,0,0,128,10,3,4,10),(1449,'AAA nw2008','','','','','','',-1,0,0,128,10,0,0,10),(1450,'BBB','','','','','','',-1,0,0,128,10,0,3,10),(1451,'CCC','','','','','','',-1,0,0,128,10,0,0,10),(1452,'DDD','','','','','','',-1,0,0,128,10,0,1,10),(1453,'EEE','','','','','','',-1,0,0,128,10,0,0,10),(1454,'FFF','','','','','','',-1,0,0,128,10,0,0,10),(1455,'HHH','<p> </p>','','','','','',-1,0,0,128,10,2,3,10),(1456,'III','','','','','','',-1,0,0,128,10,2,3,10),(1457,'JJJ','','','','','','',-1,0,0,128,10,1,1,10),(1458,'KKK','','','','','','',-1,0,0,128,10,0,0,10),(8011,'Budget','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">We are supposed to make a budget proposal for this multi-site competition. The budget proposal is a matrix where the rows represent different kinds of expenses and the columns represent different sites. We had a meeting about this, some time ago where we discussed the sums over different kinds of expenses and sums over different sites. There was also some talk about special constraints: someone mentioned that Computer Center would need at least 2000K Rials for food and someone from Sharif Authorities argued they wouldn\'t use more than 30000K Rials for T-shirts. Anyway, we are sure there was more; we will go and try to find some notes from that meeting.</span><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"><br style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">And, by the way, no one really reads budget proposals anyway, so we\'ll just have to make sure that it sums up properly and meets all constraints.</span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"><br /></span></p>','<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">The first line of the input contains an integer N, giving the number of test cases. The next line is empty, then, test cases follow: The first line of each test case contains two integers, m and n, giving the number of rows and columns (m &lt;= 200, n &lt;= 20). The second line contains m integers, giving the row sums of the matrix. The third line contains n integers, giving the column sums of the matrix. The fourth line contains an integer c giving the number of constraints. The next c lines contain the constraints. There is an empty line after each test case.<br /><br />Each constraint consists of two integers r and q, specifying some entry (or entries) in the matrix (the upper left corner is 1 1 and 0 is interpreted as \"ALL\", i.e. 4 0 means all entries on the fourth row and 0 0 means the entire matrix), one element from the set {&lt;, =, &gt;} and one integer v, with the obvious interpretation. For instance, the constraint 1 2 &gt; 5 means that the cell in the 1st row and 2nd column must have an entry strictly greater than 5, and the constraint 4 0 = 3 means that all elements in the fourth row should be equal to 3.</p>','<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">For each case output a matrix of non-negative integers meeting the above constraints or the string \"IMPOSSIBLE\" if no legal solution exists. Put one empty line between matrices.</p>\n<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"></p>','2\n\n2 3 \n8 10 \n5 6 7 \n4 \n0 2 > 2 \n2 1 = 3 \n2 3 > 2 \n2 3 < 5\n\n2 2 \n4 5 \n6 7 \n1 \n1 1 > 10','2 3 3 \n3 3 4\n\nIMPOSSIBLE','',-1,1,1,32,5,4,27,10),(8012,'Travelling Fee','<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">Samball is going to travel in the coming vacation. Now it\'s time to make a plan. After choosing the destination city, the next step is to determine the travel route. As this poor guy has just experienced a tragic lost of money, he really has limited amount of money to spend. He wants to find the most costless route. Samball has just learned that the travel company will carry out a discount strategy during the vacation: the most expensive flight connecting two cities along the route will be free. This is really a big news.</p>\n<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">Now given the source and destination cities, and the costs of all the flights, you are to calculate the minimum cost. It is assumed that the flights Samball selects will not have any cycles and the destination is reachable from the source.</p>','<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">The input contains several test cases, each begins with a line containing names of the source city and the destination city. The next line contains an integer m (&lt;=100), the number of flights, and then m lines follow, each contains names of the source city and the destination city of the flight and the corresponding cost. City names are composed of not more than 10 uppercase letters. Costs are integers between 0 to 10000 inclusively.</span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"><br /></span></p>\n<p><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">Process to the end of file.</span><span style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"><br /></span></p>','<p style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">For each test case, output the minimum cost in a single line.</p>\n<p> </p>','HANGZHOU BEIJING\n2\nHANGZHOU SHANGHAI 100\nSHANGHAI BEIJING 200','100','',-1,0,1,64,2,51,292,10),(8013,'DS ACM A','','','','','','',-1,0,0,64,2,21,56,12),(8014,'DS ACM B','','','','','','',-1,0,0,64,2,21,78,12),(8015,'DS ACM C','','','','','','',-1,0,0,64,2,0,0,12),(8016,'DS ACM D','','','','','','',-1,0,0,64,2,10,33,12),(8017,'DS ACM E','','','','','','',-1,0,0,64,2,3,21,12),(8018,'DS ACM F','','','','','','',-1,0,0,64,2,6,23,12),(8019,'DS ACM G','','','','','','',-1,0,0,64,2,1,5,12),(9100,'X-O Game','','','','','','',-1,0,0,64,30,3,32,23),(9101,'Havijestan Party','','','','','','',-1,0,0,64,30,0,6,23),(9102,'Balloons Problem','','','','','','',-1,0,0,64,30,0,0,23),(9103,'Alak-Dolak','','','','','','',-1,0,0,64,30,0,2,23),(9104,'A Hard Game to Believe','','','','','','',-1,0,0,64,30,2,2,23),(9105,'Big Squares','','','','','','',-1,0,0,64,30,0,2,23),(9106,'Dictionary of Havijestan','','','','','','',-1,0,0,64,30,9,11,23),(9107,'Dangerous Recursive Functions','','','','','','',-1,0,0,64,30,1,7,23),(9108,'Large Palindroms','','','','','','',-1,0,0,64,30,4,10,23),(9109,'Big Prime Numbers','','','','','','',-1,0,0,64,30,5,6,23),(9110,'Sum of Digits','','','','','','',-1,0,0,64,30,1,1,23),(9111,'Gholam\'s Simple Game','','','','','','',-1,0,0,128,30,1,4,23),(9112,'Valid Login?','','','','','','',-1,0,0,64,30,0,0,23),(9113,'Simple GCD','','','','','','',-1,0,0,64,30,4,10,23),(9114,'I Need a Floating House','','','','','','',-1,0,0,64,30,1,1,23),(1459,'Lock','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Cambria;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">ما یک گاوصندوق در اختیار داریم. ولی متاسفانه\nرمز آن را فراموش کرده‌ایم.این گاوصندوق از طریق صفحه کلید رمز را دریافت می‌کند.می‌دانیم\nقفل ‌ گاوصندوق بدین صورت عمل می‌کند که در صورتی که رمز آن رشته‌ی </span><span dir=\"LTR\">w</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Cambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCambria;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nباشد به محض دریافت رشته به صورت کامل ، باز شده و در واقع منتظر دکمه‌ای برای\nتایید نمی‌ماند.اگر رمز دارای </span><span dir=\"LTR\">k </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:Cambria;\nmso-ascii-theme-font:minor-latin;mso-hansi-font-family:Cambria;mso-hansi-theme-font:\nminor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:minor-bidi;\nmso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;تا حرف باشد در هر بار وارد کردن حرف جدبد تنها </span><span dir=\"LTR\">k </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Cambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCambria;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;حرف آخر را در نظر گرفته می‌شود. خوشبختانه&nbsp; ما&nbsp; می‌دانیم\nکه رمز گاوصندوق دارای چنذ حرف است و هم‌چنین رشته‌ها فقط شامل عدد هستند.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Cambria;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">یک&nbsp; راه\nبدیهی برای باز کردن گاوصندوق ایجاد تمام رشته های ممکن است.اما تولید کردن تمام\nرشته‌ها توسط انسان کاری پرهزینه خواهد بود.پس شما تصمیم گرفته‌اید تا برنامه‌ای\nبنویسید که همه‌ی رشته‌ها را به دنبال هم تولید کنذد.<o:p></o:p></span></p>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Cambria;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">در این سوال بیش از یک تست به شما داده می‌شود.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Cambria;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">هر خط&nbsp;\nنشان‌دهنده‌ی یک تست است.در هر خط یک عدد می‌آید که برابر طول رمز است. هم‌</span><span lang=\"FA\" style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Cambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCambria;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">چنین عدد 0 نشان‌دهنده‌ی پایان است.<o:p></o:p></span></p>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Cambria;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCambria;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">به ازای هر تست باید یک خط چاپ شود که حاوی تمام\nرمر های ممکن باشد<o:p></o:p></span></p>','1\n2\n0\n','0123456789\n00102030405060708091121314151617181922324252627282933435363738394454647484955657585966768697787988990 \n','',-1,1,0,64,10,28,229,12),(1460,'Inequalities','<p>در این مساله می خواهیم بدانیم با داشتن تعدادی نا مساوی، چه نا مساوی های دیگری را می توانیم بدست آوریم</p>\n<p> </p>\n<p> </p>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">خط اول ورودی شامل یک عدد </span><span dir=\"LTR\">N</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:Calibri;\nmso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:\nminor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:minor-bidi;\nmso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span> است که </span><span dir=\"LTR\">N</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nهمان تعداد تست‌ها را نشان می‌دهد.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">برای هر تست:<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">اولین خط هر تست شامل بک عدد مانند </span><span dir=\"LTR\">M</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span> است\nکه </span><span dir=\"LTR\">M</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nتعداد روابط نامساوی را نشان می‌دهد.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span dir=\"LTR\">M</span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:Calibri;\nmso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:\nminor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:minor-bidi;\nmso-bidi-language:FA\">خط بعدی در هر تست یک نامساوی را نشان می‌دهد که هر نامساوی\nبه فرم زیر است:<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">متغیر دوم &gt; متغیر اول&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; یا:<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">متغیر دوم &lt; متغیر اول&nbsp;<br /></span><span style=\"font-family: Arial, sans-serif; font-size: 11pt; line-height: 115%;\">هر\nمتغیر نیز به صورت یک حرف بزرگ لاتین نمایش داده می‌شود</span></p>\n<div><span lang=\"FA\" dir=\"RTL\" style=\"font-size:11.0pt;line-height:115%;font-family:\n&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;\nmso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-theme-font:minor-bidi;\nmso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:FA\"><br /></span></div><div><span lang=\"FA\" dir=\"RTL\" style=\"font-size:11.0pt;line-height:115%;font-family:\n&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;\nmso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-theme-font:minor-bidi;\nmso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:FA\"><br /></span></div>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">به ازای هر تست ابتدا چاپ کنید:\"</span><span dir=\"LTR\">Case i</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\"</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span lang=\"FA\" dir=\"LTR\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span> </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;که در این‌جا </span><span dir=\"LTR\">i</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:Calibri;\nmso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:\nminor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:minor-bidi;\nmso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span> نشان دهنده‌ی </span><span dir=\"LTR\">i</span><span lang=\"FA\" style=\"font-family:\n&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;\nmso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:\nArial;mso-bidi-theme-font:minor-bidi;mso-bidi-language:FA\">امین تست است.شمارش\nرا هم از یک شروع کنید.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">سپس به ازای هر رابطه‌ی نامساوی استنتاج شده بک\nخط چاپ کنید که این رابطه در این خط قرار می‌گیرد.رابطه ها به ترتیب الفبایی باید\nچاپ شوند و می‌بایست در فرم زیر باشند:<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">متغیر دوم &gt; متغیر اول<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">توجه کنید که تنها رابطه‌هایی را چاپ کنید که در\nورودی نیامده‌اند.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;mso-ascii-font-family:\nCalibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:Calibri;\nmso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\">در صورتی که هیچ رابطه‌ای پیدا نشد باید چاپ\nکنید:\"</span><span dir=\"LTR\">NONE</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"FA\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;\nmso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-hansi-font-family:\nCalibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:\nminor-bidi;mso-bidi-language:FA\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\"</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>.<o:p></o:p></span></p>','2\n3\nA&lt;B\nC&gt;B\nC&lt;D\n2\nA&lt;B\nC&lt;D\n','Case 1:\nA&lt;C\nA&lt;D\nB&lt;D\nCase 2:\nNONE','',-1,0,0,64,10,37,104,12),(1461,'Heavy Stuff Transportation Company','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">شرکت </span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>“</span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:\nmajor-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;\nmso-bidi-language:PRS-AF\">کامیون­های جانسون بزرگ</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>”</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\n<span lang=\"PRS-AF\">تولید کننده­ی کامیون های بسیار بزرگ است.آخرین مدل تولیدی این\nشرکت که گودزیلا </span></span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">v12</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nنام دارد، به اندازه ای بزرگ است که مقدار کالایی که می خواهید با آن جابه جا کنید\nهیچ وقت به حجم خود کامیون محدود نمی شود اما با توجه به این که جاده ها مقدار\nمحدودی وزن را می توانند تحمل کنند، وزن کالاهای حمل شده توسط&nbsp; کامیون محدود می شود به مقدار وزنی که جاده های\nمسیری که در آن رانندگی خواهید کرد، تحمل می کنند.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">با داشتن شهر مبدا و مقصد،‌شما باید بیشترین\nمقدار بار گودزیلا </span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">v12</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nرا طوری تعیین کنید که مسیری بین شهر مبدا و مقصد وجود داشته باشد که بتواند آن\nمقدار بار را تحمل کند.<o:p></o:p></span></p>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\">نمونه ی ورودی شامل یک یا چند تست است. خط اول هر تست نمونه شامل دو عدد\nطبیعی می باشد: تعداد شهرها(</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>2&lt;=n&lt;=200</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>)\nو تعداد قسمت های جاده­ها(</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>1&lt;=r&lt;=19900</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>)\nکه شبکه ی مسیرها را می سازند.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\">در ادامه </span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">r </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;خط می آید</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span lang=\"PRS-AF\" dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>\n</span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">که هر خط خصوصیات یک جاده را بیان می کند\nشامل نام های دو شهری که این جاده آن ها را به هم متصل می کند و سپس محدودیت وزنی\nکه این جاده برای کامیون­ها دارد.نام شهرها بیشتر از ۳۰ کاراکتر نمی باشد و شامل\nفاصله هم نیستند. محدودیت های وزنی عدد حسابی در بازه ی ۰ تا ۱۰۰۰۰ می باشند. جاده\nها نیز دو طرفه می باشند.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\">آخرین خط ورودی شامل نام شهر مبدا و مقصدی ست که می خواهیم کالا را حمل و\nنقل کنیم.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">نمونه ی ورودی با دو عدد </span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>0</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nبه عنوان </span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">n </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;و </span><span dir=\"LTR\" style=\"font-family:\n&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;mso-hansi-theme-font:\nmajor-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:PRS-AF\">r </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;پایان می پذیرد.<o:p></o:p></span></p>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">برای هر تست نمونه، سه خط باید چاپ کنید<o:p></o:p></span></p>\n<p class=\"MsoListParagraphCxSpFirst\" dir=\"RTL\" style=\"margin-top:0in;margin-right:\n.5in;margin-bottom:10.0pt;margin-left:0in;mso-add-space:auto;text-align:right;\ntext-indent:-.25in;mso-list:l0 level1 lfo1;direction:rtl;unicode-bidi:embed\"><!--[if !supportLists]--><span style=\"font-family: Symbol;\">·<span style=\"font-size: 7pt; font-family: \'Times New Roman\';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span><!--[endif]--><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\">یک خط شامل </span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>\"Scenario\n#x\"</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"AR-SA\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span> که </span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">x </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;شماره­ی تست نمونه می\nباشد.<o:p></o:p></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" dir=\"RTL\" style=\"margin-top:0in;margin-right:\n.5in;margin-bottom:10.0pt;margin-left:0in;mso-add-space:auto;text-align:right;\ntext-indent:-.25in;mso-list:l0 level1 lfo1;direction:rtl;unicode-bidi:embed\"><!--[if !supportLists]--><span style=\"font-family: Symbol;\">·<span style=\"font-size: 7pt; font-family: \'Times New Roman\';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span><!--[endif]--><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">یک خط شامل </span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>\"y\ntons\"</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nکه </span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">y </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;بیشترین وزن ممکن بار می باشد.<o:p></o:p></span></p>\n<p class=\"MsoListParagraphCxSpLast\" dir=\"RTL\" style=\"margin-top:0in;margin-right:\n.5in;margin-bottom:10.0pt;margin-left:0in;mso-add-space:auto;text-align:right;\ntext-indent:-.25in;mso-list:l0 level1 lfo1;direction:rtl;unicode-bidi:embed\"><!--[if !supportLists]--><span style=\"font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:\nSymbol;mso-bidi-language:PRS-AF\">·<span style=\"font-size: 7pt; font-family: \'Times New Roman\';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</span></span><!--[endif]--><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">یک خط خالی</span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\"><o:p></o:p></span></p>','4 3\nKarlsruhe Stuttgart 100\nStuttgart Ulm 80\nUlm Muenchen 120\nKarlsruhe Muenchen\n5 5\nKarlsruhe Stuttgart 100\nStuttgart Ulm 80\nUlm Muenchen 120\nKarlsruhe Hamburg 220\nHamburg Muenchen 170\nMuenchen Karlsruhe\n0 0\n','Scenario #1\n80 tons\n\nScenario #2\n170 tons\n','',-1,0,0,64,10,20,62,12),(1462,'Wiring Company','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">شما صاحب شرکت </span><span lang=\"AR-SA\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">سیم کوچک هستید </span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">اما چون سرمایه­ی کافی برای شروع&nbsp; کسب و کار خود ندارید از ابزارهایی استفاده می\nکنید که از انبار قدیمی­ای که آن را هم خریده­اید، پیدا کرده­اید.</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span lang=\"PRS-AF\" dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span> </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;در\nمیان یافته­هایتان یک قرقره&nbsp; سیم و تعدادی\nزیادی متصل کننده می­باشد. می­خواهید بفهمید که آیا مقداری کافی سیم در اختیار\nدارید تا تمام خانه­های شهر را به هم متصل کنید یا نه! نقشه­ی شهر شامل تمام\nمسیرهایی که ممکن است شما از آن ها برای سیم کشی استفاده کنید، را در اختیار\nدارید. شما باید کمترین طول سیمی را که لازم دارید تا تمام خانه­های شهر را به هم\nوصل کنید، پیدا کنید.<o:p></o:p></span></p>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">فقط یک شهر به عنوان تست به شما&nbsp; داده می­شود.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">خط اول طول سیم موجود در قرقره است که\nبه عنوان عدد حقیقی داده می­شود.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">خط دوم شامل تعداد خانه­ها(</span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">N</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>) می­باشد.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">در </span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">N </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;خط\nبعدی نام صاحبان هر خانه می­آید. هر نام حداکثر ۲۰ کاراکتر شامل حروف کوچک و بزرگ\nانگلیسی و اعداد دارد و شامل فاصله و علائم نگارشی نمی­باشد.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">خط بعدی عدد </span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">M </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;است\nکه تعداد مسیرها می­باشد.<o:p></o:p></span></p>\n<p class=\"MsoNormal\" dir=\"RTL\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\ntext-align:right;direction:rtl;unicode-bidi:embed\"><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">M </span><span lang=\"PRS-AF\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">خط بعدی به این شکل هستند که ابتدا\nنام دو فرد (متفاوت) از افراد صاحب خانه که بالاتر داده شده است، آورده می شود و سپس\nطول این مسیر که عدد حقیقی مثبتی ست داده می­شود. بین هر دو خانه­ هم حداکثر یک\nمسیر وجود دارد.<o:p></o:p></span></p>','<p class=\"MsoNormal\" dir=\"RTL\" style=\"text-align:right;direction:rtl;unicode-bidi:\nembed\"><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">خروجی تنها شامل یک خط&nbsp; می­باشد. اگر مقدار سیم کافی برای سیم کشی تمام\nخانه­ها وجود دارد خروجی </span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:FA\">No</span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">t\nenough cable</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span> </span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:\nmajor-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;\nmso-bidi-language:PRS-AF\">و در غیر این صورت خروجی </span><span dir=\"LTR\" style=\"font-family: \'Times New Roman\', serif; background-color: white; background-position: initial initial; background-repeat: initial initial;\">Need X miles of cable</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>\nچاپ می­شود که </span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\">X </span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>&nbsp;مقدار سیم لازم برای سیم کشی است و به نزدیک\nترین دهم مایل گرد شده است.(</span><span dir=\"LTR\"></span><span dir=\"LTR\"></span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\"><span dir=\"LTR\"></span><span dir=\"LTR\"></span>0.1</span><span dir=\"RTL\"></span><span dir=\"RTL\"></span><span lang=\"PRS-AF\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\nmso-ascii-theme-font:major-bidi;mso-hansi-theme-font:major-bidi;mso-bidi-theme-font:\nmajor-bidi;mso-bidi-language:PRS-AF\"><span dir=\"RTL\"></span><span dir=\"RTL\"></span>)</span><span dir=\"LTR\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ascii-theme-font:major-bidi;\nmso-hansi-theme-font:major-bidi;mso-bidi-theme-font:major-bidi;mso-bidi-language:\nPRS-AF\"><o:p></o:p></span></p>','100.0\n4\nJones\nSmiths\nHowards\nWangs\n5\nJones Smiths 2.0\nJones Howards 4.2\nJones Wangs 6.7\nHowards Wangs 4.0\nSmiths Wangs 10.0\n','Need 10.2 miles of cable','',-1,0,0,64,10,14,63,12);
/*!40000 ALTER TABLE `problems` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `recovery`
--

DROP TABLE IF EXISTS `recovery`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `recovery` (
  `user_id` int(11) NOT NULL,
  `key` varchar(64) NOT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `recovery`
--

LOCK TABLES `recovery` WRITE;
/*!40000 ALTER TABLE `recovery` DISABLE KEYS */;
INSERT INTO `recovery` VALUES (1569,'2c6df24457c424d2eebb5b507b462b6a17fd9710'),(750,'855d70ff1a0c887ed5eef121aaa780467fdc5c7f'),(766,'b60c91a8b57ffc2a51e4cb1c5b6e955cb1cc7d16'),(786,'e8d0b17b5ea107e92e65afd7380dd9687f080803'),(71,'05506ecb6d7257034e49a17604689f35a0f89ee7'),(725,'5b23f0d21cc9885d9211553313fd065b6137fa1d'),(694,'0c93d2d5bf26e870951d3f382454c18923497543'),(762,'265940fb394328821f9cb20969ef745ea18fe4a1'),(66,'bb26c84902d5ecf992416fc94936975018262c83'),(1190,'701ce221d0dcc962823c7ec4924d460cf38ac554'),(936,'908aad94e9131f83589612a162b4565410d2cc3b'),(1013,'fdb00dbf68b79c74577cccf3d337d95d70dfdd70'),(957,'ecebe730edc0ce7131ba0b5d06df6df1f0160da5'),(1534,'dd2a2839e1e8d9e0ea3cb224c5962a16e840ea3e'),(630,'2a30b52eee9360c9ce544c16191f86da1b61d3d7'),(1053,'d1dbb176dc8b46d194c0e0f9e72af5b4b097203c'),(753,'2c58e53f8d73f87363ea3456bb370b0519949f87'),(491,'d582c151b1c5f50464158204d84564d769e834be'),(1297,'0179682a19551dbf6461bdda01433cbce0c4c65f'),(101,'a0633e48c265310612b1d7eeced4854e6c846b3f'),(987,'15fa8bc8bd4fcb2f8c352fec3b1e3f453e5031dc'),(991,'81ceed363f070d656aa680b4c8e4cca1b5dd0816'),(1339,'250ca2f801e559f106db549586edd9c37efa55ff'),(1312,'b8542bb2fa6df3794486d165372eb521e76c29c5'),(530,'f981398152ccd438a2b544857dc831f6c55a2f2d'),(552,'f505f9abd510ad2325a40d16bfea0fd5245951f9'),(553,'7bebb7ef1a1fc2d4b8cbd7be2a7156d9f0942172'),(551,'18c356a0e5b5db95694069b7bc67332163413861'),(549,'9e927873088badac5f2ca2f785a0c62d49935527'),(550,'5ef43417bc53e733f46f79015f577813bc86a7d2'),(548,'cb502a81d2cc56678f4808a1e97ae3d3fe883c90'),(592,'81e3d3f508aa9fba06630f7bb2f5b53815afe50e'),(1305,'2da41e9891303d35d8c24469f953b31b10ca5d73'),(1230,'f5cfb30537a248140269fd37cb572af234d13d62'),(1335,'0e2b20c9dd82c75a9c415390047f504067c84806'),(965,'8bbc6d9344aa2b8044e9a5672991f7a612a51a3a'),(1183,'4528bd3d729b4c4ee30728197dbe2349ee04f9fd'),(752,'34d066a7aef864678a69e2687b8f9c3f7b128da5'),(975,'35ed1d60aefb60a029b53fb5a56b06aba6cf4202'),(1381,'e971866ae5088ea5fdf93c0ed0ed73b1c79fffb3'),(954,'d6c15afcffa5f344216bc1f144f94ec989d761c0'),(695,'cb8097578ccaf3d55c4b5714711abdb359c44b8a'),(1454,'c04b41b3e37498ce3ace71d1d2185bf139788468'),(935,'8df25b46a8066c2c79bf84d197dc4b116a2c4396'),(1446,'cb8625fdc9d6da4352eee4d0b6d53fa1c9300084'),(1211,'c4d097cfbf9a846145ca5898da430898572c5492'),(1878,'e1956cb1d2f11b13a2c2fbfbc588f8ab74350950'),(1416,'bd1fb1372f44c81d55667f0ab8b400864b7fca27'),(1530,'96533c688b7b658ccf1d8af9056baff135756d92'),(1483,'ef7f3c9268b8ee51ad920827d354413b4930e6b4'),(128,'d9232e20287b1429499d20794c81b9d7ad6d4d2b'),(1551,'3f99e9dd20280283c8910a8f854d18f9822ce62c'),(573,'af4a4d21aac632876c1f179457cdcd28ed490057'),(1409,'7e565c013673d8430a0ab5c0b87aa5fce88948cd'),(764,'b451ea01738649871c786f2796d67d95ee18fb92'),(1401,'cb14652613ed9e92636672542a67110bf9f8400a'),(1620,'93ff9d3d5efb4f6a2cf84747d1c8c37d5bba8de1'),(1418,'2863afea6bdc05ed6767bfe7c3496e3517f37665'),(1544,'a377ee628924680d0015f7aeb5a48430e6aedd21'),(1662,'4dba61bf6eb01144ba445106455d622a475588bb'),(888,'65a4173246a0cf925f108bc188d372bf3c7075e4'),(1663,'b33c74db5f732dddd5bbab21219ddf18eb7123cf'),(505,'a77beaca8ef1cf028001c522c83d4ca4f018257f'),(504,'c69e9b97f29997b1bc23aa6dc116188915f9c247'),(502,'c292bdca4b71631ac24ab5eb7326b3f43e87fcfd'),(503,'bb9ab6d9c59f502b945852dd83a3354038e0f11b'),(105,'d0faa899ced471323a68fe4484f80b2b7c4e343f'),(1609,'7414dce6a617f5d42711fd0a1a7ab61c6dc257dc'),(904,'84356b2db65c73bc5909df74c70dd7662c848ae2'),(1515,'b3f19a97af11bef597e28b829b0c63539f986990'),(1744,'0305a75e088cf478030bb4fa3a9375b3bc2cfce6'),(1692,'c1e14335e604e38eb60113f9681460fc7ddb480f'),(1359,'702faf82da89ca02396802b78bcb0fd3fa7cbcf6'),(1749,'46eebe8af38d2c8136f1c35a2dd2caffcd198adf'),(1668,'57abeae9c07cd82b34412dde571130a576f373b4'),(1869,'4fb04ddf17652ee6b652b477bf39a24e6a6ff56d'),(1595,'88d55253c875cfccd61f72cf20f28840e6435d63'),(1417,'0562994500b20aa3b9560215f47e35e95209e176'),(2027,'4926c7e9c4b5d6ea5c8a4979ce70874718eacd39'),(1016,'b215995936983d7f9d0a7135699e201324745336'),(996,'f7ecc91f67a721c6f7403d966f6fd39b2a94aa2c'),(2144,'fe9a37e476684ab8d97aa865901c7dcca1a47451'),(2005,'7ee2d985359350304496b6419b82c67689ad50a6'),(18,'aec1d6ddcb7d93b96847ccf1f70602c9cc9013ce'),(2007,'1496c2fa0ebf406f84b51332085b86903f986fe3'),(2008,'9f6de7ac30321cac8a755939e57448613b0158a1'),(2009,'d8b3473e2e729ce05cd86b8e2102d2b0c20d8b60'),(2011,'7d9c94a8ebe60a59a987e95fa6d7dcd2e0e50c1e'),(2012,'a3ef222ffd9de6708382ae65eb17a16625c253f0'),(2013,'36c8d014a960c69a3d5feb3475e4f5a0a688eef1'),(2014,'fc6977e7e2cc5ba5480af4cae08815457999d6a0'),(2015,'57d050957cd1e8f845f9ccf0f50926cafc533db8'),(2016,'2a1646075ae355832ca46bc38a5f3680a4ca2f26'),(2017,'e28aa5012f70b571b5b54205dcf9585b3f197344'),(2018,'573c8cd4c461f501cb9b2adb317f5c7b7e172818'),(2019,'487ee344d675b30885ac73c0d8d4f6696da871a0'),(142,'4c1dc6028f4cd205e29b35ec0d59f6986b373f43'),(1154,'fd35a9382a725c3888d0da388365975562cce8de'),(2258,'0f8789d62a603b77f6b207438aefbc656feca1f5'),(2024,'f43290aed70b3d94e4dc27b037d1319ffaf0a8dc'),(554,'a0572af23cfd09548763411c89130f4050c787d9'),(1769,'2eb3672f6052cd6b65050ac87c6f89b8e935af3d'),(76,'1fc3846c54ba7dd2d6e357a20350cc6988dca891'),(1105,'0248740c94e11c3332fe4233029796ed79a3c4f1'),(949,'f3288dcc31f41196b8409935e1d5002a3cc33eae'),(2244,'5db4e2520aa7103afd29f01140892c27db370952'),(958,'5a59d6f51b8f4d03c71fbc72a28d6638300bf5dd'),(2267,'a05c7b366cc26de01f023cff9fa43248bd0ec815'),(2364,'75a6bd455ff873b34865073774cf2656d9a7bb9f'),(1665,'d5246243af5b61f437ea9cc54542cbde604af61d'),(2276,'cf56465b50faf486fe6a7ebc16b12e3f1a3aa133'),(910,'21c003db90b41f04a9bbc05c4bbfe4f4efd6183e'),(2087,'011adc27b1a686596fd9eeac0f987f7345cb35ee'),(2378,'720764b6a4329b2e85e754ae25bb069e92923ca0'),(1614,'03f01bdff18e058e02906dc4ebe6189ffff908d3'),(2270,'1d081f098baf96a8e51d9947b8adc64eb32f856c');
/*!40000 ALTER TABLE `recovery` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `reports`
--

DROP TABLE IF EXISTS `reports`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reports` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `message` text CHARACTER SET utf8 NOT NULL,
  `ip` varchar(15) NOT NULL,
  `current_page` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=36 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `reports`
--

LOCK TABLES `reports` WRITE;
/*!40000 ALTER TABLE `reports` DISABLE KEYS */;
INSERT INTO `reports` VALUES (1,10,'2012-09-05 10:12:13','این برای تست است!','178.131.204.96','http://sharecode.ir/discussion/problem/1001'),(2,12,'2012-09-05 12:30:21','Hello, You Are Such A Bug\nاین چه وضعیه بابا ؟ :دی اینم سایته که درست کردین؟','194.225.9.14','http://sharecode.ir/'),(3,10,'2012-09-05 12:39:38','asfasfasdfasdf','188.118.79.92','http://sharecode.ir/'),(4,1268,'2012-09-06 05:28:40','in sooske kheyli khoshkele!','188.118.92.27','http://sharecode.ir/contests/view/61839632'),(5,10,'2012-09-06 11:48:08','asdfasdfasdf','199.201.124.81','http://sharecode.ir/runs/all'),(6,40,'2012-09-19 22:12:10','while sorting by code length, it seems User Names are compared in case two answers have same length. I guess Date should be second important sort factor, meaning my submission of 76 characters should be displayed below AMIR\'s.','5.52.128.62','http://sharecode.ir/runs/acc_problem/6002/?sort=length&order=ac'),(7,915,'2012-09-20 19:32:31','Dear Sir,\nI am trying to submit my solution for problem 1343 but I get this error over and over again:\n&quot;You have submitted too quick! wait 10 seconds and try again!&quot;\nI tried this code on another account [multi] and the result was &quot;accepted&quot;. here is my code:\n\n#include &lt;iostream&gt;\n#include &lt;stdio.h&gt;\nusing namespace std;\n\nint main() {\nint n, t1, t2, t3;\nwhile (cin&gt;&gt;n&gt;&gt;t1&gt;&gt;t2&gt;&gt;t3 &amp;&amp; n) {\ndouble avg = n*2 + (n-1)/2.0 + n + (t2&gt;t1?t2-t1:n+t2-t1) + (t2&gt;t3?t2-t3:n+t2-t3) ;\nprintf (&quot;%0.3f\\n&quot;, avg);\n}\nreturn 0;\n}\n\nI would appreciate if you look into it and get back to me as soon as possible.\n\nthanks,\nMohammad Mahdavi','151.241.179.215','http://sharecode.ir/problemset/submit/1343'),(8,40,'2012-09-22 03:12:03','removed replies are still counted when you show number of replies for a post. for example in discussion for problem 6002 there are only 11 replies visible but the site says there should be 13 (2 are deleted)','5.52.25.61','http://sharecode.ir/discussion/problem/6002'),(9,44,'2012-09-27 17:38:55','sitet bug dare :D\n','146.185.26.163','http://sharecode.ir/problemset/view/1300'),(10,1019,'2012-10-02 07:26:40','اگع امکان داره ساعت شیرکد رو درست کنین!','2.177.144.48','http://sharecode.ir/runs/all'),(11,19,'2012-10-18 17:01:27','Add star or favorite or &quot;code it later&quot; :D button to each problem.','37.63.174.19','http://sharecode.ir/problemset/view/6002'),(12,732,'2012-11-06 20:38:02','in 3ta panjere baghal , zamane load shodan safe ie 3 ta 4 sanie baz mimmone . iejooraeii zaiast , mikhore to zogh hei avalesh ina baz bashan . ie fekri be halesh bokon\n\nagha hamin alan dokmeie send moshakhas nabood , zoom safharo kam kardam ta bebinam! ba chorme ham oomaddam','2.176.239.196','http://sharecode.ir/'),(13,1019,'2012-11-09 16:52:08','soale 8002 speciale judge mikhad.... ma too uva submit karDm acc shod... residegi konid lotfan!','2.177.100.211','http://sharecode.ir/runs/user/1019'),(14,127,'2012-11-13 09:41:56','سلام\nچرا مسائل چند مسابقه‌ی اخیر در مجموعه سوالات اضافه نشده و امکان سابمیژن ندارند؟!!\n\nلطفا رنگ اکسپت رو سبز کنید، رنگ رانگ رو قرمز. :) این دوتا رنگ رو برعکس استفاده میکنید، آدم یه جوریش میشه.','2.180.55.71','http://sharecode.ir/problemset/page/1'),(15,46,'2012-11-13 20:28:40','6091 . algorithm Moh$sen . Dp . ba order (n^2)/3 . ke time migire :O   . az un jayi soal be nazar tarahi khudetune be nazar bug dare khube ke eslah beshe . ma algoritmo ba accept shode ha test kardim . inputi ke midin standard nist . tnx\n','2.180.104.187','http://sharecode.ir/discussion/problem/6019'),(16,1640,'2012-11-23 08:24:23','are Sample outputs correct ?','2.178.129.202','http://sharecode.ir/problemset/view/6022'),(17,1818,'2012-12-05 13:24:53','please suggest new users what to solve first, let them know where are the easier problems.','188.158.217.197','http://sharecode.ir/contests/view/61839651'),(18,10,'2012-12-05 17:59:54','شسیشیس','130.255.213.205','http://sharecode.ir/contests/clarjudge/61839651'),(19,1019,'2012-12-06 17:42:44','با تشکر از خوب برگزار شدن مسابقه اینترنتی امروز!','2.177.119.157','http://sharecode.ir/problemset/page/4'),(20,1713,'2012-12-06 19:11:59','سلام\nخیلی برام عجیب بود که جاج شما Accepted رو قرمز می‌نویسه و Wrong Answer رو سبز.\n:)','85.185.163.37','http://sharecode.ir/contests/ranklist/61839653'),(21,769,'2012-12-27 20:55:09','salam,\nnemidonam bug ya na ,\ndare sharcode man az memset estefade kardam stdio ro ham include karam baz ham  man error e &quot;memset not declared in this scop&quot; bar mikhordam  ,daar sooraT ke har chi ba visual check mikardam moshkeli nadasht , nemifahmidam moshekelesh chie , koolan 1 saati dar gir haamin boodam !! ke baad motevvajeh shodam ba bardashtan yek space i ke dar argoman e dovvome memsett bood moshkel hal shod . ','65.49.68.194','http://sharecode.ir/runs/problem/8012'),(22,2059,'2013-01-27 10:50:56','my code for this problem gets 400 ms to run and get accept in UVa Online Judge for the same problem (12238 Ants Colony) !!!\nbut here it get &quot;time limit Exceeded&quot;\nalso in UVa, time limit for this problem is 3000 ms which is 3 times longer than here !!!','188.158.90.208','http://sharecode.ir/'),(23,2059,'2013-01-27 10:58:28','problem #1300 (Ants Colony)\njava time limit : 6000\nc++ time limit : 1000\nwhy so different???? 6 times more for java!!!','188.158.90.208','http://sharecode.ir/'),(24,520,'2013-02-02 22:57:06','سلام. لطفا سعی کنید مشکلاتی قبیل judge queue رو به حداقل برسونید. چون من برای submite کردن سوالاتم به کافی نت مراجعه می کنم و وقتی این مشکلات رو می بینم حس می کنم تلاشم بی فایده بوده. در ضمن این اصلا باعث نمیشه که من از سایت خوب شما ناراضی باشم. این سایت بهترین مکان برای تمرین واسه منه. امیدوارم همیشه موفق باشین. با تشکر (عادل)','2.180.63.68','http://sharecode.ir/'),(25,10,'2013-02-14 05:27:54','           m','80.66.190.63','http://sharecode.ir/contests/view/61839663'),(26,1044,'2013-02-25 14:59:31','wrwerwe','151.239.4.150','http://sharecode.ir/contests/submit/61839636/C'),(27,1996,'2013-02-28 11:58:41','Helllo dear site admin\nThe way you show the mails in profiles spammers can catch them please correct it. like puting a picture of email address :)\nAnd also it will be so fine to put a option that users can submit the problem they made ... with testcases ... and you then accept and add them to list...\nThanks for your good website.\nhesam haddad','2.187.9.202','http://sharecode.ir/users/profile/1996'),(28,1996,'2013-03-07 13:51:29','Hello dear admin of sharecode.ir\nI found a bug on system\nI got Compilation Error On Problem 1309\n/usr/lib/gcc/i686-linux-gnu/4.6/../../../i386-linux-gnu/crt1.o: In function `_start\':\n(.text+0x18): undefined reference to `main\'\ncollect2: ld returned 1 exit status\nI think its because your system doesn\'t work for 2 submit at one time.\nI resend the code and get Accepted.\nThanks a lot for your good website.\nHesam Haddad.','2.187.18.171','http://sharecode.ir/runs/problem/1309'),(29,2191,'2013-03-18 21:24:11','On problem 1116, my code works well on VS2012 but I got runtime error each time I submit and when I only changed my input functions code accepted!\n','146.185.31.212','http://sharecode.ir/runs/problem/1116'),(30,1953,'2013-03-19 08:41:29','http://sharecode.ir/problemset/view/1044\n\nthe picture in the middle of the page is not shown but it is present on your server,the link to the image contains Persian numerals representing the number &quot;1047&quot; .change the image\'s link by rewriting it entirely in English.\n\nthe provided link: http://sharecode.ir/assets/problem_images/%DB%B1%DB%B0%DB%B4%DB%B7_a187f421398dbdfc4c2fd6862ec796d4.jpg\n\nit should be:  http://sharecode.ir/assets/problem_images/1047_a187f421398dbdfc4c2fd6862ec796d4.jpg','2.176.55.73','http://sharecode.ir/problemset/view/1044'),(31,1996,'2013-04-25 03:47:58','Hello dear admin\ndue to last contest\n7/\n	N!ma 	\n4\n	\n1 @ 6568\n	\n1 @ 6575\n	\n1 @ 6576\n	\n1 @ 6572\n	\n26290\nhow it can be in this time?? its just need to google input and output but cheating have no mean in such competition ;)\nthanks for running this ... ','2.187.20.89','http://sharecode.ir/contests/view/61839666'),(32,2310,'2013-05-05 20:16:02','i am sure this code havent any problem,can you check it:\n#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\nstring s,ss,a,aa,t1,t2;\nstring rock[11]={&quot;Kamen&quot;,&quot;Rock&quot;,&quot;Pierre&quot;,&quot;Stein&quot;,&quot;Ko&quot;,&quot;Koe&quot;,&quot;Sasso&quot;,&quot;Roccia&quot;,\n	&quot;Guu&quot;,&quot;Kamien&quot;,&quot;Piedra&quot;};\nstring sci [10]={&quot;Nuzky&quot;,&quot;Scissors&quot;,&quot;Ciseaux&quot;,&quot;Schere&quot;,&quot;Ollo&quot;,&quot;Olloo&quot;,&quot;Forbice&quot;\n,&quot;Choki&quot;,&quot;Nozyce&quot;,&quot;Tijera&quot;};\nstring pap[10]={&quot;Papir&quot;,&quot;Paper&quot;,&quot;Feuille&quot;,&quot;Papier&quot;,&quot;Papir&quot;,&quot;Carta&quot;,&quot;Rete&quot;,&quot;Paa&quot;\n,&quot;Papier&quot;,&quot;Papel&quot;};\nint main()\n{\n	int scora,scorb,count,flag,f1,f2;\n	count=0;flag=0;\n	while(1)\n	{	\n		count++;\n		cin&gt;&gt;a;\n		if(a[0]==\'.\')\n			return 1;\n		if(a[0]==\'-\')\n			continue;\n		cin&gt;&gt;aa;cin&gt;&gt;s;cin&gt;&gt;ss;\n		scorb=0;scora=0;\n		while(1)\n		{\n			cin&gt;&gt;t1;\n			if(t1[0]==\'.\')\n			{\n				flag=1;\n				break;\n			}\n			if(t1[0]==\'-\')\n				break;\n			cin&gt;&gt;t2;\n			f1=0,f2=0;\n			for(int k=0;k&lt;11;k++)\n				if(t1==rock[k])\n					f1=1;\n			for(int k=0;k&lt;10;k++)\n				if(t1==sci[k])\n					f1=2;\n			for(int k=0;k&lt;10;k++)\n				if(t1==pap[k])\n					f1=3;\n			for(int k=0;k&lt;11;k++)\n				if(t2==rock[k])\n					f2=1;\n			for(int k=0;k&lt;10;k++)\n				if(t2==sci[k])\n					f2=2;\n			for(int k=0;k&lt;10;k++)\n				if(t2==pap[k])\n					f2=3;\n			if(f1==1 &amp;&amp; f2==2)\n				scora++;\n			if(f1==2 &amp;&amp; f2==3)\n				scora++;\n			if(f1==3 &amp;&amp; f2==1)\n				scora++;\n			if(f2==1 &amp;&amp; f1==2)\n				scorb++;\n			if(f2==2 &amp;&amp; f1==3)\n				scorb++;\n			if(f2==3 &amp;&amp; f1==1)\n				scorb++;\n		}\n		cout&lt;&lt;&quot;Game #&quot;&lt;&lt;count&lt;&lt;&quot;:&quot;&lt;&lt;endl;\n		cout&lt;&lt;aa&lt;&lt;&quot;: &quot;&lt;&lt;scora&lt;&lt;&quot; point&quot;;\n		if(scora!=scorb)\n			cout&lt;&lt;&quot;s&quot;;\n		cout&lt;&lt;endl;\n		cout&lt;&lt;ss&lt;&lt;&quot;: &quot;&lt;&lt;scorb&lt;&lt;&quot; point&quot;;\n		if(scora!=scorb)\n			cout&lt;&lt;&quot;s&quot;;\n		cout&lt;&lt;endl;\n		if(scora==scorb)\n			cout&lt;&lt;&quot;TIED GAME&quot;;\n		else\n		{\n			cout&lt;&lt;&quot;WINNER: &quot;;\n			if(scorb&gt;scora)\n				cout&lt;&lt;ss;\n			else\n				cout&lt;&lt;aa;\n		}\n		cout&lt;&lt;endl&lt;&lt;endl;\n		if(flag)\n			return 1;\n	}\n	return 1;\n}','78.39.98.107','http://sharecode.ir/runs/user/2310'),(33,2332,'2013-05-23 15:02:17','pls had a help section to this site so we can ask questions. am having problem submiting my code. i write my codes in C++. i dont know if i should write the name of my text file(where the inputs are read from) or if every problem has a name for its text file. pls answer me as soon as','80.248.0.254','http://sharecode.ir/problemset'),(34,10,'2013-05-31 10:38:16','asfdasdfasfdasfd','2.146.247.60','http://sharecode.ir/contests/ranklist/19'),(35,2358,'2013-06-07 17:23:34','سلام؛ فکر می‌کنم ایمیلِ فعال‌سازی برایِ من ارسال نمی‌شه.\nUser: iMohammad\nE-Mail: mohammad@dashtizadeh.net\n\nو من الله توفیق','95.82.90.183','http://sharecode.ir/');
/*!40000 ALTER TABLE `reports` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `reserved_usernames`
--

DROP TABLE IF EXISTS `reserved_usernames`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reserved_usernames` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=100 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `reserved_usernames`
--

LOCK TABLES `reserved_usernames` WRITE;
/*!40000 ALTER TABLE `reserved_usernames` DISABLE KEYS */;
INSERT INTO `reserved_usernames` VALUES (1,'M.K'),(2,'hrm'),(4,'aida.amini'),(6,'DATA.C0D3R'),(8,'the.mrt'),(9,'best.coder'),(10,'arash.k.90'),(11,'mehrdad.ghasemiani'),(12,'shadi.shafighi'),(13,'ali.moharrami'),(14,'G.o.c'),(15,'Reza.Kashmir'),(16,'mehdi.khademloo'),(18,'acm.try'),(20,'eh.sh70.yahoo.com'),(21,'mohamad.zehtabi'),(22,'Hassan.Zaboli'),(24,'jorge.aravn'),(25,'Motahare.Mounesan'),(26,'javad.r.85'),(28,'azin.asg'),(29,'borgir.mrt'),(30,'hosein.z3'),(31,'sut.gt.sadra'),(32,'shomal.U'),(33,'sina.bhh'),(34,'saman.gholami'),(35,'abdolmaleki.s.gmail.com'),(37,'se.noghte'),(38,'Khershaye.Darandeye.Vahshi'),(39,'PBS'),(40,'naser.cr7'),(41,'JUSTfor.FUN'),(42,'reza.student'),(43,'reza.h'),(45,'senoghte'),(46,'AC.DC'),(47,'Bad.Boy'),(48,'storm.saeed'),(49,'iman.hammer'),(50,'mohammad.mahdi.bigdeli'),(51,'zuizui.123'),(53,'H34D.H0T'),(55,'mhmmdrz.nu'),(56,'wilson.xzx.wilson'),(57,'fateme.eskandari'),(58,'Bellman.Ford'),(59,'nooshin.zamiri'),(60,'parsa.sotoode'),(61,'sahar.shayan'),(62,'h.taleghani'),(63,'morteza.farhang'),(64,'mahfooz.salehi'),(65,'elham.soleymani'),(66,'vahid.mostofi'),(68,'Ali.Arghavan'),(69,'hamid.hoseini'),(70,'act.acm'),(71,'m.gh408'),(72,'m.d75'),(74,'Jamshid.Mozafari'),(75,'Taher.Javanmiri'),(76,'mohammad.obaidi'),(77,'Taher.Javanmiri2'),(78,'hassan.sanandaj'),(79,'elham.soleymani71'),(80,'King.Of.IT'),(81,'llc.7400'),(82,'ali.mahzounieh'),(83,'altinay.jorjani'),(84,'r.arias2'),(85,'patch.D'),(86,'amon.tilado'),(87,'en.software'),(88,'Sergey.Ivanov'),(89,'a2.h4ck3r'),(91,'pegah.d'),(93,'mmm'),(94,'pedraam.sjj75.yahoo.com'),(95,'root'),(96,'admin'),(97,'sharecode'),(98,'amir.s'),(99,'amir.saboury');
/*!40000 ALTER TABLE `reserved_usernames` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `runs`
--

DROP TABLE IF EXISTS `runs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `runs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `problem_id` int(11) NOT NULL,
  `source` text NOT NULL,
  `lang` smallint(6) NOT NULL,
  `result` smallint(6) NOT NULL,
  `run_memory` int(11) NOT NULL,
  `run_time` int(11) NOT NULL,
  `info` text NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `code_length` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `date` (`time`),
  KEY `uid` (`user_id`),
  KEY `res` (`result`)
) ENGINE=MyISAM AUTO_INCREMENT=39653 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `runs`
--

LOCK TABLES `runs` WRITE;
/*!40000 ALTER TABLE `runs` DISABLE KEYS */;
INSERT INTO `runs` VALUES (366,10,1001,'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int a,b;\n    while(cin >> a >> b)\n        cout << a+b << endl;\n}\n',1,4,1480,0,'','2011-10-08 05:42:01',86),(369,10,1001,'#include <stdio.h>\n\nint main()\n{\n    int a,b;\n    while(scanf(\"%d %d\",&a, &b) != EOF)\n        printf(\"%d\\n\",a+b);\n    return 0;\n}',0,4,964,0,'','2011-10-08 05:42:51',93),(370,10,1001,'program p1001(Input,Output); \nvar \n  a,b:Integer; \nbegin \n   while not eof(Input) do \n     begin \n       Readln(a,b); \n       Writeln(a+b); \n     end; \nend.\n',2,4,276,0,'','2011-10-08 05:43:09',105),(371,10,1001,'import java.util.Scanner;\n\npublic class Main {\n	public static void main(String[] args) {\n		Scanner in = new Scanner(System.in);\n		while (in.hasNextInt()) {\n			int a = in.nextInt();\n			int b = in.nextInt();\n			System.out.println(a + b);\n		}\n	}\n}',3,4,15548,64,'','2011-10-08 05:43:24',193),(373,15,1001,'#include <iostream>\nusing namespace std;\nint main()\n{\nint a,b;\nwhile(cin>>a>>b)\n{\ncout<<a+b<<endl;\n}\nreturn 0;\n}',1,4,1268,0,'','2011-10-09 12:03:02',96),(374,44,1020,'#include <iostream>\n#include <cstdio>\nusing namespace std;\n\nint main(){\ndouble a, b;\ncin >> a;\nwhile(cin >> b, b != 999){\ncout.precision(2);\ncout.setf(ios::fixed | ios::showpoint):\ncout << b - a << endl;\na = b;\n}\ncout << \"End of Output\" << endl;\nreturn 0;',1,11,0,0,'Main.cc: In function ‘int main()’:\nMain.cc:11:39: error: expected ‘;’ before ‘:’ token\nMain.cc:16:9: error: expected ‘}’ at end of input\n','2011-10-09 20:42:02',210),(375,44,1020,'#include <iostream>\n#include <cstdio>\nusing namespace std;\n\nint main(){\n	double a, b;\n	cin >> a;\n	while(cin >> b, b != 999){\n		cout.precision(2);\n		cout.setf(ios::fixed | ios::showpoint);\n		cout << b - a << endl;\n		a = b;\n	}\n	cout << \"End of Output\" << endl;\n	return 0;\n}',1,4,1268,0,'','2011-10-09 20:43:52',211),(376,12,1020,'#include <stdio.h>\nint main()\n{\ndouble temp;\ndouble last=0;\nscanf(\"%lf\",&last);\nwhile(scanf(\"%lf\",&temp), temp!=999)\n{printf(\"%.2lf\\n\",temp-last);last=temp;}\nprintf(\"End of Output\\n\");\n}',1,4,800,0,'','2011-10-10 06:36:21',170),(377,38,1001,'#include <iostream>\nusing namespace std;\n\nint main()\n{\n	int a , b;\n	while (cin >> a >> b)\n		cout << a + b << endl;\n	return 0;\n}',1,4,1268,0,'','2011-10-10 06:47:54',94),(378,12,1012,'#include <iostream>\n#include <map>\n#include <string>\nusing namespace std;\nint main()\n{\n	int n;\n	while ( cin>>n && n!=-1)\n	{\n		double sum=0;\n		map<string,double> clays;\n		for (int i=0;i<n;i++)\n		{\n			string name;\n			int temp1,temp2,temp3;\n			cin>>temp1>>temp2>>temp3>>name;\n			clays[name]=temp1*temp2*temp3;\n			sum+=temp1*temp2*temp3;		\n		}\n		sum/=n;\n		string bully,victim;\n		for (map<string,double>::iterator it=clays.begin();it!=clays.end();it++)\n			if (it->second>sum) bully = it->first;\n			else if (it->second<sum) victim=it->first;\n		cout<<bully<<\" took clay from \"<<victim<<\".\"<<endl;\n	}\n}',1,4,1272,0,'','2011-10-10 07:06:05',492),(379,38,1020,'#include <iostream>\n#include <stdio.h>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n	vector <float> temper;\n	float a = 0;\n	while (true)\n	{\n		cin >> a;\n		if ( a != 999 )\n			temper.push_back(a);\n		else\n			break;\n	}\n	for ( int i = 1 ; i < temper.size() ; i++)\n		printf( \"%.2f \\n\",(temper[i] - temper[i - 1]));\n	cout << \"End of Output\" << endl;\n	return 0;\n}',1,5,1472,0,'','2011-10-10 07:06:18',275),(380,38,1020,'#include <iostream>\n#include <stdio.h>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n	vector <float> temper;\n	float a = 0;\n	while (true)\n	{\n		cin >> a;\n		if ( a != 999 )\n			temper.push_back(a);\n		else\n			break;\n	}\n	for ( int i = 1 ; i < temper.size() ; i++)\n		printf( \"%.2f\\n\",(temper[i] - temper[i - 1]));\n	cout << \"End of Output\" << endl;\n	return 0;\n}',1,4,1268,0,'','2011-10-10 07:07:04',275),(381,12,1013,'#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nvector <int> page[25];\n#define show() for (int i=0;i<25;i++)cerr<<i<<\": \"<<page[i].size()<<endl;cerr<<endl;\nint BS(int start,int num)\n{\n	int first = 0 ;\n	int last = page[start].size()-1;\n	int mid = (first+last)/2;\n	while(last-first>1)\n	{\n		mid=(first+last)/2;\n		if (num<=page[start][mid])\n			last = mid;\n		else first =mid;\n	}\n	if (first==-1) return -1;\n	if (num<=page[start][first]) return first;\n	else if (num<=page[start][last])return last;\n	else return -1;\n}\n\nint main()\n{\n	int m,n;\n	while(true)\n	{\n		for (int i=0;i<25;i++)\n			page[i].clear();\n		while(cin>>m>>n && (m||n))\n		{\n			if (m==-1 && n==-1) goto hell;\n			page[m].push_back(n);	\n		}\n		\n		for (int i=1;i<=24;i++)\n			sort(page[m].begin(),page[m].end());\n		int ans =0;\n		for (int start =1 ;start<25;start++)\n		{\n			int check =-1;\n			if (!page[start].size()) continue;\n			ans++;\n			check = page[start].back();\n			for (int i=start+1;i<25;i++)\n			{\n				if (!page[i].size())continue;\n				int temp = BS(i,check);\n				if (temp!=-1)\n				{check = page[i].back();page[i].resize(temp);}\n			}\n		}\n		cout<<ans<<endl;\n	}\n	hell: ;\n}',1,4,1272,0,'','2011-10-10 11:52:13',927),(382,45,1001,'#include <iostream>\nusing namespace std;\nint main(){\nint a, b;\ncin >> a >> b;\ncout << a + b << endl;\nreturn 0;\n}',1,6,1268,0,'','2011-10-10 11:57:53',88),(383,45,1001,'#include <iostream>\nusing namespace std;\nint main(){\nint a, b;\nwhile(cin >> a >> b)\ncout << a + b << endl;\nreturn 0;\n}',0,11,0,0,'Main.c:2:20: fatal error: iostream: No such file or directory\ncompilation terminated.\n','2011-10-10 11:58:59',94),(384,45,1001,'#include <iostream>\nusing namespace std;\nint main(){\nint a, b;\nwhile(cin >> a >> b)\ncout << a + b << endl;\nreturn 0;\n}',1,4,1268,0,'','2011-10-10 11:59:28',94),(385,12,1017,'#include <iostream>\n#include <sstream>\n#include <cstring>\nusing namespace std;\n\nint main()\n{\n	while(true)\n	{\n		int n;\n		bool marked[100];\n		memset(marked,0,sizeof(marked));\n		int ans=0;\n		while(cin>>n , n)\n		{\n			if (n==-1) goto hell;\n			marked[n]=true;\n		}\n		for (int i=1;i<50;i++)\n			if (marked[i]&& marked[2*i])\n				ans++;\n		cout<<ans<<endl;\n	}\n	hell:;\n\n}',1,4,1268,0,'','2011-10-10 16:17:01',280),(386,12,1001,'#include <iostream>\nusing namespace std;\nint main()\n{\nint a,b;\nwhile(cin>>a>>b)\ncout<<a+b<<endl;\n}',1,4,1272,4,'','2011-10-10 16:28:16',86),(387,10,1010,'/*\n\n  VYSTUP: Ve vystupu je jedna mezera pred Unloaded (je-li neco Unloaded)\n          a mezera za kazdym zadanim\n\n  naklad je udelan tak, ze vaha je vzdy delitelna plochou\n \n  sirka i delka letadla jsou delitelne dvema\n  (mnohem lip se pocita kolik nakladu je v ktere pulce)\n  POZOR vzorovy vstup to nesplnuje\n  POZOR vzorovy vystup nesplnuje podminku o pravo-levem vyvazeni\n\n  je-li vaha nalevo L a vaha napravo R vysvetluji si tu podminku o peti procentech jako:\n      0.95R <= L <= 1.05R\n      0.95L <= R <= 1.05L\n\n */\n\n\n#include<stdlib.h>\n#include<stdio.h>\n\n/* / #define JUDGE       // vypisovat soubor pro judge */\n\n#define DEBUG 0     /*/ debuglevel - pouzivam 0 1 2 3 4 */\n\n#define DEBA  if(DEBUG>0) printf\n#define DEBB  if(DEBUG>1) printf\n#define DEBC  if(DEBUG>2) printf\n#define DEBD  if(DEBUG>3) printf\n\n\n\n#define MAXPLANES 20\n#define MAXNAME   32\n#define MAXLENGTH 128\n#define MAXWIDTH  32\n#define MAXITEMS  256\n#define MAXPRI    1024\n#define MAXHOLD   10     /* ze zadani !nesmi se menit! */\n\n\n#define PL  0   /* pomocne pro planedat a items */\n#define L   1   /* nechtelo se mi pouzivat struktury */\n#define W   2   /* L=length W=width */\n#define X   3   /* X-pos Y-pos */\n#define Y   4\n#define C   5   /* cena letadla */\n#define PRI 6   /* priorita bedny */\n#define HU  7   /* hustota bedny */\n#define WE  8   /* musi byt posledni */\n\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n\n\nint bestnum, bestpri, bestcost;                  /* Nejlepsi reseni */\nint bestcargo[MAXPLANES][MAXHOLD+1][3];\n\nint numplanes, numitems;\n\nint num, pri, cost, pl;    /* pocet pouzitych baliku, priorita, pocet pouzitych letadel */\nint dataset=1;\n\nchar names[MAXPLANES][MAXNAME];  /* jmena letadel */\nint cargo[MAXPLANES][MAXHOLD];   /* co nesou */\nint numcargo[MAXPLANES];         /* kolik toho nesou */\nint front[MAXPLANES];            /* naklad vepredu */\nint left[MAXPLANES];             /* naklad nalevo */\nint weight[MAXPLANES];           /* naklad celkem */\nint planedat[MAXPLANES][WE+1];   /* data o letadlech  */\nint items[MAXPRI][WE+1];         /* data o nakladu + aktualni pozice v letadle */\n\n\n#ifdef JUDGE \nFILE *judge;\n#endif\n\nint cmp(const void *a, const void *b)\n{\n  return ((int *)b)[PRI]-((int *)a)[PRI];\n}\n\n\nint lastint=0;   /* s cim jsme naposled Intersect()ovali */\n\nint Intersect( int n )\n{\n  int i;\n  int it=cargo[pl][n];\n  int x1=items[it][X];\n  int x2=items[it][X]+items[it][L];\n  int y1=items[it][Y];\n  int y2=items[it][Y]+items[it][W];\n  int c;\n  for( i=0; i<n; ++i )\n    {\n      c=cargo[pl][i];\n      if( x1<=items[c][X]+items[c][L] &&\n          x2>=items[c][X] &&\n	  y1<=items[c][Y]+items[c][W] &&\n          y2>=items[c][Y]  ) \n	{\n	  lastint=c;\n	  return 1;\n	}\n    }\n  return 0;\n}\n\nvoid LoadPlane(void);\n\n\n\nint maxvychyl[MAXHOLD+1];  /* o kolik to muzou jeste zbyle bedny vychylit */\nint pomweights[MAXHOLD];\n\nint Serad( int n )\n{\n  /* imistim ji na prvni mozne misto */\n  int it=cargo[pl][n];\n  int plw, pll;\n  int r, l;\n  int i, itm;\n  int thisl, thisf;\n\n  plw=planedat[pl][W];\n  pll=planedat[pl][L];\n\n  items[it][X]=1;\n  items[it][Y]=1;\n\n  if( n==0 )\n    {\n      for( i=numcargo[pl]-1; i>0; --i )\n	{\n	  itm=cargo[pl][i];\n	  maxvychyl[i]=items[itm][L]*items[itm][HU]*\n	                  ( min(plw/2,1+items[itm][W])-1 - max(0,1+items[itm][W]-plw/2));\n	}\n      maxvychyl[numcargo[pl]]=0;\n      for( i=numcargo[pl]-1; i>0; --i ) maxvychyl[i]+=maxvychyl[i+1];\n      for( i=0; i<numcargo[pl]; ++i )\n	{\n	  itm=cargo[pl][i];\n	  pomweights[i]=items[itm][WE]+(i?pomweights[i-1]:0);\n	}\n    }\n\n  while( items[it][X]+items[it][L]<pll )\n    {\n\n      if( !Intersect(n) )\n	{\n	  /* muzu to zkusit takhle */\n	  thisl=thisf=0;\n	  if( items[it][X]<pll/2 )\n	    thisf=items[it][W]*items[it][HU]*\n                       (min(pll/2,items[it][X]+items[it][L])-items[it][X]);\n	  if( items[it][Y]<plw/2 )\n	    thisl=items[it][L]*items[it][HU]*\n	               (min(plw/2,items[it][Y]+items[it][W])-items[it][Y]);\n	  left[pl]+=thisl;\n	  front[pl]+=thisf;\n\n	  DEBC( \"Serad(%d): %d na (%d,%d)\\n\", n, items[it][PRI], items[it][X], items[it][Y] );\n\n	  l=left[pl];\n	  r=pomweights[n]-left[pl];\n	  \n	  DEBD( \"l=%d r=%d maxv=%d pomw=%d\\n\", l, r, maxvychyl[n+1], pomweights[n] );\n	  if( n+1<numcargo[pl] )\n	    {\n	       /* jen jestli to zbytek muze jeste vychylit */\n	      if( 19*l<=20*(r+maxvychyl[n+1]) && 19*r<=20*(l+maxvychyl[n+1]) )\n		{\n		  if( Serad(n+1) ) return 1;\n		}\n	    }\n	  else\n	    {\n	      /*  jestli to ma smysl muzu to zkusit s takovymhle rozlozenim */\n	      DEBD( \"l=%d r=%d fr=%d we=%d\\n\", l, r, front[pl], weight[pl] );\n	      if( weight[pl]*6<=10*front[pl] &&      /* alespon 60% vepredu */\n		  19*r<=20*l && 20*l<=21*r &&        /* podmika o pravolevem vyvazeni */\n		  19*l<=20*r && 20*r<=21*l  )        /* taktak se to vejde do intu */\n		{\n		  ++pl;\n		  LoadPlane();		  \n		  --pl;		  \n\n		  return 1;  /* Tohle se mi povedlo! */\n		}	     	      \n	    }\n	  /* ted musim vratit front, feft */\n	  front[pl]-=thisf;\n	  left[pl]-=thisl;\n	  lastint=-1;\n	}\n      \n      /* ted krabici soupnu */\n\n      if( lastint>=0 )  /* nebudeme delat kilizi s tou samou bednou */\n	{\n	  items[it][Y]=items[lastint][Y]+items[lastint][W]+1;\n	  if( items[it][Y]+items[it][W]>plw-1 ) /* pokud krabice nejde strcit nad lastint */\n	    {\n	      items[it][Y]=1;\n	      items[it][X]++;\n	      /* pokud se nevejdem ani dolu */\n	      if( 1+items[it][W]>=items[lastint][Y] )\n		items[it][X]=items[lastint][X]+items[lastint][L]+1;\n	    }\n	  \n	}\n      else\n	items[it][Y]++;\n\n      if( items[it][Y]+items[it][W]>plw-1 )\n	{\n	  items[it][Y]=1;\n	  items[it][X]++;\n	}\n    }\n  return 0;\n}\n \n\n\n\nvoid AddItem( void )\n{\n  int it, numc, i;\n  int plw, pll;\n\n  if( (numc=numcargo[pl])==MAXHOLD ) return;  /* uz nic nepridam */\n\n  plw=planedat[pl][W];\n  pll=planedat[pl][L];\n\n  \n  it=0;   /* co chci pridat? */\n  if( numc>0 ) it=cargo[pl][numc-1]+1;       \n\n  /* Najdu prvni, ktera se mi do letadla vejde */\n  \n  while( it<numitems && \n       (items[it][PL]!=-1 || items[it][W]>plw-2 \n          || items[it][L]>pll-2 || items[it][WE]+weight[pl]>planedat[pl][WE] ) ) ++it;\n\n  /* A pridam ji */\n  while( it<numitems )\n    {\n      cargo[pl][numc]=it;\n      numcargo[pl]++;\n      items[it][X]=1;\n      items[it][Y]=1;\n      items[it][PL]=pl;\n      weight[pl]+=items[it][WE];\n      num+=1;\n      pri+=items[it][PRI];\n\n      AddItem();\n\n      if( DEBUG>1 )\n	{\n	  printf( \"Zkousim Plane=%d:\", pl );\n	  for( i=0; i<numcargo[pl]; ++i )\n	    printf( \" %d\", items[cargo[pl][i]][PRI] );\n	  printf( \"\\n\" );\n	}\n\n\n\n      if ( weight[pl]*2>=planedat[pl][WE] )  /* alespon na pul vytizene */\n	{\n	  left[pl]=0;\n	  front[pl]=0;\n	  Serad(0);\n	}\n      numcargo[pl]--;\n      items[it][PL]=-1;\n      weight[pl]-=items[it][WE];\n      num--;\n      pri-=items[it][PRI];\n      \n      /* ted musim vyzkouset dalsi */\n      ++it;\n      while( it<numitems && \n	     (items[it][PL]!=-1 || items[it][W]>plw-2 \n	      || items[it][L]>pll-2 || items[it][WE]+weight[pl]>planedat[pl][WE] ) ) ++it;\n    }\n\n  return;\n}\n\n\n\n\nvoid LoadPlane( void )\n{\n  int i, j, k;\n\n  DEBA( \"Plane=%d\\n\", pl );\n  \n  /* Zarezavani */\n\n  /* Uz nemam sanci */\n  if( num+MAXHOLD*(numplanes-pl)<bestnum ) return;\n  if( num==numitems && num==bestnum && cost>=bestcost ) return;\n\n  if( pl==numplanes )\n    {\n      DEBA( \"Test: %d %d %d\\n\", num, pri, cost );\n      \n      if( DEBUG>0 )\n	for( i=0; i<numplanes; ++i )\n	  {\n	    printf( \"  Plane %d:\", i );\n	    for( j=0; j<numcargo[i]; ++j )\n	      {\n		k=cargo[i][j];\n		printf( \" %d (%d,%d);\", items[k][PRI], items[k][X], items[k][Y]);\n	      }\n	    printf( \"\\n\" );\n	  }\n\n      \n      if( num<bestnum ) return;\n      if( num==bestnum && pri<bestpri ) return;\n      if( num==bestnum && pri==bestpri && cost>=bestcost ) return;\n\n      /* Nasli jsme lepsi reseni */\n      bestnum=num;\n      bestpri=pri;\n      bestcost=cost;\n      for( i=0; i<numplanes; ++i )\n	{\n	  for( j=0; j<numcargo[i]; ++j )\n	    {\n	      k=bestcargo[i][j][0]=cargo[i][j];\n	      bestcargo[i][j][1]=items[k][X];\n	      bestcargo[i][j][2]=items[k][Y];\n	    }\n	  bestcargo[i][j][0]=-1;\n	}\n      DEBA( \"Lepsi reseni n=%d pri=%d cost=%d\\n\", num, pri, cost );\n      return;\n    }\n\n  /* zkusime sem nejaky krabice */\n  cost+=planedat[pl][C];\n  AddItem();\n  cost-=planedat[pl][C];\n\n  /* ted tohle letadlo necham prazdne */\n  ++pl;\n  LoadPlane();\n  --pl;\n\n  DEBA( \"Konec LoadPlane\\n\" );\n  return;\n}\n\n\n\n\n\n\n\n\n\nvoid Print( void )\n{\n  int i, j, c;\n  printf( \"Plane loading %d:\\n\", dataset );\n\n  for( i=0; i<numplanes; ++i )\n    if( numcargo[i] )\n      {\n	puts( names[i] );\n	for( j=0; j<numcargo[i]; ++j )\n	  {\n	    c=cargo[i][numcargo[i]-j-1];\n	    printf( \"  %d loaded at %d back, %d from left\\n\", \n                      items[c][PRI], items[c][X], items[c][Y] );\n	  }\n      }\n  if( bestnum<numitems )\n    {\n      printf( \"\\nUnloaded:\" );\n      for( i=numitems-1; i>=0; --i )\n	if( items[i][PL]==-1 ) printf( \" %d\", items[i][PRI] );\n      printf( \"\\n\" );\n    }\n  printf( \"\\n\" );\n}\n\n\n\nvoid Setrep( void )   /* tadle funkce je udelana uplne blbe, ale to uz cas nezere */\n{\n  int pl, pll, i, j, it, itm, front;\n  int jeste;\n  for( pl=0; pl<numplanes; ++pl )\n    {\n      pll=planedat[pl][L];\n      jeste=1;\n      front=0;\n      for( i=0; i<numcargo[pl]; ++i )\n	{\n	  it=cargo[pl][i];\n	  if( items[it][X]<pll/2 )\n	       front+=items[it][W]*items[it][HU]*\n                       (min(pll/2,items[it][X]+items[it][L])-items[it][X]);\n	}\n	\n      while( jeste )\n	{\n	  jeste=0;\n	  for( i=0; i<numcargo[pl]; ++i )\n	    {\n	      it=cargo[pl][i];\n	      if( ( items[it][X]>=pll/2 || items[it][X]+items[it][L]<pll/2 || \n                     10*(front-items[it][W]*items[it][HU])>=6*weight[pl]) &&\n		        items[it][X]+1+items[it][L]<pll )\n		{\n		  /* printf( \"%d x=%d f=%d\\n\", items[it][PRI], items[it][X], front ); */\n		  for( j=0; j<numcargo[pl]; ++j )\n		    {\n		      itm=cargo[pl][j];\n		      if( it!=itm && \n                          items[it][X]+1<=items[itm][X]+items[itm][L] &&\n			  items[it][X]+1+items[it][L]>=items[itm][X] &&\n			  items[it][Y]<=items[itm][Y]+items[itm][W] &&\n			  items[it][Y]+items[it][W]>=items[itm][Y]  ) break;\n		    }\n		  if( j==numcargo[pl] )\n		    {\n		      jeste=1;\n		      if( !( items[it][X]>=pll/2 || items[it][X]+items[it][L]<pll/2 ) )\n			   front-=items[it][W]*items[it][HU];\n		      items[it][X]++;\n		    }\n		}\n	    }\n	}\n    }\n}\n\n\n\n\nint main(void)\n{\n  int i, j, c, pri;\n  #ifdef JUDGE\n  judge=fopen( \"plane.judge\", \"wb\" );\n  #endif\n  \n\n  scanf( \"%d\\n\", &numplanes );\n  \n  while( numplanes )\n    {\n\n      /* Nacitani vstupu */\n\n#ifdef JUDGE  /* vstup tupe opisuji do souboru */\n      fprintf( judge, \"%d\\n\", numplanes );\n#endif\n      \n\n      /* Nacteni letadel */\n\n      bestnum=-1;\n      num=0;\n      pri=0;\n      cost=0;\n      \n      for( i=0; i<numplanes; ++i )\n	{\n	  gets( names[i] );\n#ifdef JUDGE\n	  fputs( names[i], judge );\n	  fputc( \'\\n\', judge );\n#endif\n	  scanf( \"%d %d %d %d\\n\", planedat[i]+L, planedat[i]+W, planedat[i]+WE, planedat[i]+C );\n#ifdef JUDGE\n	  fprintf( judge, \"%d %d %d %d\\n\", planedat[i][L], planedat[i][W], planedat[i][WE], planedat[i][C] );\n#endif	  \n	  numcargo[i]=0;\n	  front[i]=0;\n	  left[i]=0;\n	  weight[i]=0;\n	}\n\n      /* Nacteni itemu */\n\n      scanf( \"%d\\n\", &numitems );\n#ifdef JUDGE\n      fprintf( judge, \"%d\\n\", numitems );\n#endif\n      for( i=0; i<numitems; ++i )\n	{\n	  scanf( \"%d %d %d %d\", items[i]+PRI, items[i]+L, items[i]+W, items[i]+WE ); \n	  items[i][PL]=-1;\n#ifdef JUDGE\n	  fprintf( judge, \"%d %d %d %d\\n\", items[i][PRI], items[i][L], items[i][W], items[i][WE] );\n#endif\n	  items[i][HU]=items[i][WE]/items[i][L]/items[i][W];\n	}\n\n      /* sesortime */\n      qsort( items, numitems, sizeof(int)*(WE+1), cmp );\n\n      /* proved backtrack */\n      \n      /*      printf( \"Vstup nacten\\n\" ); return 0; */\n\n      pl=0;\n      LoadPlane();\n\n      /* Nacpu nejlepsi reseni zpatky do aktualniho abych to mohl lip tisknout */\n      \n      for( i=0; i<numitems; ++i ) items[i][PL]=-1;\n      for( i=0; i<numplanes; ++i )\n	{\n	  j=0;\n	  weight[i]=0;\n	  while( (c=bestcargo[i][j][0])>-1 )\n	    {\n	      items[c][PL]=i;\n	      cargo[i][j]=c;\n	      weight[i]+=items[c][WE];\n	      items[c][X]=bestcargo[i][j][1];\n	      items[c][Y]=bestcargo[i][j][2];\n	      ++j;\n	    }\n	  numcargo[i]=j;\n	}\n\n      /* setrepu krabice co nejvic dozadu */\n      Setrep();\n      \n      /* a tisknu */\n      Print();\n#ifdef JUDGE\n      fprintf( judge, \"%d %d %d\\n\", bestnum, bestpri, bestcost );  /* vypisem nejlepsi reseni */\n#endif\n      \n      ++dataset;\n      scanf( \"%d\\n\", &numplanes );\n    }\n\n#ifdef JUDGE      \n  fprintf( judge, \"0\\n\" );\n  fclose( judge );\n#endif\n  return 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n',1,4,852,324,'','2011-10-12 07:38:48',9150),(390,49,1001,'#include \"iostream\"\nusing namespace std;\n\nint main(){\nint a,b;\ncin>>a>>b;\ncout<<a+b<<endl;\n\n\n	return 0;\n}',0,11,0,0,'Main.c:2:20: fatal error: iostream: No such file or directory\ncompilation terminated.\n','2011-10-13 08:56:24',88),(391,47,1001,'#include \"iostream\"\n\nusing namespace std;\n\nint main()\n{\n	int a,b;\n	while(cin >> a >> b)\n	{\n		cout << a + b << endl;\n	}\n}',1,4,1268,4,'','2011-10-13 08:56:37',88),(392,49,1001,'#include <iostream>\nusing namespace std;\n\nint main(){\nint a,b;\ncin>>a>>b;\ncout<<a+b<<endl;\n\n\n	return 0;\n}',1,6,1268,0,'','2011-10-13 08:57:27',88),(393,48,1001,'#include<iostream>\nusing namespace std;\nint main()\n{\n	int a,b,c;\n	while(cin>>a>>b)\n	{\n	c=a+b;\n	cout<<c<<endl;\n	}\n	return 0;\n}',1,4,1268,0,'','2011-10-13 09:00:15',102),(394,49,1001,'#include <iostream>\nusing namespace std;\n\nint main(){\n\n	int a,b;\n\n	while(cin>>a>>b){\n		cout<<a+b<<endl;\n	}\n\n	return 0;\n}',1,4,1268,0,'','2011-10-13 09:01:40',96),(395,46,1001,'#include <iostream>\nusing namespace std;\n\nint main()\n{\n	int a,b;\n	while(cin>>a>>b)\n	{\n		cout<<a+b<<endl;\n	}\nreturn 0;\n}',1,4,1268,4,'','2011-10-13 09:01:46',96),(396,47,1002,'#include \"iostream\"\n#include \"stdio.h\"\n\nusing namespace std;\n\n\nint main()\n{\n	// target\n	int tar,loc,t;\n	cin >> tar;\n	while(tar < 5280)\n	{\n		t = 0;\n		do\n		{\n			cin >> loc;\n			if(loc == tar)\n				printf(\"Moving from %d to %d: found it!\\n\\n\", t, loc);\n			else if(abs(loc - tar) < abs(t -tar))\n				printf(\"Moving from %d to %d: warmer.\\n\", t, loc);\n			else if(abs(loc - tar) > abs(t -tar))\n				printf(\"Moving from %d to %d: colder.\\n\", t, loc);\n			else\n				printf(\"Moving from %d to %d: same.\\n\", t, loc);\n			t = loc;\n		}while(loc != tar);\n\n		cin >> tar;\n	}\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:21:25: error: \'abs\' was not declared in this scope\n','2011-10-13 09:29:47',410),(397,47,1002,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"math.h\"\n\nusing namespace std;\n\n\nint main()\n{\n	// target\n	int tar,loc,t;\n	cin >> tar;\n	while(tar < 5280)\n	{\n		t = 0;\n		do\n		{\n			cin >> loc;\n			if(loc == tar)\n				printf(\"Moving from %d to %d: found it!\\n\\n\", t, loc);\n			else if(abs(loc - tar) < abs(t -tar))\n				printf(\"Moving from %d to %d: warmer.\\n\", t, loc);\n			else if(abs(loc - tar) > abs(t -tar))\n				printf(\"Moving from %d to %d: colder.\\n\", t, loc);\n			else\n				printf(\"Moving from %d to %d: same.\\n\", t, loc);\n			t = loc;\n		}while(loc != tar);\n\n		cin >> tar;\n	}\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:22:25: error: \'abs\' was not declared in this scope\n','2011-10-13 09:30:37',426),(398,47,1002,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"math.h\"\n\nusing namespace std;\n\n\nint main()\n{\n	// target\n	int tar,loc,t;\n	cin >> tar;\n	while(tar < 5280)\n	{\n		t = 0;\n		do\n		{\n			cin >> loc;\n			if(loc == tar)\n				printf(\"Moving from %d to %d: found it!\\n\\n\", t, loc);\n			else if(abs(loc - tar) < abs(t -tar))\n				printf(\"Moving from %d to %d: warmer.\\n\", t, loc);\n			else if(abs(loc - tar) > abs(t -tar))\n				printf(\"Moving from %d to %d: colder.\\n\", t, loc);\n			else\n				printf(\"Moving from %d to %d: same.\\n\", t, loc);\n			t = loc;\n		}while(loc != tar);\n\n		cin >> tar;\n	}\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:22:25: error: \'abs\' was not declared in this scope\n','2011-10-13 09:31:06',426),(399,47,1002,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"math.h\"\n\nusing namespace std;\n\n\nint main()\n{\n	// target\n	int tar,loc,t;\n	cin >> tar;\n	while(tar < 5280)\n	{\n		t = 0;\n		do\n		{\n			cin >> loc;\n			if(loc == tar)\n				printf(\"Moving from %d to %d: found it!\\n\\n\", t, loc);\n			else if(abs(loc - tar) < abs(t -tar))\n				printf(\"Moving from %d to %d: warmer.\\n\", t, loc);\n			else if(abs(loc - tar) > abs(t -tar))\n				printf(\"Moving from %d to %d: colder.\\n\", t, loc);\n			else\n				printf(\"Moving from %d to %d: same.\\n\", t, loc);\n			t = loc;\n		}while(loc != tar);\n\n		cin >> tar;\n	}\n}',0,11,0,0,'Main.c:2:20: fatal error: iostream: No such file or directory\ncompilation terminated.\n','2011-10-13 09:31:24',426),(400,49,1017,'#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n	int tmp=0,res,i;\n	\n	int a[15];\n	\n	cin>>tmp;\n	while(tmp!=-1)\n	{	\n		i=0;\n		res=0;\n		while(tmp>0)\n			{\n				a[i]=tmp;\n				i++;\n				cin>>tmp;\n			}\n		sort(a,a+i-1);\n		for(int k=0;k<i;k++)\n		{\n			int d=a[k]*2;\n			for(int t=k;t<i;t++)\n			{\n				if(d==a[t])res++;\n			}\n\n		}\n\n		cout<<res<<endl;\n		cin>>tmp;	\n	}\n	\n	return 0;\n}',1,6,1268,4,'','2011-10-13 09:31:55',279),(401,48,1002,'#include<iostream>\n#include<math.h>\nusing namespace std;\nint main()\n{\n	int a,b,state,newstate,dis,newdis,t;\n	cin>>a;\n	while(a!=5280)\n	{\n		state=0;\n		cin>>b;\n		newstate=b;\n		dis=abs(a);\n		while(a!=b)\n		{	\n			newdis=abs(a-newstate);\n			if(newdis>dis)\n				cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": colder.\\n\";\n			else if(newdis<dis)\n				cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": warmer.\\n\";\n			else if(a!=b)\n				cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": same.\\n\";\n			else\n				break;\n			state=newstate;\n			dis=newdis;\n			cin>>b;\n			newstate=b;\n		}\n		cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": found it!\\n\\n\";\n		cin>>a;\n	}\n	return 0;\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:13: error: \'abs\' was not declared in this scope\nMain.cc:6: warning: unused variable \'t\'\n','2011-10-13 09:32:47',532),(402,47,1002,'#include \"iostream\"\n#include \"stdio.h\"\n\nusing namespace std;\n\n#define ABS(a) (((a) < 0) ? -(a) : (a))\nint main()\n{\n	// target\n	int tar,loc,t;\n	cin >> tar;\n	while(tar < 5280)\n	{\n		t = 0;\n		do\n		{\n			cin >> loc;\n			if(loc == tar)\n				printf(\"Moving from %d to %d: found it!\\n\\n\", t, loc);\n			else if(ABS(loc - tar) < ABS(t -tar))\n				printf(\"Moving from %d to %d: warmer.\\n\", t, loc);\n			else if(ABS(loc - tar) > ABS(t -tar))\n				printf(\"Moving from %d to %d: colder.\\n\", t, loc);\n			else\n				printf(\"Moving from %d to %d: same.\\n\", t, loc);\n			t = loc;\n		}while(loc != tar);\n\n		cin >> tar;\n	}\n}',1,4,1268,20,'','2011-10-13 09:33:16',441),(403,48,1002,'#include<iostream>\nusing namespace std;\nint abs(int n)\n{\n	if(n<0)\n		n=-n;\n	return n;\n}\nint main()\n{\n	int a,b,state,newstate,dis,newdis;\n	cin>>a;\n	while(a!=5280)\n	{\n		state=0;\n		cin>>b;\n		newstate=b;\n		dis=abs(a);\n		while(a!=b)\n		{	\n			newdis=abs(a-newstate);\n			if(newdis>dis)\n				cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": colder.\\n\";\n			else if(newdis<dis)\n				cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": warmer.\\n\";\n			else if(a!=b)\n				cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": same.\\n\";\n			else\n				break;\n			state=newstate;\n			dis=newdis;\n			cin>>b;\n			newstate=b;\n		}\n		cout<<\"moving from \"<<state<<\" to \"<<newstate<<\": found it!\\n\\n\";\n		cin>>a;\n	}\n	return 0;\n}',1,6,1268,16,'','2011-10-13 09:35:06',548),(404,48,1002,'#include<iostream>\nusing namespace std;\n#define ABS(a) ((a < 0) ? -(a):(a))\nint main()\n{\n	int a,b,state,newstate,dis,newdis;\n	cin>>a;\n	while(a!=5280)\n	{\n		state=0;\n		cin>>b;\n		newstate=b;\n		dis=ABS(a);\n		while(a!=b)\n		{	\n			newdis=ABS(a-newstate);\n			if(newdis>dis)\n				cout<<\"Moving from \"<<state<<\" to \"<<newstate<<\": colder.\\n\";\n			else if(newdis<dis)\n				cout<<\"Moving from \"<<state<<\" to \"<<newstate<<\": warmer.\\n\";\n			else if(a!=b)\n				cout<<\"Moving from \"<<state<<\" to \"<<newstate<<\": same.\\n\";\n			else\n				break;\n			state=newstate;\n			dis=newdis;\n			cin>>b;\n			newstate=b;\n		}\n		cout<<\"Moving from \"<<state<<\" to \"<<newstate<<\": found it!\\n\\n\";\n		cin>>a;\n	}\n	return 0;\n}',1,11,0,0,'Main.c:1: error: expected identifier or \'(\' before numeric constant\n','2011-10-13 09:38:01',543),(405,48,1017,'#include<iostream>\nusing namespace std;\nint main()\n{\n	int list[15],i,j,a,n,cnt;\n	cin>>a;\n	while(a!=-1)\n	{	\n		cnt=0;\n		list[0]=a;\n		n=1;\n		while(a)\n		{\n			cin>>a;\n			list[n]=a;\n			n++;\n		}\n	for(i=0;i<n;i++)\n		for(j=0;j<n;j++)\n			if(list[i]==2*list[j])\n				cnt++;\n	cnt--;\n	cout<<cnt<<endl;\n	cin>>a;\n	}\n	return 0;\n}',1,4,1268,4,'','2011-10-13 09:49:32',240),(406,47,1017,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[16];\nint main()\n{\n	int t,i,cnt;\n	while(cin >> t && t != -1)\n	{\n		cnt = 0;\n		a[0] = t;\n		for(i = 1; cin >> a[i] && a[i]; i++);\n		sort(a, a + i - 1);\n		for(int j = 0; j < i - 1; j++)\n			for(int k = j + 1; k < i; k++)\n				if((a[j] * 2) == a[k])\n					cnt++;\n		cout << cnt << endl;\n	}\n}',1,6,1268,4,'','2011-10-13 09:51:33',263),(407,46,1002,'#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nint abs1(int a)\n{\n	if ( a<0 )\n		return -a;\n	else return a;\n}\nint main()\n{\n	int a;\n	int b;\n	int fp=0;\n	char s[10];\n	int sw=0;\n	for(int i=0 ; i<32000 ; i++)\n	{\n		if(sw==1)i=0;\n		sw=0;\n		cin>>a;\n		if(a==5280)return 0;\n		if(i==0)b=a;\n		if(i!=0 && a==b)\n		{\n			cout<<\"Moving from \"<<fp<<\" to \"<<a<<\": found it!\"<<endl;\n			fp=0;\n			sw=1;\n			continue;\n		}\n		if(i!=0)\n		{\n			if( abs1(a-b) < abs1(fp-b) )\n			{\n				strcpy(s,\" warmer\");\n				cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;\n			}\n			else if( abs1(a-b) > abs1(fp-b) ){ strcpy(s,\" colder\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n			else if( abs1(a-b) == abs1(fp-b) ){ strcpy(s,\" same\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n		}\n\n		if( i!=0 )fp=a;\n	}\nreturn 0;\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:36: error: \'strcpy\' was not declared in this scope\nMain.cc:39: error: \'strcpy\' was not declared in this scope\nMain.cc:40: error: \'strcpy\' was not declared in this scope\n','2011-10-13 09:52:37',621),(408,47,1017,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[16];\nint main()\n{\n	int t,i,cnt;\n	while(cin >> t && t != -1)\n	{\n		cnt = 0;\n		a[0] = t;\n		for(i = 1; cin >> a[i] && a[i]; i++);\n		sort(a, a + i - 1);\n		for(int j = 0; j < i - 1; j++)\n			for(int k = j + 1; k < i; k++)\n				if((a[j] * 2) == a[k])\n				{\n					cnt++;\n					break;\n				}\n		cout << cnt << endl;\n	}\n}',1,6,1268,0,'','2011-10-13 09:52:43',271),(409,46,1002,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint abs1(int a)\n{\n	if ( a<0 )\n		return -a;\n	else return a;\n}\nint main()\n{\n	int a;\n	int b;\n	int fp=0;\n	char s[10];\n	int sw=0;\n	for(int i=0 ; i<32000 ; i++)\n	{\n		if(sw==1)i=0;\n		sw=0;\n		cin>>a;\n		if(a==5280)return 0;\n		if(i==0)b=a;\n		if(i!=0 && a==b)\n		{\n			cout<<\"Moving from \"<<fp<<\" to \"<<a<<\": found it!\"<<endl;\n			fp=0;\n			sw=1;\n			continue;\n		}\n		if(i!=0)\n		{\n			if( abs1(a-b) < abs1(fp-b) )\n			{\n				strcpy(s,\" warmer\");\n				cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;\n			}\n			else if( abs1(a-b) > abs1(fp-b) ){ strcpy(s,\" colder\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n			else if( abs1(a-b) == abs1(fp-b) ){ strcpy(s,\" same\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n		}\n\n		if( i!=0 )fp=a;\n	}\nreturn 0;\n}',1,6,1268,20,'','2011-10-13 09:53:33',655),(410,46,1002,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint abs1(int a)\n{\n	if ( a<0 )\n		return -a;\n	else return a;\n}\nint main()\n{\n	int a;\n	int b;\n	int fp=0;\n	char s[10];\n	int sw=0;\n	int k=0;\n	for(int i=0 ; i<32000 ; i++)\n	{\n		if(sw==1)i=0;\n		sw=0;\n		cin>>a;k++;if(k>32000)return 0;\n		if(a==5280)return 0;\n		if(i==0)b=a;\n		if(i!=0 && a==b)\n		{\n			cout<<\"Moving from \"<<fp<<\" to \"<<a<<\": found it!\"<<endl;\n			fp=0;\n			sw=1;\n			continue;\n		}\n		if(i!=0)\n		{\n			if( abs1(a-b) < abs1(fp-b) )\n			{\n				strcpy(s,\" warmer.\");\n				cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;\n			}\n			else if( abs1(a-b) > abs1(fp-b) ){ strcpy(s,\" colder.\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n			else if( abs1(a-b) == abs1(fp-b) ){ strcpy(s,\" same.\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n		}\n\n		if( i!=0 )fp=a;\n	}\nreturn 0;\n}',1,5,1236,32,'','2011-10-13 09:56:25',688),(411,46,1002,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint abs1(int a)\n{\n	if ( a<0 )\n		return -a;\n	else return a;\n}\nint main()\n{\n	int a;\n	int b;\n	int fp=0;\n	char s[10];\n	int sw=0;\n	int k=0;\n	for(int i=0 ; i<32000 ; i++)\n	{\n		if(sw==1)i=0;\n		sw=0;\n		cin>>a;k++;if(k>32000)return 0;\n		if(a==5280)return 0;\n		if(i==0)b=a;\n		if(i!=0 && a==b)\n		{\n			cout<<\"Moving from \"<<fp<<\" to \"<<a<<\": found it!\"<<endl<<endl;\n			fp=0;\n			sw=1;\n			continue;\n		}\n		if(i!=0)\n		{\n			if( abs1(a-b) < abs1(fp-b) )\n			{\n				strcpy(s,\" warmer.\");\n				cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;\n			}\n			else if( abs1(a-b) > abs1(fp-b) ){ strcpy(s,\" colder.\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n			else if( abs1(a-b) == abs1(fp-b) ){ strcpy(s,\" same.\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n		}\n\n		if( i!=0 )fp=a;\n	}\nreturn 0;\n}',0,11,0,0,'Main.c:2:20: fatal error: iostream: No such file or directory\ncompilation terminated.\n','2011-10-13 09:57:15',694),(412,46,1002,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint abs1(int a)\n{\n	if ( a<0 )\n		return -a;\n	else return a;\n}\nint main()\n{\n	int a;\n	int b;\n	int fp=0;\n	char s[10];\n	int sw=0;\n	int k=0;\n	for(int i=0 ; i<32000 ; i++)\n	{\n		if(sw==1)i=0;\n		sw=0;\n		cin>>a;k++;if(k>32000)return 0;\n		if(a==5280)return 0;\n		if(i==0)b=a;\n		if(i!=0 && a==b)\n		{\n			cout<<\"Moving from \"<<fp<<\" to \"<<a<<\": found it!\"<<endl<<endl;\n			fp=0;\n			sw=1;\n			continue;\n		}\n		if(i!=0)\n		{\n			if( abs1(a-b) < abs1(fp-b) )\n			{\n				strcpy(s,\" warmer.\");\n				cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;\n			}\n			else if( abs1(a-b) > abs1(fp-b) ){ strcpy(s,\" colder.\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n			else if( abs1(a-b) == abs1(fp-b) ){ strcpy(s,\" same.\");cout<<\"Moving from \"<<fp<<\" to \"<<a<<\":\"<<s<<endl;}\n		}\n\n		if( i!=0 )fp=a;\n	}\nreturn 0;\n}',1,4,1268,48,'','2011-10-13 09:57:46',694),(413,47,1017,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[20];\nint main()\n{\n	int t,i,cnt;\n	while(cin >> t && t != -1)\n	{\n		cnt = 0;\n		a[0] = t;\n		for(i = 1; cin >> a[i] && a[i]; i++);\n		sort(a, a + i - 1);\n		for(int j = 0; j < i - 2; j++)\n			for(int k = j + 1; k < i - 1; k++)\n				if((a[j] * 2) == a[k])\n				{\n					cnt++;\n					break;\n				}\n		cout << cnt << endl;\n	}\n}',1,6,1268,0,'','2011-10-13 09:59:49',273),(414,47,1017,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[20];\nint main()\n{\n	int t,i,cnt;\n	while(cin >> t && t != -1)\n	{\n		cnt = 0;\n		a[0] = t;\n		for(i = 1; cin >> a[i] && a[i]; i++);\n		sort(a, a + i - 1);\n		for(int j = 0; j < i - 1; j++)\n			for(int k = j + 1; k < i; k++)\n				if((a[j] * 2) == a[k])\n				{\n					cnt++;\n					break;\n				}\n		cout << cnt << endl;\n	}\n}',1,6,1268,0,'','2011-10-13 10:06:03',271),(415,48,1020,'#include<iostream>\n#include<stdio.h>\nusing namespace std;\nint main()\n{\n	double a,b,c;\n	cin>>a;\n	while(1)\n	{\n		cin>>b;\n		c=b-a;\n		if(b==999)\n			break;\n		printf(\"%.2lf\\n\", c);\n		a=b;\n	}\n	cout<<\"End of Output\\n\";\n	return 0;\n}',1,4,1268,0,'','2011-10-13 10:06:45',176),(416,47,1017,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[20];\nint main()\n{\n	int t,i,cnt;\n	while(cin >> t && t != -1)\n	{\n		cnt = 0;\n		a[0] = t;\n		for(i = 1; cin >> a[i] && a[i]; i++);\n		sort(a, a + i - 1);\n		for(int j = 0; j < i - 1; j++)\n			for(int k = j + 1; k < i; k++)\n				if((a[j] * 2) == a[k])\n				{\n					cnt++;\n					//break;\n				}\n		cout << cnt << endl;\n	}\n}',1,6,1268,0,'','2011-10-13 10:08:03',273),(417,47,1017,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[20];\nint main()\n{\n	int t,i,cnt;\n	while(cin >> t && t != -1)\n	{\n		cnt = 0;\n		a[0] = t;\n		for(i = 1; cin >> a[i] && a[i]; i++);\n		for(int j = 0; j < i; j++)\n			for(int k = 0; k < i; k++)\n				if((a[j] * 2) == a[k])\n				{\n					cnt++;\n				}\n		cout << cnt << endl;\n	}\n}',0,11,0,0,'Main.c:1:20: error: iostream: No such file or directory\nMain.c:3:21: error: algorithm: No such file or directory\nMain.c:5: error: expected \'=\', \',\', \';\', \'asm\' or \'__attribute__\' before \'namespace\'\nMain.c: In function \'main\':\nMain.c:10: error: \'cin\' undeclared (first use in this function)\nMain.c:10: error: (Each undeclared identifier is reported only once\nMain.c:10: error: for each function it appears in.)\nMain.c:21: error: \'cout\' undeclared (first use in this function)\nMain.c:21: error: \'endl\' undeclared (first use in this function)\n','2011-10-13 10:09:04',247),(418,47,1017,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[20];\nint main()\n{\n	int t,i,cnt;\n	while(cin >> t && t != -1)\n	{\n		cnt = 0;\n		a[0] = t;\n		for(i = 1; cin >> a[i] && a[i]; i++);\n		for(int j = 0; j < i; j++)\n			for(int k = 0; k < i; k++)\n				if((a[j] * 2) == a[k])\n				{\n					cnt++;\n				}\n		cout << cnt << endl;\n	}\n}',1,4,1268,4,'','2011-10-13 10:09:28',247),(419,49,1017,'#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n	int tmp=0,res,i;\n	\n	int a[15];\n	\n	cin>>tmp;\n	while(tmp!=-1)\n	{	\n		i=0;\n		res=0;\n		while(tmp>0)\n			{\n				a[i]=tmp;\n				i++;\n				cin>>tmp;\n			}\n		//sort(a,a+i-1);\n		for(int k=0;k<i;k++)\n		{\n			int d=a[k]*2;\n			for(int t=0;t<i;t++)\n			{\n				if(d==a[t])res++;\n			}\n\n		}\n\n		cout<<res<<endl;\n		cin>>tmp;	\n	}\n	\n	return 0;\n}',1,4,1268,4,'','2011-10-13 10:11:01',281),(420,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[14];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		if(sw==1)\n		{\n			i=0;\n		}\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y-1 ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if(b[j]*b[j] == b[k] && j!=k)\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			sw=1;\n			y=0;\n		}\n		if(a==-1)return 0;\n		b[i]=a;\n		i++;\n	}\n}',1,6,1268,0,'','2011-10-13 10:17:51',328),(421,47,1020,'#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n\nusing namespace std;\nint a[20];\nint main()\n{\n	double a,b;\n	cin >> a;\n	while(a != 999)\n	{\n		b = a;\n		cin >> a;\n		if(a == 999)\n			break;\n		printf(\"%.2lf\\n\", a - b);\n	}\n	cout << \"End of Output\" << endl;\n}',1,4,1268,0,'','2011-10-13 10:20:08',199),(422,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[14];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		if(sw==1)\n		{\n			i=0;\n		}\n		if(y<16) cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y-1 ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if(b[j]*b[j] == b[k] && j!=k)\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			sw=1;\n			y=0;\n		}\n		if(a==-1)return 0;\n		if(a>=0 && a<=99) b[i]=a;\n		i++;\n	}\n}',1,6,1268,8,'','2011-10-13 10:21:35',351),(423,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[14];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		if(sw==1)\n		{\n			i=0;\n		}\n		if(y<16) cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y-1 ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if(b[j]*2 == b[k] && j!=k)\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			sw=1;\n			y=0;\n		}\n		if(a==-1)return 0;\n		if(a>=0 && a<=99) b[i]=a;\n		i++;\n	}\n}',1,6,1268,4,'','2011-10-13 10:22:41',348),(424,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[14];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		if(sw==1)\n		{\n			i=0;\n		}\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if( b[j]*2 == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			sw=1;\n			y=0;\n		}\n		if(a==-1)return 0;\n		if(a>=0 && a<=99) b[i]=a;\n		i++;\n	}\n}',1,6,1268,0,'','2011-10-13 10:24:30',332),(440,46,1017,'#include <iostream>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[14];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		if(sw==1)\n		{\n			i=0;\n		}\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			sw=1;\n			y=0;\n		}\n		if(a==-1)return 0;\n		if(a>=0 && a<=99) b[i]=a;\n		i++;\n	}\n}',1,6,1268,0,'','2011-10-15 08:44:02',300),(456,46,1003,'agar tamame adadyi ke jaye x ha ha dar har x ast ba x dugar barbar bashad ba adadi ke dar carde digar \nda x ha garar darad IT IS EQUAL',0,11,0,0,'Main.c:1: error: expected \'=\', \',\', \';\', \'asm\' or \'__attribute__\' before \'tamame\'\n','2011-10-18 19:22:14',103),(429,12,1001,'#include <iostream>\nusing namespace std;\n\nint main()\n{\nint a,b;\nwhile(cin>>a>>b)\n{\ncout<<a+b<<endl;\n}\n\nfor (int i=0;i<10;i++)\ncout<<endl;\n}\n',1,5,1268,0,'','2011-10-14 14:00:16',119),(433,47,1007,'#include <iostream>\n#include <string.h>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	//string cars;\n	char cars[40],ch,tmp[40],rcars[40];\n	int n, i, cnt = 0;\n	while(cin >> cars && strcmp(cars, \"STOP\"))\n	{\n		printf(\"Dataset #%d:  The initial order is %s.\\n\", cnt++, cars);\n		strcpy(rcars, cars);\n		strrev(rcars);\n		cin >> n;\n		for(int i = 0; i < n; i++)\n		{\n			cin >> ch;\n			int left = strchr(cars, ch) - cars; // pos from left\n			int right = strchr(rcars, ch) - rcars;// pos from right\n			strncpy(tmp, cars, left);\n			tmp[left] = 0;\n			if(left <= right)\n			{\n				strrev(tmp);\n				strcat(tmp, strchr(cars, ch) + 1);\n			}else\n			{\n				strncpy(tmp, cars, left);\n				tmp[left] = 0;\n				strncat(tmp, rcars, right);\n			}\n			strcpy(cars, tmp);\n			strcpy(rcars, cars);\n			strrev(rcars);\n			printf(\"After %c leaves, the order is %s.\\n\", ch, cars);\n		}\n		cout << endl;\n	}\n	return 0;\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:16: error: \'strrev\' was not declared in this scope\nMain.cc:11: warning: unused variable \'i\'\n','2011-10-14 16:55:58',670),(434,47,1007,'#include <iostream>\n#include <string>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	//string cars;\n	char cars[40],ch,tmp[40],rcars[40];\n	int n, cnt = 0;\n	while(cin >> cars && strcmp(cars, \"STOP\"))\n	{\n		printf(\"Dataset #%d:  The initial order is %s.\\n\", cnt++, cars);\n		strcpy(rcars, cars);\n		strrev(rcars);\n		cin >> n;\n		for(int i = 0; i < n; i++)\n		{\n			cin >> ch;\n			int left = strchr(cars, ch) - cars; // pos from left\n			int right = strchr(rcars, ch) - rcars;// pos from right\n			strncpy(tmp, cars, left);\n			tmp[left] = 0;\n			if(left <= right)\n			{\n				strrev(tmp);\n				strcat(tmp, strchr(cars, ch) + 1);\n			}else\n			{\n				strncpy(tmp, cars, left);\n				tmp[left] = 0;\n				strncat(tmp, rcars, right);\n			}\n			strcpy(cars, tmp);\n			strcpy(rcars, cars);\n			strrev(rcars);\n			printf(\"After %c leaves, the order is %s.\\n\", ch, cars);\n		}\n		cout << endl;\n	}\n	return 0;\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:12: error: \'strcmp\' was not declared in this scope\nMain.cc:15: error: \'strcpy\' was not declared in this scope\nMain.cc:16: error: \'strrev\' was not declared in this scope\nMain.cc:21: error: \'strchr\' was not declared in this scope\nMain.cc:23: error: \'strncpy\' was not declared in this scope\nMain.cc:28: error: \'strcat\' was not declared in this scope\nMain.cc:33: error: \'strncat\' was not declared in this scope\n','2011-10-14 17:18:18',666),(435,47,1007,'#include <iostream>\n#include <cstring>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	//string cars;\n	char cars[40],ch,tmp[40],rcars[40];\n	int n, cnt = 0;\n	while(cin >> cars && strcmp(cars, \"STOP\"))\n	{\n		printf(\"Dataset #%d:  The initial order is %s.\\n\", cnt++, cars);\n		strcpy(rcars, cars);\n		strrev(rcars);\n		cin >> n;\n		for(int i = 0; i < n; i++)\n		{\n			cin >> ch;\n			int left = strchr(cars, ch) - cars; // pos from left\n			int right = strchr(rcars, ch) - rcars;// pos from right\n			strncpy(tmp, cars, left);\n			tmp[left] = 0;\n			if(left <= right)\n			{\n				strrev(tmp);\n				strcat(tmp, strchr(cars, ch) + 1);\n			}else\n			{\n				strncpy(tmp, cars, left);\n				tmp[left] = 0;\n				strncat(tmp, rcars, right);\n			}\n			strcpy(cars, tmp);\n			strcpy(rcars, cars);\n			strrev(rcars);\n			printf(\"After %c leaves, the order is %s.\\n\", ch, cars);\n		}\n		cout << endl;\n	}\n	return 0;\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:16: error: \'strrev\' was not declared in this scope\n','2011-10-14 17:23:49',667),(436,47,1007,'#include <iostream>\n#include <string.h>\n#include <stdio.h>\n\nusing namespace std;\n\n\nchar* strrev( char* s )\n{\n  char  c;\n  char* s0 = s - 1;\n  char* s1 = s;\n\n  /* Find the end of the string */\n  while (*s1) ++s1;\n\n  /* Reverse it */\n  while (s1-- > ++s0)\n  {\n	  c   = *s0;\n	  *s0 = *s1;\n	  *s1 =  c;\n  }\n  return s;\n}\nint main()\n{\n	//string cars;\n	char cars[40],ch,tmp[40],rcars[40];\n	int n, cnt = 0;\n	while(cin >> cars && strcmp(cars, \"STOP\"))\n	{\n		printf(\"Dataset #%d:  The initial order is %s.\\n\", cnt++, cars);\n		strcpy(rcars, cars);\n		strrev(rcars);\n		cin >> n;\n		for(int i = 0; i < n; i++)\n		{\n			cin >> ch;\n			int left = strchr(cars, ch) - cars; // pos from left\n			int right = strchr(rcars, ch) - rcars;// pos from right\n			strncpy(tmp, cars, left);\n			tmp[left] = 0;\n			if(left <= right)\n			{\n				strrev(tmp);\n				strcat(tmp, strchr(cars, ch) + 1);\n			}else\n			{\n				strncpy(tmp, cars, left);\n				tmp[left] = 0;\n				strncat(tmp, rcars, right);\n			}\n			strcpy(cars, tmp);\n			strcpy(rcars, cars);\n			strrev(rcars);\n			printf(\"After %c leaves, the order is %s.\\n\", ch, cars);\n		}\n		cout << endl;\n	}\n	return 0;\n}',1,6,1268,184,'','2011-10-14 17:27:48',816),(437,47,1007,'#include <iostream>\n#include <string.h>\n#include <stdio.h>\n\nusing namespace std;\n\n\nchar* strrev( char* s )\n{\n  char  c;\n  char* s0 = s - 1;\n  char* s1 = s;\n\n  /* Find the end of the string */\n  while (*s1) ++s1;\n\n  /* Reverse it */\n  while (s1-- > ++s0)\n  {\n	  c   = *s0;\n	  *s0 = *s1;\n	  *s1 =  c;\n  }\n  return s;\n}\nint main()\n{\n	//string cars;\n	char cars[40],ch,tmp[40],rcars[40];\n	int n, cnt = 0;\n	while(cin >> cars && strcmp(cars, \"STOP\"))\n	{\n		printf(\"Dataset #%d:  The initial order is %s.\\n\", ++cnt, cars);\n		strcpy(rcars, cars);\n		strrev(rcars);\n		cin >> n;\n		for(int i = 0; i < n; i++)\n		{\n			cin >> ch;\n			int left = strchr(cars, ch) - cars; // pos from left\n			int right = strchr(rcars, ch) - rcars;// pos from right\n			strncpy(tmp, cars, left);\n			tmp[left] = 0;\n			if(left <= right)\n			{\n				strrev(tmp);\n				strcat(tmp, strchr(cars, ch) + 1);\n			}else\n			{\n				strncpy(tmp, cars, left);\n				tmp[left] = 0;\n				strncat(tmp, rcars, right);\n			}\n			strcpy(cars, tmp);\n			strcpy(rcars, cars);\n			strrev(rcars);\n			printf(\"After %c leaves, the order is %s.\\n\", ch, cars);\n		}\n		cout << endl;\n	}\n	return 0;\n}',1,5,1240,260,'','2011-10-14 17:28:41',816),(438,47,1007,'#include <iostream>\n#include <string.h>\n#include <stdio.h>\n\nusing namespace std;\n\n\nchar* strrev( char* s )\n{\n  char  c;\n  char* s0 = s - 1;\n  char* s1 = s;\n\n  /* Find the end of the string */\n  while (*s1) ++s1;\n\n  /* Reverse it */\n  while (s1-- > ++s0)\n  {\n	  c   = *s0;\n	  *s0 = *s1;\n	  *s1 =  c;\n  }\n  return s;\n}\nint main()\n{\n	//string cars;\n	char cars[40],ch,tmp[40],rcars[40];\n	int n, cnt = 0;\n	while(cin >> cars && strcmp(cars, \"STOP\"))\n	{\n		if(cnt) cout << endl;\n		printf(\"Dataset #%d:  The initial order is %s.\\n\", ++cnt, cars);\n		strcpy(rcars, cars);\n		strrev(rcars);\n		cin >> n;\n		for(int i = 0; i < n; i++)\n		{\n			cin >> ch;\n			int left = strchr(cars, ch) - cars; // pos from left\n			int right = strchr(rcars, ch) - rcars;// pos from right\n			strncpy(tmp, cars, left);\n			tmp[left] = 0;\n			if(left <= right)\n			{\n				strrev(tmp);\n				strcat(tmp, strchr(cars, ch) + 1);\n			}else\n			{\n				strncpy(tmp, cars, left);\n				tmp[left] = 0;\n				strncat(tmp, rcars, right);\n			}\n			strcpy(cars, tmp);\n			strcpy(rcars, cars);\n			strrev(rcars);\n			printf(\"After %c leaves, the order is %s.\\n\", ch, cars);\n		}\n	}\n	return 0;\n}',1,4,1268,132,'','2011-10-14 17:30:34',823),(439,47,1032,'#include \"iostream\" \n#include \"stdio.h\"\n#include \"math.h\"\n\nusing namespace std;\n\nint main()\n{\n	int i;\n	double a,sum;\n	while(cin >> a && a != 0.0)\n	{\n		sum = 0;\n		for(i = 2; sum < a; i++)\n			sum += (1.0 / i);\n		cout << (i - 2) << \" card(s)\" << endl;\n	}\n	return 0;\n}',1,4,1268,0,'','2011-10-14 19:12:03',194),(441,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[14];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			i=0;\n			y=0;\n		}\n		if(a==-1)return 0;\n		if(a>0 && a<=99){ b[i]=a;i++; }\n	}\n}',1,6,1268,0,'','2011-10-15 08:48:45',319),(442,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[20];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			i=0;\n			y=0;\n		}\n		if(a==-1){coue<<endl;return 0}\n		if(a>0 && a<=99){ b[i++]=a; }\n	}\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:36: error: \'coue\' was not declared in this scope\nMain.cc:36: error: expected \';\' before \'}\' token\nMain.cc:13: warning: unused variable \'sw\'\n','2011-10-15 08:56:28',329),(443,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[20];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			i=0;\n			y=0;\n		}\n		if(a==-1){cout<<endl;return 0}\n		if(a>0 && a<=99){ b[i++]=a; }\n	}\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:36: error: expected \';\' before \'}\' token\nMain.cc:13: warning: unused variable \'sw\'\n','2011-10-15 08:57:00',329),(444,46,1017,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[20];\n	int i=0;\n	int sum=0;\n	int sw=0;\n	int y=0;\n	while(1)\n	{\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			i=0;\n			y=0;\n		}\n		if(a==-1){cout<<endl;return 0;}\n		if(a>0 && a<=99){ b[i++]=a; }\n	}\n}',1,6,1268,4,'','2011-10-15 08:57:33',330),(445,46,1017,'#include <iostream>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	int a=0;\n	int b[100];\n	int i=0;\n	int sum=0;\n	int y=0;\n	while(1)\n	{\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y ; j++)\n			{\n				for(int k=0 ; k<y ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			i=0;\n			y=0;\n		}\n		if(a==-1){cout<<endl;return 0;}\n		if(a>0 && a<=99){ b[i++]=a; }\n	}\n}',1,6,1268,0,'','2011-10-15 08:59:55',289),(446,46,1017,'#include <iostream>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n\n	int a=0;\n	int b[100];\n	int i=0;\n	int sum=0;\n	int y=0;\n	while(1)\n	{\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y-1 ; j++)\n			{\n				for(int k=0 ; k<y-1 ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			i=0;\n			y=0;\n		}\n		if(a==-1){cout<<endl;return 0;}\n		if(a>0 && a<=99){ b[i++]=a; }\n	}\n}',1,5,1268,0,'','2011-10-15 09:05:08',293),(447,46,1017,'#include <iostream>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n\n	int a=0;\n	int b[100];\n	int i=0;\n	int sum=0;\n	int y=0;\n	while(1)\n	{\n		cin>>a;\n		y++;\n		if(a==0)\n		{\n			for(int j=0 ; j<y-1 ; j++)\n			{\n				for(int k=0 ; k<y-1 ; k++)\n				{\n					if( (b[j]*2) == b[k] )\n					{\n						sum+=1;\n					}\n				}\n			}\n			cout<<sum<<endl;\n			sum=0;\n			i=0;\n			y=0;\n		}\n		if(a==-1){return 0;}\n		if(a>0 && a<=99){ b[i++]=a; }\n	}\n}',1,4,1268,4,'','2011-10-15 09:06:03',282),(448,46,1020,'#include <iostream>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	float a=0;\n	int i=0;\n	float b=0;\n	cin>>a;\n	while(1)\n	{\n		a=b;\n		cin>>b;\n		if(b==999){cout<<\"End of Output\";return 0;}\n		float sum=b-a;\n		printf(\"%.2f\\n\",sum);\n	}\n}',1,6,1268,0,'','2011-10-15 09:35:20',191),(449,46,1020,'#include <iostream>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	double a=0;\n	int i=0;\n	double b=0;\n	cin>>a;\n	while(1)\n	{\n		a=b;\n		cin>>b;\n		if(b==999){cout<<\"End of Output\"<<endl;return 0;}\n		float sum=b-a;\n		printf(\"%.2lf\\n\",sum);\n	}\n}',1,6,1268,0,'','2011-10-15 09:38:19',200),(450,49,1002,'#include <iostream>\nusing namespace std;\nint dis(int a,int b)\n{return (a>b ?a-b:b-a);}\nint main (){\n\n	int k,i;\n	int a[21];\n	cin>>k;\n	while(k!=5280){\n		a[0]=0;\n	for(i=1;i<21 && cin>>a[i] && a[i]!=k;i++);\n		int tmp=dis(0,k);\n	for(int j=1;j<=i;j++){\n		 if(a[j]==k)cout<<\"Moving from \"<<a[j-1]<<\" to \"<<k<<\": found it!\"<<endl<<endl;	\n		else if(dis(k,a[j])>tmp)cout<<\"Moving from \"<<a[j-1]<<\" to \"<<a[j]<<\": colder.\"<<endl;\n		else if (dis(k,a[j])<tmp)cout<<\"Moving from \"<<a[j-1]<<\" to \"<<a[j]<<\": warmer.\"<<endl;\n		else if (dis(k,a[j])==tmp)cout<<\"Moving from \"<<a[j-1]<<\" to \"<<a[j]<<\": same.\"<<endl;\n\n\n\n		tmp=dis(k,a[j]);\n\n	}\n	\n\n	cin>>k;\n	}\nreturn 0;\n}',1,5,1268,16,'','2011-10-15 09:44:48',550),(451,46,1020,'#include <iostream>\n#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n	double a=0;\n	double b=0;\n	cin>>a;\n	cin >> b;\n	while(b!=999)\n	{\n		printf(\"%.2lf\\n\", b-a);\n		a=b;\n		cin>>b;\n	}\n	cout<<\"End of Output\"<<endl;\n	return 0;\n}',1,4,1268,0,'','2011-10-15 09:47:07',180),(452,46,1003,'#include <iostream>\n#include <stdio.h>\nusing namespace std;\nint chap(int *c,int m)\n{\n        for(int i=0 ; i < m ;i++)\n        {\n                cout<<c[i];\n        }\n        return 0;\n}\nint main()\n{\n        int a[100];\n        int n=4;\n        a[0]=1;\n        a[1]=2;\n        a[2]=3;\n        a[3]=4;\n        cout<<\"{},\";\n        for(int i=0 ; i<5 ; i++)\n        {\n                chap(a,i);\n                for(int j=i+1 ; j<5 ; j++)\n                {\n                        cout<<a[j]<<\",\";\n                }\n        }\nreturn 0;\n}\n       ',1,6,1264,4,'','2011-10-15 14:27:56',260),(453,52,1001,'\n#include <iostream>\n\nusing namespace std;\n\n\nint main(void)\n{\n long long int a, b; cin >> a >> b;\n cout << a + b << endl;\n return 0;\n}',1,6,1268,0,'','2011-10-15 17:13:05',100),(455,54,1001,'//http://acm.ut.ac.i\n//prob A+B\n//1001\n#include <stdio.h>\nint main()\n{\n    int a,b;\n    while(scanf(\"%d%d\",&a,&b)!=EOF)\n        printf(\"%d\\n\",a+b);\n    return 0;\n}\n',0,4,748,0,'','2011-10-17 20:29:15',128),(454,52,1001,'\n#include <set>\n#include <map>\n#include <list>\n#include <deque>\n#include <stack>\n#include <cmath>\n#include <cctype>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <cstdlib>\n#include <iomanip>\n#include <cstring>\n#include <utility>\n#include <fstream>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\nusing namespace std;\n\ntypedef long long int64;\ntypedef pair <int, int> pint;\ntypedef pair <double, double> pdouble;\n\nint main(void)\n{\n	int64 a, b; \n	while(cin >> a >> b)\n		cout << a + b << endl;\n	return 0;\n}',1,4,1268,0,'','2011-10-15 17:14:28',470),(457,54,1002,'#include <stdio.h>\n#define myabs(x) (x) > 0 ? (x) : -(x)\n\nint main()\n{\n    int ans,num,pos;\n    scanf(\"%d%d\",&ans,&num);\n    while(ans!=5280){\n        pos=0;\n        while(ans!=num){\n            if((myabs(num-ans))==(myabs(ans-pos)))\n                printf(\"Moving from %d to %d: same.\\n\",pos,num);\n            else\n            if((myabs(num-ans))>(myabs(pos-ans)))\n                printf(\"Moving from %d to %d: colder.\\n\",pos,num);\n            else\n                printf(\"Moving from %d to %d: warmer.\\n\",pos,num);\n            pos=num;\n            scanf(\"%d\",&num);\n        }\n        printf(\"Moving from %d to %d: found it!\\n\",num,ans);\n        scanf(\"%d%d\",&ans,&num);\n    }\n    return 0;\n}',0,6,752,0,'','2011-10-18 22:28:30',456),(458,54,1002,'#include <stdio.h>\n#define myabs(x) (x) > 0 ? (x) : -(x)\n\nint main()\n{\n    int ans,num,pos;\n    scanf(\"%d%d\",&ans,&num);\n    while(ans!=5280){\n        pos=0;\n        while(ans!=num){\n            if((myabs(num-ans))==(myabs(ans-pos)))\n                printf(\"Moving from %d to %d: same.\\n\",pos,num);\n            else\n            if((myabs(num-ans))>(myabs(pos-ans)))\n                printf(\"Moving from %d to %d: colder.\\n\",pos,num);\n            else\n                printf(\"Moving from %d to %d: warmer.\\n\",pos,num);\n            pos=num;\n            scanf(\"%d\",&num);\n        }\n        printf(\"Moving from %d to %d: found it!\\n\",pos,num);\n        scanf(\"%d%d\",&ans,&num);\n    }\n    return 0;\n}',0,5,752,4,'','2011-10-18 22:34:19',456),(459,54,1002,'#include <stdio.h>\n#define myabs(x) (x) > 0 ? (x) : -(x)\n\nint main()\n{\n    int ans,num,pos;\n    scanf(\"%d%d\",&ans,&num);\n    while(ans!=5280){\n        pos=0;\n        while(ans!=num){\n            if((myabs(num-ans))==(myabs(ans-pos)))\n                printf(\"Moving from %d to %d: same.\\n\",pos,num);\n            else\n            if((myabs(num-ans))>(myabs(pos-ans)))\n                printf(\"Moving from %d to %d: colder.\\n\",pos,num);\n            else\n                printf(\"Moving from %d to %d: warmer.\\n\",pos,num);\n            pos=num;\n            scanf(\"%d\",&num);\n        }\n        printf(\"Moving from %d to %d: found it!\\n\",pos,num);\n        printf(\"\\n\");\n        scanf(\"%d%d\",&ans,&num);\n    }\n    return 0;\n}\n',0,5,752,4,'','2011-10-18 22:40:34',469),(460,54,1002,'#include <stdio.h>\n#define myabs(x) (x) > 0 ? (x) : -(x)\n\nint main()\n{\n    int ans,num,pos;\n    scanf(\"%d%d\",&ans,&num);\n    while(ans!=5280){\n        pos=0;\n        while(ans!=num){\n            if((myabs(num-ans))==(myabs(ans-pos)))\n                printf(\"Moving from %d to %d: same.\\n\",pos,num);\n            else\n            if((myabs(num-ans))>(myabs(pos-ans)))\n                printf(\"Moving from %d to %d: colder.\\n\",pos,num);\n            else\n                printf(\"Moving from %d to %d: warmer.\\n\",pos,num);\n            pos=num;\n            scanf(\"%d\",&num);\n        }\n        printf(\"Moving from %d to %d: found it!\\n\",pos,num);\n        scanf(\"%d%d\",&ans,&num);\n        if(ans!=5280)\n            printf(\"\\n\");\n    }\n    return 0;\n}\n',0,4,752,0,'','2011-10-18 22:47:25',482),(461,59,1001,'#include<stdio.h>\n#include<iostream>\n#include<vector>\nusing namespace std;\n\n\nint main()\n{\n	int a,b;\n	cin>>a;\n	scanf(\" \");\n	cin>>b;\n	//vector<int> num[9];\n	cout<<a+b<<endl;\n	return 0;\n}',1,6,1268,4,'','2011-10-19 14:29:37',155),(462,59,1001,'#include<stdio.h>\n#include<iostream>\n#include<vector>\nusing namespace std;\n\n\nint main()\n{\n	while(true){\n	int a,b;\n	cin>>a;\n	scanf(\" \");\n	cin>>b;\n	//vector<int> num[9];\n	cout<<a+b<<endl;}\n	return 0;\n}',1,9,1268,4,'','2011-10-19 14:30:56',168),(463,62,1001,'#include <iostream>\nusing namespace std;\nint main()\n{\nint a;\nint b;\nwhile(cin>>a>>b)\n{\ncout<<a+b<<endl;\n}\nreturn 0;\n}',1,4,1268,0,'','2011-10-19 14:31:57',99),(469,62,1002,'#include <iostream>\nusing namespace std;\n\nint main()\n{\n\nint loc;\nint taf;\nint taf2;\nint vorudi[20];\nvorudi[0]=0;\n\nwhile(cin>>loc)\n{\nif(loc==5980)\nbreak;\n\nfor(int i=1; i<20; i++)\n{\ncin>>vorudi[i];\n\nif (vorudi[i]==loc)\n{cout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": found it!\"<<endl;\nbreak;}\ntaf = vorudi[i] - loc;\ntaf2 = vorudi[i-1] - loc;\n\nif(taf<0)\ntaf= 0-taf;\n\nif(taf2<0)\ntaf2= 0-taf2;\n\nif(taf>taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": colder.\"<<endl;\nelse if(taf<taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": warmer.\"<<endl;\nelse if(taf==taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": same.\"<<endl;\n\n}\nfor(int i=1; i<20; i++)\n{vorudi[i]=0;\n}\n}\nreturn 0;\n}',1,6,1268,24,'','2011-10-19 17:57:59',628),(470,62,1002,'#include <iostream>\nusing namespace std;\n\nint main()\n{\n\nint loc;\nint taf;\nint taf2;\nint vorudi[20];\nvorudi[0]=0;\n\nwhile(cin>>loc)\n{\nif(loc==5280)\nbreak;\n\nfor(int i=1; i<20; i++)\n{\ncin>>vorudi[i];\n\nif (vorudi[i]==loc)\n{cout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": found it!\"<<endl;\nbreak;}\ntaf = vorudi[i] - loc;\ntaf2 = vorudi[i-1] - loc;\n\nif(taf<0)\ntaf= 0-taf;\n\nif(taf2<0)\ntaf2= 0-taf2;\n\nif(taf>taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": colder.\"<<endl;\nelse if(taf<taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": warmer.\"<<endl;\nelse if(taf==taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": same.\"<<endl;\n\n}\nfor(int i=1; i<20; i++)\n{vorudi[i]=0;\n}\n}\nreturn 0;\n}',1,6,1268,16,'','2011-10-19 18:03:55',628),(471,49,1012,'#include <iostream>\nusing namespace std;\nstruct stu{\n	char name[9];\n 	int sum;\n};\nint main(){\n	short int t,x,y,a,b,c;\n	stu kid[10];\n	int avg=0;\n	cin>>t;\n	while (t!=-1)\n	{\n		avg=0;\n		for (short int i=0;t!=-1&&i<t;i++)\n			{\n			cin>>a>>b>>c>>kid[i].name;\n			kid[i].sum=a*b*c;\n			avg+=kid[i].sum;\n			}\n		avg/=t;\n		\n		for (short int i=0;i<t;i++)\n		{\n			if(kid[i].sum>avg)x=i;\n			if(kid[i].sum<avg)y=i;\n		}\n		cout<<kid[x].name<<\" took clay from \"<<kid[y].name<<\'.\'<<endl;\n		cin>>t;\n	}\n \n	return 0;\n}',1,4,1268,8,'','2011-10-19 18:07:57',387),(472,62,1002,'#include <iostream>\nusing namespace std;\n\nint main()\n{\n\nint loc;\nint taf;\nint taf2;\nint vorudi[20];\nvorudi[0]=0;\n\nwhile(cin>>loc)\n{\nif(loc==5280)\nbreak;\n\nfor(int i=1; i<20; i++)\n{\ncin>>vorudi[i];\n\nif (vorudi[i]==loc)\n{cout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": found it!\"<<endl;\ncout<<endl;\nbreak;}\ntaf = vorudi[i] - loc;\ntaf2 = vorudi[i-1] - loc;\n\nif(taf<0)\ntaf= 0-taf;\n\nif(taf2<0)\ntaf2= 0-taf2;\n\nif(taf>taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": colder.\"<<endl;\nelse if(taf<taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": warmer.\"<<endl;\nelse if(taf==taf2)\ncout<<\"Moving from \"<<vorudi[i-1]<<\" to \"<<vorudi[i]<<\": same.\"<<endl;\n\n}\nfor(int i=1; i<20; i++)\n{vorudi[i]=0;\n}\n}\nreturn 0;\n}',1,6,1268,24,'','2011-10-19 18:09:49',639),(478,62,1020,'#include <iostream>\n#include <iomanip>\nusing namespace std;\ndouble a;\ndouble b;\ndouble diff;\nint main()\n{\ncin>>a;\nif(a==999)\nreturn 0;\n\nwhile(cin>>b)\n{\nif(b==999)\n{cout<<\"End Of Output\"<<endl; break;}\ndiff=b-a;\ncout<<setprecision(2)<<fixed<<diff<<endl;\na=b;\n}\n\nreturn 0;}\n',1,6,1268,0,'','2011-10-19 19:04:20',237),(479,75,1001,'#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main()\n{\n	int n1 = 1,n2 = 1;\n	do\n	{\n		cin>>n1>>n2;\n		cout<<n1+n2<<\"\\n\";\n	}\n	while(n1 != 0 && n2 != 0)\n\n	return 0;\n}',1,11,0,0,'Main.cc: In function \'int main()\':\nMain.cc:16: error: expected \';\' before \'return\'\n','2011-10-19 21:23:49',137),(480,75,1001,'#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main()\n{\n	int n1 = 1,n2 = 1;\n	do\n	{\n		cin>>n1>>n2;\n		cout<<n1+n2<<\"\\n\";\n	}\n	while(n1 != 0 && n2 != 0);\n\n	return 0;\n}',1,9,1268,4,'','2011-10-19 21:24:40',138),(481,75,1001,'#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main()\n{\n	int n1 = 1,n2 = 1;\n	//do\n	//{\n		cin>>n1>>n2;\n		cout<<n1+n2<<\"\\n\";\n		cin>>n1>>n2;\n		cout<<n1+n2;\n	//}\n	//while(n1 != 0 && n2 != 0);\n\n	return 0;\n}\n',1,6,1268,0,'','2011-10-19 21:27:59',170),(482,76,1001,'#include<iostream>\nusing namespace std;\n#include<stdio.h>\n#include<conio.h>\nvoid main(){\n	int x,y;\n	x=0;\n	y=0;\n	int z=2;\n	while(1){\n	z=scanf(\"%d %d\",&x,&y);\n	if (z!=2) break;\n	else {\n	printf(\"%d\\n\",x+y);\n	}\n	}\n}',1,11,0,0,'Main.cc:4:18: error: conio.h: No such file or directory\nMain.cc:5: error: \'::main\' must return \'int\'\n','2011-10-19 23:05:01',175),(483,76,1001,'void main(){\n	int x,y;\n	x=0;\n	y=0;\n	int z=2;\n	while(1){\n	z=scanf(\"%d %d\",&x,&y);\n	if (z!=2) break;\n	else {\n	printf(\"%d\\n\",x+y);\n	}\n	}\n}',1,11,0,0,'Main.cc:1: error: \'::main\' must return \'int\'\nMain.cc: In function \'int main()\':\nMain.cc:7: error: \'scanf\' was not declared in this scope\nMain.cc:10: error: \'printf\' was not declared in this scope\n','2011-10-19 23:07:11',105),(484,76,1001,'#include<iostream>\nusing namespace std;\n#include<stdio.h>\n#include<conio.h>\nint main(){\n	int x,y;\n	x=0;\n	y=0;\n	int z=2;\n	while(1){\n	z=scanf(\"%d %d\",&x,&y);\n	if (z!=2) break;\n	else {\n	printf(\"%d\\n\",x+y);\n	}\n	}\n	return 0;\n}',1,11,0,0,'Main.cc:4:18: error: conio.h: No such file or directory\n','2011-10-19 23:08:21',182),(485,76,1001,'#include<iostream>\nusing namespace std;\n#include<stdio.h>\nint main(){\n	int x,y;\n	x=0;\n	y=0;\n	int z=2;\n	while(1){\n	z=scanf(\"%d %d\",&x,&y);\n	if (z!=2) break;\n	else {\n	printf(\"%d\\n\",x+y);\n	}\n	}\n	return 0;\n}',1,4,1268,0,'','2011-10-19 23:09:17',165),(486,62,1020,'#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nint main()\n{\nfloat a[1000]={0};\nint i =0;\nint n =0;\n\nwhile(cin>>a[i])\n{\nif(a[i]==999) break;\ni++; n++;\n}\n\nfor(i=0; i<n-1; i++)\nif(a[i+1]-a[i]!=0)\ncout<<setprecision(2)<<fixed<<a[i+1]-a[i]<<endl;\n\ncout<<\"End of Output\"<<endl;\n\n\nreturn 0;}\n',1,6,1268,4,'','2011-10-20 02:46:15',258),(619,102,1001,'#include \"stdafx.h\"\n#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int a, b;\n	std::cin >> a >> b;\n	std::cout << a+b;\n	return 0;\n}\n\n',1,11,0,0,'Main.cc:1:20: error: stdafx.h: No such file or directory\n','2011-10-20 08:55:54',109),(620,102,1001,'#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int a, b;\n	std::cin >> a >> b;\n	std::cout << a+b;\n	return 0;\n}\n',1,6,1268,4,'','2011-10-20 08:56:35',91),(627,102,1001,'#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int a, b, i = 0,results[100];\n	//while(std::cin.get(a) && std::cin.get(b))\n	while(scanf(\"%d%d\", &a, &b))\n	{\n		results[i++] = a+b;\n	}\n\n	//std::cin >> a >> b;\n	for(int j=0; j < i; j++)\n		std::cout << results[j];\n	return 0;\n}\n',1,10,1264,8,'','2011-10-20 09:00:55',222),(628,47,1012,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\n\nint main()\n{\n	int n,a,b,c,min,max;\n	char s[20],smin[20],smax[20];\n	while(scanf(\"%d\", &n) && n != -1)\n	{\n		min = 10000000;\n		max = 0;\n		for(int i = 0; i < n; i++)\n		{\n			scanf(\"%d%d%d%s\",&a,&b,&c,s);\n			int t = (a * b * c);\n			if(min > t)\n			{\n				min = t;\n				strcpy(smin, s);\n			}\n			if(max < t)\n			{\n				max = t;\n				strcpy(smax, s);\n			}\n		}\n		printf(\"%s took clay from %s.\\n\", smax, smin);\n	}\n	return 0;\n}',1,4,1268,0,'','2011-10-20 09:01:48',353),(629,102,1001,'#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int a, b, i = 0,results[100];\n	//while(std::cin.get(a) && std::cin.get(b))\n	while(scanf(\"%d %d\\n\", &a, &b))\n	{\n		results[i++] = a+b;\n	}\n\n	//std::cin >> a >> b;\n	for(int j=0; j < i; j++)\n		std::cout << results[j] << std::endl;\n	return 0;\n}',1,10,1264,16,'','2011-10-20 09:03:44',235),(630,102,1001,'#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int a, b, i = 0,results[100];\n	//while(std::cin.get(a) && std::cin.get(b))\n	while(scanf(\"%d %d\\n\", &a, &b)==2)\n	{\n		results[i++] = a+b;\n	}\n\n	//std::cin >> a >> b;\n	for(int j=0; j < i; j++)\n		std::cout << results[j] << std::endl;\n	return 0;\n}\n\n',1,4,1268,4,'','2011-10-20 09:07:13',238),(631,102,1012,'#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int n;\n	//while(std::cin.get(a) && std::cin.get(b))\n	while(scanf(\"%d\", &n) == 1)\n	{\n		if (n == -1)\n			break;\n\n		int sizes[100][3];\n		char names[100][8];\n		for(int i = 0; i < n; i++)\n		{\n			scanf(\"%d %d %d %s\", &sizes[i][0], &sizes[i][1], &sizes[i][2], &names[i]);\n		}\n\n		int max = 0, maxi, min = 0, mini = 0;\n		for(int i = 0; i < n; i++)\n		{\n			int current = sizes[i][0] * sizes[i][1] * sizes[i][2];\n			if (current > max)\n			{\n				max = current;\n				maxi = i;\n			}\n			if (current < min || min == 0)\n			{\n				mini = i;\n				min = current;\n			}\n		}\n		\n		printf(\"%s took clay from %s\\n\", names[maxi], names[mini]);\n	}\n\n	return 0;\n}\n\n',1,6,1268,0,'','2011-10-20 09:27:03',492),(632,102,1012,'#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int n;\n	//while(std::cin.get(a) && std::cin.get(b))\n	while(scanf(\"%d\", &n) == 1)\n	{\n		if (n == -1)\n			break;\n\n		int sizes[300][3];\n		char names[300][10];\n		for(int i = 0; i < n; i++)\n		{\n			scanf(\"%d %d %d %s\", &sizes[i][0], &sizes[i][1], &sizes[i][2], &names[i]);\n		}\n\n		int max = 0, maxi, min = 0, mini = 0;\n		for(int i = 0; i < n; i++)\n		{\n			int current = sizes[i][0] * sizes[i][1] * sizes[i][2];\n			if (current > max)\n			{\n				max = current;\n				maxi = i;\n			}\n			if (current < min || min == 0)\n			{\n				mini = i;\n				min = current;\n			}\n		}\n		\n		printf(\"%s took clay from %s\\n\", names[maxi], names[mini]);\n	}\n\n	return 0;\n}\n\n',1,6,1268,4,'','2011-10-20 09:27:52',493),(633,102,1012,'#include \"stdio.h\"\n#include \"iostream\"\n\n\nint main()\n{\n	int n;\n	//while(std::cin.get(a) && std::cin.get(b))\n	while(scanf(\"%d\", &n) == 1)\n	{\n		if (n == -1)\n			break;\n\n		int sizes[300][3];\n		char names[300][10];\n		for(int i = 0; i < n; i++)\n		{\n			scanf(\"%d %d %d %s\", &sizes[i][0], &sizes[i][1], &sizes[i][2], &names[i]);\n		}\n\n		int max = 0, maxi, min = 0, mini = 0;\n		for(int i = 0; i < n; i++)\n		{\n			int current = sizes[i][0] * sizes[i][1] * sizes[i][2];\n			if (current > max)\n			{\n				max = current;\n				maxi = i;\n			}\n			if (current < min || min == 0)\n			{\n				mini = i;\n				min = current;\n			}\n		}\n		\n		printf(\"%s took clay from %s.\\n\", names[maxi], names[mini]);\n	}\n\n	return 0;\n}\n\n',1,4,1268,0,'','2011-10-20 09:29:11',494),(635,47,1003,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\n\nint n,a[101][25],cnt;\nvoid search()\n{\n	bool flag;\n	int j;\n	for(int i = 1; i < n; i++)\n	{\n		for(int k = 0; k < i; k++)\n		{\n			for(j = 0; j < cnt; j++)\n			{\n				flag = false;\n				for(int m = 0; m < cnt; m++)\n				{\n					if(a[i][j] == a[k][m])\n					{\n						flag = true;\n					}\n				}\n				if(!flag) break;\n			}\n			if(j == cnt)\n			{\n				printf(\"Card %d is equivalent to card %d\\n\", i + 1, k + 1);\n				break;\n			}\n		}\n	}\n}\nint main()\n{\n	int game = 1;\n	char pat[6][6];\n	while(1)\n	{\n		for(int i = 0; i < 5; i++)\n		{\n			cin >> pat[i];\n		}\n		cin >> n;\n		if(n == 0)\n			return 0;\n		int t,k;\n		for(int i = 0; i < n; i++)\n		{\n			k = 0;\n			for(int j = 0; j < 25; j++)\n			{\n				cin >> t;\n				if(pat[j / 5][j % 5] == \'X\')\n					a[i][k++] = t;\n			}\n			cnt = k;\n		}\n		cout << \"Game \" << game << endl;\n		search();\n		cout << endl;\n		game++;		\n	}\n}',1,5,1276,76,'','2011-10-20 09:58:31',581),(637,47,1003,'#include <iostream>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\n\nint n,a[101][25],cnt;\nvoid search()\n{\n	bool flag;\n	int j;\n	for(int i = 1; i < n; i++)\n	{\n		for(int k = 0; k < i; k++)\n		{\n			for(j = 0; j < cnt; j++)\n			{\n				flag = false;\n				for(int m = 0; m < cnt; m++)\n				{\n					if(a[i][j] == a[k][m])\n					{\n						flag = true;\n					}\n				}\n				if(!flag) break;\n			}\n			if(j == cnt)\n			{\n				printf(\"Card %d is equivalent to card %d\\n\", i + 1, k + 1);\n				break;\n			}\n		}\n	}\n}\nint main()\n{\n	int game = 1;\n	char pat[6][6];\n	while(1)\n	{\n		for(int i = 0; i < 5; i++)\n		{\n			cin >> pat[i];\n		}\n		cin >> n;\n		if(n == 0)\n			return 0;\n		if(game != 1)cout << endl;\n		int t,k;\n		for(int i = 0; i < n; i++)\n		{\n			k = 0;\n			for(int j = 0; j < 25; j++)\n			{\n				cin >> t;\n				if(pat[j / 5][j % 5] == \'X\')\n					a[i][k++] = t;\n			}\n			cnt = k;\n		}\n		cout << \"Game \" << game << endl;\n		search();\n		game++;		\n	}\n}',1,4,1276,84,'','2011-10-20 09:59:46',592),(660,10,1043,'import java.util.*;\n\npublic class Main\n{\n	static boolean[] prime;\n	\n	public static void main(String[] arqs)\n	{\n		Scanner scan = new Scanner(System.in);\n		\n		prime = new boolean[10000000];\n		\n		int MAX = prime.length;\n		Arrays.fill(prime, true);\n		\n		prime[0] = prime[1] = false;\n		\n		for(int i = 2;i < MAX;i++)\n			if(prime[i])\n				for(int j = 2*i;j < MAX;j+=i)\n					prime[j] = false;\n		\n		int ca = scan.nextInt();\n		scan.nextLine();\n		while(ca-->0)\n		{\n			String num = scan.nextLine();\n			int n = num.length();\n			\n			int[] digits = new int[n];\n			for(int i = 0;i < n;i++)\n			{\n				digits[i] = num.charAt(i)-\'0\';\n			}\n			\n			HashSet<Integer> map = new HashSet<Integer>();\n			\n			rec(digits, new boolean[n], 0, 0, map, n);\n			\n			System.out.println(map.size());\n		}\n	}\n	\n	static void rec(int[] digits, boolean[] used, int at, int num, HashSet<Integer> have, int n)\n	{\n		if(prime[num] && !have.contains(num))\n		{\n			have.add(num);\n		}\n		\n		if(at == n)\n			return;\n		\n		for(int i = 0;i < n;i++)\n			if(!used[i])\n			{\n				used[i] = true;\n				num *= 10;\n				num += digits[i];\n				rec(digits, used, at+1, num, have, n);\n				num /= 10;\n				used[i] = false;\n			}\n	}\n}\n',3,4,26672,1632,'','2011-10-21 05:48:31',841),(661,12,1043,'#include <iostream>\n#include <cstring>\n#include <set>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n#define MAX(a,b) ((a>b)?(a):(b))\nbool checked[8];\nbool marked[10000];\nstring s;\nint ans;\nint numofprimes=0;\nint primes[10000];\n\nbool prime(int n)\n{\n	if ( n <2 ) return false;\n\n	for (int i=0;i<numofprimes && primes[i]<n;i++)\n		if (!(n%primes[i]))\n			return false;\n	return true;\n}\nset<int> nums;\nvoid dfs(string now,int depth)\n{\n	if (depth==s.size()+1)\n		return;\n	int n=atoi(now.c_str());\n	if (prime(n) && nums.find(n)==nums.end())\n	{\n		nums.insert(n);\n		ans++;\n	}	\n	for (int i=0;i<s.size();i++)\n	{\n		if (depth==0 && s[i]==\'0\')\n		       continue;	\n		if (!checked[i])\n		{\n			checked[i]=true;\n			dfs(now+s[i],depth+1);\n			checked[i]=false;\n		}\n	}\n}\n\nint main()\n{\n	memset(marked,0,sizeof(marked));\n	marked[0]=1;\n	marked[1]=1;\n	for (int i=2;i<10000;i++)\n		if (!marked[i])\n		{\n			for (int j=i+i;j<10000;j+=i)\n				marked[j]=true;\n			primes[numofprimes++]=i;\n		}\n	int T;\n	for (cin>>T;T--;)\n	{\n		nums.clear();\n		ans=0;\n		cin>>s;\n		memset(checked,0,sizeof(checked));\n		dfs(\"\",0);\n		cout<<ans<<endl;\n	}\n}',1,4,1320,772,'','2011-10-21 05:52:40',929),(662,10,1045,'#include <iostream>\n#include <string.h>\nusing namespace std;\nint arr[1000002];\nint main () {\n	int c; cin >> c;\n	while (c--) {\n		int d, n; cin >> d >> n;\n		int sum = 0;\n		memset(arr, 0, sizeof(int)*d);\n		arr[0]++;\n		for (int i=0;i<n;i++) {\n			int t; cin >> t;\n			sum += t;\n			sum %= d;\n			arr[sum]++;\n		}\n		int ans = 0;\n		for (int i=0;i<d;i++) {\n			ans += arr[i]*(arr[i]-1)/2;\n		}\n		cout << ans << endl;\n	}\n	\n	\n	return 0;\n}\n',1,6,5176,740,'','2011-10-21 05:53:32',305),(663,10,1045,'#include <stdio.h>\n#include <string.h>\nint arr[1000002];\nint main () {\n\n	int c; scanf(\"%d\", &c);\n	while (c--) {\n		int d, n; scanf(\"%d %d\", &d, &n);\n		int sum = 0;\n		memset(arr, 0, sizeof(int)*d);\n		arr[0]++;\n		for (int i=0;i<n;i++) {\n			int t; scanf(\"%d\", &t);\n			sum += t;\n			sum %= d;\n			arr[sum]++;\n		}\n		long long ans = 0;\n		for (int i=0;i<d;i++) {\n			if (arr[i]%2 == 0) {\n				ans += (arr[i]/2)*(arr[i]-1);\n			}else {\n				ans += arr[i]*((arr[i]-1)/2);\n			}\n		}\n		printf(\"%ld\\n\", ans);\n	}\n	\n	\n	return 0;\n}\n',1,4,4708,332,'','2011-10-21 06:11:30',373),(664,104,1001,'#include <iostream>\n\nusing namespace std:\n\nint main()\n{\n   int a, b;\n   while(cin>>a>>b)\n    {\n       cout<<a+b<<endl;\n     }\nreturn 0;\n}',1,11,0,0,'Main.cc:3: error: expected \';\' before \':\' token\nMain.cc:3: error: expected unqualified-id before \':\' token\n','2011-10-21 06:13:51',96),(665,104,1001,'#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    long long a, b;\n	while(cin>>a>>b)\n	{\n		cout<<a+b<<endl;\n	\n	}\n    return 0;\n}',1,4,1236,0,'','2011-10-21 06:16:25',101),(666,101,1045,'#include<iostream>\nusing namespace std;\n\nint x[50005], a[1000001];\n\nint main(){\n	int T;\n	cin >> T;\n	while(T--){\n		int d, n;\n		cin >> d >> n;\n		for(int i = 0 ; i < d ; i++)\n			a[i] = 0;\n		int sum = 0;\n		int counter = 0;\n		for(int i = 0; i < n; i++){\n			cin >> x[i];\n			sum += x[i];\n			int temp = sum%d;\n			if(temp == 0)\n				counter += a[temp]+1;\n			else\n				counter += a[temp];\n			a[temp]++;\n		}\n		cout << counter << endl;\n	}\n	return 0;\n}',1,10,5336,16,'','2011-10-21 06:16:51',303),(667,101,1045,'#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint a[1000002];\n\nint main(){\n	int T;\n	cin >> T;\n	while(T--){\n		int d, n;\n		cin >> d >> n;\n		memset(&a[0], 0, sizeof(int)*d);\n		int sum = 0;\n		int counter = 0;\n		for(int i = 0; i < n; i++){\n			int x;\n			cin >> x;\n			sum += x;\n			int temp = sum%d;\n			if(temp == 0)\n				counter += a[temp]+1;\n			else\n				counter += a[temp];\n			a[temp]++;\n		}\n		cout << counter << endl;\n	}\n	return 0;\n}',1,10,5144,8,'','2011-10-21 06:21:09',314),(668,101,1045,'#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint a[1000002];\n\nint main(){\n	int T;\n	cin >> T;\n	while(T--){\n		int d, n;\n		cin >> d >> n;\n		memset(&a[0], 0, sizeof(int)*d);\n		int sum = 0;\n		int counter = 0;\n		for(int i = 0; i < n; i++){\n			int x;\n			cin >> x;\n			sum = (sum%d+x%d)%d;\n			int temp = sum%d;\n			if(temp == 0)\n				counter += a[temp]+1;\n			else\n				counter += a[temp];\n			a[temp]++;\n		}\n		cout << counter << endl;\n	}\n	return 0;\n}',1,4,5176,784,'','2011-10-21 06:23:22',325),(669,12,1045,'#include <iostream>\n#include <cstring>\n#include <set>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n#define MAX(a,b) ((a>b)?(a):(b))\n#define rep(a,b,c) for(int a=b; a<c; a++)\nint ar[50009];\nint dd[1000009];\nint d,n;\nint main(){\n\n	int t;\n	cin>>t;\n	while(t--){\n		cin>>d>>n;\n		rep(i,0,n)cin>>ar[i];\n		int p=0;\n		long long sum=0;\n		memset(dd,0,sizeof(dd));\n		rep(i,0,n){\n			int tmp = ar[i];\n			int asli = (p+tmp)%d;\n			sum+=dd[(d-tmp+p)%d];\n			if(tmp%d==0)sum++;\n			p = p-tmp;\n			if(p<0)p+=d;\n			asli = (tmp+p)%d;\n			dd[asli]++;\n		}\n		//rep(i,0,d)cout<<dd[i]<<\" \";\n\n		//cout<<p<<endl;\n		cout<<sum<<endl;\n\n	}\n	return 0;\n}',1,10,5368,260,'','2011-10-21 06:33:06',540),(670,12,1045,'#include <iostream>\n#include <cstring>\n#include <set>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n#define MAX(a,b) ((a>b)?(a):(b))\n#define rep(a,b,c) for(int a=b; a<c; a++)\nint ar[50009];\nint dd[1000009];\nint d,n;\nint main(){\n\n	int t;\n	cin>>t;\n	while(t--){\n		cin>>d>>n;\n		rep(i,0,n)cin>>ar[i];\n		int p=0;\n		long long sum=0;\n		memset(dd,0,sizeof(dd));\n		rep(i,0,n){\n			int tmp = ar[i];\n			int asli = (p+tmp)%d;\n			tmp%=d;\n			sum+=dd[(d-tmp+p)%d];\n			if(tmp%d==0)sum++;\n			p = p-tmp;\n			if(p<0)p+=d;\n			asli = (tmp+p)%d;\n			dd[asli]++;\n		}\n		//rep(i,0,d)cout<<dd[i]<<\" \";\n\n		//cout<<p<<endl;\n		cout<<sum<<endl;\n\n	}\n	return 0;\n}\n',0,11,0,0,'Main.c:1:20: error: iostream: No such file or directory\nMain.c:2:19: error: cstring: No such file or directory\nMain.c:3:15: error: set: No such file or directory\nMain.c:4:18: error: vector: No such file or directory\nMain.c:5:21: error: algorithm: No such file or directory\nMain.c:6:18: error: cstdio: No such file or directory\nMain.c:7:17: error: cmath: No such file or directory\nMain.c:8: error: expected \'=\', \',\', \';\', \'asm\' or \'__attribute__\' before \'namespace\'\nMain.c: In function \'main\':\nMain.c:17: error: \'cin\' undeclared (first use in this function)\nMain.c:17: error: (Each undeclared identifier is reported only once\nMain.c:17: error: for each function it appears in.)\nMain.c:23: warning: implicit declaration of function \'memset\'\nMain.c:23: warning: incompatible implicit declaration of built-in function \'memset\'\nMain.c:38: error: \'cout\' undeclared (first use in this function)\nMain.c:38: error: \'endl\' undeclared (first use in this function)\n','2011-10-21 06:35:10',547),(671,12,1045,'#include <iostream>\n#include <cstring>\n#include <set>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n#define MAX(a,b) ((a>b)?(a):(b))\n#define rep(a,b,c) for(int a=b; a<c; a++)\nint ar[50009];\nint dd[1000009];\nint d,n;\nint main(){\n\n	int t;\n	cin>>t;\n	while(t--){\n		cin>>d>>n;\n		rep(i,0,n)cin>>ar[i];\n		int p=0;\n		long long sum=0;\n		memset(dd,0,sizeof(dd));\n		rep(i,0,n){\n			int tmp = ar[i];\n			int asli = (p+tmp)%d;\n			tmp%=d;\n			sum+=dd[(d-tmp+p)%d];\n			if(tmp%d==0)sum++;\n			p = p-tmp;\n			if(p<0)p+=d;\n			asli = (tmp+p)%d;\n			dd[asli]++;\n		}\n		//rep(i,0,d)cout<<dd[i]<<\" \";\n\n		//cout<<p<<endl;\n		cout<<sum<<endl;\n\n	}\n	return 0;\n}\n',1,4,5368,948,'','2011-10-21 06:36:54',547),(672,103,1043,'#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<cmath>\n\nusing namespace std;\n\nconst int maxN = 1000*1000*100 +2;\nunsigned char isPrimes[maxN];\nmap<int, bool> forChecking;\nvector<int> results;\n\n\nbool isPrime(int k)\n{\n	if( isPrimes[k] != 0)\n		return isPrimes[k]-1;\n	int size = sqrt((double)k) +1;\n	for(int i =2; i<= size; i++)\n	{\n		if( k%i == 0)\n		{\n			isPrimes[k] = 1;\n			return false;\n		}\n	}\n	isPrimes[k] = 2;\n	return true;\n\n}\nint main()\n{\n	int t;\n	cin >> t;\n	isPrimes[0] = 1;\n	isPrimes[1] = 1;\n	isPrimes[2] = 2;\n	isPrimes[3] = 2;\n	for(int i =0; i<t; i++)\n	{\n		string s;\n		cin >> s;\n		vector<int> numbers;\n		forChecking.clear();\n		results.clear();\n		for(int i =0; i<(int)s.size(); i++)\n			numbers.push_back( s[i] -\'0\');\n		sort(numbers.begin(), numbers.end());\n		do\n		{\n			int u = 0;\n			for(int i =0; i< (int)numbers.size(); i++)\n			{\n				u = u*10 + numbers[i];\n				if( isPrime(u))\n				{\n					if( forChecking.find(u) == forChecking.end() )\n					{\n						forChecking[u] = true;\n						results.push_back(u);\n					}\n				}\n			}\n		}\n		while( next_permutation(numbers.begin(), numbers.end()));\n		cout << results.size() << endl;\n	}\n	return 0;\n}\n',1,8,98796,0,'','2011-10-21 06:56:45',894),(673,103,1043,'#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<cmath>\n\nusing namespace std;\n\nconst int maxN = 1000*100 +2;\nunsigned char isPrimes[maxN];\nmap<int, bool> forChecking;\nvector<int> results;\n\n\nbool isPrime2(int k)\n{\n	int size = sqrt((double)k) +1;\n	for(int i =2; i<= size; i++)\n	{\n		if( k%i == 0)\n		{\n			return false;\n		}\n	}\n	return true;\n\n}\n\nbool isPrime(int k)\n{\n	if( k > maxN -10)\n		return isPrime2(k);\n	if( isPrimes[k] != 0)\n		return isPrimes[k]-1;\n	int size = sqrt((double)k) +1;\n	for(int i =2; i<= size; i++)\n	{\n		if( k%i == 0)\n		{\n			isPrimes[k] = 1;\n			return false;\n		}\n	}\n	isPrimes[k] = 2;\n	return true;\n\n}\n\n\nint main()\n{\n	int t;\n	cin >> t;\n	isPrimes[0] = 1;\n	isPrimes[1] = 1;\n	isPrimes[2] = 2;\n	isPrimes[3] = 2;\n	for(int i =0; i<t; i++)\n	{\n		string s;\n		cin >> s;\n		vector<int> numbers;\n		forChecking.clear();\n		results.clear();\n		for(int i =0; i<(int)s.size(); i++)\n			numbers.push_back( s[i] -\'0\');\n		sort(numbers.begin(), numbers.end());\n		do\n		{\n			int u = 0;\n			for(int i =0; i< (int)numbers.size(); i++)\n			{\n				u = u*10 + numbers[i];\n				if( isPrime(u))\n				{\n					if( forChecking.find(u) == forChecking.end() )\n					{\n						forChecking[u] = true;\n						results.push_back(u);\n					}\n				}\n			}\n		}\n		while( next_permutation(numbers.begin(), numbers.end()));\n		cout << results.size() << endl;\n	}\n	return 0;\n}\n',1,4,1380,248,'','2011-10-21 06:59:00',1026),(674,101,1043,'#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n#define MAX_NUM 100000005\n#define MAXN 100005\n\nvector<bool> primes(MAXN, 1);\nint prime[MAXN];\nint K;\n\nvoid gharbal()\n{\n	primes[0] = 0;\n	primes[1] = 0;\n	for(int i = 2;i < MAXN;i++)\n	{\n		if(primes[i])\n		{\n			prime[K++] = i;\n			for(int j = i+i;j < MAXN;j+=i)\n				primes[j] = 0;\n		}\n	}\n	return;\n}\n\nbool prime2(int x){\n	if(x < MAXN)\n		return primes[x];\n	for(int i = 0; i < K && prime[i]*prime[i] <= x; i++)\n		if(x%prime[i] == 0)\n			return false;\n	return true;\n}\n\nint main()\n{\n	gharbal();\n	int T;\n	cin >> T;\n	while(T--)\n	{\n		vector <bool> mark(MAX_NUM, 0);\n		string N;\n		cin >> N;\n		int D = N.size();\n		int nums[10];\n		for(int i = 0;i < N.size();i++)\n			nums[i] = N[i]-\'0\';\n		sort(nums, nums+D);\n		int con = 0;\n\n		do{\n			int tmp = 0;\n			for(int j = 1; j <= D; j++){\n				tmp = 0;\n				for(int i = 0;i < j;i++)\n				{\n					tmp *= 10;\n					tmp += nums[i];\n				}\n				if(!mark[tmp] && prime2(tmp))\n				{\n					con++;\n					mark[tmp] = true;\n				}\n			}\n		}while(next_permutation(nums, nums+D));\n		cout << con << endl;\n	}\n}',1,7,13868,2000,'','2011-10-21 07:02:15',788),(675,103,1045,'#include<iostream>\n\nusing namespace std;\n\nconst int maxN = 50*1000 + 2;\n\nint remain[maxN];\nint numbers[maxN];\n\nvoid init()\n{\n	for(int i =0; i<maxN; i++)\n		remain[i] = -1;\n}\n\nint main()\n{\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int d,n;\n		int result = 0;\n		cin >> d >> n;\n		cin >> numbers[0];\n		numbers[0] = numbers[0] %d;\n		remain[0] = numbers[0];\n		if( remain[0] == 0)\n			result++;\n		for(int j = 1; j<n; j++)\n		{\n			cin >> numbers[j];\n			numbers[j] %= d;\n			remain[j] = (remain[j-1] + numbers[j]) %d;\n			if( remain[j] == 0)\n				result++;\n		}\n		for(int j = 0; j < n; j++)\n		{\n			for(int k = j+1; k < n; k++)\n			{\n				if( remain[k] == remain[j])\n					result++;\n			}\n		}\n		cout << result << endl;\n	}\n}\n',1,7,1660,2000,'','2011-10-21 07:21:59',507),(676,101,1043,'#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n#define MAX_NUM 100000005\n#define MAXN 10005\n\nvector<bool> primes(MAXN, 1);\n\nvector<bool> pMark(MAX_NUM, 0);\nvector<bool> pVal(MAX_NUM, 0);\n\nint prime[MAXN];\nint K;\n\nvoid gharbal()\n{\n	primes[0] = 0;\n	primes[1] = 0;\n	for(int i = 2;i < MAXN;i++)\n	{\n		if(primes[i])\n		{\n			prime[K++] = i;\n			for(int j = i+i;j < MAXN;j+=i)\n				primes[j] = 0;\n		}\n	}\n	return;\n}\n\nbool prime2(int x){\n	if(x < MAXN)\n		return primes[x];\n	if(pMark[x])\n		return pVal[x];\n	for(int i = 0; i < K && prime[i]*prime[i] <= x; i++)\n		if(x%prime[i] == 0)\n		{\n			pMark[x] = true;\n			pVal[x] = false;\n			return false;\n		}\n	pMark[x] = true;\n	pVal[x] = true;\n	return true;\n}\n\nint main()\n{\n	gharbal();\n	int T;\n	cin >> T;\n	while(T--)\n	{\n		string N;\n		cin >> N;\n		int D = N.size();\n		int nums[10];\n		for(int i = 0;i < N.size();i++)\n			nums[i] = N[i]-\'0\';\n		sort(nums, nums+D);\n		int con = 0;\n\n		int nums2[10];\n		for(int i = 1;i < 1<<D;i++)\n		{\n			int k = 0;\n			for(int j = 0; j < D; j++)\n				if(i & 1<<j)\n					nums2[k++] = nums[j];\n			do{\n				int tmp = 0;\n				for(int i = 0;i < k;i++)\n				{\n					tmp *= 10;\n					tmp += nums2[i];\n				}\n				if(prime2(tmp))\n					con++;		\n			}while(next_permutation(nums2, nums2+k));\n		}\n\n		cout << con << endl;\n	}\n}',1,6,25728,100,'','2011-10-21 07:29:26',937),(677,103,1045,'#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nconst int maxN = 50*1000 + 2;\n\nint remain[maxN];\nint numbers[maxN];\n\n\nvoid init()\n{\n	for(int i =0; i<maxN; i++)\n		remain[i] = -1;\n}\n\nint fact(int k)\n{\n	return k*(k-1)/2;\n}\n\nint main()\n{\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int d,n;\n		int result = 0;\n		cin >> d >> n;\n		cin >> numbers[0];\n		numbers[0] = numbers[0] %d;\n		remain[0] = numbers[0];\n		if( remain[0] == 0)\n			result++;\n		for(int j = 1; j<n; j++)\n		{\n			cin >> numbers[j];\n			numbers[j] %= d;\n			remain[j] = (remain[j-1] + numbers[j]) %d;\n			if( remain[j] == 0)\n				result++;\n		}\n		sort(remain , remain + n);\n		int counter = 1;\n		for(int j = 1; j< n; j++)\n		{\n			if( remain[j] != remain[j-1])\n			{\n				if( counter != 1)\n					result += fact(counter);\n				counter = 1;\n			}\n			else\n				counter++;\n		}\n		if( counter != 1)\n			result += fact(counter);\n		/*for(int j = 0; j < n; j++)\n		{\n			for(int k = j+1; k < n; k++)\n			{\n				if( remain[k] == remain[j])\n					result++;\n			}\n		}*/\n		cout << result << endl;\n	}\n}\n',1,6,1660,792,'','2011-10-21 07:31:43',741),(678,101,1043,'#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n#define MAX_NUM 100000005\n#define MAXN 10005\n\nvector<bool> primes(MAXN, 1);\n\nvector<bool> pMark(MAX_NUM, 0);\nvector<bool> pVal(MAX_NUM, 0);\n\nint prime[MAXN];\nint K;\n\nvoid gharbal()\n{\n	primes[0] = 0;\n	primes[1] = 0;\n	for(int i = 2;i < MAXN;i++)\n	{\n		if(primes[i])\n		{\n			prime[K++] = i;\n			for(int j = i+i;j < MAXN;j+=i)\n				primes[j] = 0;\n		}\n	}\n	return;\n}\n\nbool prime2(int x){\n	if(x < MAXN)\n		return primes[x];\n	if(pMark[x])\n		return pVal[x];\n	for(int i = 0; i < K && prime[i]*prime[i] <= x; i++)\n		if(x%prime[i] == 0)\n		{\n			pMark[x] = true;\n			pVal[x] = false;\n			return false;\n		}\n	pMark[x] = true;\n	pVal[x] = true;\n	return true;\n}\n\nint main()\n{\n	gharbal();\n	int T;\n	cin >> T;\n	while(T--)\n	{\n		string N;\n		cin >> N;\n		int D = N.size();\n		int nums[10];\n		for(int i = 0;i < N.size();i++)\n			nums[i] = N[i]-\'0\';\n		sort(nums, nums+D);\n		int con = 0;\n\n		int nums2[10];\n		for(int i = 1;i < 1<<D;i++)\n		{\n			int k = 0;\n			for(int j = 0; j < D; j++)\n				if(i & 1<<j)\n					nums2[k++] = nums[j];\n			do{\n				int tmp = 0;\n				if(nums2[0] == 0)\n					continue;\n				for(int i = 0;i < k;i++)\n				{\n					tmp *= 10;\n					tmp += nums2[i];\n				}\n				if(prime2(tmp))\n				{\n					con++;\n				}		\n			}while(next_permutation(nums2, nums2+k));\n		}\n\n		cout << con << endl;\n	}\n}',1,6,25728,100,'','2011-10-21 07:36:55',963),(679,14,1046,'#include <iostream>\n#include <complex>\n#include <algorithm>\n#include <iomanip>\nusing namespace std;\ntypedef complex<long double > point;\nconst int MAX_N=1000;\nconst double EPS = 1E-7;\npoint a[MAX_N];\npoint backup[MAX_N];\ndouble sum[MAX_N];\nint main(){\n	int t;\n	cin >> t;\n	while (t--){\n		int n;\n		cin >> n;\n		for(int i=0;i<n;i++)\n		{\n			cin  >> a[i].real() >> a[i].imag();\n			backup[i]=a[i]-a[0];\n			if(!i)\n				sum[i]=0;\n			else\n				sum[i]=sum[i-1]+abs(a[i]-a[i-1]);\n		}\n		for(int i=0;i<n;i++)\n			backup[i]/=backup[n-1];\n		int depth;\n		long double fraction;\n		cin >> depth;\n		cin >> fraction;\n		cerr << depth << endl;\n		for(int i=0;i<depth-1;i++){\n			int start = upper_bound(sum,sum+n,fraction*sum[n-1])-sum-1;\n			cerr <<start << \" \" << fraction << endl;\n			point p1 = a[start];\n			point p2 = a[start+1];\n			for(int i=0;i<n;i++)\n				a[i]=backup[i]*(p2-p1)+p1;\n			fraction -= sum[start]/sum[n-1];\n			fraction *= (sum[n-1])/(sum[start+1]-sum[start]);\n			cerr <<start << \" * \" << fraction << endl;\n		}\n		int start = upper_bound(sum,sum+n,fraction*sum[n-1])-sum-1;\n		fraction *= (sum[n-1])/(sum[start+1]-sum[start]);\n		point p1 = a[start];\n		point p2 = a[start+1];\n		point ans =point(fraction,0);\n		ans *=p2-p1;\n		ans +=p1;\n		if(abs(ans.real() < EPS))\n			ans.real()=0;\n		if(abs(ans.imag() < EPS))\n			ans.imag()=0;\n		cout << setprecision(10) <<  ans << endl;\n\n	}\n }\n',1,10,1372,4,'','2011-10-21 07:43:16',1090),(680,101,1043,'#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <set>\n\nusing namespace std;\n#define MAX_NUM 100000005\n#define MAXN 10005\n\nvector<bool> primes(MAXN, 1);\n\nvector<bool> pMark(MAX_NUM, 0);\nvector<bool> pVal(MAX_NUM, 0);\n\nint prime[MAXN];\nint K;\n\nvoid gharbal()\n{\n	primes[0] = 0;\n	primes[1] = 0;\n	for(int i = 2;i < MAXN;i++)\n	{\n		if(primes[i])\n		{\n			prime[K++] = i;\n			for(int j = i+i;j < MAXN;j+=i)\n				primes[j] = 0;\n		}\n	}\n	return;\n}\n\nbool prime2(int x){\n	if(x < MAXN)\n		return primes[x];\n	if(pMark[x])\n		return pVal[x];\n	for(int i = 0; i < K && prime[i]*prime[i] <= x; i++)\n		if(x%prime[i] == 0)\n		{\n			pMark[x] = true;\n			pVal[x] = false;\n			return false;\n		}\n	pMark[x] = true;\n	pVal[x] = true;\n	return true;\n}\n\nint main()\n{\n	gharbal();\n	int T;\n	cin >> T;\n	while(T--)\n	{\n		string N;\n		cin >> N;\n		int D = N.size();\n		int nums[10];\n		for(int i = 0;i < N.size();i++)\n			nums[i] = N[i]-\'0\';\n		sort(nums, nums+D);\n		int con = 0;\n\n		set<int> exist;\n		int nums2[10];\n		for(int i = 1;i < 1<<D;i++)\n		{\n			int k = 0;\n			for(int j = 0; j < D; j++)\n				if(i & 1<<j)\n					nums2[k++] = nums[j];\n			do{\n				int tmp = 0;\n				if(nums2[0] == 0)\n					continue;\n				for(int i = 0;i < k;i++)\n				{\n					tmp *= 10;\n					tmp += nums2[i];\n				}\n				if(prime2(tmp) && exist.count(tmp) == 0)\n				{\n					con++;\n					exist.insert(tmp);\n				}		\n			}while(next_permutation(nums2, nums2+k));\n		}\n\n		cout << con << endl;\n	}\n}',1,4,25728,104,'','2011-10-21 07:46:33',1029),(681,10,1048,'import java.util.*;\n\npublic class Main\n{\n    static long min;\n    static ArrayList<Integer> all = new ArrayList<Integer>();\n    static long cnt = 0;\n\n    public static void main(String[] arqs)\n    {\n        Scanner scan = new Scanner(System.in);\n        int ca = scan.nextInt();\n\n        while(ca-- > 0)\n        {\n            int n = scan.nextInt();\n\n            int[] go = new int[n];\n            ArrayList<Integer>[] neighs = new ArrayList[n];\n            ArrayList<Integer>[] raftan = new ArrayList[n];\n            ArrayList<Long>[] sum = new ArrayList[n];\n            ArrayList<Long>[] cost = new ArrayList[n];\n\n            for(int i = 0;i < n;i++)\n            {\n                neighs[i] = new ArrayList<Integer>();\n                raftan[i] = new ArrayList<Integer>();\n                sum[i] = new ArrayList<Long>();\n                cost[i] = new ArrayList<Long>();\n            }\n\n            for(int i = 0;i < n-1;i++)\n            {\n                int a = scan.nextInt()-1;\n                int b = scan.nextInt()-1;\n                int c = scan.nextInt()*2;\n\n                neighs[a].add(b);\n                raftan[a].add(-1);\n                sum[a].add((long)-1);\n                cost[a].add((long)c);\n\n                neighs[b].add(a);\n                raftan[b].add(-1);\n                sum[b].add((long)-1);\n                cost[b].add((long)c);\n            }\n\n            int m = scan.nextInt();\n\n            for(int i = 0;i < m;i++)\n            {\n                go[scan.nextInt()-1] = scan.nextInt();\n            }\n\n            cnt = 0;\n            for(int i : go)\n                cnt += i;\n\n\n            dfs(0, n, go, neighs, raftan, sum, cost, new boolean[n]);\n\n            min = Long.MAX_VALUE;\n            all = new ArrayList<Integer>();\n\n            long total = 0;\n            for(long i : sum[0])\n                total += i;\n\n            dfs2(0, n, neighs, raftan, sum, new boolean[n], go, total, cost);\n\n\n            System.out.println(min);\n            boolean first = true;\n            for(int i : all)\n            {\n                System.out.print((first ? \"\" : \" \") + (i+1));\n                first = false;\n            }\n            System.out.println();\n        }\n    }\n\n    private static void dfs2(int at, int n, ArrayList<Integer>[] neighs, ArrayList<Integer>[] raftan, ArrayList<Long>[] sum, boolean[] visited, int[] goes, long now, ArrayList<Long>[] cost)\n    {\n        visited[at] = true;\n\n        if(now < min)\n        {\n            min = now;\n            all = new ArrayList<Integer>();\n            all.add(at);\n        }\n        else if(now == min)\n        {\n            all.add(at);\n        }\n\n        for(int i = 0;i < neighs[at].size();i++)\n            if(!visited[neighs[at].get(i)])\n            {\n                dfs2(neighs[at].get(i), n, neighs, raftan, sum, visited, goes, now-cost[at].get(i)*raftan[at].get(i)+cost[at].get(i)*(cnt-raftan[at].get(i)), cost);\n            }\n    }\n\n    private static abc dfs(int at, int n, int[] goes, ArrayList<Integer>[] neighs, ArrayList<Integer>[] raftan, ArrayList<Long>[] sum, ArrayList<Long>[] cost, boolean[] visited)\n    {\n        visited[at] = true;\n        abc ret = new abc(0, 0);\n        ret.raftan = goes[at];\n\n        for(int i = 0;i < neighs[at].size();i++)\n            if(!visited[neighs[at].get(i)])\n            {\n                abc get = dfs(neighs[at].get(i), n, goes, neighs, raftan, sum, cost, visited);\n                raftan[at].set(i, get.raftan);\n                sum[at].set(i, get.sum+get.raftan*cost[at].get(i));\n\n                ret.raftan += raftan[at].get(i);\n                ret.sum += sum[at].get(i);\n            }\n\n        return ret;\n    }\n}\n\nclass abc\n{\n    int raftan;\n    long sum;\n\n    abc(int a, long b)\n    {\n        raftan = a;\n        sum = b;\n    }\n}',3,10,2608,2760,'','2011-10-21 07:49:33',2266),(682,14,1046,'#include <iostream>\n#include <complex>\n#include <algorithm>\n#include <iomanip>\nusing namespace std;\ntypedef complex<long double > point;\nconst int MAX_N=1000;\nconst double EPS = 1E-7;\npoint a[MAX_N];\npoint backup[MAX_N];\ndouble sum[MAX_N];\nint main(){\n	int t;\n	cin >> t;\n	while (t--){\n		int n;\n		cin >> n;\n		for(int i=0;i<n;i++)\n		{\n			cin  >> a[i].real() >> a[i].imag();\n			backup[i]=a[i]-a[0];\n			if(!i)\n				sum[i]=0;\n			else\n				sum[i]=sum[i-1]+abs(a[i]-a[i-1]);\n		}\n		for(int i=0;i<n;i++)\n			backup[i]/=backup[n-1];\n		int depth;\n		long double fraction;\n		cin >> depth;\n		cin >> fraction;\n	//	cerr << depth << endl;\n		for(int i=0;i<depth-1;i++){\n			int start = upper_bound(sum,sum+n,fraction*sum[n-1])-sum-1;\n		//	cerr <<start << \" \" << fraction << endl;\n			point p1 = a[start];\n			point p2 = a[start+1];\n			for(int i=0;i<n;i++)\n				a[i]=backup[i]*(p2-p1)+p1;\n			fraction -= sum[start]/sum[n-1];\n			fraction *= (sum[n-1])/(sum[start+1]-sum[start]);\n	//		cerr <<start << \" * \" << fraction << endl;\n		}\n		int start = upper_bound(sum,sum+n,fraction*sum[n-1])-sum-1;\n		fraction *= (sum[n-1])/(sum[start+1]-sum[start]);\n		point p1 = a[start];\n		point p2 = a[start+1];\n		point ans =point(fraction,0);\n		ans *=p2-p1;\n		ans +=p1;\n		if(abs(ans.real()) < EPS)\n			ans.real()=0;\n		if(abs(ans.imag()) < EPS)\n			ans.imag()=0;\n		cout << setprecision(10) <<  ans << endl;\n\n	}\n }\n',1,6,1376,8,'','2011-10-21 07:53:11',1096),(683,14,1046,'#include <iostream>\n#include <complex>\n#include <algorithm>\n#include <iomanip>\nusing namespace std;\ntypedef complex<long double > point;\nconst int MAX_N=1000;\nconst double EPS = 1E-7;\npoint a[MAX_N];\npoint backup[MAX_N];\ndouble sum[MAX_N];\nint main(){\n	int t;\n	cin >> t;\n	while (t--){\n		int n;\n		cin >> n;\n		for(int i=0;i<n;i++)\n		{\n			cin  >> a[i].real() >> a[i].imag();\n			backup[i]=a[i]-a[0];\n			if(!i)\n				sum[i]=0;\n			else\n				sum[i]=sum[i-1]+abs(a[i]-a[i-1]);\n		}\n		for(int i=0;i<n;i++)\n			backup[i]/=backup[n-1];\n		int depth;\n		long double fraction;\n		cin >> depth;\n		cin >> fraction;\n	//	cerr << depth << endl;\n		for(int i=0;i<depth-1;i++){\n			int start = upper_bound(sum,sum+n,fraction*sum[n-1])-sum-1;\n			point p1 = a[start];\n			point p2 = a[start+1];\n			for(int i=0;i<n;i++)\n				a[i]=backup[i]*(p2-p1)+p1;\n			fraction -= sum[start]/sum[n-1];\n			fraction *= (sum[n-1])/(sum[start+1]-sum[start]);\n		//	cerr <<start << p1<< \" \" << fraction << endl;\n		}\n		int start = upper_bound(sum,sum+n,fraction*sum[n-1])-sum-1;\n		fraction -= sum[start]/sum[n-1];\n		fraction *= (sum[n-1])/(sum[start+1]-sum[start]);\n	//	cerr <<start << a[start]<< \" \" << fraction << endl;\n		point p1 = a[start];\n		point p2 = a[start+1];\n		point ans =point(fraction,0);\n		ans *=p2-p1;\n		ans +=p1;\n		if(abs(ans.real()) < EPS)\n			ans.real()=0;\n		if(abs(ans.imag()) < EPS)\n			ans.imag()=0;\n		cout << setprecision(10) <<  ans << endl;\n\n	}\n }\n',1,4,1376,4,'','2011-10-21 08:08:08',1139),(684,12,1050,'#include <iostream>\n#include <cstring>\n#include <vector>\n#include <set>\nusing namespace std;\n\nbool marked[10010];\nvector<int> neighbours[10010];\nint nums[10010];\nset<int> numofeach[7];\n\nvoid giveneighbours()\n{\n	int where =1;\n	int arr[6]={2,2,1,2,2,2};\n	for (int i=6;i<=10000;where++,where%=6)\n	{\n		marked[i]=true;\n		i+=arr[where];\n		arr[where]++;\n	}\n	int counter=1;\n	for (int i=7;i<=10000;i++)\n	{\n		if ( marked[i] )\n			neighbours[i].push_back(counter);\n		else \n		{\n			neighbours[i].push_back(counter++);\n			neighbours[i].push_back(counter);\n		}\n		neighbours[i].push_back(i-1);\n	}\n} \n\nvoid givenums()\n{\n	int cr[6]={0,1,2,1,1,1};\n	for (int i=7;i<=10000;i++)\n	{\n		set<int> nei;\n		for(int j=0; j<neighbours[i].size(); j++)nei.insert(nums[neighbours[i][j]]);\n		int minn=1000000000;\n		for(int j=1; j<7; j++){\n			if( nei.find(j)==nei.end()){\n				if( cr[j]<minn){\n					minn = cr[j];\n				}\n			}\n		}\n		for(int j=1; j<7; j++){\n			if( nei.find(j)==nei.end() && cr[j]==minn){\n				nums[i]=j;\n				cr[j]++;\n				break;\n			}\n		}\n	}\n}\n\nint main()\n{\n	int T;\n	memset(marked,0,sizeof(marked));\n	for (int i=1;i<=5;i++)\n		nums[i]=i;\n	nums[6]=2;\n	giveneighbours();\n	givenums();\n	for (cin>>T;T--;)\n	{\n		int n;\n		cin>>n;\n		cout<<nums[n]<<endl;\n	}\n}',1,4,1572,16,'','2011-10-21 08:09:17',988),(686,10,1050,'#include <stdio.h>\n#include <iostream>\n#include <string.h>\nusing namespace std;\n\nint val[500][500];\nint freq[10];\nint dx[] = { 1, 0, -1, -1, 0, 1};\nint dy[] = {-1, -1, 0, 1, 1, 0};\n\nint doo(int n) {\n	int x = 250, y = 250, dir = 0;\n	memset(freq, 0, sizeof(freq));\n	memset(val, -1, sizeof(val));\n	val[y][x] = 1;\n	freq[1]++;\n	while (n--) {\n		y += dy[dir];\n		x += dx[dir];\n		while (val[y+dy[(dir+1)%6]][x+dx[(dir+1)%6]] == -1) dir = (dir+1) % 6;\n		int mt = 20000, c = 0;\n		for (int i = 1; i <= 5; ++i) {\n			int f = 0;\n			for (int d = 0; d < 6; ++d) if (val[y+dy[d]][x+dx[d]] == i) f++;\n			if (!f && freq[i] < mt) mt = freq[i], c = i;\n		}\n		val[y][x] = c;\n		freq[c]++;\n	}\n	\n	return val[y][x];\n}\nint main () {\n	int c;\n	cin >> c;\n	while (c--) {\n		int t; cin >> t;\n		cout << doo(t-1) << endl;\n	}\n	\n	return 0;\n}\n',1,4,2244,152,'','2011-10-21 08:10:56',599),(687,103,1045,'#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nconst int maxN = 50*1000 + 2;\n\nint remain[maxN];\nint numbers[maxN];\n\n\nvoid init()\n{\n	for(int i =0; i<maxN; i++)\n		remain[i] = -1;\n}\n\nint fact(int k)\n{\n	return k*(k-1)/2;\n}\n\nint main()\n{\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int d,n;\n		int result = 0;\n		cin >> d >> n;\n		cin >> numbers[0];\n		numbers[0] = numbers[0] %d;\n		remain[0] = numbers[0];\n//		if( remain[0] == 0)\n//			result++;\n		for(int j = 1; j<n; j++)\n		{\n			cin >> numbers[j];\n			numbers[j] %= d;\n			remain[j] = (remain[j-1] + numbers[j]) %d;\n//			if( remain[j] == 0)\n//				result++;\n		}\n		sort(remain , remain + n);\n		int counter = 1;\n		for(int j = 1; j< n; j++)\n		{\n			if( remain[j] != remain[j-1])\n			{\n				if( counter != 1)\n					result += fact(counter);\n				counter = 1;\n			}\n			else\n				counter++;\n		}\n		if( counter != 1)\n			result += fact(counter);\n		/*for(int j = 0; j < n; j++)\n		{\n			for(int k = j+1; k < n; k++)\n			{\n				if( remain[k] == remain[j])\n					result++;\n			}\n		}*/\n		cout << result << endl;\n	}\n}\n',1,6,1660,748,'','2011-10-21 08:26:26',749),(688,12,1051,'#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <set>\n#include <vector>\n#include <cmath>\n#define rep(a,b,c) for(int a=b; a<c; a++)\nusing namespace std;\n#define pdd pair<double, double>\n//pdd x[2009];\ntypedef struct{\n	pdd x;\n	int i;\n} pddd;\n\npddd x[2009];\nint n;\npdd glob;\nbool kuchiktar(const pddd& a,const pddd& b)\n{\n\n	int x1=a.x.first-glob.first;\n	int y1=a.x.second-glob.second;\n	if( x1==0 && y1==0)return true;\n	int x2=b.x.first-glob.first;\n	int y2=b.x.second-glob.second;\n	if(x2==0 && y2==0)return false;\n	if( x1*y2< x2*y1)return false;\n	if( x1*y2>x2*y1)return true;\n	else{\n		return (sqrt((x1)*(x1)+(y1)*(y1)) < sqrt(x2*x2+y2*y2)); \n	}\n}	\n\nint main(){\n	int t;\n	cin>>t;\n	while(t--){\n		int xx=20000;\n		int yy=20000;\n		int jj=-1;\n		cin>>n;\n		rep(i,0,n)\n		{\n			cin>>x[i].x.first>>x[i].x.second;\n			x[i].i=i;\n			if(x[i].x.second<yy ){\n				jj=i;\n				xx=x[i].x.first;\n				yy=x[i].x.second;\n			}else if(x[i].x.second==yy && x[i].x.first<xx){\n				jj=i;\n				xx=x[i].x.first;\n				yy=x[i].x.second;\n			}\n		}\n		glob=x[jj].x;\n		//rep(i,0,n){\n			sort(x,x+n,kuchiktar);\n		//	if(i==0)cout<<x[i].i;\n		//	else cout<<\" \"<<x[i].i;\n		//	if(i==n-1)break;\n		//	glob=x[i+1].x;\n		//}\n		rep(i,0,n)if(i==0)cout<<x[i].i;\n		else cout<<\" \"<<x[i].i;\n		cout<<endl;\n	}\n\n	return 0;\n}',1,4,1320,108,'','2011-10-21 08:39:41',1040),(689,12,1051,'asfasfasfasfsdf',1,11,0,0,'Main.cc:1: error: expected constructor, destructor, or type conversion at end of input\n','2011-10-21 08:39:26',15),(690,10,1048,'#include <stdio.h>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nclass abc\n{\n	public:\n	int raftan;\n	long long sum;\n\n	abc(int a, long long b)\n	{\n		raftan = a;\n		sum = b;\n	}\n};\n#define min mmm\nlong long cnt;\nlong long min;\nint go[50001];\nint n;\nvector<int> neighs[50001];\nvector<int> raftan[50001];\nvector<long long> sum[50001];\nvector<long long> cost[50001];\n\nvector<int> all;\nbool visited[50001];\n\nvoid dfs2(int at, long now) {\n	visited[at] = true;\n\n	if(now < min)\n	{\n		min = now;\n		all.clear();\n		all.push_back(at);\n	}\n	else if(now == min)\n	{\n		all.push_back(at);\n	}\n\n	for(int i = 0;i < neighs[at].size();i++)\n		if(!visited[neighs[at][i]])\n		{\n			dfs2(neighs[at][i], now-cost[at][i]*raftan[at][i]+cost[at][i]*(cnt-raftan[at][i]));\n		}\n}\n\nabc dfs(int at)\n{\n	visited[at] = true;\n	abc ret(0, 0);\n	ret.raftan = go[at];\n	ret.sum = 0;\n\n	for(int i = 0;i < neighs[at].size();i++)\n		if(!visited[neighs[at][i]])\n		{\n			abc get = dfs(neighs[at][i]);\n			raftan[at][i] = get.raftan;\n			sum[at][i] = get.sum+get.raftan*cost[at][i];\n\n			ret.raftan += raftan[at][i];\n			ret.sum += sum[at][i];\n		}\n\n	return ret;\n}\n\n\nint main () {\n	cnt = 0;\n	int ca;\n	cin >> ca;\n	while(ca-- > 0) {\n		cin >> n;\n		for (int i=0;i<50001;i++) neighs[i].clear();\n		for (int i=0;i<50001;i++) raftan[i].clear();\n		for (int i=0;i<50001;i++) sum[i].clear();\n		for (int i=0;i<50001;i++) cost[i].clear();\n\n\n		for(int i = 0;i < n-1;i++) {\n			int a; cin >> a;a--;\n			int b; cin >> b;b--;\n			int c; cin >> c;c*=2;\n			\n			neighs[a].push_back(b);\n			raftan[a].push_back(-1);\n			sum[a].push_back((long)-1);\n			cost[a].push_back((long)c);\n\n			neighs[b].push_back(a);\n			raftan[b].push_back(-1);\n			sum[b].push_back((long long)-1);\n			cost[b].push_back((long long)c);\n		}\n\n		int m; cin >> m;\n\n		for(int i = 0;i < m;i++) {\n			int temp; cin >> temp;\n			int tt; cin >> tt;\n			go[temp-1] = tt;\n		}\n\n		cnt = 0;\n		for (int i=0;i<n;i++) cnt += go[i];\n		\n		for(int i = 0;i < 50001;i++)visited[i] = false;\n		\n		dfs(0);\n\n		min = 1LL<<60;\n		all.clear();\n\n		long total = 0;\n		for (int i=0;i<sum[0].size();i++) total += sum[0][i];\n\n		for(int i = 0;i < 50001;i++)visited[i] = false;\n		dfs2(0, total);\n		\n		\n		cout << min << endl;\n		bool first = true;\n		for (int i=0;i<all.size();i++) {\n			cout << (first ? \"\" : \" \") << (all[i]+1);\n			first = false;\n		}\n		cout << endl;\n	}\n	return 0;\n}\n',1,6,15608,1240,'','2011-10-21 09:01:41',1817),(691,14,1048,'#include <iostream>\n#include <cstring>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nint ans[MAX_N];\nint childEst[MAX_N];\nint destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\nint preper(int x){\n	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n		if(mark[name])\n			continue;\n		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\nint findAns(int x,int par,int pardis){\n	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n		if(!mark[name])\n			findAns(name,x,naber[x][i].second);\n	}\n	return 0;\n}\nint main(){\n	int T;\n	cin >> T;\n	while (T--){\n		int n,m;\n		cin >> n;\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n		cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		preper(0);\n		memset (mark,0,sizeof(mark));\n		findAns(0,-1,0);\n		vector<int> answer;\n		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n\n		cout << ans[answer[0]]*2 << endl;\n		for(int i=0;i<answer.size()-1;i++)\n			cout << answer[i]+1 << \" \";\n		cout << answer.back()+1 << endl;\n\n	}\n}\n',1,6,8348,948,'','2011-10-21 09:09:26',1525),(692,103,1050,'#include<iostream>\n\nusing namespace std;\n\nconst int maxN = 1000*10 + 20;\n\nint num[60][maxN];\n\npair<int,int> getTof(int k)\n{\n	if( k == 1)\n		return make_pair(0,1);\n	k--;\n	int t = 6;\n	int counter = 1;\n	while( k > t)\n	{\n		counter++;\n		k-=t;\n		t+=6;\n	}\n	return make_pair(counter, k);\n}\n\nbool arr[6];\nint tedad[6];\nvoid init()\n{\n	arr[0] = true;\n	arr[1] = true;\n	arr[2] = true;\n	arr[3] = true;\n	arr[4] = true;\n	arr[5] = true;\n\n}\n\nvoid makeIt()\n{\n	num[0][1] = 1;\n	num[1][1] = 2;\n	num[1][2] = 3;\n	num[1][3] = 4;\n	num[1][4] = 5;\n	num[1][5] = 2;\n	num[1][6] = 3;\n	tedad[1] = 1;\n	tedad[2] = 2;\n	tedad[3] = 2;\n	tedad[4] = 1;\n	tedad[5] = 1;\n	for(int j=8; j<= 100; j++)\n	{\n		pair<int,int> p = getTof(j);\n		int k = p.first;\n		int l = p.second;\n		init();\n		if( l == k*6)\n		{\n			arr[ num[k-1][l-6] ] = false;\n			arr[ num[k][1] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else if( l == 1)\n		{\n			arr[ num[k-1][k*6 -6] ] = false;\n			arr[ num[k-1][1] ] = false;\n		}\n		else if( l % k == 0)\n		{\n			arr[ num[k-1][ l - (l/k) ] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else\n		{\n			int y = l/k;\n			arr[ num[k-1][ l - y] ] = false;\n			arr[ num[k-1][ l - y +1] ] = false;\n			arr[num[k][l-1]] = false;\n		}\n		int ee ;\n		for(int i =1; i<6; i++)\n			if( arr[i])\n			{\n				ee = i;\n				break;\n			}\n		int ss = ee;\n		for(int i = ss; i<6; i++)\n		{\n			if( arr[i] == true && tedad[i] < tedad[ee])\n			{\n				ee = i;\n			}\n		}\n		num[k][l] = ee;\n		tedad[ee]++;\n		//cout << k << \' \' << l << \' \' << num[k][l] << endl;\n	}\n}\n\nint main()\n{\n	makeIt();\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int k;\n		cin >> k;\n		pair<int,int> p = getTof(k);\n		//cout << p.first << \' \' << p.second << endl;\n		cout << num[p.first][p.second] << endl;\n	}\n	return 0;\n}\n',1,6,3616,4,'','2011-10-21 09:11:48',1216),(693,103,1050,'#include<iostream>\n\nusing namespace std;\n\nconst int maxN = 1000*10 + 20;\n\nint num[60][maxN];\n\npair<int,int> getTof(int k)\n{\n	if( k == 1)\n		return make_pair(0,1);\n	k--;\n	int t = 6;\n	int counter = 1;\n	while( k > t)\n	{\n		counter++;\n		k-=t;\n		t+=6;\n	}\n	return make_pair(counter, k);\n}\n\nbool arr[6];\nint tedad[6];\nvoid init()\n{\n	arr[0] = true;\n	arr[1] = true;\n	arr[2] = true;\n	arr[3] = true;\n	arr[4] = true;\n	arr[5] = true;\n\n}\n\nvoid makeIt()\n{\n	num[0][1] = 1;\n	num[1][1] = 2;\n	num[1][2] = 3;\n	num[1][3] = 4;\n	num[1][4] = 5;\n	num[1][5] = 2;\n	num[1][6] = 3;\n	tedad[1] = 1;\n	tedad[2] = 2;\n	tedad[3] = 2;\n	tedad[4] = 1;\n	tedad[5] = 1;\n	for(int j=8; j<= 100000; j++)\n	{\n		pair<int,int> p = getTof(j);\n		int k = p.first;\n		int l = p.second;\n		init();\n		if( l == k*6)\n		{\n			arr[ num[k-1][l-6] ] = false;\n			arr[ num[k][1] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else if( l == 1)\n		{\n			arr[ num[k-1][k*6 -6] ] = false;\n			arr[ num[k-1][1] ] = false;\n		}\n		else if( l % k == 0)\n		{\n			arr[ num[k-1][ l - (l/k) ] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else\n		{\n			int y = l/k;\n			arr[ num[k-1][ l - y] ] = false;\n			arr[ num[k-1][ l - y +1] ] = false;\n			arr[num[k][l-1]] = false;\n		}\n		int ee ;\n		for(int i =1; i<6; i++)\n			if( arr[i])\n			{\n				ee = i;\n				break;\n			}\n		int ss = ee;\n		for(int i = ss; i<6; i++)\n		{\n			if( arr[i] == true && tedad[i] < tedad[ee])\n			{\n				ee = i;\n			}\n		}\n		num[k][l] = ee;\n		tedad[ee]++;\n		//cout << k << \' \' << l << \' \' << num[k][l] << endl;\n	}\n}\n\nint main()\n{\n	makeIt();\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int k;\n		cin >> k;\n		pair<int,int> p = getTof(k);\n		//cout << p.first << \' \' << p.second << endl;\n		cout << num[p.first][p.second] << endl;\n	}\n	return 0;\n}\n',1,10,3608,0,'','2011-10-21 09:13:24',1219),(694,103,1050,'#include<iostream>\n\nusing namespace std;\n\nconst int maxN = 1000*10 + 20;\n\nint num[600][maxN];\n\npair<int,int> getTof(int k)\n{\n	if( k == 1)\n		return make_pair(0,1);\n	k--;\n	int t = 6;\n	int counter = 1;\n	while( k > t)\n	{\n		counter++;\n		k-=t;\n		t+=6;\n	}\n	return make_pair(counter, k);\n}\n\nbool arr[6];\nint tedad[6];\nvoid init()\n{\n	arr[0] = true;\n	arr[1] = true;\n	arr[2] = true;\n	arr[3] = true;\n	arr[4] = true;\n	arr[5] = true;\n\n}\n\nvoid makeIt()\n{\n	num[0][1] = 1;\n	num[1][1] = 2;\n	num[1][2] = 3;\n	num[1][3] = 4;\n	num[1][4] = 5;\n	num[1][5] = 2;\n	num[1][6] = 3;\n	tedad[1] = 1;\n	tedad[2] = 2;\n	tedad[3] = 2;\n	tedad[4] = 1;\n	tedad[5] = 1;\n	for(int j=8; j<= 100000; j++)\n	{\n		pair<int,int> p = getTof(j);\n		int k = p.first;\n		int l = p.second;\n		init();\n		if( l == k*6)\n		{\n			arr[ num[k-1][l-6] ] = false;\n			arr[ num[k][1] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else if( l == 1)\n		{\n			arr[ num[k-1][k*6 -6] ] = false;\n			arr[ num[k-1][1] ] = false;\n		}\n		else if( l % k == 0)\n		{\n			arr[ num[k-1][ l - (l/k) ] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else\n		{\n			int y = l/k;\n			arr[ num[k-1][ l - y] ] = false;\n			arr[ num[k-1][ l - y +1] ] = false;\n			arr[num[k][l-1]] = false;\n		}\n		int ee ;\n		for(int i =1; i<6; i++)\n			if( arr[i])\n			{\n				ee = i;\n				break;\n			}\n		int ss = ee;\n		for(int i = ss; i<6; i++)\n		{\n			if( arr[i] == true && tedad[i] < tedad[ee])\n			{\n				ee = i;\n			}\n		}\n		num[k][l] = ee;\n		tedad[ee]++;\n		//cout << k << \' \' << l << \' \' << num[k][l] << endl;\n	}\n}\n\nint main()\n{\n	makeIt();\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int k;\n		cin >> k;\n		pair<int,int> p = getTof(k);\n		//cout << p.first << \' \' << p.second << endl;\n		cout << num[p.first][p.second] << endl;\n	}\n	return 0;\n}\n',1,6,24752,28,'','2011-10-21 09:14:08',1220),(698,103,1045,'#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nconst int maxN = 50*1000 + 2;\n\nint remain[maxN];\nint numbers[maxN];\n\n\nvoid init()\n{\n	for(int i =0; i<maxN; i++)\n		remain[i] = -1;\n}\n\nint fact(int k)\n{\n	return k*(k-1)/2;\n}\n\nint main()\n{\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int d,n;\n		int result = 0;\n		cin >> d >> n;\n		cin >> numbers[0];\n		numbers[0] = numbers[0] %d;\n		remain[0] = numbers[0];\n		if( remain[0] == 0)\n			result++;\n		for(int j = 1; j<n; j++)\n		{\n			cin >> numbers[j];\n			numbers[j] %= d;\n			remain[j] = (((long long)remain[j-1] + (long long)numbers[j])) %d;\n			if( remain[j] == 0)\n				result++;\n		}\n		sort(remain , remain + n);\n		int counter = 1;\n		for(int j = 1; j< n; j++)\n		{\n			if( remain[j] != remain[j-1])\n			{\n				if( counter != 1)\n					result += fact(counter);\n				counter = 1;\n			}\n			else\n				counter++;\n		}\n		if( counter != 1)\n			result += fact(counter);\n		/*for(int j = 0; j < n; j++)\n		{\n			for(int k = j+1; k < n; k++)\n			{\n				if( remain[k] == remain[j])\n					result++;\n			}\n		}*/\n		cout << result << endl;\n	}\n}\n',1,6,1660,820,'','2011-10-21 09:27:03',763),(699,103,1045,'#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\n#define int long long\n\nconst int maxN = 50*1000 + 2;\n\nint remain[maxN];\nint numbers[maxN];\n\n\nvoid init()\n{\n	for(int i =0; i<maxN; i++)\n		remain[i] = -1;\n}\n\nint fact(int k)\n{\n	return k*(k-1)/2;\n}\n\nmain()\n{\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int d,n;\n		int result = 0;\n		cin >> d >> n;\n		cin >> numbers[0];\n		numbers[0] = numbers[0] %d;\n		remain[0] = numbers[0];\n		if( remain[0] == 0)\n			result++;\n		for(int j = 1; j<n; j++)\n		{\n			cin >> numbers[j];\n			numbers[j] %= d;\n			remain[j] = (((long long)remain[j-1] + (long long)numbers[j])) %d;\n			if( remain[j] == 0)\n				result++;\n		}\n		sort(remain , remain + n);\n		int counter = 1;\n		for(int j = 1; j< n; j++)\n		{\n			if( remain[j] != remain[j-1])\n			{\n				if( counter != 1)\n					result += fact(counter);\n				counter = 1;\n			}\n			else\n				counter++;\n		}\n		if( counter != 1)\n			result += fact(counter);\n		/*for(int j = 0; j < n; j++)\n		{\n			for(int k = j+1; k < n; k++)\n			{\n				if( remain[k] == remain[j])\n					result++;\n			}\n		}*/\n		cout << result << endl;\n	}\n}\n',1,4,2052,800,'','2011-10-21 09:28:37',778),(701,103,1050,'#include<iostream>\n\nusing namespace std;\n\nconst int maxN = 1000*10 + 20;\n\nint num[600][maxN];\n\npair<int,int> getTof(int k)\n{\n	if( k == 1)\n		return make_pair(0,1);\n	k--;\n	int t = 6;\n	int counter = 1;\n	while( k > t)\n	{\n		counter++;\n		k-=t;\n		t+=6;\n	}\n	return make_pair(counter, k);\n}\n\nbool arr[6];\nint tedad[6];\nvoid init()\n{\n	arr[0] = true;\n	arr[1] = true;\n	arr[2] = true;\n	arr[3] = true;\n	arr[4] = true;\n	arr[5] = true;\n\n}\n\nvoid makeIt()\n{\n	num[0][1] = 1;\n	num[1][1] = 2;\n	num[1][2] = 3;\n	num[1][3] = 4;\n	num[1][4] = 5;\n	num[1][5] = 2;\n	num[1][6] = 3;\n	tedad[1] = 1;\n	tedad[2] = 2;\n	tedad[3] = 2;\n	tedad[4] = 1;\n	tedad[5] = 1;\n	for(int j=8; j<= 10000; j++)\n	{\n		pair<int,int> p = getTof(j);\n		int k = p.first;\n		int l = p.second;\n		init();\n		if( l == k*6)\n		{\n			arr[ num[k-1][l-6] ] = false;\n			arr[ num[k][1] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else if( l == 1)\n		{\n			arr[ num[k-1][k*6 -6] ] = false;\n			arr[ num[k-1][1] ] = false;\n		}\n		else if( l % k == 0)\n		{\n			arr[ num[k-1][ l - (l/k) ] ] = false;\n			arr[ num[k][l-1] ] = false;\n		}\n		else\n		{\n			int y = l/k;\n			arr[ num[k-1][ l - y] ] = false;\n			arr[ num[k-1][ l - y -1] ] = false;\n			arr[num[k][l-1]] = false;\n		}\n		int ee ;\n		for(int i =1; i<6; i++)\n			if( arr[i])\n			{\n				ee = i;\n				break;\n			}\n		int ss = ee;\n		for(int i = ss; i<6; i++)\n		{\n			if( arr[i] == true && tedad[i] < tedad[ee])\n			{\n				ee = i;\n			}\n		}\n		num[k][l] = ee;\n		tedad[ee]++;\n		//cout << k << \' \' << l << \' \' << num[k][l] << endl;\n	}\n}\n\nint main()\n{\n	makeIt();\n	int t;\n	cin >> t;\n	for(int i =0; i<t; i++)\n	{\n		int k;\n		cin >> k;\n		pair<int,int> p = getTof(k);\n		//cout << p.first << \' \' << p.second << endl;\n		cout << num[p.first][p.second] << endl;\n	}\n	return 0;\n}\n',1,4,24752,0,'','2011-10-21 09:34:32',1219),(703,14,1048,'#include <iostream>\n#include <cstring>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nint ans[MAX_N];\nint childEst[MAX_N];\nint destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\nint pardis[MAX_N];\nint par[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\ninline int preper(int x){\n	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n	//	show (name);show(par[x]);\n	//	cerr << name << endl;\n		if(name == par[x])\n			continue;\n//		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\ninline int findAns(int x,int par,int pardis){\n	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n//	for(int i=0;i<naber[x].size();i++)\n//	{\n//		int name = naber[x][i].first;\n//		if(!mark[name])\n//			findAns(name,x,naber[x][i].second);\n//	}\n	return 0;\n}\nint main(){\n	int T;\n	cin >> T;\n	while (T--){\n		int n,m;\n		cin >> n;\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n		cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		vector <int> bfs;\n		bfs.push_back(0);\n		par[0]=-1;\n		mark[0]=1;\n		for(int head=0;head<bfs.size();head++)\n			for(int i=0;i<naber[bfs[head]].size();i++)\n				if(!mark[naber[bfs[head]][i].first])\n				{\n					mark[naber[bfs[head]][i].first]=1;\n					bfs.push_back(naber[bfs[head]][i].first);\n					par[naber[bfs[head]][i].first]=bfs[head];\n					pardis[naber[bfs[head]][i].first] = naber[bfs[head]][i].second;\n				//	cerr << naber[bfs[head]][i].first << \" * \"  << par[naber[bfs[head]][i].first];\n				}\n		for(int i=n-1;i>=0;i--)\n			preper(bfs[i]);\n		memset (mark,0,sizeof(mark));\n		for(int i=0;i<n;i++)\n			findAns(bfs[i],par[bfs[i]],pardis[bfs[i]]);\n		vector<int> answer;\n		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n		\n		cout << ans[answer[0]]*2 << endl;\n		for(int i=0;i<answer.size()-1;i++)\n			cout << answer[i]+1 << \" \";\n		cout << answer.back()+1 << endl;\n\n	}\n}\n',1,6,6592,928,'','2011-10-21 09:46:26',2118),(704,14,1048,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nint ans[MAX_N];\nint childEst[MAX_N];\nint destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\nint pardis[MAX_N];\nint par[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\ninline int preper(int x){\n	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n	//	show (name);show(par[x]);\n	//	cerr << name << endl;\n		if(name == par[x])\n			continue;\n//		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\ninline int findAns(int x,int par,int pardis){\n	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n//	for(int i=0;i<naber[x].size();i++)\n//	{\n//		int name = naber[x][i].first;\n//		if(!mark[name])\n//			findAns(name,x,naber[x][i].second);\n//	}\n	return 0;\n}\nint main(){\n	int T;\n	scanf(\"%d\",&T);\n//	cin >> T;\n	while (T--){\n		int n,m;\n		//cin >> n;\n		scanf(\"%d\",&n);\n\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n			scanf(\"%d\",&t1);\n		//	cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n\n		scanf(\"%d\",&m);\n	//	cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n		//	cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		vector <int> bfs;\n		bfs.push_back(0);\n		par[0]=-1;\n		mark[0]=1;\n		for(int head=0;head<bfs.size();head++)\n			for(int i=0;i<naber[bfs[head]].size();i++)\n				if(!mark[naber[bfs[head]][i].first])\n				{\n					mark[naber[bfs[head]][i].first]=1;\n					bfs.push_back(naber[bfs[head]][i].first);\n					par[naber[bfs[head]][i].first]=bfs[head];\n					pardis[naber[bfs[head]][i].first] = naber[bfs[head]][i].second;\n				//	cerr << naber[bfs[head]][i].first << \" * \"  << par[naber[bfs[head]][i].first];\n				}\n		for(int i=n-1;i>=0;i--)\n			preper(bfs[i]);\n		memset (mark,0,sizeof(mark));\n		for(int i=0;i<n;i++)\n			findAns(bfs[i],par[bfs[i]],pardis[bfs[i]]);\n		vector<int> answer;\n		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n		\n		cout << ans[answer[0]]*2 << endl;\n		for(int i=0;i<answer.size()-1;i++)\n			cout << answer[i]+1 << \" \";\n		cout << answer.back()+1 << endl;\n\n	}\n}\n',1,6,6592,400,'','2011-10-21 09:49:45',2269),(705,14,1048,'#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nint ans[MAX_N];\nint childEst[MAX_N];\nint destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\nint preper(int x){\n	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n		if(mark[name])\n			continue;\n		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\nint findAns(int x,int par,int pardis){\n	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n		if(!mark[name])\n			findAns(name,x,naber[x][i].second);\n	}\n	return 0;\n}\nint main(){\n	int T;\n	//cin >> T;\n	scanf(\"%d\",&T);\n	while (T--){\n		int n,m;\n		scanf(\"%d\",&n);\n	//	cin >> n;\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n			scanf(\"%d\",&t1);\n	//		cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n		scanf(\"%d\",&m);\n	//	cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n	//		cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		preper(0);\n		memset (mark,0,sizeof(mark));\n		findAns(0,-1,0);\n		vector<int> answer;\n		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n\n		cout << ans[answer[0]]*2 << endl;\n		for(int i=0;i<answer.size()-1;i++)\n			cout << answer[i]+1 << \" \";\n		cout << answer.back()+1 << endl;\n\n	}\n}\n',1,6,8348,492,'','2011-10-21 10:01:51',1676),(707,10,1046,'#include <vector>\n#include <iostream>\n#include <complex>\n#include <cmath>\n#include <stdio.h>\n#include <iomanip>\nconst double EPS = 1E-7;\nusing namespace std;\ntypedef pair<double,double> PDD;\ntypedef complex<long double> P;\nint main () {\n	int c;\n	cin >> c;\n	while (c--) {\n		vector<PDD> arr[12];\n		int n; cin >> n;\n		for (int i=0;i<n;i++) {\n			PDD p;\n			cin >> p.first >> p.second;\n			arr[1].push_back(p);\n		}\n		P s, e;\n		s = P(arr[1][0].first, arr[1][0].second);\n		e = P(arr[1][arr[1].size()-1].first,arr[1][arr[1].size()-1].second);\n		\n		int d; cin >> d;\n		double f; cin >> f;\n		vector<PDD> fs;\n		fs.push_back(PDD(0,1));\n		fs.push_back(PDD(0,1));\n		\n		\n		\n		for (int i=2;i<=d;i++) {\n			\n			/////////////////\n			\n			double len = 0;\n			for (int j=0;j<arr[i-1].size()-1;j++) len += sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n			\n			\n			int jj=0;\n			double nlen = 0;\n			for (int j=0;j<arr[i-1].size()-1;j++) {\n				double fff = sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n				nlen += fff;\n				double F1 = fs[i-1].first;\n				double F2 = fs[i-1].second;\n				if ((nlen/len)*(F2-F1)+F1 > f) {\n					double f1=((nlen-fff)/len)*(F2-F1)+F1,f2=(nlen/len)*(F2-F1)+F1;\n					fs.push_back(PDD(f1,f2));\n				//	cerr << i << \"  = \" << f1 << \" , \" << f2 << endl;\n					jj = j;\n					goto nn;\n				}\n			}\n			nn:;\n			\n			///////////////\n			\n			P p1, p2;\n			p1 = P(arr[i-1][jj].first, arr[i-1][jj].second);\n			p2 = P(arr[i-1][jj+1].first, arr[i-1][jj+1].second);\n			for (int k=0;k<arr[1].size();k++) {\n				P a;\n				a = P(arr[1][k].first, arr[1][k].second);\n				P ap;\n				ap = (a-s)/(e-s)*(p2-p1)+p1;\n				//cerr << ap << endl;\n				arr[i].push_back(PDD(ap.real(), ap.imag()));\n			}\n		}\n		\n		for (int i=d+1;i<=d+1;i++){\n		\n			double len = 0;\n			for (int j=0;j<arr[i-1].size()-1;j++) len += sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n			\n			\n			int jj=0;\n			double nlen = 0;\n			for (int j=0;j<arr[i-1].size()-1;j++) {\n				double fff = sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n				nlen += fff;\n				double F1 = fs[i-1].first;\n				double F2 = fs[i-1].second;\n				if ((nlen/len)*(F2-F1)+F1 > f) {\n					double f1=((nlen-fff)/len)*(F2-F1)+F1,f2=(nlen/len)*(F2-F1)+F1;\n					jj = j;\n					\n					double x = arr[i-1][j].first+(arr[i-1][j+1].first-arr[i-1][j].first)*(f-f1)/(f2-f1);\n					double y = arr[i-1][j].second+(arr[i-1][j+1].second-arr[i-1][j].second)*(f-f1)/(f2-f1);\n					P ans = P(x, y);\n					if(abs(ans.real()) < EPS) ans.real()=0;\n					if(abs(ans.imag()) < EPS) ans.imag()=0;\n					cout << setprecision(10) <<  ans << endl;\n					goto next;\n				\n				}\n			}\n		}\n		\n		next:;\n	}\n	\n	return 0;\n}\n	\n',1,6,1312,8,'','2011-10-21 10:06:04',2474),(708,10,1046,'#include <vector>\n#include <iostream>\n#include <complex>\n#include <cmath>\n#include <stdio.h>\n#include <iomanip>\nconst double EPS = 1E-7;\nusing namespace std;\ntypedef pair<double,double> PDD;\ntypedef complex<long double> P;\nint main () {\n	int c;\n	cin >> c;\n	while (c--) {\n		vector<PDD> arr[12];\n		int n; cin >> n;\n		for (int i=0;i<n;i++) {\n			PDD p;\n			cin >> p.first >> p.second;\n			arr[1].push_back(p);\n		}\n		P s, e;\n		s = P(arr[1][0].first, arr[1][0].second);\n		e = P(arr[1][arr[1].size()-1].first,arr[1][arr[1].size()-1].second);\n		\n		int d; cin >> d;\n		double f; cin >> f;\n		vector<PDD> fs;\n		fs.push_back(PDD(0,1));\n		fs.push_back(PDD(0,1));\n		\n		\n		\n		for (int i=2;i<=d;i++) {\n			\n			/////////////////\n			\n			double len = 0;\n			for (int j=0;j<arr[i-1].size()-1;j++) len += sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n			\n			\n			int jj=0;\n			double nlen = 0;\n			for (int j=0;j<arr[i-1].size()-1;j++) {\n				double fff = sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n				nlen += fff;\n				double F1 = fs[i-1].first;\n				double F2 = fs[i-1].second;\n				if ((nlen/len)*(F2-F1)+F1 > f-EPS) {\n					double f1=((nlen-fff)/len)*(F2-F1)+F1,f2=(nlen/len)*(F2-F1)+F1;\n					fs.push_back(PDD(f1,f2));\n				//	cerr << i << \"  = \" << f1 << \" , \" << f2 << endl;\n					jj = j;\n					goto nn;\n				}\n			}\n			nn:;\n			\n			///////////////\n			\n			P p1, p2;\n			p1 = P(arr[i-1][jj].first, arr[i-1][jj].second);\n			p2 = P(arr[i-1][jj+1].first, arr[i-1][jj+1].second);\n			for (int k=0;k<arr[1].size();k++) {\n				P a;\n				a = P(arr[1][k].first, arr[1][k].second);\n				P ap;\n				ap = (a-s)/(e-s)*(p2-p1)+p1;\n				//cerr << ap << endl;\n				arr[i].push_back(PDD(ap.real(), ap.imag()));\n			}\n		}\n		for (int i=d+1;i<=d+1;i++){\n		\n			double len = 0;\n			\n			for (int j=0;j<arr[i-1].size()-1;j++) {\n				len += sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n			}\n			\n			\n			int jj=0;\n			double nlen = 0;\n			for (int j=0;j<arr[i-1].size()-1;j++) {\n				double fff = sqrt((arr[i-1][j].first-arr[i-1][j+1].first)*(arr[i-1][j].first-arr[i-1][j+1].first)+(arr[i-1][j].second-arr[i-1][j+1].second)*(arr[i-1][j].second-arr[i-1][j+1].second));\n				nlen += fff;\n				double F1 = fs[i-1].first;\n				double F2 = fs[i-1].second;\n				if ((nlen/len)*(F2-F1)+F1 > f-EPS) {\n					double f1=((nlen-fff)/len)*(F2-F1)+F1,f2=(nlen/len)*(F2-F1)+F1;\n					jj = j;\n					\n					double x = arr[i-1][j].first+(arr[i-1][j+1].first-arr[i-1][j].first)*(f-f1)/(f2-f1);\n					double y = arr[i-1][j].second+(arr[i-1][j+1].second-arr[i-1][j].second)*(f-f1)/(f2-f1);\n					P ans = P(x, y);\n					if(abs(ans.real()) < EPS) ans.real()=0;\n					if(abs(ans.imag()) < EPS) ans.imag()=0;\n					cout << setprecision(10) <<  ans << endl;\n					goto next;\n				\n				}\n			}\n		}\n		\n		next:;\n	}\n	\n	return 0;\n}\n	\n',1,6,1296,4,'','2011-10-21 10:11:50',2484),(709,14,1048,'/*\n * =====================================================================================\n *\n *       Filename:  f.cpp\n *\n *    Description:  \n *\n *        Version:  1.0\n *        Created:  10/21/2011 11:48:13 AM\n *       Revision:  none\n *       Compiler:  gcc\n *\n *         Author:  YOUR NAME (), \n *        Company:  \n *\n * =====================================================================================\n */\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nlong long ans[MAX_N];\nlong long childEst[MAX_N];\nlong long destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\nint preper(int x){\n	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n		if(mark[name])\n			continue;\n		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\nint findAns(int x,int par,int pardis){\n	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n		if(!mark[name])\n			findAns(name,x,naber[x][i].second);\n	}\n	return 0;\n}\nint main(){\n	int T;\n	//cin >> T;\n	scanf(\"%d\",&T);\n	while (T--){\n		int n,m;\n		scanf(\"%d\",&n);\n	//	cin >> n;\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n			scanf(\"%d\",&t1);\n	//		cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n		scanf(\"%d\",&m);\n	//	cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n	//		cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		preper(0);\n		memset (mark,0,sizeof(mark));\n		findAns(0,-1,0);\n		vector<int> answer;\n		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n\n		cout << ans[answer[0]]*2 << endl;\n		for(int i=0;i<answer.size()-1;i++)\n			cout << answer[i]+1 << \" \";\n		cout << answer.back()+1 << endl;\n\n	}\n}\n',1,6,9680,476,'','2011-10-21 10:16:08',1996),(710,14,1048,'/*\n * =====================================================================================\n *\n *       Filename:  f.cpp\n *\n *    Description:  \n *\n *        Version:  1.0\n *        Created:  10/21/2011 11:48:13 AM\n *       Revision:  none\n *       Compiler:  gcc\n *\n *         Author:  YOUR NAME (), \n *        Company:  \n *\n * =====================================================================================\n */\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nlong long ans[MAX_N];\nlong long childEst[MAX_N];\nlong long destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\nint pardis[MAX_N];\nint par[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\ninline int preper(int x){\n	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n	//	show (name);show(par[x]);\n	//	cerr << name << endl;\n		if(name == par[x])\n			continue;\n//		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\ninline int findAns(int x,int par,int pardis){\n	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n//	for(int i=0;i<naber[x].size();i++)\n//	{\n//		int name = naber[x][i].first;\n//		if(!mark[name])\n//			findAns(name,x,naber[x][i].second);\n//	}\n	return 0;\n}\nint main(){\n	int T;\n	scanf(\"%d\",&T);\n//	cin >> T;\n	while (T--){\n		int n,m;\n		//cin >> n;\n		scanf(\"%d\",&n);\n\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n			scanf(\"%d\",&t1);\n		//	cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n\n		scanf(\"%d\",&m);\n	//	cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n		//	cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		vector <int> bfs;\n		bfs.push_back(0);\n		par[0]=-1;\n		mark[0]=1;\n		for(int head=0;head<bfs.size();head++)\n			for(int i=0;i<naber[bfs[head]].size();i++)\n				if(!mark[naber[bfs[head]][i].first])\n				{\n					mark[naber[bfs[head]][i].first]=1;\n					bfs.push_back(naber[bfs[head]][i].first);\n					par[naber[bfs[head]][i].first]=bfs[head];\n					pardis[naber[bfs[head]][i].first] = naber[bfs[head]][i].second;\n				//	cerr << naber[bfs[head]][i].first << \" * \"  << par[naber[bfs[head]][i].first];\n				}\n		for(int i=n-1;i>=0;i--)\n			preper(bfs[i]);\n		memset (mark,0,sizeof(mark));\n		for(int i=0;i<n;i++)\n			findAns(bfs[i],par[bfs[i]],pardis[bfs[i]]);\n		vector<int> answer;\n		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n		\n		printf(\"%d\\n\",ans[answer[0]]*2);\n		for(int i=0;i<answer.size()-1;i++)\n			printf(\"%d \",answer[i]+1);\n		printf(\"%d\\n\",answer.back()+1);\n\n	}\n}\n',1,6,7180,440,'','2011-10-21 10:22:19',2598),(711,14,1048,'/*\n * =====================================================================================\n *\n *       Filename:  f.cpp\n *\n *    Description:  \n *\n *        Version:  1.0\n *        Created:  10/21/2011 11:48:13 AM\n *       Revision:  none\n *       Compiler:  gcc\n *\n *         Author:  YOUR NAME (), \n *        Company:  \n *\n * =====================================================================================\n */\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nlong long ans[MAX_N];\nlong long childEst[MAX_N];\nlong long destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\nint pardis[MAX_N];\nint par[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\ninline int preper(int x){\n//	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n	//	show (name);show(par[x]);\n	//	cerr << name << endl;\n		if(name == par[x])\n			continue;\n//		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\ninline int findAns(int x,int par,int pardis){\n//	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n//	for(int i=0;i<naber[x].size();i++)\n//	{\n//		int name = naber[x][i].first;\n//		if(!mark[name])\n//			findAns(name,x,naber[x][i].second);\n//	}\n	return 0;\n}\nint main(){\n	int T;\n	scanf(\"%d\",&T);\n//	cin >> T;\n	while (T--){\n		int n,m;\n		//cin >> n;\n		scanf(\"%d\",&n);\n\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			scanf(\"%d%d%d\",&a1,&b1,&t1);\n//			scanf(\"%d\",&b1);\n//			scanf(\"%d\",&t1);\n		//	cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n\n		scanf(\"%d\",&m);\n	//	cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n		//	cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		vector <int> bfs;\n		bfs.push_back(0);\n		par[0]=-1;\n		mark[0]=1;\n		for(int head=0;head<bfs.size();head++)\n			for(int i=0;i<naber[bfs[head]].size();i++)\n				if(!mark[naber[bfs[head]][i].first])\n				{\n					mark[naber[bfs[head]][i].first]=1;\n					bfs.push_back(naber[bfs[head]][i].first);\n					par[naber[bfs[head]][i].first]=bfs[head];\n					pardis[naber[bfs[head]][i].first] = naber[bfs[head]][i].second;\n				//	cerr << naber[bfs[head]][i].first << \" * \"  << par[naber[bfs[head]][i].first];\n				}\n		for(int i=n-1;i>=0;i--)\n			preper(bfs[i]);\n//		memset (mark,0,sizeof(mark));\n		for(int i=0;i<n;i++)\n			findAns(bfs[i],par[bfs[i]],pardis[bfs[i]]);\n		vector<int> answer;\n//		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n		\n		printf(\"%d\\n\",ans[answer[0]]*2);\n		for(int i=0;i<answer.size()-1;i++)\n			printf(\"%d \",answer[i]+1);\n		printf(\"%d\\n\",answer.back()+1);\n\n	}\n}\n',1,10,3784,4,'','2011-10-21 10:27:19',2622),(712,14,1048,'/*\n * =====================================================================================\n *\n *       Filename:  f.cpp\n *\n *    Description:  \n *\n *        Version:  1.0\n *        Created:  10/21/2011 11:48:13 AM\n *       Revision:  none\n *       Compiler:  gcc\n *\n *         Author:  YOUR NAME (), \n *        Company:  \n *\n * =====================================================================================\n */\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n#define show(x) cerr<< #x << \"=\" << x << \" \" \nconst int MAX_N = 50000+100;\nlong long ans[MAX_N];\nlong long childEst[MAX_N];\nlong long destEst[MAX_N];\nint mark[MAX_N];\nint firc[MAX_N];\nint pardis[MAX_N];\nint par[MAX_N];\ntypedef pair<int,int> joft;\nvector < pair <int ,int > > naber[MAX_N];\ninline int preper(int x){\n	mark[x]=1;\n	childEst[x]=0;\n	destEst[x]=0;\n	for(int i=0;i<naber[x].size();i++)\n	{\n		int name = naber[x][i].first;\n	//	show (name);show(par[x]);\n	//	cerr << name << endl;\n		if(name == par[x])\n			continue;\n//		preper(name);\n		childEst[x]+=childEst[name];\n		destEst[x]+=childEst[name]*naber[x][i].second+destEst[name];\n	}\n	childEst[x]+=firc[x];\n//	show(x);\n//	show(destEst[x]);\n//	show(childEst[x]);\n//	cerr << endl;\n	return 0;\n}\ninline int findAns(int x,int par,int pardis){\n	mark[x]=1;\n	ans[x]=destEst[x];\n	if(par!= -1)\n		ans[x]+=ans[par]-(ans[x]+childEst[x]*pardis)+(childEst[0]-childEst[x])*pardis;\n//	for(int i=0;i<naber[x].size();i++)\n//	{\n//		int name = naber[x][i].first;\n//		if(!mark[name])\n//			findAns(name,x,naber[x][i].second);\n//	}\n	return 0;\n}\nint main(){\n	int T;\n	scanf(\"%d\",&T);\n//	cin >> T;\n	while (T--){\n		int n,m;\n		//cin >> n;\n		scanf(\"%d\",&n);\n\n		for(int i=0;i<n;i++)\n			naber[i].clear();\n		int a1,b1,t1;\n		for(int i=0;i<n-1;i++){\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n			scanf(\"%d\",&t1);\n		//	cin >> a1 >> b1 >> t1;\n			a1--;\n			b1--;\n			naber[a1].push_back(joft(b1,t1));\n			naber[b1].push_back(joft(a1,t1));\n		}\n\n		scanf(\"%d\",&m);\n	//	cin >> m;\n		memset (firc,0,sizeof(firc));\n		for(int i=0;i<m;i++)\n		{	\n			scanf(\"%d\",&a1);\n			scanf(\"%d\",&b1);\n		//	cin >> a1 >> b1;\n			firc[a1-1]=b1;\n		}\n		memset (mark,0,sizeof(mark));\n		vector <int> bfs;\n		bfs.push_back(0);\n		par[0]=-1;\n		mark[0]=1;\n		for(int head=0;head<bfs.size();head++)\n			for(int i=0;i<naber[bfs[head]].size();i++)\n				if(!mark[naber[bfs[head]][i].first])\n				{\n					mark[naber[bfs[head]][i].first]=1;\n					bfs.push_back(naber[bfs[head]][i].first);\n					par[naber[bfs[head]][i].first]=bfs[head];\n					pardis[naber[bfs[head]][i].first] = naber[bfs[head]][i].second;\n				//	cerr << naber[bfs[head]][i].first << \" * \"  << par[naber[bfs[head]][i].first];\n				}\n		for(int i=n-1;i>=0;i--)\n			preper(bfs[i]);\n//		memset (mark,0,sizeof(mark));\n		for(int i=0;i<n;i++)\n			findAns(bfs[i],par[bfs[i]],pardis[bfs[i]]);\n		vector<int> answer;\n		answer.push_back(0);\n		for(int i=0;i<n;i++)\n			if(ans[i]<ans[answer[0]])\n			{\n				answer.clear();\n				answer.push_back(i);\n			}\n			else if (ans[i]== ans[answer[0]])\n				answer.push_back(i);\n		\n		printf(\"%d\\n\",ans[answer[0]]*2);\n		for(int i=0;i<answer.size()-1;i++)\n			printf(\"%d \",answer[i]+1);\n		printf(\"%d\\n\",answer.back()+1);\n\n	}\n}\n',1,6,7180,408,'','2011-10-21 10:30:55',2600),(726,46,1003,'#include <iostream>\n#include <conio.h>\n#include <cstdio>\n#include <fstream>\nusing namespace std;\n\nint main()\n{\n	ifstream in(\"test.txt\");\n	int n=-1;\n	int Game=0;\n	while(n!=0)\n	{\n		Game++;\n		int Masoud=0;\n		char Fpatern[5][6];\n		for( int i=0 ; i < 5 ; i++)\n		{\n			in>>Fpatern[i];\n		}\n\n		char patern[26];\n		for(int i=0,k=0,j=0 ; i < 25 ; i++,j++)\n		{\n			if(j==5){ k++ ; j=0 ; }\n			patern[i] = Fpatern[k][j];\n		}\n\n		patern[25]=0;\n		in>>n;\n		if(n==0)return 0;\n		cout<<\"Game \"<<Game<<endl;\n		int b[100][25];\n		for(int i=0 ; i < n ; i++)\n		{\n			for(int j=0 ; j < 25 ; j++)\n			{\n				in>>b[i][j];\n			}\n		}\n\n		int X[25];\n		int SH=0 ;\n		for( int i=0 ; i < 25 ; i++)\n		{\n			if(patern[i]==\'X\')\n			{\n				X[SH]=i;\n				SH++;\n			}\n		}\n		for ( int i=1 ; i < n ; i++)//cards test.\n		{\n			for ( int j=0 ; j < i ; j++)\n			{\n				for ( int q=0 ; q < SH ; q++)\n				{\n					for ( int r=0 ; r < SH ; r++ )\n					{\n						if ( b[i][X[q]] == b[j][X[r]] )\n						{\n							Masoud++;\n						}\n					}\n				}\n				if( Masoud == SH )\n				{\n					cout<<\"Card \"<<i+1<<\" is equivalent to card \"<<j+1<<endl;\n					i++;\n				}\n				Masoud=0;\n			}\n		}\n	}\n	return 0;\n}\n',1,11,0,0,'Main.cc:2:19: error: conio.h: No such file or directory\n','2011-10-22 20:09:28',739),(727,46,1003,'#include <iostream>\n#include <conio.h>\n#include <fstream>\nusing namespace std;\n\nint main()\n{\n	int n=-1;\n	int Game=0;\n	while(n!=0)\n	{\n		Game++;\n		int Masoud=0;\n		char Fpatern[5][6];\n		for( int i=0 ; i < 5 ; i++)\n		{\n			cin>>Fpatern[i];\n		}\n\n		char patern[26];\n		for(int i=0,k=0,j=0 ; i < 25 ; i++,j++)\n		{\n			if(j==5){ k++ ; j=0 ; }\n			patern[i] = Fpatern[k][j];\n		}\n\n		patern[25]=0;\n		cin>>n;\n		if(n==0)return 0;\n		cout<<\"Game \"<<Game<<endl;\n		int b[100][25];\n		for(int i=0 ; i < n ; i++)\n		{\n			for(int j=0 ; j < 25 ; j++)\n			{\n				cin>>b[i][j];\n			}\n		}\n\n		int X[25];\n		int SH=0 ;\n		for( int i=0 ; i < 25 ; i++)\n		{\n			if(patern[i]==\'X\')\n			{\n				X[SH]=i;\n				SH++;\n			}\n		}\n		for ( int i=1 ; i < n ; i++)//cards test.\n		{\n			for ( int j=0 ; j < i ; j++)\n			{\n				for ( int q=0 ; q < SH ; q++)\n				{\n					for ( int r=0 ; r < SH ; r++ )\n					{\n						if ( b[i][X[q]] == b[j][X[r]] )\n						{\n							Masoud++;\n						}\n					}\n				}\n				if( Masoud == SH )\n				{\n					cout<<\"Card \"<<i+1<<\" is equivalent to card \"<<j+1<<endl;\n					i++;\n				}\n				Masoud=0;\n			}\n		}\n	}\n	return 0;\n}\n',1,11,0,0,'Main.cc:2:19: error: conio.h: No such file or directory\n','2011-10-22 20:10:56',703),(728,46,1003,'#include <iostream>\nusing namespace std;\n\nint main()\n{\n	int n=-1;\n	int Game=0;\n	while(n!=0)\n	{\n		Game++;\n		int Masoud=0;\n		char Fpatern[5][6];\n		for( int i=0 ; i < 5 ; i++)\n		{\n			cin>>Fpatern[i];\n		}\n\n		char patern[26];\n		for(int i=0,k=0,j=0 ; i < 25 ; i++,j++)\n		{\n			if(j==5){ k++ ; j=0 ; }\n			patern[i] = Fpatern[k][j];\n		}\n\n		patern[25]=0;\n		cin>>n;\n		if(n==0)return 0;\n		cout<<\"Game \"<<Game<<endl;\n		int b[100][25];\n		for(int i=0 ; i < n ; i++)\n		{\n			for(int j=0 ; j < 25 ; j++)\n			{\n				cin>>b[i][j];\n			}\n		}\n\n		int X[25];\n		int SH=0 ;\n		for( int i=0 ; i < 25 ; i++)\n		{\n			if(patern[i]==\'X\')\n			{\n				X[SH]=i;\n				SH++;\n			}\n		}\n		for ( int i=1 ; i < n ; i++)//cards test.\n		{\n			for ( int j=0 ; j < i ; j++)\n			{\n				for ( int q=0 ; q < SH ; q++)\n				{\n					for ( int r=0 ; r < SH ; r++ )\n					{\n						if ( b[i][X[q]] == b[j][X[r]] )\n						{\n							Masoud++;\n						}\n					}\n				}\n				if( Masoud == SH )\n				{\n					cout<<\"Card \"<<i+1<<\" is equivalent to card \"<<j+1<<endl;\n					i++;\n				}\n				Masoud=0;\n			}\n		}\n	}\n	return 0;\n}\n',1,6,1268,152,'','2011-10-22 20:11:40',669),(729,106,1001,'#include <iostream>\n \nusing namespace std;\n \nint main(){\n        int a,b;\n        while (cin >> a >> b){\n                cout << a+b << endl;\n        }\n        return 0;\n}',1,4,1268,4,'','2011-10-23 08:21:38',96),(730,106,1012,'#include <iostream>\nusing namespace std;\n \nint main()\n{\n        int n,x,y,z,sz,mini,maxi,i;\n        int minc = 300, maxc = -1;\n        char name[10][100];\n        while (cin >> n && n>0){\n                for (i=0;i<n;i++)\n                {\n                        cin >> x >> y >> z >> name[i];\n                        sz = x*y*z;\n                        if (sz<minc){\n                                minc = sz;\n                                mini = i;\n                        }else if (sz > maxc){\n                                maxc = sz;\n                                maxi = i;\n                        }\n                }\n                cout << name[maxi] << \" took clay from \" << name[mini] << \".\" << endl;\n        }\n        return 0;\n}',1,6,1268,0,'','2011-10-23 08:32:42',304),(731,106,1012,'#include <iostream>\nusing namespace std;\n \nint main()\n{\n        int n,x,y,z,sz,mini=0,maxi=0,i;\n        int minc = 300, maxc = -1;\n        char name[10][100];\n        while (cin >> n && n>0){\n                for (i=0;i<n;i++)\n                {\n                        cin >> x >> y >> z >> name[i];\n                        sz = x*y*z;\n                        if (sz<minc){\n                                minc = sz;\n                                mini = i;\n                        }\n                        if (sz > maxc){\n                                maxc = sz;\n                                maxi = i;\n                        }\n                }\n                cout << name[maxi] << \" took clay from \" << name[mini] << \".\" << endl;\n        }\n        return 0;\n}',1,6,1268,4,'','2011-10-23 08:38:29',304),(732,106,1012,'#include <iostream>\nusing namespace std;\n \nint main()\n{\n        int n,x,y,z,sz,mini=0,maxi=0,i;\n        int minc = 10000, maxc = -1;\n        char name[10][100];\n        while (cin >> n && n>0){\n                for (i=0;i<n;i++)\n                {\n                        cin >> x >> y >> z >> name[i];\n                        sz = x*y*z;\n                        if (sz<minc){\n                                minc = sz;\n                                mini = i;\n                        }\n                        if (sz > maxc){\n                                maxc = sz;\n                                maxi = i;\n                        }\n                }\n                cout << name[maxi] << \" took clay from \" << name[mini] << \".\" << endl;\n        }\n        return 0;\n}',1,6,1268,0,'','2011-10-23 08:39:38',306),(736,111,1001,'#include <iostream>\nusing namespace std;\nint main()\n{\nint a,b;\nwhile(cin>>a>>b)\n{\ncout <<a+b;\n}\nreturn 0;\n}',1,6,1268,0,'','2011-10-25 08:51:36',90),(737,111,1001,'#include <iostream>\nusing namespace std;\nint main()\n{\nint a,b;\nwhile(cin>>a>>b)\n{\ncout <<a+b<<endl;\n}\nreturn 0;\n}',1,4,1268,0,'','2011-10-25 08:55:04',96),(741,46,1013,'#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nint test(int a[][7] , int i , int j)\n{\n    for( ; j<7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nbool empty(int a[][7])\n{\n    for(int i=0 ; i < 6 ; i++)\n    {\n        for(int j=0 ; j < 7 ; j++ )\n        {\n            if(a[i][j]==1)return 0;\n        }\n    }\n    return 1;\n}\nvoid print(int a[6][7])\n{\n    for(int i=0 ; i < 6 ; i++)\n    {\n        for(int j=0 ; j < 7 ; j++)\n        {\n            cout<<a[i][j];\n        }\n        cout<<endl;\n    }\n    cout<<endl;\n}\nint main()\n{\n    ifstream in(\"C:\\\\Documents and Settings\\\\m\\\\Desktop\\\\amsosud\\\\a.txt\");\n    int a=0,b=0;\n    while(1)\n    {\n        int SH=0;\n        int masoud[6][7];\n        for(int i=0 ; i < 6 ; i++)\n        {\n            for(int j=0 ; j < 7 ; j++)\n            {\n                masoud[i][j]=0;\n            }\n        }\n        in>>a>>b;\n		if(a==-1 && b==-1)break;\n        masoud[a-1][b-1]=1;\n        while(a!=0 && b!=0)\n        {\n            in>>a>>b;\n            masoud[a-1][b-1]=1;\n        }\n        masoud[6][7]=0;\n        while(1)\n        {\n            //print(masoud);\n            if(empty(masoud)==1)break;\n            int j=0;\n            for( int i=0 ; i < 6 ; i++ )\n            {\n                for( ; j < 7 ; j++ )\n                {\n                    int temp = test( masoud , i , j );\n                    if( temp != -1 )\n                    {\n                        masoud[i][temp]=0;\n                        j=temp-1;\n                    }\n					if(i==5 && temp==-1)break;\n                    if(temp==-1){if(i!=5)i++;j--;}\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,9,1264,20,'','2011-10-25 17:14:03',859),(743,46,1013,'#include <iostream>\n\nusing namespace std;\n\nint test(int a[][7] , int i , int j)\n{\n    for( ; j<7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nbool empty(int a[][7])\n{\n    for(int i=0 ; i < 6 ; i++)\n    {\n        for(int j=0 ; j < 7 ; j++ )\n        {\n            if(a[i][j]==1)return 0;\n        }\n    }\n    return 1;\n}\nint main()\n{\n    int a=0,b=0;\n    while(1)\n    {\n        int SH=0;\n        int masoud[6][7];\n        for(int i=0 ; i < 6 ; i++)\n        {\n            for(int j=0 ; j < 7 ; j++)\n            {\n                masoud[i][j]=0;\n            }\n        }\n        cin>>a>>b;\n		if(a==-1 && b==-1)break;\n        masoud[a-1][b-1]=1;\n        while(a!=0 && b!=0)\n        {\n            cin>>a>>b;\n            masoud[a-1][b-1]=1;\n        }\n        masoud[6][7]=0;\n        while(1)\n        {\n            if(empty(masoud)==1)break;\n            int j=0;\n            for( int i=0 ; i < 6 ; i++ )\n            {\n                for( ; j < 7 ; j++ )\n                {\n                    int temp = test( masoud , i , j );\n                    if( temp != -1 )\n                    {\n                        masoud[i][temp]=0;\n                        j=temp-1;\n                    }\n					if(i==5 && temp==-1)break;\n                    if(temp==-1){if(i!=5)i++;j--;}\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,10,1268,4,'','2011-10-25 17:15:38',660),(744,46,1013,'#include <iostream>\n//#include <fstream>\n\nusing namespace std;\n\nint test(int a[][7] , int i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    //ifstream in (\"C:\\\\Documents and Settings\\\\m\\\\Desktop\\\\amsosud\\\\a.txt\");\n    int a=0,b=0;\n    while(1)\n    {\n        int SH=0,SH3=0;\n        int masoud[6][7];\n        for(int i=0 ; i < 6 ; i++)\n        {\n            for(int j=0 ; j < 7 ; j++)\n            {\n                masoud[i][j]=0;\n            }\n        }\n        cin>>a>>b;\n		if(a==-1 && b==-1)break;\n        masoud[a-1][b-1]=1;\n        while(a!=0 && b!=0)\n        {\n            cin>>a>>b;\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(1)\n        {\n            if(SH2==SH3)break;\n            int j=0;\n            for( int i=0 ; i < 6 ; i++ )\n            {\n                for( ; j < 7 ; j++ )\n                {\n                    int temp = test( masoud , i , j );\n                    if( temp != -1 )\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        j=temp-1;\n                    }\n					if(i==5 && temp==-1)break;\n                    if(temp==-1){if(i!=5)i++;j--;}\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,7,1268,3000,'','2011-10-25 17:24:08',673),(747,46,1013,'#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    ifstream in (\"C:\\\\Documents and Settings\\\\m\\\\Desktop\\\\amsosud\\\\a.txt\");\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0;\n        short int masoud[6][7];\n        in>>a>>b;\n		if(a==-1 && b==-1)break;\n        masoud[a-1][b-1]=1;\n        while(a!=0 && b!=0)\n        {\n            in>>a>>b;\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            F=0;\n            for( int i=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    int temp = test( masoud , i , F );\n                    if( temp != -1 )\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n                    }\n					if(i==5 && temp==-1)break;\n                    if(temp==-1){if(i!=5)i++;F--;}\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,9,1264,12,'','2011-10-25 17:45:56',621),(748,46,1013,'#include <iostream>\n\nusing namespace std;\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0;\n        short int masoud[6][7];\n        cin>>a>>b;\n		if(a==-1 && b==-1)break;\n        masoud[a-1][b-1]=1;\n        while(a!=0 && b!=0)\n        {\n            cin>>a>>b;\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            F=0;\n            for( int i=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    int temp = test( masoud , i , F );\n                    if( temp != -1 )\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n                    }\n					if(i==5 && temp==-1)break;\n                    if(temp==-1){if(i!=5)i++;F--;}\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,7,1268,3000,'','2011-10-25 17:46:36',539),(749,46,1013,'#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    ifstream in (\"C:\\\\Documents and Settings\\\\m\\\\Desktop\\\\amsosud\\\\a.txt\");\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0;\n        short int masoud[6][7];\n        in>>a>>b;\n		if(a==-1)break;\n        masoud[a-1][b-1]=1;\n        while(a!=0)\n        {\n            in>>a>>b;\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            F=0;\n            for( int i=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    int temp = test( masoud , i , F );\n					if(i==5 && temp==-1)break;\n                    if( temp != -1 )\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n						break;\n                    }\n                    if(temp==-1){if(i!=5)i++;F--;}\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,9,1264,4,'','2011-10-25 17:49:07',614),(750,46,1013,'#include <iostream>\n\nusing namespace std;\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0;\n        short int masoud[6][7];\n        cin>>a>>b;\n		if(a==-1)break;\n        masoud[a-1][b-1]=1;\n        while(a!=0)\n        {\n            cin>>a>>b;\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            F=0;\n            for( int i=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    int temp = test( masoud , i , F );\n					if(i==5 && temp==-1)break;\n                    if( temp != -1 )\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n						break;\n                    }\n                    if(temp==-1){if(i!=5)i++;F--;}\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,7,1268,3000,'','2011-10-25 17:49:42',532),(752,46,1013,'#include <iostream>\n\nusing namespace std;\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0,temp=1;\n        short int masoud[6][7];\n        cin>>a>>b;\n		if(a==-1)return 0;\n        masoud[a-1][b-1]=1;\n        while(a!=0)\n        {\n            cin>>a>>b;\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            F=0;\n            for( int i=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    temp = test( masoud , i , F );\n					if(temp==-1)\n					{\n						break;\n					}\n					else\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n                    }\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',1,7,1268,3000,'','2011-10-25 18:07:26',490),(754,46,1013,'#include <iostream>\n\nusing namespace std;\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0,temp=1;\n        short int masoud[6][7];\n        cin>>a>>b;\n		if(a==-1)return 0;\n        masoud[a-1][b-1]=1;\n        while(a!=0)\n        {\n            cin>>a>>b;\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            for( int i=0,F=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    temp = test( masoud , i , F );\n					if(temp==-1)\n					{\n						break;\n					}\n					else\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n                    }\n\n                }\n            }\n            SH++;\n        }\n        cout<<SH<<endl;\n    }\n    return 0;\n}\n',0,11,0,0,'Main.c:1:20: error: iostream: No such file or directory\nMain.c:3: error: expected \'=\', \',\', \';\', \'asm\' or \'__attribute__\' before \'namespace\'\nMain.c:5: error: expected \';\', \',\' or \')\' before \'&\' token\nMain.c: In function \'main\':\nMain.c:20: error: \'cin\' undeclared (first use in this function)\nMain.c:20: error: (Each undeclared identifier is reported only once\nMain.c:20: error: for each function it appears in.)\nMain.c:37: warning: implicit declaration of function \'test\'\nMain.c:53: error: \'cout\' undeclared (first use in this function)\nMain.c:53: error: \'endl\' undeclared (first use in this function)\nMain.c:18: warning: unused variable \'F\'\n','2011-10-25 18:15:11',490),(755,46,1013,'#include <stdio.h>\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0,temp=1;\n        short int masoud[6][7];\n        scanf(\"%d%d\",&a,&b);\n		if(a==-1)return 0;\n        masoud[a-1][b-1]=1;\n        while(a!=0)\n        {\n            scanf(\"%d%d\",&a,&b);\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            for( int i=0,F=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    temp = test( masoud , i , F );\n					if(temp==-1)\n					{\n						break;\n					}\n					else\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n                    }\n\n                }\n            }\n            SH++;\n        }\n        printf(\"%d\\n\",SH);\n    }\n    return 0;\n}\n',0,11,0,0,'Main.c:3: error: expected \';\', \',\' or \')\' before \'&\' token\nMain.c: In function \'main\':\nMain.c:18: warning: format \'%d\' expects type \'int *\', but argument 2 has type \'short int *\'\nMain.c:18: warning: format \'%d\' expects type \'int *\', but argument 3 has type \'short int *\'\nMain.c:23: warning: format \'%d\' expects type \'int *\', but argument 2 has type \'short int *\'\nMain.c:23: warning: format \'%d\' expects type \'int *\', but argument 3 has type \'short int *\'\nMain.c:35: warning: implicit declaration of function \'test\'\nMain.c:16: warning: unused variable \'F\'\nMain.c:18: warning: ignoring return value of \'scanf\', declared with attribute warn_unused_result\nMain.c:23: warning: ignoring return value of \'scanf\', declared with attribute warn_unused_result\n','2011-10-25 18:17:10',494),(756,46,1013,'#include <stdio.h>\n\nint test(short int a[][7] , int &i , int j)\n{\n    for( ; j < 7 ; j++)\n    {\n        if(a[i][j]==1)return j;\n    }\n    return -1;\n}\nint main()\n{\n    short int a=0,b=0;\n    while(1)\n    {\n        short int SH=0,SH3=0,F=0,temp=1;\n        short int masoud[6][7];\n        scanf(\"%sd%sd\",&a,&b);\n		if(a==-1)return 0;\n        masoud[a-1][b-1]=1;\n        while(a!=0)\n        {\n            scanf(\"%d%d\",&a,&b);\n            masoud[a-1][b-1]=1;\n            SH3++;\n        }\n        masoud[6][7]=0;\n		int SH2=0;\n        while(SH2!=SH3)\n        {\n            for( int i=0,F=0 ; i < 6; i++ )\n            {\n                for( ; F < 7 ; F++ )\n                {\n                    temp = test( masoud , i , F );\n					if(temp==-1)\n					{\n						break;\n					}\n					else\n                    {\n                        SH2++;\n                        masoud[i][temp]=0;\n                        F=temp-1;\n                    }\n\n                }\n            }\n            SH++;\n        }\n        printf(\"%sd\\n\",SH);\n    }\n    return 0;\n}\n',0,11,0,0,'Main.c:3: error: expected \';\', \',\' or \')\' before \'&\' token\nMain.c: In function \'main\':\nMain.c:18: warning: format \'%s\' expects type \'char *\', but argument 2 has type \'short int *\'\nMain.c:18: warning: format \'%s\' expects type \'char *\', but argument 3 has type \'short int *\'\nMain.c:23: warning: format \'%d\' expects type \'int *\', but argument 2 has type \'short int *\'\nMain.c:23: warning: format \'%d\' expects type \'int *\', but argument 3 has type \'short int *\'\nMain.c:35: warning: implicit declaration of function \'test\'\nMain.c:51: warning: format \'%s\' expects type \'char *\', but argument 2 has type \'int\'\nMain.c:16: warning: unused variable \'F\'\nMain.c:18: warning: ignoring return value of \'scanf\', declared with attribute warn_unused_result\nMain.c:23: warning: ignoring return value of \'scanf\', declared with attribute warn_unused_result\n','2011-10-25 18:18:07',497),(763,49,1007,'#include <iostream>\n#include <string>\n#include <queue>\nusing namespace std;\n\n\nint main()\n{\n	queue<char> outcar;\n	string cars;\n	char c;\n	int n,k;\n	int fl=1;\n	cin>>cars;\n	while(cars!=\"STOP\")\n	{\n\n		cout<<\"Dataset #\"<<fl<<\":  The initial order is \"<<cars<<\'.\' <<endl;\n		fl++;\n		cin>>n;\n		for(int i=0;i<n;i++)\n		{\n			cin>>c;\n			k=cars.find_first_of(c);\n\n			if(k<=cars.size()/2){\n				\n				for (int i=0;i<k;i++)\n					outcar.push(cars[i]);\n				\n				for (int i=0;i<=k;i++)\n					cars.erase(cars.begin());\n\n			for (int i=0;i<k;i++){\n				cars.insert(cars.begin(),outcar.front());\n				outcar.pop();\n			}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}//end if\n			else {\n				for (int i=cars.size()- 1;i>k;i--)\n					outcar.push(cars[i]);\n				\n				int t=cars.size()-k;\n				for (int i=cars.size()- 1;i>=k;i--)\n				cars.erase(i);\n\n				for (int i=1;i<t;i++){\n				cars.insert(cars.end(),outcar.front());\n					outcar.pop();\n				}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}\n		}//end for\n\n\n\n		cin>>cars;\n	}//end while\n\n\n\n\n	return 0;\n}',1,6,1272,152,'','2011-10-25 21:10:47',814),(764,49,1007,'#include <iostream>\n#include <string>\n#include <queue>\nusing namespace std;\n\n\nint main()\n{\n	queue<char> outcar;\n	string cars;\n	char c;\n	int n,k;\n	int fl=1;\n	cin>>cars;\n	while(cars!=\"STOP\")\n	{\n\n		cout<<\"Dataset #\"<<fl<<\":  The initial order is \"<<cars<<\'.\' <<endl;\n		fl++;\n		cin>>n;\n		for(int i=0;i<n;i++)\n		{\n			cin>>c;\n			k=cars.find_first_of(c);\n\n			if(k<=cars.size()/2){\n				\n				for (int i=0;i<k;i++)\n					outcar.push(cars[i]);\n				\n				for (int i=0;i<=k;i++)\n					cars.erase(cars.begin());\n\n			for (int i=0;i<k;i++){\n				cars.insert(cars.begin(),outcar.front());\n				outcar.pop();\n			}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}//end if\n			else {\n				for (int i=cars.size()- 1;i>k;i--)\n					outcar.push(cars[i]);\n				\n				int t=cars.size()-k;\n				for (int i=cars.size()- 1;i>=k;i--)\n				cars.erase(i);\n\n				for (int i=1;i<t;i++){\n				cars.insert(cars.end(),outcar.front());\n					outcar.pop();\n				}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}\n		}//end for\n		cout<<endl;\n\n\n		cin>>cars;\n	}//end while\n\n\n\n\n	return 0;\n}',1,6,1272,168,'','2011-10-25 21:13:47',825),(765,49,1007,'#include <iostream>\n#include <string>\n#include <queue>\nusing namespace std;\n\n\nint main()\n{\n	queue<char> outcar;\n	string cars;\n	char c;\n	int n,k;\n	int fl=1;\n	cin>>cars;\n	while(cars!=\"STOP\")\n	{\n\n		cout<<\"Dataset #\"<<fl<<\":  The initial order is \"<<cars<<\'.\' <<endl;\n		fl++;\n		cin>>n;\n		for(int i=0;i<n;i++)\n		{\n			cin>>c;\n			k=cars.find_first_of(c);\n			int g =cars.size()-1;\n\n			if(k<=g/2){\n				\n				for (int i=0;i<k;i++)\n					outcar.push(cars[i]);\n				\n				for (int i=0;i<=k;i++)\n					cars.erase(cars.begin());\n\n			for (int i=0;i<k;i++){\n				cars.insert(cars.begin(),outcar.front());\n				outcar.pop();\n			}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}//end if\n			else {\n				for (int i=cars.size()- 1;i>k;i--)\n					outcar.push(cars[i]);\n				\n				int t=cars.size()-k;\n				for (int i=cars.size()- 1;i>=k;i--)\n				cars.erase(i);\n\n				for (int i=1;i<t;i++){\n				cars.insert(cars.end(),outcar.front());\n					outcar.pop();\n				}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}\n		}//end for\n		cout<<endl;\n\n\n		cin>>cars;\n	}//end while\n\n\n\n\n	return 0;\n}',1,5,1272,136,'','2011-10-26 07:22:16',834),(766,49,1007,'#include <iostream>\n#include <string>\n#include <queue>\n//#include <fstream>\nusing namespace std;\n\n\nint main()\n{\n\n	//ifstream in(\"C:\\\\Users\\\\masoudjjgh\\\\Desktop\\\\Masoud\\\\a.txt\");\n	//ofstream out(\"C:\\\\Users\\\\masoudjjgh\\\\Desktop\\\\Masoud\\\\b.txt\");\n	queue<char> outcar;\n	string cars;\n	char c;\n	int n,k;\n	int fl=1;\n	cin>>cars;\n	while(cars!=\"STOP\")\n	{\n		cin>>n;\n		for(int i=0;i<n;i++)\n		{\n			if(i==0) 	{cout<<\"Dataset #\"<<fl<<\":  The initial order is \"<<cars<<\'.\' <<endl;fl++;}\n			cin>>c;\n			k=cars.find_first_of(c);\n			int g =cars.size()-1;\n\n			if(k<=g/2){\n				\n				for (int i=0;i<k;i++)\n					outcar.push(cars[i]);\n				\n				for (int i=0;i<=k;i++)\n					cars.erase(cars.begin());\n\n			for (int i=0;i<k;i++){\n				cars.insert(cars.begin(),outcar.front());\n				outcar.pop();\n			}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}//end if\n			else {\n				for (int i=cars.size()- 1;i>k;i--)\n					outcar.push(cars[i]);\n				\n				int t=cars.size()-k;\n				for (int i=cars.size()- 1;i>=k;i--)\n				cars.erase(i);\n\n				for (int i=1;i<t;i++){\n				cars.insert(cars.end(),outcar.front());\n					outcar.pop();\n				}\n			cout<<\"After \"<<c<<\" leaves, the order is \"<<cars<<\'.\'<<endl;\n			}\n		}//end for\n		cin>>cars;\n		if(cars==\"STOP\")break;\n		cout<<endl;\n	}//end while\n	return 0;\n}',1,4,1272,140,'','2011-10-26 09:11:54',1010),(767,111,1012,'#include <iostream>\nusing namespace std;\nint main()\n{\n	int box;\n	int b[3];\n	int n=0;\n	int m=0;\n	cin >> box;\n	int a[250];\n	for(int i=0;i<box;i++)\n	{\n		a[i]=1;\n	}\n	for(int i = 0 ; i < box;i++)\n	{\n		for(int j=0;j<3;j++)\n		{\n			cin>>b[i];\n			a[i]*=b[j];\n		}\n	}\n	for(int i=0;i<box;i++)\n	{\n		for(int j=0;j<box;j++)\n		{\n			if(a[i]>a[j])\n				m++;\n		}\n		if(m>1) cout << \"ghatel : \" << a[i];\n		for(int j=0;j<box;j++)\n		{\n			if(a[i]<a[j])\n				n++;\n		}\n		if(n<3);\n	}\n	return 0;\n}',1,6,1268,0,'','2011-10-26 09:15:01',338),(768,111,1012,'#include <iostream>\n#include<string>\nusing namespace std;\nint main()\n{\n	char stu[10][10];\n	int maghtool;\n	int ghatel;\n	int a[250];\n	int box;\n	int b[3];\n	cin >> box;\n	for(int i=0;i<box;i++)\n	{\n		\n		a[i]=1;\n	}\n	while(box !=-1)\n	{\n	for(int i = 0 ; i < box;i++)\n	{\n		cout << \"neme\" << endl;\n		cin>> stu[i];\n		for(int j=0;j<3;j++)\n		{\n			cout << j << endl;\n			cin>>b[j];\n			a[i]*=b[j];\n		} \n	}\n	for(int i=0;i<box;i++)\n	{\n		int m=0;\n		int n=0;\n		for(int j=0;j<box;j++)\n		{\n			if(a[i]>a[j])\n				m++;\n		}\n		if(m>1) ghatel=i  ;\n		for(int j=0;j<box;j++)\n		{\n			if(a[i]<a[j])\n				n++;\n		}\n		if(n>1) maghtool=i  ;\n	}\n	cout << stu[ghatel] << \" took clay from \" << stu[maghtool] <<\".\" <<  endl;\n	cin >> box;\n	}\n	return 0;\n}',1,9,1268,8,'','2011-10-26 14:23:18',519),(776,46,1032,'#include <iostream>\nusing namespace std;\nint main()\n{\n    float m1,sum=0;\n    cin>>m1;\n    while(m1!=0)\n    {\n        int i;\n        for(i=2 ; sum < m1 ; i++)\n        {\n            sum+=(1/(float)i);\n        }\n        cout<<i-2<<\" card(s)\"<<endl;\n        cin>>m1;\n        sum=0;\n    }\n    return 0;\n}\n',1,4,1268,0,'','2011-10-26 18:54:08',176);
/*!40000 ALTER TABLE `runs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sources`
--

DROP TABLE IF EXISTS `sources`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sources` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `label` varchar(256) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=67 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sources`
--

LOCK TABLES `sources` WRITE;
/*!40000 ALTER TABLE `sources` DISABLE KEYS */;
INSERT INTO `sources` VALUES (-1,''),(27,'Mid-Atlantic USA 2001'),(26,'Mid-Central USA 2001'),(25,'Mid-Atlantic USA 2003'),(24,'Mid-Central USA 2003'),(23,'Southeast USA 2000'),(54,'Latin American Regional Contest 2010'),(29,'Northwestern European 2009'),(30,'The 2010 ACM-ICPC Asia Chengdu Regional Contest'),(31,'The 2007 ACM Mexico and Central America Programming Contest'),(32,'The 2007 Nordic Collegiate Programming Contest'),(33,'Southwestern Europe 2007'),(37,'9th Iran Nationwide Internet Contest'),(38,'Northwestern Europe 2004'),(39,'Northwestern Europe 2003'),(40,'The 2007 ACM Central Europe Programming Contest'),(41,'The 34th ACM-ICPC Asia Regional 2009 Ningbo Site NIT Cup National Invitation Contest'),(42,'SEERC 2011'),(43,'2011 Pacific Northwest Region Programming Contest'),(45,'Central Europe Regional Contest 2011'),(46,'North America - Rocky Mountain 2011'),(47,'USACO Training Section'),(48,'Tehran, Asia Region - Regional 2011'),(49,'Southeastern Europe 2000'),(50,'Czech Technical University Open 1999'),(51,'World Final 2004, Prague (Czech)'),(52,'Southwestern Europe Regional Contest 2009'),(53,'Southeast USA 2008'),(55,'Alberta Collegiate 2003'),(56,'Southeastern Europe 2002'),(57,'Pacific Northwest 2005'),(58,'Southeastern Europe 2008'),(59,'2009 ACM-ICPC Pacific Northwest Region'),(60,'Central Europe 2004'),(61,'FEE Local Contest 2004'),(62,'4th Kashan University\'s ACM Contest'),(63,'Southeastern Europe 2005'),(64,'Central European Regional Contest 2010'),(65,'10th Iran Nationwide Internet Contest'),(66,'CERC 2012');
/*!40000 ALTER TABLE `sources` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `subscriptions`
--

DROP TABLE IF EXISTS `subscriptions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `subscriptions` (
  `user_id` int(11) NOT NULL,
  `target_id` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  PRIMARY KEY (`user_id`,`target_id`,`type`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `subscriptions`
--

LOCK TABLES `subscriptions` WRITE;
/*!40000 ALTER TABLE `subscriptions` DISABLE KEYS */;
INSERT INTO `subscriptions` VALUES (7,1001,1),(10,-100,100),(10,1,2),(10,2,2),(10,7,2),(10,25,2),(10,26,2),(10,28,2),(10,29,2),(10,47,2),(10,50,2),(10,60,2),(10,63,2),(10,66,2),(10,70,2),(10,80,2),(10,81,2),(10,89,2),(10,93,2),(10,103,2),(10,112,2),(10,1001,1),(10,1002,1),(10,1007,1),(10,1010,1),(10,1012,1),(10,1013,1),(10,1017,1),(10,1020,1),(10,1023,1),(10,1032,1),(10,1035,1),(10,1043,1),(10,1045,1),(10,1050,1),(10,1055,1),(10,1056,1),(10,1057,1),(10,1062,1),(10,1064,1),(10,1065,1),(10,1066,1),(10,1067,1),(10,1068,1),(10,1069,1),(10,1071,1),(10,1072,1),(10,1073,1),(10,1074,1),(10,1076,1),(10,1078,1),(10,1079,1),(10,1084,1),(10,1085,1),(10,1087,1),(10,1088,1),(10,1090,1),(10,1097,1),(10,1098,1),(10,1099,1),(10,1102,1),(10,1107,1),(10,1108,1),(10,1109,1),(10,1116,1),(10,1121,1),(10,1123,1),(10,1124,1),(10,1127,1),(10,1130,1),(10,1133,1),(10,1134,1),(10,1140,1),(10,1148,1),(10,1149,1),(10,1158,1),(10,1160,1),(10,1164,1),(10,1165,1),(10,1189,1),(10,1192,1),(10,1193,1),(10,1197,1),(10,1198,1),(10,1200,1),(10,1322,1),(10,1323,1),(10,1324,1),(10,1325,1),(10,1326,1),(10,1327,1),(10,1328,1),(10,1329,1),(10,1331,1),(10,1332,1),(10,1333,1),(10,1334,1),(10,1335,1),(10,1336,1),(10,1337,1),(10,1338,1),(10,1339,1),(10,1340,1),(10,1341,1),(10,1342,1),(10,1343,1),(10,1344,1),(10,1345,1),(10,1346,1),(10,1347,1),(10,1348,1),(10,1349,1),(10,1350,1),(10,1351,1),(10,1352,1),(10,1353,1),(10,1354,1),(10,1359,1),(10,1361,1),(10,1362,1),(10,1363,1),(10,1364,1),(10,1365,1),(10,1367,1),(10,1369,1),(10,1387,1),(10,1388,1),(10,1389,1),(10,1391,1),(10,1393,1),(10,1395,1),(10,1396,1),(10,1397,1),(10,1400,1),(10,1402,1),(10,1403,1),(10,1404,1),(10,1405,1),(10,1408,1),(10,1409,1),(10,1414,1),(10,1415,1),(10,1416,1),(10,1417,1),(10,1418,1),(10,1420,1),(10,1422,1),(10,1426,1),(10,1427,1),(10,1428,1),(10,1429,1),(10,1430,1),(10,1431,1),(10,1432,1),(10,1433,1),(10,1434,1),(10,1435,1),(10,1436,1),(10,1437,1),(10,1438,1),(10,1441,1),(10,1443,1),(10,1444,1),(10,1446,1),(10,1448,1),(10,1455,1),(10,1456,1),(10,1457,1),(10,2000,1),(10,2001,1),(10,2006,1),(10,2008,1),(10,2009,1),(10,2010,1),(10,2011,1),(10,2012,1),(10,2015,1),(10,2016,1),(10,2017,1),(10,2018,1),(10,2020,1),(10,2021,1),(10,2022,1),(10,2023,1),(10,2024,1),(10,2025,1),(10,2026,1),(10,2027,1),(10,5000,1),(10,6001,1),(10,6002,1),(10,6003,1),(10,6005,1),(10,6006,1),(10,6007,1),(10,6008,1),(10,6009,1),(10,6013,1),(10,6017,1),(10,6020,1),(10,6022,1),(10,6025,1),(10,8008,1),(10,8010,1),(10,8011,1),(10,8012,1),(10,9001,1),(10,9006,1),(10,9012,1),(10,9016,1),(10,9029,1),(10,9030,1),(12,1001,1),(12,1003,1),(12,1005,1),(12,1006,1),(12,1007,1),(12,1009,1),(12,1011,1),(12,1012,1),(12,1013,1),(12,1015,1),(12,1017,1),(12,1019,1),(12,1020,1),(12,1021,1),(12,1023,1),(12,1025,1),(12,1027,1),(12,1029,1),(12,1031,1),(12,1032,1),(12,1033,1),(12,1035,1),(12,1037,1),(12,1039,1),(12,1041,1),(12,1043,1),(12,1044,1),(12,1045,1),(12,1046,1),(12,1048,1),(12,1050,1),(12,1051,1),(12,1052,1),(12,1055,1),(12,1057,1),(12,1069,1),(12,1071,1),(12,1072,1),(12,1073,1),(12,1078,1),(12,1079,1),(12,1082,1),(12,1084,1),(12,1085,1),(12,1087,1),(12,1088,1),(12,1135,1),(12,1143,1),(12,1158,1),(12,1160,1),(12,1171,1),(12,1172,1),(12,1174,1),(12,1175,1),(12,1177,1),(12,1319,1),(12,1322,1),(12,1323,1),(12,1324,1),(12,1325,1),(12,1326,1),(12,1327,1),(12,1328,1),(12,1329,1),(12,1331,1),(12,1460,1),(12,1461,1),(12,1462,1),(12,2009,1),(12,2011,1),(12,2014,1),(12,2018,1),(12,2020,1),(12,2021,1),(12,2026,1),(12,6002,1),(12,6005,1),(12,6020,1),(12,8000,1),(14,1046,1),(14,1064,1),(14,1065,1),(14,1066,1),(14,1067,1),(14,1068,1),(14,1069,1),(14,1079,1),(14,1088,1),(14,1090,1),(14,1115,1),(14,1200,1),(14,1395,1),(14,1396,1),(14,1397,1),(14,1404,1),(14,1413,1),(14,1426,1),(14,8000,1),(14,8001,1),(14,8003,1),(14,8004,1),(14,8005,1),(14,8006,1),(14,8007,1),(15,1001,1),(15,1013,1),(15,1094,1),(15,1107,1),(16,1106,1),(16,1107,1),(16,1108,1),(16,1109,1),(16,1116,1),(16,1120,1),(16,1121,1),(16,1123,1),(16,1126,1),(16,1127,1),(16,1130,1),(16,1132,1),(16,1140,1),(16,1146,1),(16,1147,1),(16,1148,1),(16,1149,1),(16,1151,1),(16,1152,1),(16,1153,1),(16,1155,1),(16,1156,1),(16,2007,1),(19,2,2),(19,1001,1),(19,1002,1),(20,1001,1),(21,2,2),(21,6002,1),(22,1001,1),(22,1069,1),(22,1090,1),(22,1200,1),(22,2020,1),(22,2021,1),(22,2026,1),(22,2027,1),(22,9017,1),(22,9020,1),(22,9022,1),(23,1001,1),(23,1002,1),(23,1003,1),(23,1006,1),(23,1007,1),(23,1009,1),(23,1012,1),(23,1013,1),(23,1017,1),(23,1020,1),(23,1021,1),(23,1023,1),(23,1026,1),(23,1032,1),(23,1035,1),(23,1045,1),(23,1055,1),(23,1057,1),(23,1071,1),(23,1072,1),(23,1073,1),(23,1078,1),(23,1085,1),(23,1087,1),(23,1088,1),(23,1090,1),(23,1094,1),(23,1098,1),(23,1107,1),(23,1109,1),(23,1116,1),(23,1121,1),(23,1123,1),(23,1146,1),(23,1147,1),(23,1149,1),(23,1151,1),(23,1153,1),(23,1158,1),(23,1164,1),(23,1166,1),(23,1171,1),(23,1172,1),(23,1173,1),(23,1174,1),(23,1175,1),(23,1177,1),(23,1200,1),(23,1311,1),(23,1313,1),(23,1315,1),(23,1316,1),(23,1319,1),(23,1328,1),(23,1329,1),(23,2002,1),(23,2003,1),(23,2009,1),(23,2011,1),(23,2018,1),(23,6001,1),(23,6002,1),(23,6003,1),(23,6004,1),(23,6005,1),(23,6006,1),(23,6007,1),(23,6008,1),(23,6009,1),(23,6010,1),(23,6011,1),(23,6012,1),(23,6014,1),(23,6015,1),(23,6016,1),(23,6017,1),(23,6018,1),(23,6019,1),(23,6020,1),(23,6021,1),(23,6022,1),(23,6023,1),(23,6024,1),(23,6025,1),(23,8000,1),(23,8001,1),(23,8003,1),(23,8006,1),(23,9000,1),(23,9001,1),(23,9002,1),(23,9003,1),(23,9006,1),(23,9106,1),(24,1001,1),(24,1013,1),(24,1062,1),(24,1069,1),(24,1075,1),(24,1084,1),(24,1087,1),(24,1091,1),(24,1143,1),(24,1145,1),(24,1166,1),(24,1167,1),(24,1171,1),(24,1172,1),(24,1173,1),(24,1174,1),(24,1175,1),(24,1177,1),(24,1178,1),(24,1179,1),(24,1180,1),(24,1201,1),(24,1300,1),(24,1301,1),(24,1303,1),(24,1305,1),(24,1307,1),(24,1308,1),(24,1309,1),(24,1310,1),(24,1311,1),(24,1313,1),(24,1315,1),(24,1316,1),(24,1319,1),(24,1322,1),(24,1323,1),(24,1324,1),(24,1325,1),(24,1326,1),(24,1327,1),(24,1329,1),(24,1330,1),(24,1353,1),(24,2006,1),(24,2011,1),(24,2013,1),(24,6001,1),(24,6002,1),(24,6003,1),(24,6004,1),(24,6005,1),(24,6006,1),(24,6007,1),(24,6008,1),(24,6010,1),(24,6011,1),(24,6012,1),(24,6013,1),(24,6014,1),(24,6015,1),(24,6016,1),(24,6017,1),(24,6018,1),(24,6019,1),(24,6020,1),(24,6021,1),(24,6022,1),(24,6023,1),(24,6024,1),(24,6025,1),(25,1001,1),(25,1002,1),(25,1003,1),(25,1004,1),(25,1005,1),(25,1006,1),(25,1007,1),(25,1009,1),(25,1012,1),(25,1013,1),(25,1015,1),(25,1017,1),(25,1020,1),(25,1021,1),(25,1023,1),(25,1026,1),(25,1029,1),(25,1032,1),(25,1034,1),(25,1035,1),(25,1043,1),(25,1055,1),(25,1073,1),(25,1078,1),(25,1090,1),(25,1116,1),(25,1146,1),(25,1158,1),(25,1164,1),(25,2000,1),(25,2001,1),(25,2002,1),(25,2011,1),(25,6005,1),(25,6018,1),(25,6020,1),(25,6021,1),(25,6022,1),(25,6023,1),(25,6024,1),(25,6025,1),(30,1058,1),(30,1116,1),(30,1121,1),(30,1123,1),(30,1124,1),(30,1126,1),(33,1013,1),(33,1107,1),(33,1116,1),(36,1001,1),(36,1002,1),(36,1003,1),(36,1020,1),(36,1045,1),(36,1078,1),(36,1093,1),(36,1146,1),(36,1164,1),(36,6003,1),(36,6022,1),(36,6023,1),(38,1001,1),(38,1002,1),(38,1020,1),(38,1032,1),(38,1035,1),(38,1078,1),(38,1130,1),(38,1146,1),(38,1149,1),(38,1151,1),(38,1164,1),(38,1171,1),(38,1174,1),(38,1177,1),(38,2018,1),(38,6001,1),(38,6002,1),(38,6003,1),(38,6005,1),(38,6006,1),(38,6007,1),(38,6008,1),(38,6009,1),(38,6015,1),(38,6017,1),(38,6018,1),(38,6019,1),(38,6020,1),(38,6021,1),(38,6022,1),(38,6023,1),(38,6024,1),(38,6025,1),(40,2,2),(40,1001,1),(40,1032,1),(40,6001,1),(40,6002,1),(40,6005,1),(42,1001,1),(42,1085,1),(42,1094,1),(42,1103,1),(42,1107,1),(42,8013,1),(42,8014,1),(42,8016,1),(44,1020,1),(44,1155,1),(44,1332,1),(44,1333,1),(44,1334,1),(44,1335,1),(44,1336,1),(44,1337,1),(44,1338,1),(44,1339,1),(44,1340,1),(44,1341,1),(44,1342,1),(44,1343,1),(44,1344,1),(44,1345,1),(44,1346,1),(44,1347,1),(44,1348,1),(44,1349,1),(44,1350,1),(44,1351,1),(44,1352,1),(44,1353,1),(44,1354,1),(44,1356,1),(44,1358,1),(44,1359,1),(44,1361,1),(44,1362,1),(44,1363,1),(44,1364,1),(44,1365,1),(44,1366,1),(44,1367,1),(44,1368,1),(44,1369,1),(44,2004,1),(44,2020,1),(45,1001,1),(45,1361,1),(46,1001,1),(46,1002,1),(46,1012,1),(46,1015,1),(46,1017,1),(46,1020,1),(46,1023,1),(46,1032,1),(46,1066,1),(46,1078,1),(46,1164,1),(46,1325,1),(46,6013,1),(46,6018,1),(46,6019,1),(46,6021,1),(46,6023,1),(47,1001,1),(47,1002,1),(47,1003,1),(47,1007,1),(47,1009,1),(47,1012,1),(47,1013,1),(47,1017,1),(47,1020,1),(47,1021,1),(47,1025,1),(47,1032,1),(47,1035,1),(47,1038,1),(47,1055,1),(47,1158,1),(47,2000,1),(47,2002,1),(47,2003,1),(47,2025,1),(47,2026,1),(47,6004,1),(47,6008,1),(47,6009,1),(47,6018,1),(47,6024,1),(47,6025,1),(48,40,2),(48,1001,1),(48,1002,1),(48,1003,1),(48,1005,1),(48,1007,1),(48,1009,1),(48,1012,1),(48,1017,1),(48,1020,1),(48,1021,1),(48,1023,1),(48,1032,1),(48,1035,1),(48,1036,1),(48,1038,1),(48,1055,1),(48,1071,1),(48,1073,1),(48,1078,1),(48,1094,1),(48,1116,1),(48,1146,1),(48,1147,1),(48,1158,1),(48,1164,1),(48,1177,1),(48,1200,1),(48,1301,1),(48,1305,1),(48,1329,1),(48,1362,1),(48,2000,1),(48,2002,1),(48,2009,1),(48,2011,1),(48,2018,1),(48,2020,1),(48,2021,1),(48,2022,1),(48,2023,1),(48,2024,1),(48,2025,1),(48,2026,1),(48,2027,1),(48,6001,1),(48,6002,1),(48,6003,1),(48,6004,1),(48,6005,1),(48,6006,1),(48,6007,1),(48,6008,1),(48,6009,1),(48,6010,1),(48,6012,1),(48,6015,1),(48,6016,1),(48,6017,1),(48,6018,1),(48,6019,1),(48,6020,1),(48,6021,1),(48,6022,1),(48,6023,1),(48,6024,1),(48,6025,1),(48,9016,1),(49,1001,1),(49,1002,1),(49,1007,1),(49,1012,1),(49,1013,1),(49,1015,1),(49,1017,1),(49,1023,1),(49,1032,1),(49,1035,1),(49,1073,1),(49,1078,1),(49,1094,1),(49,1134,1),(49,1164,1),(49,1200,1),(49,1325,1),(49,1362,1),(49,2009,1),(49,2011,1),(49,6002,1),(49,6004,1),(49,6005,1),(49,6016,1),(49,6017,1),(49,6022,1),(49,6024,1),(49,6025,1),(52,1001,1),(52,2009,1),(52,2010,1),(52,2011,1),(52,2018,1),(54,1001,1),(54,1002,1),(55,1013,1),(56,1013,1),(56,1107,1),(57,1013,1),(57,1107,1),(58,1013,1),(58,1107,1),(59,1001,1),(59,1013,1),(59,1032,1),(59,1035,1),(59,1107,1),(59,6002,1),(59,6007,1),(59,6018,1),(59,6020,1),(59,6025,1),(60,8008,1),(60,8009,1),(60,8011,1),(60,8012,1),(60,9016,1),(62,1001,1),(62,1013,1),(62,1107,1),(63,1013,1),(63,1107,1),(66,1001,1),(71,1013,1),(72,1013,1),(72,1107,1),(73,1001,1),(73,1013,1),(73,1032,1),(73,1073,1),(73,1107,1),(73,6025,1),(74,1001,1),(74,1013,1),(74,1107,1),(76,1001,1),(77,1013,1),(77,1107,1),(79,1013,1),(79,1107,1),(80,1013,1),(80,1107,1),(81,1013,1),(81,1107,1),(83,1013,1),(85,1013,1),(85,1107,1),(86,1013,1),(87,1013,1),(88,1013,1),(88,1107,1),(90,1013,1),(90,1107,1),(91,1001,1),(92,1013,1),(92,1107,1),(93,1013,1),(93,1107,1),(94,1001,1),(94,1013,1),(96,1001,1),(96,1002,1),(96,1013,1),(96,1107,1),(98,1013,1),(99,1013,1),(99,1107,1),(101,1043,1),(101,1045,1),(101,1055,1),(101,1064,1),(101,1065,1),(101,1067,1),(101,1068,1),(101,1084,1),(101,1087,1),(101,1088,1),(101,1090,1),(101,1093,1),(101,1094,1),(102,1001,1),(102,1012,1),(103,1001,1),(103,1002,1),(103,1003,1),(103,1043,1),(103,1045,1),(103,1050,1),(103,1057,1),(103,1071,1),(103,1073,1),(103,1078,1),(103,1085,1),(103,1087,1),(103,1090,1),(103,1094,1),(103,1103,1),(103,1107,1),(103,1341,1),(103,6001,1),(103,6002,1),(103,6004,1),(103,6005,1),(103,6006,1),(103,6007,1),(103,6008,1),(103,6009,1),(103,9103,1),(104,1001,1),(105,1001,1),(105,1023,1),(105,2003,1),(105,6005,1),(106,1001,1),(107,1013,1),(109,1001,1),(110,1001,1),(111,1001,1),(111,1002,1),(111,1003,1),(111,1012,1),(111,1013,1),(111,1017,1),(111,1020,1),(111,1021,1),(111,1032,1),(111,1073,1),(111,1078,1),(111,6005,1),(112,1001,1),(112,1013,1),(113,1001,1),(113,1013,1),(113,1107,1),(117,1001,1),(117,1002,1),(117,1003,1),(117,1004,1),(117,1005,1),(117,1006,1),(117,1007,1),(117,1012,1),(117,1013,1),(117,1017,1),(117,1021,1),(117,1024,1),(117,1025,1),(117,1026,1),(117,1032,1),(117,1035,1),(117,1043,1),(117,1067,1),(117,1073,1),(117,1084,1),(117,1085,1),(117,1087,1),(117,1090,1),(117,1093,1),(117,6002,1),(117,6005,1),(117,6018,1),(117,6019,1),(117,6021,1),(117,6023,1),(117,6024,1),(117,6025,1),(126,1055,1),(126,1057,1),(126,1062,1),(127,1065,1),(127,2022,1),(130,1013,1),(130,1107,1),(131,1013,1),(133,1013,1),(133,1107,1),(134,1013,1),(137,1001,1),(137,1002,1),(137,1017,1),(137,6017,1),(139,1001,1),(140,1001,1),(140,1134,1),(140,1200,1),(140,1319,1),(140,1341,1),(141,1001,1),(141,1020,1),(141,1065,1),(141,1067,1),(142,1058,1),(144,1001,1),(144,1032,1),(145,1002,1),(145,1078,1),(145,1087,1),(145,2001,1),(145,2009,1),(148,1001,1),(424,1001,1),(428,1001,1),(428,1073,1),(428,1116,1),(428,1118,1),(428,1121,1),(428,1123,1),(428,1126,1),(428,1147,1),(428,1149,1),(428,1151,1),(430,1001,1),(431,1001,1),(431,1073,1),(431,2000,1),(431,2002,1),(432,1001,1),(432,2002,1),(433,1001,1),(433,1017,1),(433,1020,1),(433,1032,1),(433,1073,1),(433,2000,1),(433,2002,1),(434,1001,1),(436,1090,1),(436,1093,1),(436,1094,1),(436,1096,1),(436,1098,1),(436,1099,1),(436,1101,1),(436,1102,1),(436,1103,1),(436,1107,1),(436,1108,1),(436,1109,1),(436,1115,1),(436,1116,1),(436,1118,1),(436,1121,1),(436,1123,1),(436,1124,1),(436,1126,1),(436,1127,1),(436,1130,1),(436,1132,1),(436,1133,1),(436,1134,1),(436,1139,1),(436,1140,1),(436,1144,1),(436,1146,1),(436,1147,1),(436,1148,1),(436,1149,1),(436,1150,1),(436,1151,1),(436,1152,1),(436,1153,1),(436,1155,1),(436,1158,1),(436,1160,1),(436,1164,1),(436,1165,1),(436,2000,1),(436,2001,1),(436,2002,1),(436,2003,1),(436,2006,1),(436,2008,1),(436,2020,1),(436,2021,1),(436,2022,1),(436,2023,1),(436,2024,1),(436,2025,1),(436,2026,1),(436,2027,1),(437,1001,1),(437,1073,1),(437,2000,1),(437,2018,1),(437,2021,1),(438,2002,1),(439,1108,1),(439,2000,1),(439,2002,1),(440,1001,1),(440,1116,1),(440,1121,1),(440,1123,1),(440,1124,1),(440,1126,1),(441,2000,1),(442,2000,1),(442,2002,1),(442,2003,1),(444,1001,1),(444,1073,1),(444,2000,1),(444,2002,1),(445,2000,1),(445,2001,1),(445,2002,1),(445,2003,1),(445,2005,1),(445,2006,1),(445,2007,1),(445,2008,1),(446,2000,1),(446,2002,1),(447,2000,1),(447,2002,1),(448,2000,1),(448,2002,1),(449,2000,1),(451,2000,1),(453,1001,1),(454,1001,1),(456,2000,1),(457,1001,1),(457,1134,1),(457,2000,1),(460,2000,1),(460,2002,1),(461,2000,1),(463,1001,1),(463,1032,1),(463,1073,1),(466,1001,1),(466,1073,1),(466,2000,1),(466,2002,1),(466,2003,1),(467,1106,1),(467,1107,1),(467,1108,1),(467,1109,1),(467,1112,1),(467,1116,1),(467,1118,1),(467,1121,1),(467,1123,1),(467,1124,1),(467,1126,1),(467,1139,1),(467,1140,1),(467,1146,1),(467,2001,1),(468,2000,1),(468,2002,1),(478,1001,1),(478,1433,1),(478,2000,1),(478,2002,1),(478,2020,1),(478,2021,1),(478,2025,1),(478,2026,1),(478,6005,1),(480,2000,1),(481,2000,1),(482,1001,1),(482,1073,1),(482,1132,1),(482,1134,1),(482,1139,1),(482,1140,1),(482,1146,1),(482,1158,1),(482,1164,1),(482,2000,1),(482,2002,1),(482,2003,1),(483,2000,1),(483,2002,1),(484,2002,1),(485,1001,1),(485,1073,1),(485,2000,1),(485,2002,1),(485,2003,1),(486,1001,1),(486,2000,1),(486,2002,1),(488,1001,1),(489,1001,1),(489,1012,1),(489,1017,1),(489,1032,1),(489,1035,1),(489,1078,1),(489,1158,1),(489,1164,1),(489,2000,1),(489,6005,1),(489,6017,1),(489,6020,1),(489,6023,1),(490,1001,1),(491,1001,1),(491,1073,1),(491,2000,1),(491,2002,1),(493,1001,1),(493,1073,1),(494,2000,1),(494,2002,1),(495,1001,1),(495,2002,1),(497,1001,1),(497,1017,1),(497,1073,1),(497,1129,1),(497,1134,1),(497,1135,1),(497,1140,1),(497,1146,1),(497,1147,1),(497,1149,1),(497,1151,1),(497,1158,1),(497,1174,1),(497,1177,1),(497,2000,1),(497,2002,1),(498,1001,1),(500,1001,1),(502,1001,1),(502,2000,1),(502,2002,1),(503,1001,1),(503,2000,1),(505,1001,1),(505,1073,1),(505,1127,1),(505,1140,1),(505,1144,1),(505,1146,1),(505,2000,1),(505,2001,1),(505,2002,1),(505,2003,1),(505,2006,1),(505,2008,1),(508,1001,1),(508,1073,1),(509,1001,1),(511,1001,1),(511,1073,1),(511,2000,1),(511,2002,1),(512,1001,1),(512,2000,1),(512,2002,1),(512,2004,1),(513,1001,1),(515,1001,1),(515,1017,1),(515,1073,1),(515,2000,1),(515,2002,1),(516,1001,1),(516,2000,1),(517,2000,1),(518,1001,1),(518,1073,1),(520,1001,1),(520,1002,1),(520,1003,1),(520,1005,1),(520,1007,1),(520,1009,1),(520,1011,1),(520,1012,1),(520,1013,1),(520,1017,1),(520,1020,1),(520,1021,1),(520,1023,1),(520,1032,1),(520,1034,1),(520,1035,1),(520,1036,1),(520,1055,1),(520,1065,1),(520,1067,1),(520,1071,1),(520,1073,1),(520,1078,1),(520,1093,1),(520,1116,1),(520,1121,1),(520,1140,1),(520,1146,1),(520,1147,1),(520,1149,1),(520,1151,1),(520,1158,1),(520,1164,1),(520,1171,1),(520,1174,1),(520,1175,1),(520,1177,1),(520,1200,1),(520,1301,1),(520,1303,1),(520,1305,1),(520,1309,1),(520,1311,1),(520,1313,1),(520,1319,1),(520,1322,1),(520,1323,1),(520,1329,1),(520,1332,1),(520,1333,1),(520,1342,1),(520,1343,1),(520,1344,1),(520,1353,1),(520,1362,1),(520,1363,1),(520,1364,1),(520,1365,1),(520,1367,1),(520,1382,1),(520,1383,1),(520,1433,1),(520,2000,1),(520,2002,1),(520,2009,1),(520,2010,1),(520,2011,1),(520,2016,1),(520,2020,1),(520,2021,1),(520,6001,1),(520,6002,1),(520,6003,1),(520,6004,1),(520,6005,1),(520,6006,1),(520,6007,1),(520,6008,1),(520,6009,1),(520,6010,1),(520,6012,1),(520,6013,1),(520,6014,1),(520,6015,1),(520,6016,1),(520,6017,1),(520,6018,1),(520,6019,1),(520,6020,1),(520,6021,1),(520,6022,1),(520,6023,1),(520,6024,1),(520,6025,1),(522,2000,1),(522,2002,1),(523,1001,1),(523,1073,1),(523,1106,1),(523,1107,1),(523,1108,1),(523,1109,1),(523,1116,1),(523,1118,1),(523,1121,1),(523,1123,1),(523,1124,1),(523,1126,1),(523,1130,1),(523,1132,1),(523,1133,1),(523,1134,1),(523,1139,1),(523,1140,1),(523,1145,1),(523,1146,1),(523,1158,1),(523,1164,1),(523,1165,1),(523,2000,1),(523,2002,1),(523,6002,1),(523,6025,1),(524,1001,1),(524,1073,1),(524,1134,1),(524,1135,1),(524,2000,1),(524,2002,1),(524,6019,1),(527,1001,1),(528,1001,1),(528,2000,1),(530,1001,1),(530,1073,1),(531,1001,1),(531,1073,1),(533,2000,1),(533,2002,1),(534,2000,1),(534,2001,1),(534,2002,1),(535,1001,1),(535,2002,1),(536,2002,1),(537,2000,1),(537,2002,1),(539,1001,1),(539,2000,1),(541,2000,1),(541,2002,1),(542,1001,1),(542,2000,1),(542,2002,1),(543,1001,1),(543,1073,1),(543,2000,1),(543,2002,1),(544,1001,1),(546,1001,1),(546,1073,1),(546,2000,1),(546,2001,1),(546,2002,1),(546,2003,1),(546,2006,1),(546,2007,1),(548,1001,1),(548,2000,1),(548,2002,1),(548,2006,1),(549,1001,1),(549,1073,1),(549,1078,1),(550,1001,1),(550,1073,1),(550,1098,1),(550,1106,1),(550,1108,1),(550,1109,1),(550,1116,1),(550,1121,1),(550,1123,1),(550,1126,1),(550,1140,1),(550,1145,1),(550,1146,1),(550,2000,1),(550,2001,1),(550,2002,1),(550,2003,1),(550,2006,1),(551,2000,1),(551,2002,1),(552,1001,1),(552,1137,1),(552,1139,1),(552,1140,1),(552,1146,1),(552,2000,1),(552,2001,1),(552,2002,1),(552,2003,1),(552,2005,1),(552,2006,1),(553,1073,1),(553,1106,1),(553,1107,1),(553,1108,1),(553,1109,1),(553,1112,1),(553,1116,1),(553,1121,1),(553,1123,1),(553,1124,1),(553,1126,1),(553,1138,1),(553,1139,1),(553,1140,1),(553,1146,1),(553,1147,1),(553,1148,1),(553,1149,1),(553,1151,1),(553,1152,1),(553,1153,1),(553,2000,1),(553,2001,1),(553,2002,1),(553,2003,1),(553,2006,1),(553,2008,1),(554,1073,1),(554,1090,1),(554,1093,1),(554,1094,1),(554,1102,1),(554,1108,1),(554,1109,1),(554,1116,1),(554,1121,1),(554,1301,1),(554,1305,1),(554,1309,1),(554,2000,1),(554,2002,1),(554,8013,1),(554,8014,1),(554,8016,1),(554,8017,1),(554,8018,1),(554,9000,1),(554,9001,1),(554,9002,1),(554,9003,1),(554,9005,1),(554,9006,1),(554,9007,1),(555,2000,1),(555,2002,1),(556,1001,1),(556,1023,1),(556,1073,1),(556,1108,1),(556,1109,1),(556,1116,1),(556,1121,1),(556,1123,1),(556,1126,1),(556,1147,1),(556,1148,1),(556,1149,1),(556,1151,1),(556,1153,1),(556,1455,1),(556,1456,1),(556,2000,1),(556,2002,1),(556,2003,1),(556,2009,1),(556,2010,1),(556,2011,1),(556,2014,1),(556,2016,1),(556,2018,1),(556,2020,1),(556,2021,1),(556,2022,1),(556,2026,1),(556,2027,1),(556,6005,1),(557,1090,1),(557,1091,1),(557,1093,1),(557,1094,1),(557,1096,1),(557,1097,1),(557,1098,1),(557,1101,1),(557,1102,1),(557,1103,1),(557,1107,1),(557,1108,1),(557,1109,1),(557,1116,1),(557,1118,1),(557,1120,1),(557,1121,1),(557,1123,1),(557,1124,1),(557,1126,1),(557,1127,1),(557,1130,1),(557,1132,1),(557,1134,1),(557,1139,1),(557,1140,1),(557,1146,1),(557,1147,1),(557,1148,1),(557,1149,1),(557,1150,1),(557,1151,1),(557,1153,1),(557,1158,1),(557,1160,1),(557,1164,1),(557,1165,1),(557,2000,1),(557,2001,1),(557,2002,1),(557,2003,1),(557,2006,1),(557,2008,1),(559,1001,1),(559,2002,1),(561,1001,1),(561,1073,1),(561,2002,1),(562,1001,1),(562,1073,1),(562,2002,1),(562,6019,1),(563,1001,1),(563,1073,1),(563,2000,1),(563,2002,1),(563,2006,1),(567,1045,1),(567,1328,1),(567,2006,1),(567,2008,1),(567,6003,1),(567,6004,1),(567,6005,1),(567,6018,1),(568,2000,1),(568,2002,1),(568,2003,1),(569,1001,1),(573,1158,1),(573,1164,1),(576,1001,1),(576,1023,1),(576,1127,1),(576,2009,1),(576,2010,1),(576,2011,1),(576,6005,1),(577,1001,1),(580,1001,1),(581,2020,1),(584,2020,1),(590,1001,1),(590,2002,1),(592,1001,1),(592,1073,1),(596,1001,1),(596,2000,1),(596,2002,1),(601,1001,1),(608,1001,1),(608,2000,1),(608,2002,1),(611,1134,1),(611,1135,1),(612,1001,1),(612,1362,1),(612,2000,1),(612,2020,1),(614,1001,1),(616,1001,1),(621,1013,1),(623,2021,1),(623,2025,1),(624,1001,1),(624,1005,1),(624,1009,1),(625,1013,1),(629,1001,1),(630,1001,1),(630,1002,1),(630,1003,1),(630,1004,1),(630,1005,1),(630,1006,1),(630,1007,1),(630,1008,1),(630,1009,1),(630,1011,1),(630,1012,1),(630,1013,1),(630,1017,1),(630,1020,1),(630,1023,1),(630,1026,1),(630,1032,1),(630,1034,1),(630,1035,1),(630,1043,1),(630,1045,1),(630,1055,1),(630,1065,1),(630,1067,1),(630,1069,1),(630,1071,1),(630,1072,1),(630,1073,1),(630,1079,1),(630,1087,1),(630,1088,1),(630,1090,1),(630,1094,1),(630,1097,1),(630,1098,1),(630,1102,1),(630,1107,1),(630,1108,1),(630,1109,1),(630,1116,1),(630,1121,1),(630,1123,1),(630,1130,1),(630,1139,1),(630,1140,1),(630,1146,1),(630,1147,1),(630,1148,1),(630,1149,1),(630,1151,1),(630,1153,1),(630,1158,1),(630,1164,1),(630,1166,1),(630,1174,1),(630,1177,1),(630,1200,1),(630,1322,1),(630,1323,1),(630,1324,1),(630,1328,1),(630,1329,1),(630,1348,1),(630,1382,1),(630,1383,1),(630,2000,1),(630,2001,1),(630,2002,1),(630,2003,1),(630,2005,1),(630,2006,1),(630,2008,1),(630,2009,1),(630,2010,1),(630,2011,1),(630,2014,1),(630,2018,1),(630,6001,1),(630,6002,1),(630,6003,1),(630,6004,1),(630,6005,1),(630,6006,1),(630,6007,1),(630,6008,1),(630,6009,1),(630,6010,1),(630,6011,1),(630,6012,1),(630,6013,1),(630,6014,1),(630,6015,1),(630,6016,1),(630,6017,1),(630,6018,1),(630,6019,1),(630,6020,1),(630,6021,1),(630,6022,1),(630,6023,1),(630,6024,1),(630,6025,1),(630,8008,1),(630,8009,1),(630,8010,1),(630,8011,1),(630,8012,1),(630,8019,1),(630,9000,1),(630,9001,1),(630,9002,1),(630,9003,1),(630,9005,1),(630,9006,1),(630,9007,1),(630,9016,1),(633,6001,1),(633,6002,1),(633,6005,1),(633,6008,1),(633,6009,1),(633,6012,1),(633,6017,1),(633,6018,1),(633,6019,1),(633,6020,1),(633,6022,1),(633,6023,1),(633,6024,1),(633,6025,1),(635,50,2),(635,1001,1),(635,1002,1),(635,1003,1),(635,1006,1),(635,1007,1),(635,1009,1),(635,1012,1),(635,1013,1),(635,1017,1),(635,1020,1),(635,1021,1),(635,1032,1),(635,1035,1),(635,1043,1),(635,1055,1),(635,1071,1),(635,1073,1),(635,1078,1),(635,1090,1),(635,1139,1),(635,1140,1),(635,1177,1),(635,1309,1),(635,1313,1),(635,1315,1),(635,1319,1),(635,1322,1),(635,1329,1),(635,2009,1),(635,2011,1),(635,2020,1),(635,2021,1),(635,6001,1),(635,6002,1),(635,6003,1),(635,6005,1),(635,6006,1),(635,6008,1),(635,6009,1),(635,6010,1),(635,6011,1),(635,6012,1),(635,6017,1),(635,6020,1),(635,6021,1),(635,6022,1),(635,6023,1),(635,6024,1),(635,6025,1),(636,1001,1),(636,6001,1),(636,6002,1),(636,6003,1),(636,6005,1),(636,6006,1),(636,6008,1),(636,6009,1),(636,6010,1),(636,6017,1),(636,6018,1),(636,6020,1),(636,6022,1),(636,6023,1),(636,6024,1),(636,6025,1),(637,1001,1),(640,1001,1),(641,1001,1),(641,1382,1),(641,6001,1),(641,6002,1),(641,6003,1),(641,6004,1),(641,6005,1),(641,6006,1),(641,6007,1),(641,6008,1),(641,6009,1),(641,6010,1),(641,6011,1),(641,6012,1),(641,6013,1),(641,6015,1),(641,6016,1),(641,6017,1),(641,6018,1),(641,6019,1),(641,6020,1),(641,6021,1),(641,6022,1),(641,6023,1),(641,6024,1),(641,6025,1),(641,9017,1),(641,9031,1),(641,9032,1),(642,1043,1),(642,1045,1),(642,1322,1),(642,1324,1),(642,1325,1),(642,1326,1),(642,1329,1),(642,2020,1),(642,2021,1),(642,2027,1),(643,1001,1),(643,6001,1),(643,6002,1),(643,6005,1),(643,6006,1),(643,6008,1),(643,6017,1),(643,6020,1),(643,6022,1),(643,6023,1),(645,1013,1),(646,1139,1),(646,1140,1),(646,1144,1),(646,1146,1),(648,1001,1),(649,1001,1),(649,1017,1),(651,1116,1),(651,1121,1),(651,1124,1),(652,1116,1),(652,1121,1),(652,1123,1),(652,1124,1),(652,1126,1),(653,1116,1),(653,1121,1),(653,1123,1),(653,1124,1),(653,1126,1),(655,1001,1),(656,1001,1),(656,1002,1),(656,1003,1),(656,1004,1),(656,1005,1),(656,1006,1),(656,1007,1),(656,1009,1),(656,1011,1),(656,1012,1),(656,1013,1),(656,1017,1),(656,1020,1),(656,1021,1),(656,1023,1),(656,1026,1),(656,1028,1),(656,1032,1),(656,1034,1),(656,1035,1),(656,1036,1),(656,1043,1),(656,1045,1),(656,1050,1),(656,1055,1),(656,1057,1),(656,1065,1),(656,1067,1),(656,1069,1),(656,1071,1),(656,1072,1),(656,1073,1),(656,1075,1),(656,1076,1),(656,1077,1),(656,1078,1),(656,1084,1),(656,1087,1),(656,1088,1),(656,1090,1),(656,1091,1),(656,1093,1),(656,1094,1),(656,1098,1),(656,1107,1),(656,1108,1),(656,1116,1),(656,1134,1),(656,1143,1),(656,1146,1),(656,1147,1),(656,1149,1),(656,1151,1),(656,1158,1),(656,1164,1),(656,1171,1),(656,1172,1),(656,1174,1),(656,1175,1),(656,1177,1),(656,1200,1),(656,1301,1),(656,1303,1),(656,1305,1),(656,1307,1),(656,1309,1),(656,1310,1),(656,1311,1),(656,1313,1),(656,1315,1),(656,1316,1),(656,1319,1),(656,1322,1),(656,1324,1),(656,1325,1),(656,1326,1),(656,1327,1),(656,1329,1),(656,1332,1),(656,1337,1),(656,1338,1),(656,1339,1),(656,1345,1),(656,1346,1),(656,1352,1),(656,1353,1),(656,1354,1),(656,1362,1),(656,1363,1),(656,1364,1),(656,1365,1),(656,1367,1),(656,1378,1),(656,1380,1),(656,2000,1),(656,2002,1),(656,2006,1),(656,2009,1),(656,2011,1),(656,2013,1),(656,6001,1),(656,6002,1),(656,6003,1),(656,6004,1),(656,6005,1),(656,6006,1),(656,6007,1),(656,6008,1),(656,6009,1),(656,6010,1),(656,6011,1),(656,6012,1),(656,6013,1),(656,6014,1),(656,6015,1),(656,6016,1),(656,6017,1),(656,6018,1),(656,6019,1),(656,6020,1),(656,6021,1),(656,6022,1),(656,6023,1),(656,6024,1),(656,6025,1),(656,9000,1),(656,9005,1),(656,9011,1),(656,9016,1),(656,9017,1),(656,9018,1),(656,9020,1),(656,9021,1),(656,9022,1),(656,9032,1),(657,1001,1),(657,1043,1),(657,1045,1),(657,1073,1),(657,1090,1),(657,1311,1),(657,1383,1),(657,2011,1),(657,6001,1),(657,6002,1),(657,6003,1),(657,6004,1),(657,6005,1),(657,6017,1),(657,6018,1),(657,6020,1),(657,6023,1),(657,6025,1),(658,1013,1),(658,1107,1),(665,1001,1),(665,1013,1),(668,1001,1),(668,1002,1),(668,1003,1),(668,1007,1),(668,1012,1),(668,1017,1),(668,1020,1),(668,1021,1),(668,1032,1),(668,1035,1),(668,1055,1),(668,1073,1),(668,1078,1),(668,1090,1),(668,1158,1),(668,1174,1),(668,1200,1),(668,6002,1),(668,6005,1),(668,6006,1),(668,6008,1),(668,6009,1),(668,6017,1),(668,6018,1),(668,6020,1),(668,6022,1),(668,6023,1),(668,6025,1),(671,1171,1),(671,6003,1),(671,6010,1),(671,6012,1),(671,6015,1),(671,6017,1),(671,6020,1),(671,6023,1),(671,6025,1),(675,1001,1),(675,1017,1),(679,1001,1),(680,1147,1),(680,1149,1),(680,1150,1),(680,1151,1),(680,1152,1),(680,1153,1),(686,1001,1),(686,1003,1),(686,1006,1),(686,1007,1),(686,1009,1),(686,1013,1),(686,1017,1),(686,1021,1),(686,1023,1),(686,1026,1),(686,1028,1),(686,1032,1),(686,1034,1),(686,1043,1),(686,1050,1),(686,1055,1),(686,1057,1),(686,1067,1),(686,1071,1),(686,1072,1),(686,1073,1),(686,1077,1),(686,1084,1),(686,1087,1),(686,1090,1),(686,1093,1),(686,1146,1),(686,1158,1),(686,1164,1),(686,1172,1),(686,1301,1),(686,1305,1),(686,1309,1),(686,1352,1),(686,1353,1),(686,1354,1),(686,6001,1),(686,6002,1),(686,6003,1),(686,6005,1),(686,6006,1),(686,6007,1),(686,6008,1),(686,6010,1),(686,6012,1),(686,6016,1),(686,6017,1),(686,6018,1),(686,6020,1),(686,6023,1),(686,6024,1),(686,6025,1),(686,9000,1),(686,9017,1),(686,9022,1),(686,9032,1),(689,1013,1),(690,1001,1),(690,1002,1),(690,2020,1),(690,2021,1),(690,6001,1),(690,6002,1),(690,6003,1),(690,6005,1),(690,6006,1),(690,6007,1),(690,6008,1),(690,6010,1),(690,6012,1),(690,6017,1),(690,6020,1),(694,1001,1),(694,6001,1),(694,6002,1),(694,6003,1),(694,6005,1),(694,6006,1),(694,6008,1),(694,6012,1),(694,6017,1),(694,6018,1),(694,6020,1),(694,6025,1),(695,1164,1),(695,6002,1),(696,1001,1),(696,6003,1),(696,6005,1),(696,6006,1),(696,6017,1),(696,6020,1),(696,6022,1),(696,6023,1),(699,1001,1),(699,6001,1),(699,6017,1),(704,1147,1),(704,2009,1),(704,6017,1),(704,6020,1),(706,1001,1),(707,1001,1),(707,1009,1),(707,1012,1),(707,1017,1),(707,1020,1),(707,1021,1),(707,1035,1),(707,1073,1),(707,6001,1),(707,6002,1),(707,6005,1),(707,6006,1),(707,6008,1),(707,6017,1),(707,6020,1),(712,1001,1),(713,1001,1),(716,6005,1),(716,6015,1),(716,6017,1),(716,6018,1),(716,6020,1),(717,1001,1),(718,6017,1),(721,1001,1),(721,1002,1),(721,1003,1),(721,1006,1),(721,1007,1),(721,1011,1),(721,1012,1),(721,1017,1),(721,1020,1),(721,1021,1),(721,1032,1),(721,1035,1),(721,1045,1),(721,1073,1),(721,1078,1),(721,1116,1),(721,1146,1),(721,1147,1),(721,2011,1),(721,6001,1),(721,6002,1),(721,6003,1),(721,6005,1),(721,6006,1),(721,6007,1),(721,6008,1),(721,6009,1),(721,6017,1),(721,6018,1),(721,6019,1),(721,6020,1),(721,6022,1),(721,6023,1),(721,6024,1),(721,6025,1),(723,1001,1),(725,1001,1),(725,1002,1),(725,1032,1),(725,1078,1),(725,6003,1),(725,6017,1),(726,1001,1),(726,1002,1),(726,1007,1),(726,1012,1),(726,1013,1),(726,1017,1),(726,1020,1),(726,1021,1),(726,1035,1),(726,1055,1),(726,1073,1),(726,1078,1),(726,1090,1),(726,1151,1),(726,1164,1),(726,1200,1),(726,1301,1),(726,1305,1),(726,1309,1),(726,2011,1),(726,6001,1),(726,6002,1),(726,6003,1),(726,6005,1),(726,6006,1),(726,6008,1),(726,6009,1),(726,6010,1),(726,6017,1),(726,6018,1),(726,6022,1),(726,6023,1),(726,6024,1),(726,6025,1),(726,9000,1),(726,9001,1),(726,9002,1),(726,9003,1),(727,1001,1),(727,1002,1),(727,1003,1),(727,1007,1),(727,1012,1),(727,1017,1),(727,1021,1),(727,1032,1),(727,1073,1),(727,1078,1),(727,1087,1),(727,1116,1),(727,1123,1),(727,1146,1),(727,1147,1),(727,1164,1),(727,6002,1),(727,6005,1),(727,6006,1),(727,6008,1),(727,6012,1),(727,6017,1),(727,6020,1),(727,6022,1),(727,6023,1),(727,6024,1),(727,6025,1),(728,1001,1),(728,1002,1),(728,1003,1),(728,1005,1),(728,1006,1),(728,1007,1),(728,1012,1),(728,1013,1),(728,1017,1),(728,1020,1),(728,1021,1),(728,1023,1),(728,1032,1),(728,1034,1),(728,1035,1),(728,1045,1),(728,1055,1),(728,1065,1),(728,1073,1),(728,1078,1),(728,1085,1),(728,1090,1),(728,1116,1),(728,1130,1),(728,1149,1),(728,1151,1),(728,1158,1),(728,1164,1),(728,1166,1),(728,1171,1),(728,1172,1),(728,1173,1),(728,1174,1),(728,1175,1),(728,1177,1),(728,1200,1),(728,1311,1),(728,1325,1),(728,2001,1),(728,2011,1),(728,2018,1),(728,6001,1),(728,6002,1),(728,6003,1),(728,6005,1),(728,6006,1),(728,6007,1),(728,6008,1),(728,6010,1),(728,6011,1),(728,6012,1),(728,6014,1),(728,6015,1),(728,6017,1),(728,6018,1),(728,6019,1),(728,6020,1),(728,6021,1),(728,6022,1),(728,6023,1),(728,6024,1),(728,6025,1),(728,9000,1),(728,9001,1),(728,9002,1),(728,9003,1),(728,9006,1),(729,8009,1),(729,9016,1),(730,1002,1),(730,1017,1),(730,1073,1),(730,6002,1),(730,6005,1),(730,6017,1),(730,6020,1),(730,6024,1),(730,6025,1),(732,1001,1),(732,1002,1),(732,1013,1),(732,1073,1),(732,1116,1),(732,1164,1),(732,6002,1),(732,6005,1),(732,6006,1),(732,6008,1),(732,6017,1),(732,6020,1),(732,6023,1),(732,6024,1),(732,6025,1),(733,1001,1),(733,1002,1),(733,1003,1),(733,1004,1),(733,1005,1),(733,1007,1),(733,1009,1),(733,1012,1),(733,1013,1),(733,1017,1),(733,1020,1),(733,1021,1),(733,1032,1),(733,1035,1),(733,1036,1),(733,1055,1),(733,1071,1),(733,1073,1),(733,1078,1),(733,1116,1),(733,1140,1),(733,1158,1),(733,1164,1),(733,1200,1),(733,1305,1),(733,1322,1),(733,1325,1),(733,1329,1),(733,1362,1),(733,2000,1),(733,2002,1),(733,2011,1),(733,2016,1),(733,2021,1),(733,6001,1),(733,6002,1),(733,6003,1),(733,6004,1),(733,6005,1),(733,6006,1),(733,6007,1),(733,6008,1),(733,6009,1),(733,6010,1),(733,6012,1),(733,6013,1),(733,6015,1),(733,6016,1),(733,6017,1),(733,6018,1),(733,6020,1),(733,6021,1),(733,6022,1),(733,6023,1),(733,6024,1),(733,6025,1),(733,9016,1),(734,1001,1),(734,1035,1),(734,6003,1),(734,6023,1),(736,1001,1),(736,1002,1),(737,6001,1),(737,6002,1),(737,6003,1),(737,6008,1),(741,6023,1),(748,1001,1),(748,6019,1),(761,92,2),(761,93,2),(761,1001,1),(761,1002,1),(761,8009,1),(761,8010,1),(761,8011,1),(761,8012,1),(761,9016,1),(768,1001,1),(768,1002,1),(768,1003,1),(768,1005,1),(768,1006,1),(768,1007,1),(768,1012,1),(768,1017,1),(768,1020,1),(768,1021,1),(768,1023,1),(768,1029,1),(768,1032,1),(768,1034,1),(768,1035,1),(768,1073,1),(768,1078,1),(768,1087,1),(768,1116,1),(768,1121,1),(768,1140,1),(768,1146,1),(768,1147,1),(768,1158,1),(768,1164,1),(768,1171,1),(768,1174,1),(768,2001,1),(768,2002,1),(768,2009,1),(768,2011,1),(768,6001,1),(768,6002,1),(768,6003,1),(768,6005,1),(768,6006,1),(768,6007,1),(768,6008,1),(768,6009,1),(768,6010,1),(768,6011,1),(768,6012,1),(768,6014,1),(768,6015,1),(768,6017,1),(768,6018,1),(768,6020,1),(768,6021,1),(768,6022,1),(768,6023,1),(768,6024,1),(768,6025,1),(768,8009,1),(768,8010,1),(768,8012,1),(768,9016,1),(769,1001,1),(769,1322,1),(769,1362,1),(769,6001,1),(769,6003,1),(769,6020,1),(769,8012,1),(769,9016,1),(772,6005,1),(772,6017,1),(772,6020,1),(780,1,2),(780,43,2),(780,1001,1),(780,1002,1),(780,1003,1),(780,1012,1),(780,1013,1),(780,1017,1),(780,1020,1),(780,1021,1),(780,1032,1),(780,1035,1),(780,1073,1),(780,1078,1),(780,1116,1),(780,1164,1),(780,1200,1),(780,1362,1),(780,2020,1),(780,2021,1),(780,6001,1),(780,6005,1),(780,6017,1),(780,6023,1),(781,1001,1),(781,1009,1),(781,1362,1),(781,2009,1),(781,2020,1),(781,6002,1),(781,6018,1),(781,6025,1),(784,1001,1),(784,1002,1),(786,1001,1),(786,1002,1),(786,6017,1),(786,6018,1),(787,1001,1),(787,1002,1),(787,1017,1),(787,6005,1),(787,6012,1),(787,6017,1),(787,6018,1),(787,6020,1),(791,1001,1),(791,1020,1),(791,6018,1),(791,6020,1),(791,6023,1),(791,8009,1),(791,8012,1),(791,9016,1),(792,6018,1),(793,1001,1),(793,6001,1),(794,1323,1),(794,1379,1),(794,1382,1),(794,1383,1),(794,2018,1),(795,1001,1),(796,1001,1),(796,6018,1),(796,6020,1),(797,1102,1),(797,6018,1),(797,6020,1),(798,6018,1),(798,6020,1),(799,6018,1),(799,6020,1),(800,6018,1),(800,6020,1),(801,6018,1),(801,6020,1),(802,6018,1),(802,6020,1),(803,6018,1),(803,6020,1),(804,6003,1),(804,6018,1),(804,6020,1),(805,2018,1),(805,6003,1),(805,6018,1),(805,6020,1),(806,6018,1),(807,6003,1),(807,6018,1),(807,6020,1),(810,1001,1),(810,1002,1),(810,1005,1),(810,1012,1),(810,1013,1),(810,1017,1),(810,1020,1),(810,1021,1),(810,1032,1),(810,1035,1),(810,1055,1),(810,1067,1),(810,1071,1),(810,1073,1),(810,1078,1),(810,1116,1),(810,1134,1),(810,1140,1),(810,1146,1),(810,1147,1),(810,1149,1),(810,1158,1),(810,1164,1),(810,1175,1),(810,1305,1),(810,1329,1),(810,1362,1),(810,1363,1),(810,2009,1),(810,2011,1),(810,6001,1),(810,6002,1),(810,6005,1),(810,6006,1),(810,6008,1),(810,6012,1),(810,6015,1),(810,6016,1),(810,6017,1),(810,6020,1),(810,6022,1),(810,6023,1),(810,6025,1),(812,1001,1),(814,1001,1),(814,1032,1),(814,1035,1),(814,1055,1),(814,1116,1),(814,8009,1),(814,8012,1),(814,9016,1),(835,1001,1),(835,1002,1),(835,1007,1),(835,1012,1),(835,1017,1),(835,1035,1),(835,1073,1),(835,1459,1),(835,6018,1),(835,6024,1),(839,1001,1),(839,1021,1),(840,1001,1),(840,1032,1),(840,1035,1),(840,8008,1),(840,8009,1),(840,8010,1),(840,8012,1),(840,9016,1),(842,1002,1),(842,1007,1),(842,1012,1),(842,1013,1),(842,1017,1),(842,1021,1),(842,1029,1),(842,1032,1),(842,1035,1),(842,1036,1),(842,1055,1),(842,1073,1),(842,1164,1),(842,1171,1),(842,1301,1),(842,1305,1),(842,1322,1),(842,1329,1),(842,1362,1),(842,2020,1),(842,2021,1),(842,6001,1),(842,6002,1),(842,6005,1),(842,6009,1),(842,6010,1),(842,6012,1),(842,6017,1),(842,6018,1),(842,6020,1),(842,6022,1),(842,6023,1),(842,6025,1),(844,1001,1),(844,1002,1),(844,1003,1),(844,1004,1),(844,1005,1),(844,1006,1),(844,1007,1),(844,1009,1),(844,1011,1),(844,1012,1),(844,1013,1),(844,1015,1),(844,1016,1),(844,1017,1),(844,1174,1),(846,1139,1),(847,29,2),(847,1001,1),(847,1002,1),(847,1005,1),(847,1007,1),(847,1009,1),(847,1012,1),(847,1013,1),(847,1017,1),(847,1020,1),(847,1021,1),(847,1032,1),(847,1035,1),(847,1043,1),(847,1055,1),(847,1067,1),(847,1071,1),(847,1073,1),(847,1078,1),(847,1093,1),(847,1108,1),(847,1116,1),(847,1134,1),(847,1140,1),(847,1146,1),(847,1147,1),(847,1149,1),(847,1158,1),(847,1164,1),(847,1175,1),(847,1322,1),(847,1329,1),(847,1363,1),(847,2000,1),(847,2009,1),(847,2010,1),(847,2011,1),(847,2020,1),(847,2021,1),(847,2026,1),(847,6001,1),(847,6002,1),(847,6003,1),(847,6004,1),(847,6005,1),(847,6006,1),(847,6008,1),(847,6010,1),(847,6011,1),(847,6012,1),(847,6015,1),(847,6016,1),(847,6017,1),(847,6018,1),(847,6019,1),(847,6020,1),(847,6021,1),(847,6022,1),(847,6023,1),(847,6024,1),(847,6025,1),(849,1001,1),(849,1002,1),(849,1032,1),(851,1032,1),(852,1001,1),(852,1002,1),(852,1020,1),(852,1035,1),(852,9016,1),(853,1001,1),(856,1001,1),(856,1002,1),(856,1009,1),(857,1001,1),(858,1001,1),(858,1002,1),(858,1007,1),(858,1009,1),(858,1012,1),(858,1013,1),(858,1017,1),(858,1020,1),(858,1021,1),(858,1032,1),(858,1035,1),(858,1055,1),(858,1067,1),(858,1073,1),(858,1078,1),(858,1108,1),(858,1116,1),(858,1140,1),(858,1146,1),(858,1147,1),(858,1158,1),(858,1164,1),(858,2000,1),(858,2009,1),(858,2011,1),(858,6001,1),(858,6002,1),(858,6005,1),(858,6006,1),(858,6008,1),(858,6012,1),(858,6015,1),(858,6016,1),(858,6017,1),(858,6020,1),(858,6022,1),(858,6023,1),(858,6025,1),(859,1001,1),(859,1002,1),(859,1003,1),(859,1007,1),(859,1012,1),(859,1013,1),(859,1017,1),(859,1020,1),(859,1021,1),(859,1035,1),(859,1071,1),(859,1073,1),(859,1078,1),(859,1085,1),(859,1090,1),(859,1094,1),(859,1096,1),(859,1102,1),(859,1103,1),(859,1107,1),(859,1116,1),(859,1121,1),(859,1134,1),(859,1140,1),(859,1146,1),(859,1149,1),(859,1151,1),(859,1158,1),(859,1164,1),(859,1301,1),(859,1305,1),(859,1309,1),(859,1311,1),(859,1313,1),(859,1319,1),(859,1322,1),(859,1325,1),(859,1329,1),(859,1332,1),(859,1333,1),(859,1382,1),(859,1383,1),(859,2009,1),(859,2011,1),(859,2020,1),(859,2021,1),(859,6001,1),(859,6002,1),(859,6003,1),(859,6005,1),(859,6006,1),(859,6007,1),(859,6008,1),(859,6009,1),(859,6010,1),(859,6015,1),(859,6017,1),(859,6018,1),(859,6020,1),(859,6022,1),(859,6023,1),(859,6024,1),(859,6025,1),(859,8013,1),(859,8014,1),(859,9000,1),(859,9001,1),(859,9002,1),(862,1001,1),(862,1094,1),(862,1107,1),(862,8013,1),(862,8014,1),(862,8016,1),(865,70,2),(865,1001,1),(865,1003,1),(865,1005,1),(865,1007,1),(865,1011,1),(865,1012,1),(865,1013,1),(865,1015,1),(865,1017,1),(865,1020,1),(865,1021,1),(865,1029,1),(865,1032,1),(865,1035,1),(865,1055,1),(865,1067,1),(865,1071,1),(865,1073,1),(865,1078,1),(865,1093,1),(865,1116,1),(865,1134,1),(865,1140,1),(865,1146,1),(865,1147,1),(865,1153,1),(865,1158,1),(865,1164,1),(865,1171,1),(865,1175,1),(865,1177,1),(865,1200,1),(865,1301,1),(865,1305,1),(865,1309,1),(865,1319,1),(865,1322,1),(865,1326,1),(865,1329,1),(865,1332,1),(865,1333,1),(865,1342,1),(865,1344,1),(865,1346,1),(865,1362,1),(865,1363,1),(865,1364,1),(865,1365,1),(865,1383,1),(865,1391,1),(865,1396,1),(865,2000,1),(865,2002,1),(865,2009,1),(865,2011,1),(865,2020,1),(865,2021,1),(865,2026,1),(865,6001,1),(865,6002,1),(865,6003,1),(865,6004,1),(865,6005,1),(865,6006,1),(865,6008,1),(865,6009,1),(865,6010,1),(865,6012,1),(865,6015,1),(865,6016,1),(865,6017,1),(865,6018,1),(865,6019,1),(865,6020,1),(865,6021,1),(865,6022,1),(865,6023,1),(865,6024,1),(865,6025,1),(868,1020,1),(868,1035,1),(868,6010,1),(870,1078,1),(871,2013,1),(871,2015,1),(871,2017,1),(871,2018,1),(871,2019,1),(872,6007,1),(874,2013,1),(874,2018,1),(875,2000,1),(875,2002,1),(875,2003,1),(875,2009,1),(875,2010,1),(875,2011,1),(875,2013,1),(875,2015,1),(875,2017,1),(875,2018,1),(875,2019,1),(877,1001,1),(878,1001,1),(878,6018,1),(878,6025,1),(881,8012,1),(881,9016,1),(883,1001,1),(883,8009,1),(883,8012,1),(884,8012,1),(886,1001,1),(886,1002,1),(886,1003,1),(886,1004,1),(886,1005,1),(886,1007,1),(886,1009,1),(886,1011,1),(886,1012,1),(886,1013,1),(886,1017,1),(886,1020,1),(886,1021,1),(886,1023,1),(886,1032,1),(886,1035,1),(886,1036,1),(886,1055,1),(886,1071,1),(886,1073,1),(886,1078,1),(886,1085,1),(886,1090,1),(886,1093,1),(886,1094,1),(886,1107,1),(886,1109,1),(886,1116,1),(886,1121,1),(886,1134,1),(886,1146,1),(886,1151,1),(886,1164,1),(886,1200,1),(886,1301,1),(886,1305,1),(886,1309,1),(886,1437,1),(886,1438,1),(886,1448,1),(886,2000,1),(886,2002,1),(886,2009,1),(886,2011,1),(886,6001,1),(886,6002,1),(886,6003,1),(886,6004,1),(886,6005,1),(886,6006,1),(886,6007,1),(886,6008,1),(886,6009,1),(886,6010,1),(886,6011,1),(886,6012,1),(886,6016,1),(886,6017,1),(886,6018,1),(886,6020,1),(886,6021,1),(886,6022,1),(886,6023,1),(886,6024,1),(886,6025,1),(888,1001,1),(888,1002,1),(888,1003,1),(888,1007,1),(888,1012,1),(888,1013,1),(888,1017,1),(888,1020,1),(888,1021,1),(888,1035,1),(888,1073,1),(888,1078,1),(888,1094,1),(888,1103,1),(888,1164,1),(888,1322,1),(888,1362,1),(888,2020,1),(888,6001,1),(888,6005,1),(888,6017,1),(888,6025,1),(888,8013,1),(888,8014,1),(889,1001,1),(889,1002,1),(889,1003,1),(889,6005,1),(889,6023,1),(890,1090,1),(891,1001,1),(893,1001,1),(897,1001,1),(897,1002,1),(897,1003,1),(897,1007,1),(897,1012,1),(897,1017,1),(897,1171,1),(898,1007,1),(898,1017,1),(898,6002,1),(898,6024,1),(899,1085,1),(899,1094,1),(899,1103,1),(899,1107,1),(901,1001,1),(901,1012,1),(901,1035,1),(901,1073,1),(901,1078,1),(901,1094,1),(904,1001,1),(904,1002,1),(904,1017,1),(904,6019,1),(907,2020,1),(907,2027,1),(909,1094,1),(909,1107,1),(910,1001,1),(910,1002,1),(910,1007,1),(910,1017,1),(910,1020,1),(910,1036,1),(910,1071,1),(910,1116,1),(910,1164,1),(910,1200,1),(910,1301,1),(910,1305,1),(910,1309,1),(910,1322,1),(910,1343,1),(910,1344,1),(910,1362,1),(910,1364,1),(910,1365,1),(910,6001,1),(910,6002,1),(910,6005,1),(910,6006,1),(910,6008,1),(910,6009,1),(910,6010,1),(910,6012,1),(910,6017,1),(910,6020,1),(910,6022,1),(910,6023,1),(910,6024,1),(910,6025,1),(912,6002,1),(914,1001,1),(914,1002,1),(914,1012,1),(914,1017,1),(914,1021,1),(914,1073,1),(914,1078,1),(914,1158,1),(914,1164,1),(914,1200,1),(914,1301,1),(914,1305,1),(914,1322,1),(914,6001,1),(914,6002,1),(914,6005,1),(914,6006,1),(914,6009,1),(914,6010,1),(914,6018,1),(914,6025,1),(914,9000,1),(915,1002,1),(915,1003,1),(915,1004,1),(915,1005,1),(915,1007,1),(915,1011,1),(915,1012,1),(915,1013,1),(915,1015,1),(915,1017,1),(915,1020,1),(915,1021,1),(915,1023,1),(915,1026,1),(915,1029,1),(915,1032,1),(915,1035,1),(915,1055,1),(915,1067,1),(915,1071,1),(915,1073,1),(915,1078,1),(915,1085,1),(915,1090,1),(915,1094,1),(915,1103,1),(915,1107,1),(915,1116,1),(915,1121,1),(915,1134,1),(915,1140,1),(915,1146,1),(915,1149,1),(915,1151,1),(915,1153,1),(915,1158,1),(915,1164,1),(915,1175,1),(915,1200,1),(915,1301,1),(915,1305,1),(915,1311,1),(915,1313,1),(915,1315,1),(915,1319,1),(915,1322,1),(915,1323,1),(915,1326,1),(915,1329,1),(915,1332,1),(915,1333,1),(915,1342,1),(915,1343,1),(915,1344,1),(915,1346,1),(915,1348,1),(915,1350,1),(915,1364,1),(915,1365,1),(915,1382,1),(915,1428,1),(915,1437,1),(915,1438,1),(915,1448,1),(915,2000,1),(915,2009,1),(915,2010,1),(915,2011,1),(915,2018,1),(915,2020,1),(915,2021,1),(915,2025,1),(915,6001,1),(915,6002,1),(915,6003,1),(915,6004,1),(915,6005,1),(915,6006,1),(915,6007,1),(915,6008,1),(915,6009,1),(915,6010,1),(915,6011,1),(915,6012,1),(915,6015,1),(915,6016,1),(915,6017,1),(915,6018,1),(915,6019,1),(915,6020,1),(915,6021,1),(915,6022,1),(915,6023,1),(915,6024,1),(915,6025,1),(915,9000,1),(915,9001,1),(915,9002,1),(915,9003,1),(915,9004,1),(915,9005,1),(915,9017,1),(915,9018,1),(915,9022,1),(915,9032,1),(916,1001,1),(916,1002,1),(916,1007,1),(916,1020,1),(916,1021,1),(916,1073,1),(916,1078,1),(916,1085,1),(916,1094,1),(916,1134,1),(916,1149,1),(916,1151,1),(916,1158,1),(916,1164,1),(916,1301,1),(916,1305,1),(916,1311,1),(916,1313,1),(916,1319,1),(916,1322,1),(916,1325,1),(916,1326,1),(916,1329,1),(916,1332,1),(916,1333,1),(916,6001,1),(916,6002,1),(916,6005,1),(916,6006,1),(916,6008,1),(916,6009,1),(916,6010,1),(916,6017,1),(916,6020,1),(916,6024,1),(916,6025,1),(916,9000,1),(917,1021,1),(917,1073,1),(917,1078,1),(917,1090,1),(917,1134,1),(917,1158,1),(917,1164,1),(917,6001,1),(917,6002,1),(917,6003,1),(917,6004,1),(917,6005,1),(917,9000,1),(917,9001,1),(917,9002,1),(917,9005,1),(919,1001,1),(919,1002,1),(919,1085,1),(919,1094,1),(919,1103,1),(919,1107,1),(919,1171,1),(919,1396,1),(920,1007,1),(920,1017,1),(920,1021,1),(920,6001,1),(920,6002,1),(920,6008,1),(920,6024,1),(923,1001,1),(923,1002,1),(923,1017,1),(923,1032,1),(923,1035,1),(923,1085,1),(923,1094,1),(923,1103,1),(923,8013,1),(923,8014,1),(923,9000,1),(924,1001,1),(924,1085,1),(924,1094,1),(924,1103,1),(924,1107,1),(925,1001,1),(925,1021,1),(925,1073,1),(925,1078,1),(925,1134,1),(925,1149,1),(925,1151,1),(925,1164,1),(925,6001,1),(925,6002,1),(925,6004,1),(925,6005,1),(925,6018,1),(925,6020,1),(927,1007,1),(927,1017,1),(927,6002,1),(927,6024,1),(928,1001,1),(928,1002,1),(928,1003,1),(928,1012,1),(928,1017,1),(928,1020,1),(928,1021,1),(928,1032,1),(928,1035,1),(928,1055,1),(928,1073,1),(928,1078,1),(928,1116,1),(928,1146,1),(928,1164,1),(928,6001,1),(928,6002,1),(928,6005,1),(928,6006,1),(928,6009,1),(928,6010,1),(928,6012,1),(928,6017,1),(928,6018,1),(928,6020,1),(928,6022,1),(929,1001,1),(929,1002,1),(929,1003,1),(929,1005,1),(929,1007,1),(929,1009,1),(929,1012,1),(929,1013,1),(929,1017,1),(929,1020,1),(929,1021,1),(929,1023,1),(929,1032,1),(929,1035,1),(929,1036,1),(929,1055,1),(929,1067,1),(929,1071,1),(929,1073,1),(929,1078,1),(929,1090,1),(929,1093,1),(929,1102,1),(929,1116,1),(929,1130,1),(929,1134,1),(929,1149,1),(929,1151,1),(929,1158,1),(929,1164,1),(929,1200,1),(929,1301,1),(929,1305,1),(929,1309,1),(929,1311,1),(929,1313,1),(929,1322,1),(929,1324,1),(929,1325,1),(929,1326,1),(929,1329,1),(929,1332,1),(929,1333,1),(929,1342,1),(929,1344,1),(929,1362,1),(929,2009,1),(929,6001,1),(929,6002,1),(929,6003,1),(929,6004,1),(929,6005,1),(929,6006,1),(929,6007,1),(929,6008,1),(929,6009,1),(929,6010,1),(929,6011,1),(929,6012,1),(929,6015,1),(929,6016,1),(929,6017,1),(929,6018,1),(929,6020,1),(929,6022,1),(929,6023,1),(929,6024,1),(929,6025,1),(929,8013,1),(929,8014,1),(929,8016,1),(929,8017,1),(929,8018,1),(929,9000,1),(929,9004,1),(929,9017,1),(929,9018,1),(929,9022,1),(929,9032,1),(930,1085,1),(930,1094,1),(931,1001,1),(931,1035,1),(931,1094,1),(932,1001,1),(932,1002,1),(932,1012,1),(932,1017,1),(932,1020,1),(932,1021,1),(932,1032,1),(932,1035,1),(932,1108,1),(932,1116,1),(932,1164,1),(932,2009,1),(932,6002,1),(932,6005,1),(932,6008,1),(932,6016,1),(932,6017,1),(932,6020,1),(932,6022,1),(932,6023,1),(932,6025,1),(934,1001,1),(934,1007,1),(934,1017,1),(934,6002,1),(938,1001,1),(938,1002,1),(938,1003,1),(938,1005,1),(938,1007,1),(938,1009,1),(938,1012,1),(938,1013,1),(938,1017,1),(938,1020,1),(938,1021,1),(938,1024,1),(938,1025,1),(938,1026,1),(938,1028,1),(938,1032,1),(938,1035,1),(938,1036,1),(938,1053,1),(938,1055,1),(938,1058,1),(938,1059,1),(938,1062,1),(938,1071,1),(938,1078,1),(938,1085,1),(938,1116,1),(938,1129,1),(938,1147,1),(938,1166,1),(938,1200,1),(938,6001,1),(938,6002,1),(938,6005,1),(938,6006,1),(938,6008,1),(938,6012,1),(938,6017,1),(938,6020,1),(938,6023,1),(938,6024,1),(938,6025,1),(938,9000,1),(938,9001,1),(938,9002,1),(938,9005,1),(938,9006,1),(939,1001,1),(939,6001,1),(940,1001,1),(940,1002,1),(940,1200,1),(940,6001,1),(940,6002,1),(941,1001,1),(941,1002,1),(941,1017,1),(941,1020,1),(941,1021,1),(941,1158,1),(941,1164,1),(941,6001,1),(942,1085,1),(942,1094,1),(942,1103,1),(943,1001,1),(943,1003,1),(943,1005,1),(943,1007,1),(943,1011,1),(943,1012,1),(943,1013,1),(943,1017,1),(943,1032,1),(943,1035,1),(943,1073,1),(943,1078,1),(943,1151,1),(943,1164,1),(943,2009,1),(943,6002,1),(943,6003,1),(943,6005,1),(943,6009,1),(943,6017,1),(943,6020,1),(943,6023,1),(943,6025,1),(944,1094,1),(945,1001,1),(945,1002,1),(945,1012,1),(945,1017,1),(945,1032,1),(945,1035,1),(945,1055,1),(945,1116,1),(945,1164,1),(945,1362,1),(945,6002,1),(945,6006,1),(945,6017,1),(945,6018,1),(945,8013,1),(945,8014,1),(946,112,2),(946,1001,1),(946,1002,1),(946,1005,1),(946,1007,1),(946,1009,1),(946,1012,1),(946,1013,1),(946,1017,1),(946,1020,1),(946,1085,1),(946,1094,1),(946,1107,1),(946,2021,1),(946,6003,1),(946,6017,1),(946,6020,1),(946,6021,1),(946,6022,1),(946,6023,1),(946,6024,1),(947,1001,1),(947,1002,1),(947,1012,1),(947,1021,1),(947,1032,1),(947,1035,1),(947,1116,1),(947,1305,1),(947,1322,1),(947,6001,1),(947,6005,1),(947,6006,1),(947,6007,1),(947,6017,1),(947,6020,1),(947,6022,1),(947,6023,1),(947,6025,1),(947,8013,1),(947,8014,1),(947,8018,1),(950,1001,1),(950,1002,1),(950,8009,1),(950,8012,1),(950,9016,1),(952,1001,1),(952,1002,1),(952,1017,1),(952,1020,1),(952,1035,1),(952,1055,1),(952,1078,1),(952,1164,1),(952,1200,1),(952,2000,1),(952,6001,1),(952,6002,1),(952,6005,1),(952,6006,1),(952,6012,1),(952,6017,1),(952,6018,1),(952,6020,1),(952,6022,1),(952,6023,1),(952,6025,1),(952,8013,1),(952,8014,1),(952,8016,1),(952,8018,1),(954,1017,1),(954,6024,1),(956,1001,1),(956,1078,1),(956,1164,1),(956,6001,1),(956,6002,1),(956,6005,1),(956,6006,1),(956,6008,1),(956,6009,1),(956,6010,1),(956,6012,1),(956,6017,1),(956,6020,1),(956,6022,1),(956,6025,1),(963,7,2),(963,29,2),(963,1001,1),(963,1002,1),(963,1003,1),(963,1007,1),(963,1012,1),(963,1013,1),(963,1015,1),(963,1017,1),(963,1020,1),(963,1021,1),(963,1023,1),(963,1029,1),(963,1032,1),(963,1035,1),(963,1043,1),(963,1045,1),(963,1050,1),(963,1055,1),(963,1067,1),(963,1068,1),(963,1071,1),(963,1073,1),(963,1078,1),(963,1090,1),(963,1116,1),(963,1121,1),(963,1134,1),(963,1140,1),(963,1146,1),(963,1148,1),(963,1149,1),(963,1151,1),(963,1158,1),(963,1164,1),(963,1175,1),(963,1200,1),(963,1301,1),(963,1303,1),(963,1305,1),(963,1309,1),(963,1311,1),(963,1319,1),(963,1322,1),(963,1326,1),(963,1329,1),(963,1343,1),(963,1346,1),(963,1362,1),(963,2000,1),(963,2002,1),(963,2009,1),(963,2010,1),(963,2011,1),(963,6001,1),(963,6002,1),(963,6003,1),(963,6004,1),(963,6005,1),(963,6006,1),(963,6007,1),(963,6008,1),(963,6009,1),(963,6010,1),(963,6011,1),(963,6012,1),(963,6013,1),(963,6014,1),(963,6015,1),(963,6016,1),(963,6017,1),(963,6018,1),(963,6019,1),(963,6020,1),(963,6021,1),(963,6022,1),(963,6023,1),(963,6024,1),(963,6025,1),(963,9000,1),(963,9001,1),(963,9002,1),(963,9003,1),(968,1007,1),(968,1017,1),(968,6002,1),(968,6024,1),(971,1078,1),(971,1151,1),(971,1164,1),(974,1007,1),(974,1017,1),(974,6002,1),(975,1001,1),(975,1007,1),(975,1017,1),(975,6002,1),(975,6024,1),(976,1001,1),(976,1002,1),(976,1003,1),(976,1005,1),(976,1007,1),(976,1009,1),(976,1011,1),(976,1012,1),(976,1013,1),(976,1017,1),(976,1020,1),(976,1021,1),(976,1032,1),(976,1035,1),(976,1055,1),(976,1065,1),(976,1067,1),(976,1071,1),(976,1073,1),(976,1078,1),(976,1093,1),(976,1116,1),(976,1134,1),(976,1140,1),(976,1146,1),(976,1147,1),(976,1151,1),(976,1158,1),(976,1164,1),(976,1171,1),(976,1200,1),(976,1301,1),(976,1305,1),(976,1309,1),(976,1313,1),(976,1319,1),(976,1353,1),(976,1362,1),(976,2000,1),(976,2009,1),(976,2011,1),(976,2020,1),(976,6001,1),(976,6002,1),(976,6003,1),(976,6004,1),(976,6005,1),(976,6006,1),(976,6007,1),(976,6008,1),(976,6009,1),(976,6010,1),(976,6011,1),(976,6012,1),(976,6014,1),(976,6016,1),(976,6017,1),(976,6018,1),(976,6020,1),(976,6021,1),(976,6022,1),(976,6023,1),(976,6024,1),(976,6025,1),(979,1001,1),(979,1002,1),(979,1003,1),(979,1007,1),(979,1012,1),(979,1017,1),(979,1020,1),(979,1021,1),(979,1032,1),(979,1035,1),(979,1071,1),(979,1073,1),(979,1078,1),(979,1116,1),(979,1134,1),(979,1158,1),(979,1164,1),(979,2000,1),(979,2020,1),(979,6001,1),(979,6002,1),(979,6003,1),(979,6005,1),(979,6007,1),(979,6008,1),(979,6009,1),(979,6010,1),(979,6017,1),(979,6018,1),(979,6020,1),(979,6022,1),(979,6023,1),(979,6025,1),(979,9000,1),(979,9002,1),(980,1001,1),(980,6001,1),(981,1007,1),(981,1017,1),(981,6002,1),(981,6024,1),(987,1001,1),(987,6002,1),(990,1094,1),(990,1164,1),(990,6001,1),(996,1001,1),(996,1012,1),(996,1017,1),(996,1021,1),(996,1032,1),(996,1035,1),(996,1073,1),(996,1078,1),(996,1116,1),(996,1164,1),(996,6002,1),(996,6017,1),(996,6025,1),(997,1001,1),(997,1002,1),(1000,9016,1),(1003,29,2),(1003,76,2),(1003,1001,1),(1003,1002,1),(1003,1003,1),(1003,1006,1),(1003,1007,1),(1003,1009,1),(1003,1012,1),(1003,1013,1),(1003,1017,1),(1003,1020,1),(1003,1021,1),(1003,1023,1),(1003,1026,1),(1003,1028,1),(1003,1032,1),(1003,1035,1),(1003,1036,1),(1003,1043,1),(1003,1045,1),(1003,1050,1),(1003,1055,1),(1003,1058,1),(1003,1071,1),(1003,1073,1),(1003,1077,1),(1003,1078,1),(1003,1087,1),(1003,1090,1),(1003,1091,1),(1003,1116,1),(1003,1121,1),(1003,1132,1),(1003,1133,1),(1003,1134,1),(1003,1139,1),(1003,1140,1),(1003,1146,1),(1003,1147,1),(1003,1164,1),(1003,1171,1),(1003,1172,1),(1003,1174,1),(1003,1177,1),(1003,1193,1),(1003,1200,1),(1003,1301,1),(1003,1303,1),(1003,1305,1),(1003,1309,1),(1003,1310,1),(1003,1311,1),(1003,1313,1),(1003,1315,1),(1003,1319,1),(1003,1322,1),(1003,1325,1),(1003,1326,1),(1003,1329,1),(1003,1332,1),(1003,1333,1),(1003,1334,1),(1003,1337,1),(1003,1338,1),(1003,1339,1),(1003,1341,1),(1003,1343,1),(1003,1344,1),(1003,1345,1),(1003,1346,1),(1003,1353,1),(1003,1362,1),(1003,1363,1),(1003,1364,1),(1003,1365,1),(1003,1367,1),(1003,1378,1),(1003,1379,1),(1003,1382,1),(1003,1383,1),(1003,1391,1),(1003,1396,1),(1003,1433,1),(1003,2009,1),(1003,2011,1),(1003,2020,1),(1003,2021,1),(1003,6001,1),(1003,6002,1),(1003,6003,1),(1003,6004,1),(1003,6005,1),(1003,6006,1),(1003,6007,1),(1003,6008,1),(1003,6009,1),(1003,6010,1),(1003,6011,1),(1003,6012,1),(1003,6013,1),(1003,6015,1),(1003,6016,1),(1003,6017,1),(1003,6018,1),(1003,6019,1),(1003,6020,1),(1003,6021,1),(1003,6022,1),(1003,6023,1),(1003,6024,1),(1003,6025,1),(1003,9017,1),(1003,9020,1),(1003,9021,1),(1003,9022,1),(1003,9026,1),(1003,9028,1),(1003,9032,1),(1004,1001,1),(1004,1078,1),(1007,1001,1),(1007,1002,1),(1007,1003,1),(1007,1007,1),(1007,1009,1),(1007,1012,1),(1007,1013,1),(1007,1017,1),(1007,1020,1),(1007,1021,1),(1007,1032,1),(1007,1035,1),(1007,1055,1),(1007,1073,1),(1007,1116,1),(1007,1158,1),(1007,1164,1),(1007,1175,1),(1007,1329,1),(1007,1362,1),(1007,2000,1),(1007,2009,1),(1007,2011,1),(1007,6002,1),(1007,6005,1),(1007,6006,1),(1007,6008,1),(1007,6010,1),(1007,6012,1),(1007,6016,1),(1007,6017,1),(1007,6018,1),(1007,6021,1),(1007,6022,1),(1007,6023,1),(1007,6024,1),(1007,6025,1),(1009,6001,1),(1009,6002,1),(1009,6005,1),(1009,6008,1),(1009,6009,1),(1009,6017,1),(1009,6025,1),(1010,6001,1),(1010,6002,1),(1010,6008,1),(1010,6009,1),(1010,6012,1),(1010,6017,1),(1010,6018,1),(1010,6022,1),(1010,6023,1),(1010,6025,1),(1011,1001,1),(1011,1002,1),(1011,1012,1),(1011,1017,1),(1011,1020,1),(1011,1021,1),(1011,1032,1),(1011,1035,1),(1011,1073,1),(1011,1116,1),(1011,1147,1),(1011,1164,1),(1011,2009,1),(1011,6002,1),(1016,1171,1),(1016,1172,1),(1016,1175,1),(1017,1001,1),(1017,1002,1),(1017,1003,1),(1017,1005,1),(1017,1007,1),(1017,1009,1),(1017,1012,1),(1017,1013,1),(1017,1017,1),(1017,1020,1),(1017,1021,1),(1017,1032,1),(1017,1035,1),(1017,1043,1),(1017,1055,1),(1017,1067,1),(1017,1071,1),(1017,1073,1),(1017,1078,1),(1017,1093,1),(1017,1108,1),(1017,1116,1),(1017,1134,1),(1017,1140,1),(1017,1146,1),(1017,1147,1),(1017,1149,1),(1017,1158,1),(1017,1164,1),(1017,1171,1),(1017,1175,1),(1017,1200,1),(1017,1305,1),(1017,1322,1),(1017,1329,1),(1017,1362,1),(1017,1363,1),(1017,2000,1),(1017,2009,1),(1017,2010,1),(1017,2011,1),(1017,2020,1),(1017,2021,1),(1017,2022,1),(1017,2023,1),(1017,2025,1),(1017,2026,1),(1017,6001,1),(1017,6002,1),(1017,6003,1),(1017,6004,1),(1017,6005,1),(1017,6006,1),(1017,6008,1),(1017,6010,1),(1017,6011,1),(1017,6012,1),(1017,6015,1),(1017,6016,1),(1017,6017,1),(1017,6018,1),(1017,6019,1),(1017,6020,1),(1017,6021,1),(1017,6022,1),(1017,6023,1),(1017,6024,1),(1017,6025,1),(1019,72,2),(1019,1001,1),(1019,1002,1),(1019,1003,1),(1019,1007,1),(1019,1009,1),(1019,1012,1),(1019,1013,1),(1019,1017,1),(1019,1020,1),(1019,1021,1),(1019,1023,1),(1019,1032,1),(1019,1035,1),(1019,1043,1),(1019,1045,1),(1019,1055,1),(1019,1071,1),(1019,1072,1),(1019,1073,1),(1019,1075,1),(1019,1078,1),(1019,1087,1),(1019,1090,1),(1019,1116,1),(1019,1134,1),(1019,1140,1),(1019,1146,1),(1019,1147,1),(1019,1164,1),(1019,1171,1),(1019,1177,1),(1019,1200,1),(1019,1301,1),(1019,1305,1),(1019,1311,1),(1019,1313,1),(1019,1322,1),(1019,1326,1),(1019,1329,1),(1019,1344,1),(1019,1362,1),(1019,1363,1),(1019,1367,1),(1019,1369,1),(1019,1378,1),(1019,1382,1),(1019,1383,1),(1019,1396,1),(1019,1433,1),(1019,1460,1),(1019,2000,1),(1019,2009,1),(1019,2011,1),(1019,2020,1),(1019,2021,1),(1019,2027,1),(1019,6001,1),(1019,6002,1),(1019,6003,1),(1019,6004,1),(1019,6005,1),(1019,6006,1),(1019,6007,1),(1019,6008,1),(1019,6009,1),(1019,6010,1),(1019,6012,1),(1019,6013,1),(1019,6015,1),(1019,6016,1),(1019,6017,1),(1019,6018,1),(1019,6019,1),(1019,6020,1),(1019,6022,1),(1019,6023,1),(1019,6024,1),(1019,6025,1),(1019,9017,1),(1019,9032,1),(1020,1001,1),(1020,1012,1),(1020,1035,1),(1020,6018,1),(1020,6020,1),(1020,6023,1),(1021,1001,1),(1021,1078,1),(1021,1130,1),(1021,1134,1),(1021,1151,1),(1021,1164,1),(1021,6001,1),(1021,6005,1),(1021,6009,1),(1022,1149,1),(1023,1002,1),(1023,6023,1),(1024,1001,1),(1024,1002,1),(1024,1012,1),(1024,1032,1),(1024,1035,1),(1024,1073,1),(1024,1078,1),(1024,1164,1),(1024,6017,1),(1024,6025,1),(1025,1017,1),(1028,1001,1),(1028,1002,1),(1029,1001,1),(1029,1002,1),(1029,1003,1),(1029,6005,1),(1033,1001,1),(1033,1002,1),(1033,1009,1),(1033,1032,1),(1033,6023,1),(1035,1001,1),(1035,1002,1),(1035,1007,1),(1036,1032,1),(1037,1076,1),(1038,1001,1),(1038,6005,1),(1045,1001,1),(1045,1002,1),(1046,1001,1),(1046,1002,1),(1046,1012,1),(1046,1035,1),(1046,1164,1),(1046,1200,1),(1046,6001,1),(1046,6005,1),(1046,6017,1),(1046,6018,1),(1046,6020,1),(1046,6022,1),(1046,6023,1),(1046,6025,1),(1048,1001,1),(1048,1012,1),(1048,1017,1),(1048,1020,1),(1048,1032,1),(1048,1035,1),(1048,1073,1),(1048,1078,1),(1048,6002,1),(1048,6008,1),(1048,6012,1),(1048,6017,1),(1048,6025,1),(1049,1001,1),(1052,1201,1),(1105,1001,1),(1106,1140,1),(1106,1147,1),(1106,1175,1),(1108,1146,1),(1108,1149,1),(1110,1067,1),(1112,1002,1),(1112,1003,1),(1112,1004,1),(1116,1012,1),(1116,1078,1),(1116,1171,1),(1116,2009,1),(1118,1001,1),(1118,1002,1),(1118,1003,1),(1121,1057,1),(1126,1001,1),(1127,1001,1),(1127,1002,1),(1127,1003,1),(1127,1007,1),(1127,1009,1),(1127,1012,1),(1127,1017,1),(1127,1020,1),(1127,1021,1),(1127,1032,1),(1127,1035,1),(1127,1043,1),(1127,1055,1),(1127,1071,1),(1127,1073,1),(1127,1078,1),(1127,1116,1),(1127,1134,1),(1127,1140,1),(1127,1146,1),(1127,1158,1),(1127,1164,1),(1127,1305,1),(1127,1322,1),(1127,1329,1),(1127,1353,1),(1127,1362,1),(1127,1363,1),(1127,1382,1),(1127,2000,1),(1127,2002,1),(1127,2020,1),(1127,2021,1),(1127,6001,1),(1127,6002,1),(1127,6003,1),(1127,6004,1),(1127,6005,1),(1127,6006,1),(1127,6007,1),(1127,6008,1),(1127,6009,1),(1127,6010,1),(1127,6015,1),(1127,6017,1),(1127,6018,1),(1127,6020,1),(1127,6021,1),(1127,6022,1),(1127,6023,1),(1127,6024,1),(1127,6025,1),(1127,9016,1),(1128,1001,1),(1128,1002,1),(1128,1007,1),(1128,1009,1),(1128,1012,1),(1128,1017,1),(1128,1020,1),(1128,1021,1),(1128,1032,1),(1128,1035,1),(1128,1073,1),(1128,1078,1),(1128,1116,1),(1128,1134,1),(1128,1140,1),(1128,1164,1),(1128,1305,1),(1128,1322,1),(1128,1329,1),(1128,1353,1),(1128,1362,1),(1128,1382,1),(1128,2020,1),(1128,6002,1),(1128,6005,1),(1128,6006,1),(1128,6007,1),(1128,6008,1),(1128,6010,1),(1128,6015,1),(1128,6017,1),(1128,6020,1),(1128,6023,1),(1128,6025,1),(1130,9016,1),(1131,1152,1),(1133,1001,1),(1133,1007,1),(1133,1032,1),(1133,1035,1),(1133,1329,1),(1133,2000,1),(1133,6003,1),(1133,6004,1),(1133,6007,1),(1133,6009,1),(1133,6018,1),(1133,6024,1),(1133,9016,1),(1135,1017,1),(1135,1020,1),(1138,1001,1),(1140,1017,1),(1142,1001,1),(1142,1002,1),(1142,1007,1),(1142,1012,1),(1142,1013,1),(1142,1017,1),(1142,1020,1),(1142,1021,1),(1142,1032,1),(1142,1035,1),(1142,1055,1),(1142,1073,1),(1142,1078,1),(1142,1116,1),(1142,1134,1),(1142,1140,1),(1142,1158,1),(1142,1164,1),(1142,1329,1),(1142,1382,1),(1142,2009,1),(1142,6001,1),(1142,6002,1),(1142,6005,1),(1142,6006,1),(1142,6008,1),(1142,6015,1),(1142,6017,1),(1142,6018,1),(1142,6020,1),(1142,6023,1),(1144,1001,1),(1145,1001,1),(1147,1139,1),(1150,1001,1),(1151,1001,1),(1155,2009,1),(1155,2010,1),(1155,2011,1),(1155,2012,1),(1155,2013,1),(1155,2014,1),(1155,2015,1),(1155,2016,1),(1155,2017,1),(1155,2018,1),(1156,1001,1),(1156,2016,1),(1158,1002,1),(1158,1012,1),(1158,1017,1),(1158,1021,1),(1158,1032,1),(1158,1035,1),(1158,1073,1),(1158,1116,1),(1158,1147,1),(1158,1164,1),(1158,2009,1),(1158,6002,1),(1163,1001,1),(1163,1002,1),(1163,1007,1),(1163,1012,1),(1163,1013,1),(1163,1017,1),(1163,1020,1),(1163,1021,1),(1163,1032,1),(1163,1035,1),(1163,1073,1),(1163,1078,1),(1163,1116,1),(1163,1164,1),(1163,1362,1),(1163,2011,1),(1163,6001,1),(1163,6005,1),(1163,6007,1),(1163,6008,1),(1163,6012,1),(1163,6017,1),(1163,6018,1),(1163,6020,1),(1163,6025,1),(1166,6002,1),(1167,6002,1),(1168,1001,1),(1168,1023,1),(1168,1342,1),(1168,1343,1),(1168,1344,1),(1168,1345,1),(1168,1346,1),(1168,1352,1),(1168,1353,1),(1168,1354,1),(1168,2003,1),(1168,6005,1),(1179,1001,1),(1179,1002,1),(1179,1007,1),(1183,8009,1),(1183,8012,1),(1183,9016,1),(1194,1001,1),(1195,1,2),(1195,1001,1),(1195,1002,1),(1195,1012,1),(1195,1017,1),(1195,1020,1),(1195,1032,1),(1195,1035,1),(1195,1073,1),(1195,1078,1),(1195,1164,1),(1195,6001,1),(1195,6005,1),(1195,6017,1),(1195,6018,1),(1195,6020,1),(1195,6022,1),(1195,6023,1),(1195,6025,1),(1198,1001,1),(1198,1002,1),(1198,1003,1),(1198,1004,1),(1198,1005,1),(1198,1006,1),(1198,1007,1),(1198,1012,1),(1198,1017,1),(1198,1019,1),(1198,1020,1),(1198,1021,1),(1198,1032,1),(1198,1035,1),(1198,1073,1),(1198,1164,1),(1198,1200,1),(1198,2000,1),(1198,2011,1),(1198,6001,1),(1198,6002,1),(1198,6004,1),(1198,6005,1),(1198,6006,1),(1198,6007,1),(1198,6008,1),(1198,6010,1),(1198,6012,1),(1198,6014,1),(1198,6015,1),(1198,6016,1),(1198,6017,1),(1198,6018,1),(1198,6019,1),(1198,6020,1),(1198,6021,1),(1198,6022,1),(1198,6023,1),(1198,6024,1),(1198,6025,1),(1199,1146,1),(1200,1001,1),(1200,1002,1),(1200,1007,1),(1200,1012,1),(1200,1017,1),(1200,1020,1),(1200,1021,1),(1200,1032,1),(1200,1035,1),(1200,1055,1),(1200,1073,1),(1200,1116,1),(1200,1147,1),(1200,1164,1),(1200,1200,1),(1200,1305,1),(1200,1322,1),(1200,1329,1),(1200,1353,1),(1200,1362,1),(1200,1363,1),(1200,2009,1),(1200,2011,1),(1200,2020,1),(1200,2021,1),(1200,6001,1),(1200,6002,1),(1200,6005,1),(1200,6017,1),(1200,6020,1),(1200,6022,1),(1200,6023,1),(1200,6025,1),(1202,1001,1),(1202,6002,1),(1202,6006,1),(1202,6010,1),(1202,6025,1),(1202,9000,1),(1202,9001,1),(1202,9002,1),(1203,1109,1),(1207,1001,1),(1209,1001,1),(1209,1002,1),(1209,1003,1),(1209,1007,1),(1209,1009,1),(1209,1012,1),(1209,1013,1),(1209,1017,1),(1209,1020,1),(1209,1021,1),(1209,1032,1),(1209,1035,1),(1209,1073,1),(1209,1078,1),(1209,1116,1),(1209,1147,1),(1209,1164,1),(1209,1171,1),(1209,1200,1),(1209,2000,1),(1209,2009,1),(1209,2011,1),(1209,6001,1),(1209,6002,1),(1209,6004,1),(1209,6005,1),(1209,6006,1),(1209,6007,1),(1209,6008,1),(1209,6009,1),(1209,6010,1),(1209,6012,1),(1209,6017,1),(1209,6020,1),(1209,6022,1),(1209,6025,1),(1209,8012,1),(1209,9016,1),(1211,1001,1),(1211,1017,1),(1213,1001,1),(1216,1001,1),(1216,1002,1),(1216,1012,1),(1216,1032,1),(1216,1035,1),(1216,1055,1),(1216,1073,1),(1216,6020,1),(1216,6022,1),(1216,9016,1),(1217,1001,1),(1217,1002,1),(1217,1005,1),(1217,1012,1),(1217,1017,1),(1217,1020,1),(1217,1021,1),(1217,1032,1),(1217,1035,1),(1217,1055,1),(1217,1071,1),(1217,1073,1),(1217,1164,1),(1217,1200,1),(1217,2009,1),(1217,6001,1),(1217,6002,1),(1217,6007,1),(1217,6008,1),(1217,6009,1),(1217,6010,1),(1217,6012,1),(1217,6017,1),(1217,6018,1),(1217,6020,1),(1217,6021,1),(1217,6022,1),(1217,6023,1),(1217,6024,1),(1217,6025,1),(1219,1001,1),(1223,1001,1),(1223,1007,1),(1223,1017,1),(1223,6002,1),(1223,6024,1),(1226,1001,1),(1227,1001,1),(1227,1021,1),(1227,1073,1),(1227,1164,1),(1227,2018,1),(1227,6001,1),(1227,6002,1),(1227,6005,1),(1227,6007,1),(1227,6008,1),(1227,6009,1),(1227,6010,1),(1229,6003,1),(1229,6016,1),(1232,1007,1),(1232,1017,1),(1232,6002,1),(1234,1078,1),(1234,1151,1),(1234,1164,1),(1238,1001,1),(1238,1007,1),(1238,1017,1),(1238,6001,1),(1238,6002,1),(1238,6024,1),(1239,1001,1),(1239,1012,1),(1239,1017,1),(1239,1032,1),(1239,1035,1),(1239,1073,1),(1239,1078,1),(1239,2020,1),(1240,1001,1),(1243,1107,1),(1244,1001,1),(1244,1362,1),(1244,1363,1),(1244,6002,1),(1244,6017,1),(1244,9017,1),(1245,1001,1),(1246,1001,1),(1246,1002,1),(1246,1003,1),(1248,1001,1),(1248,1002,1),(1248,1003,1),(1249,1001,1),(1251,1138,1),(1253,1001,1),(1253,1002,1),(1253,1007,1),(1253,1009,1),(1253,1012,1),(1253,1017,1),(1253,1020,1),(1253,1021,1),(1253,1023,1),(1253,1032,1),(1253,1035,1),(1253,1036,1),(1253,1055,1),(1253,1068,1),(1253,1073,1),(1253,1078,1),(1253,1093,1),(1253,1116,1),(1253,1140,1),(1253,1146,1),(1253,1147,1),(1253,1149,1),(1253,1158,1),(1253,1171,1),(1253,1174,1),(1253,1305,1),(1253,1309,1),(1253,1311,1),(1253,1313,1),(1253,1315,1),(1253,1319,1),(1253,1322,1),(1253,1329,1),(1253,1333,1),(1253,1344,1),(1253,1353,1),(1253,1362,1),(1253,1363,1),(1253,1364,1),(1253,1383,1),(1253,1459,1),(1253,1460,1),(1253,1461,1),(1253,1462,1),(1253,2000,1),(1253,2002,1),(1253,2011,1),(1253,2020,1),(1253,6001,1),(1253,6002,1),(1253,6003,1),(1253,6004,1),(1253,6005,1),(1253,6006,1),(1253,6007,1),(1253,6008,1),(1253,6009,1),(1253,6010,1),(1253,6012,1),(1253,6016,1),(1253,6017,1),(1253,6018,1),(1253,6019,1),(1253,6020,1),(1253,6023,1),(1253,6024,1),(1253,6025,1),(1253,8013,1),(1253,8014,1),(1253,8016,1),(1253,9000,1),(1253,9001,1),(1253,9002,1),(1253,9005,1),(1253,9007,1),(1253,9100,1),(1253,9101,1),(1253,9104,1),(1253,9106,1),(1253,9108,1),(1253,9109,1),(1253,9110,1),(1253,9113,1),(1254,1001,1),(1254,1002,1),(1254,1007,1),(1254,1012,1),(1254,1017,1),(1254,1020,1),(1254,1021,1),(1254,1032,1),(1254,1035,1),(1254,1036,1),(1254,6018,1),(1254,6019,1),(1256,1001,1),(1256,1002,1),(1256,1020,1),(1256,1073,1),(1256,2000,1),(1257,9000,1),(1257,9001,1),(1257,9002,1),(1258,9000,1),(1258,9001,1),(1258,9002,1),(1258,9003,1),(1258,9007,1),(1259,9000,1),(1259,9001,1),(1259,9002,1),(1259,9003,1),(1259,9005,1),(1259,9006,1),(1260,1059,1),(1260,1071,1),(1260,9008,1),(1262,1001,1),(1262,1012,1),(1262,6020,1),(1264,1001,1),(1264,1002,1),(1266,1001,1),(1266,1002,1),(1266,1012,1),(1266,1017,1),(1266,1032,1),(1266,1073,1),(1266,1078,1),(1266,1116,1),(1266,1362,1),(1266,1363,1),(1266,6002,1),(1266,6020,1),(1266,6023,1),(1266,6024,1),(1268,1301,1),(1268,1305,1),(1268,1309,1),(1268,1322,1),(1268,1323,1),(1268,1324,1),(1268,1325,1),(1268,1326,1),(1268,1328,1),(1268,1329,1),(1268,1332,1),(1268,1333,1),(1268,1337,1),(1268,1338,1),(1268,1339,1),(1268,1341,1),(1268,1342,1),(1268,1343,1),(1268,1344,1),(1268,1346,1),(1268,1347,1),(1268,1349,1),(1268,1350,1),(1268,1351,1),(1268,1352,1),(1268,1353,1),(1268,1354,1),(1268,1358,1),(1268,1359,1),(1268,1362,1),(1268,1363,1),(1268,1364,1),(1268,1365,1),(1268,1367,1),(1268,1369,1),(1268,1396,1),(1268,9017,1),(1268,9018,1),(1268,9019,1),(1268,9020,1),(1268,9021,1),(1268,9022,1),(1269,1300,1),(1269,1301,1),(1269,1302,1),(1269,1303,1),(1269,1304,1),(1269,1305,1),(1269,1307,1),(1269,1308,1),(1269,1309,1),(1269,1310,1),(1269,8013,1),(1269,8014,1),(1269,8016,1),(1269,8018,1),(1275,1001,1),(1275,1002,1),(1275,1005,1),(1275,1012,1),(1275,1017,1),(1275,1020,1),(1275,1021,1),(1275,1032,1),(1275,1035,1),(1275,1055,1),(1275,1071,1),(1275,1073,1),(1275,1164,1),(1275,1200,1),(1275,1305,1),(1275,1311,1),(1275,1329,1),(1275,2009,1),(1275,6001,1),(1275,6002,1),(1275,6007,1),(1275,6008,1),(1275,6009,1),(1275,6010,1),(1275,6012,1),(1275,6017,1),(1275,6018,1),(1275,6020,1),(1275,6021,1),(1275,6022,1),(1275,6023,1),(1275,6024,1),(1275,6025,1),(1275,9016,1),(1279,1078,1),(1279,1164,1),(1280,1001,1),(1280,1002,1),(1282,1001,1),(1282,1002,1),(1282,1003,1),(1282,1073,1),(1284,1107,1),(1284,1108,1),(1284,1110,1),(1284,1112,1),(1284,1115,1),(1287,1001,1),(1288,1001,1),(1288,1023,1),(1288,1322,1),(1288,1323,1),(1288,1325,1),(1288,1326,1),(1288,1327,1),(1288,1328,1),(1288,1329,1),(1288,1332,1),(1288,1333,1),(1288,1337,1),(1288,1338,1),(1288,1339,1),(1288,1340,1),(1288,1341,1),(1288,1343,1),(1288,1344,1),(1288,1347,1),(1288,1351,1),(1288,1352,1),(1288,1353,1),(1288,1354,1),(1288,2025,1),(1288,6005,1),(1289,1001,1),(1289,1322,1),(1289,1325,1),(1289,1326,1),(1289,1329,1),(1289,1332,1),(1289,1333,1),(1289,1338,1),(1289,1339,1),(1289,1341,1),(1289,1342,1),(1289,1343,1),(1289,1344,1),(1289,1346,1),(1289,1347,1),(1289,1350,1),(1289,1362,1),(1289,1363,1),(1289,1364,1),(1289,1365,1),(1289,1367,1),(1289,1369,1),(1289,1428,1),(1289,1433,1),(1289,2020,1),(1289,2021,1),(1289,2022,1),(1289,2025,1),(1289,2026,1),(1289,2027,1),(1290,1322,1),(1290,1324,1),(1290,1325,1),(1290,1326,1),(1290,1327,1),(1290,1328,1),(1290,1329,1),(1290,1330,1),(1290,1331,1),(1291,1001,1),(1291,1322,1),(1291,1324,1),(1291,1325,1),(1291,1326,1),(1291,1327,1),(1291,1329,1),(1291,1330,1),(1291,1342,1),(1291,1343,1),(1291,1344,1),(1291,1345,1),(1291,1346,1),(1291,1347,1),(1291,1348,1),(1291,1349,1),(1291,1350,1),(1291,1351,1),(1291,1362,1),(1291,1363,1),(1291,1364,1),(1291,1365,1),(1291,1366,1),(1291,1367,1),(1291,1368,1),(1291,1369,1),(1291,1378,1),(1291,1388,1),(1291,1389,1),(1291,1391,1),(1291,1405,1),(1291,1408,1),(1291,1409,1),(1291,1413,1),(1291,1414,1),(1291,1415,1),(1291,1426,1),(1291,1428,1),(1291,1429,1),(1291,1430,1),(1291,1433,1),(1291,1435,1),(1291,2012,1),(1291,2014,1),(1291,2016,1),(1291,2020,1),(1291,2021,1),(1291,2022,1),(1291,2023,1),(1291,2024,1),(1291,2025,1),(1291,2026,1),(1291,2027,1),(1292,1322,1),(1292,1326,1),(1292,1329,1),(1294,1322,1),(1294,1323,1),(1294,1324,1),(1294,1325,1),(1294,1326,1),(1294,1327,1),(1294,1328,1),(1294,1329,1),(1294,1330,1),(1294,1331,1),(1294,1342,1),(1294,1343,1),(1294,1344,1),(1294,1345,1),(1294,1346,1),(1294,1347,1),(1294,1348,1),(1294,1349,1),(1294,1350,1),(1294,1351,1),(1294,1352,1),(1294,1353,1),(1294,1354,1),(1294,1359,1),(1294,1361,1),(1295,1322,1),(1295,1323,1),(1295,1325,1),(1295,1326,1),(1295,1327,1),(1295,1328,1),(1295,1329,1),(1295,1342,1),(1295,1343,1),(1295,1344,1),(1295,1345,1),(1295,1346,1),(1295,1347,1),(1295,1348,1),(1295,1349,1),(1295,1350,1),(1295,1351,1),(1295,1352,1),(1295,1353,1),(1295,1354,1),(1295,1358,1),(1295,1359,1),(1295,1362,1),(1295,1363,1),(1296,1333,1),(1296,1342,1),(1296,1344,1),(1296,1346,1),(1296,1347,1),(1296,1362,1),(1296,1363,1),(1296,1364,1),(1296,1365,1),(1296,1367,1),(1296,1369,1),(1296,2020,1),(1296,2021,1),(1296,2025,1),(1300,1329,1),(1301,1001,1),(1302,1001,1),(1302,1062,1),(1302,1332,1),(1302,1333,1),(1302,1334,1),(1302,1337,1),(1302,1338,1),(1302,1339,1),(1302,1340,1),(1302,1341,1),(1302,1342,1),(1302,1343,1),(1302,1344,1),(1302,1345,1),(1302,1346,1),(1302,1347,1),(1302,1349,1),(1302,1350,1),(1302,1351,1),(1302,1362,1),(1302,1363,1),(1302,1367,1),(1302,1378,1),(1302,1379,1),(1302,1380,1),(1302,1382,1),(1302,1383,1),(1302,1396,1),(1302,2020,1),(1302,2021,1),(1302,2022,1),(1302,2024,1),(1302,2025,1),(1302,2026,1),(1302,2027,1),(1302,8000,1),(1302,8001,1),(1302,8003,1),(1302,8004,1),(1302,8005,1),(1302,8006,1),(1302,8007,1),(1303,1057,1),(1303,1058,1),(1303,1059,1),(1303,1060,1),(1303,1062,1),(1303,1065,1),(1303,1322,1),(1303,1323,1),(1303,1324,1),(1303,1326,1),(1303,1327,1),(1303,1328,1),(1303,1329,1),(1303,1330,1),(1303,1331,1),(1303,1332,1),(1303,1333,1),(1303,1334,1),(1303,1335,1),(1303,1336,1),(1303,1337,1),(1303,1338,1),(1303,1339,1),(1303,1340,1),(1303,1341,1),(1303,1342,1),(1303,1343,1),(1303,1344,1),(1303,1345,1),(1303,1346,1),(1303,1347,1),(1303,1348,1),(1303,1349,1),(1303,1350,1),(1303,1351,1),(1303,1362,1),(1303,1363,1),(1303,1364,1),(1303,1365,1),(1303,1366,1),(1303,1367,1),(1303,1368,1),(1303,1369,1),(1303,1377,1),(1303,1378,1),(1303,1379,1),(1303,1382,1),(1303,1383,1),(1303,1408,1),(1303,1409,1),(1303,1413,1),(1303,1414,1),(1303,1415,1),(1303,1426,1),(1303,1428,1),(1303,1430,1),(1303,1433,1),(1303,1435,1),(1303,2020,1),(1303,2021,1),(1303,2022,1),(1303,2024,1),(1303,2025,1),(1303,2026,1),(1303,2027,1),(1303,9017,1),(1303,9018,1),(1303,9019,1),(1303,9020,1),(1303,9021,1),(1303,9022,1),(1303,9025,1),(1303,9026,1),(1303,9028,1),(1303,9029,1),(1303,9030,1),(1303,9031,1),(1303,9032,1),(1304,1001,1),(1304,1332,1),(1304,1333,1),(1304,1344,1),(1304,1347,1),(1304,6005,1),(1305,1001,1),(1305,1017,1),(1305,1020,1),(1305,1021,1),(1305,1035,1),(1305,1073,1),(1305,1116,1),(1305,1151,1),(1305,1164,1),(1305,1322,1),(1305,1332,1),(1305,1333,1),(1305,1342,1),(1305,1343,1),(1305,1344,1),(1305,1345,1),(1305,1346,1),(1305,1347,1),(1305,1348,1),(1305,1349,1),(1305,1350,1),(1305,1351,1),(1305,1352,1),(1305,1353,1),(1305,1354,1),(1305,1356,1),(1305,1358,1),(1305,1359,1),(1305,1360,1),(1305,1361,1),(1305,1362,1),(1305,1363,1),(1305,1364,1),(1305,1365,1),(1305,1366,1),(1305,1367,1),(1305,1368,1),(1305,1369,1),(1305,1378,1),(1305,2020,1),(1305,6001,1),(1305,6002,1),(1305,6003,1),(1305,6004,1),(1305,6006,1),(1305,9000,1),(1305,9004,1),(1305,9017,1),(1305,9018,1),(1305,9022,1),(1306,2022,1),(1309,1329,1),(1309,1340,1),(1309,1351,1),(1310,1323,1),(1310,1325,1),(1310,1327,1),(1310,1332,1),(1310,1333,1),(1310,1339,1),(1310,1341,1),(1310,1342,1),(1310,1343,1),(1310,1344,1),(1310,1346,1),(1310,1352,1),(1310,1353,1),(1310,1354,1),(1310,1362,1),(1310,1363,1),(1310,1364,1),(1310,1367,1),(1310,1369,1),(1310,1428,1),(1310,1433,1),(1310,2000,1),(1310,2002,1),(1310,2020,1),(1310,2021,1),(1310,2026,1),(1310,2027,1),(1315,1001,1),(1315,2020,1),(1315,2021,1),(1315,2027,1),(1317,1001,1),(1318,1001,1),(1318,1002,1),(1319,1001,1),(1319,1353,1),(1321,1343,1),(1322,1012,1),(1322,1013,1),(1322,1017,1),(1323,1341,1),(1323,2021,1),(1325,1351,1),(1325,9026,1),(1325,9028,1),(1325,9030,1),(1325,9031,1),(1325,9032,1),(1326,1343,1),(1326,1344,1),(1326,1351,1),(1326,1352,1),(1326,1353,1),(1327,1342,1),(1328,1001,1),(1328,1012,1),(1328,1017,1),(1328,1020,1),(1328,1073,1),(1328,1305,1),(1328,1322,1),(1328,1362,1),(1328,6001,1),(1328,6002,1),(1328,6017,1),(1328,6018,1),(1328,6022,1),(1328,6025,1),(1329,1001,1),(1331,1001,1),(1333,1001,1),(1333,1002,1),(1333,1007,1),(1333,1017,1),(1333,6002,1),(1333,6024,1),(1335,1007,1),(1335,6002,1),(1336,1007,1),(1336,1017,1),(1336,6002,1),(1336,6024,1),(1337,1007,1),(1337,1017,1),(1337,6002,1),(1337,6024,1),(1338,1007,1),(1338,1017,1),(1338,6002,1),(1338,6024,1),(1339,6002,1),(1340,1007,1),(1340,1017,1),(1340,6002,1),(1340,6024,1),(1341,6002,1),(1342,1017,1),(1342,6002,1),(1342,6024,1),(1343,1007,1),(1343,1017,1),(1343,6002,1),(1344,6002,1),(1345,1001,1),(1345,1007,1),(1345,1017,1),(1345,6024,1),(1346,1094,1),(1348,1001,1),(1350,6002,1),(1352,1007,1),(1352,1017,1),(1352,6002,1),(1352,6024,1),(1354,1001,1),(1354,1017,1),(1355,1001,1),(1356,1017,1),(1357,1001,1),(1360,1001,1),(1360,1023,1),(1360,1352,1),(1360,1353,1),(1360,1354,1),(1360,2003,1),(1360,6005,1),(1361,6002,1),(1362,1001,1),(1362,1023,1),(1362,1353,1),(1362,2003,1),(1362,6005,1),(1363,1352,1),(1363,1353,1),(1364,1001,1),(1364,6002,1),(1364,6008,1),(1364,6009,1),(1364,6010,1),(1364,6011,1),(1364,6012,1),(1364,6013,1),(1364,6014,1),(1364,6015,1),(1364,6016,1),(1364,6017,1),(1364,6018,1),(1364,6019,1),(1364,6020,1),(1364,6021,1),(1364,6022,1),(1364,6023,1),(1364,6024,1),(1364,6025,1),(1367,1001,1),(1367,6002,1),(1369,1017,1),(1374,6001,1),(1376,1001,1),(1376,1362,1),(1376,1363,1),(1376,1364,1),(1376,1367,1),(1376,6005,1),(1376,8000,1),(1376,8006,1),(1376,9022,1),(1376,9032,1),(1378,1032,1),(1378,1073,1),(1379,1001,1),(1379,1013,1),(1379,1073,1),(1379,1091,1),(1379,1116,1),(1379,1146,1),(1379,1164,1),(1379,1301,1),(1379,1329,1),(1379,1353,1),(1379,1362,1),(1379,1363,1),(1379,1364,1),(1379,1365,1),(1379,1367,1),(1379,6001,1),(1379,6002,1),(1379,6003,1),(1379,6004,1),(1379,6005,1),(1379,6006,1),(1379,6007,1),(1379,6010,1),(1379,6011,1),(1379,6014,1),(1379,6016,1),(1379,6017,1),(1379,6018,1),(1379,6020,1),(1379,6023,1),(1379,6025,1),(1380,1369,1),(1387,9016,1),(1388,8009,1),(1388,8012,1),(1388,9016,1),(1390,1001,1),(1390,8012,1),(1390,9016,1),(1391,8009,1),(1391,8012,1),(1391,9016,1),(1392,8008,1),(1392,8009,1),(1392,8012,1),(1392,9016,1),(1396,1001,1),(1398,8009,1),(1398,9016,1),(1399,1001,1),(1400,8009,1),(1400,8010,1),(1400,8012,1),(1400,9016,1),(1401,8009,1),(1401,8012,1),(1401,9016,1),(1403,1001,1),(1403,8012,1),(1403,9016,1),(1406,1001,1),(1408,8012,1),(1408,9016,1),(1409,8009,1),(1410,1001,1),(1410,8012,1),(1410,9016,1),(1411,8012,1),(1411,9016,1),(1412,8012,1),(1412,9016,1),(1413,8009,1),(1413,8012,1),(1413,9016,1),(1414,8009,1),(1414,9016,1),(1418,8009,1),(1418,8012,1),(1418,9016,1),(1419,8009,1),(1419,9016,1),(1420,8012,1),(1421,8009,1),(1421,9016,1),(1422,8009,1),(1422,8012,1),(1422,9016,1),(1423,76,2),(1423,1001,1),(1423,1002,1),(1423,1007,1),(1423,1012,1),(1423,1017,1),(1423,1020,1),(1423,1035,1),(1423,1073,1),(1423,1362,1),(1423,6001,1),(1423,6002,1),(1423,6017,1),(1423,6025,1),(1424,1001,1),(1424,1012,1),(1424,1017,1),(1424,1020,1),(1424,1021,1),(1424,1032,1),(1424,1035,1),(1424,1073,1),(1424,1078,1),(1424,1116,1),(1424,1164,1),(1424,1200,1),(1424,6007,1),(1424,6017,1),(1424,6018,1),(1425,1001,1),(1425,1002,1),(1425,1012,1),(1425,1017,1),(1425,1020,1),(1425,1032,1),(1425,1035,1),(1425,1073,1),(1425,1078,1),(1425,6001,1),(1425,6002,1),(1425,6005,1),(1425,6008,1),(1425,6012,1),(1426,1001,1),(1426,1012,1),(1426,1017,1),(1426,1094,1),(1427,1001,1),(1427,1017,1),(1428,1001,1),(1428,1002,1),(1428,1007,1),(1428,1012,1),(1428,1013,1),(1428,1020,1),(1428,1023,1),(1428,1032,1),(1428,1035,1),(1428,1073,1),(1428,1078,1),(1428,1116,1),(1428,1164,1),(1428,2000,1),(1428,2002,1),(1428,2011,1),(1428,6001,1),(1428,6002,1),(1428,6003,1),(1428,6005,1),(1428,6007,1),(1428,6017,1),(1428,6022,1),(1428,9016,1),(1430,1001,1),(1430,1032,1),(1430,1116,1),(1430,1164,1),(1430,1322,1),(1430,6001,1),(1430,6007,1),(1430,6020,1),(1431,1001,1),(1433,1001,1),(1433,1352,1),(1433,1353,1),(1433,9017,1),(1433,9021,1),(1433,9022,1),(1436,1001,1),(1436,1002,1),(1436,1012,1),(1436,1073,1),(1436,1078,1),(1436,6001,1),(1436,6005,1),(1437,1001,1),(1437,1002,1),(1437,1012,1),(1437,1017,1),(1437,1073,1),(1437,6002,1),(1438,1001,1),(1438,1002,1),(1438,1012,1),(1438,1017,1),(1438,1020,1),(1438,1073,1),(1438,1078,1),(1439,1012,1),(1439,1078,1),(1440,1001,1),(1440,1002,1),(1440,1012,1),(1440,1017,1),(1440,1073,1),(1440,1078,1),(1440,1362,1),(1441,1078,1),(1441,1362,1),(1443,1001,1),(1443,1002,1),(1443,1078,1),(1443,1322,1),(1444,1001,1),(1444,1002,1),(1444,1012,1),(1444,1020,1),(1444,1035,1),(1444,1073,1),(1444,1078,1),(1444,1116,1),(1444,2018,1),(1444,2020,1),(1444,6012,1),(1444,6017,1),(1446,1001,1),(1446,1002,1),(1446,1012,1),(1446,1078,1),(1447,1001,1),(1447,1002,1),(1447,1078,1),(1449,1001,1),(1451,8009,1),(1451,8012,1),(1451,9016,1),(1454,25,2),(1454,26,2),(1454,27,2),(1454,28,2),(1454,72,2),(1454,1001,1),(1454,1002,1),(1454,1003,1),(1454,1007,1),(1454,1012,1),(1454,1017,1),(1454,1020,1),(1454,1021,1),(1454,1032,1),(1454,1035,1),(1454,1055,1),(1454,1073,1),(1454,1078,1),(1454,1116,1),(1454,1158,1),(1454,1164,1),(1454,1305,1),(1454,1309,1),(1454,1322,1),(1454,1329,1),(1454,1333,1),(1454,1362,1),(1454,1363,1),(1454,1383,1),(1454,2000,1),(1454,2002,1),(1454,2009,1),(1454,2011,1),(1454,2020,1),(1454,2021,1),(1454,6001,1),(1454,6002,1),(1454,6005,1),(1454,6006,1),(1454,6008,1),(1454,6009,1),(1454,6010,1),(1454,6012,1),(1454,6017,1),(1454,6018,1),(1454,6019,1),(1454,6020,1),(1454,6021,1),(1454,6022,1),(1454,6023,1),(1454,6024,1),(1454,6025,1),(1455,1001,1),(1455,1035,1),(1456,1001,1),(1456,1012,1),(1456,1017,1),(1456,1032,1),(1458,1001,1),(1459,1001,1),(1459,1002,1),(1459,1012,1),(1459,1017,1),(1459,1078,1),(1460,1001,1),(1460,1002,1),(1460,1012,1),(1460,1017,1),(1460,1078,1),(1461,1001,1),(1462,1001,1),(1462,1002,1),(1463,1001,1),(1463,1002,1),(1463,1012,1),(1463,1020,1),(1463,1035,1),(1463,6025,1),(1464,1017,1),(1467,1001,1),(1467,1002,1),(1467,1012,1),(1467,1020,1),(1467,1035,1),(1467,1073,1),(1467,6012,1),(1467,6017,1),(1476,9016,1),(1478,1001,1),(1478,1017,1),(1478,1032,1),(1478,1055,1),(1478,1073,1),(1478,1078,1),(1478,1116,1),(1478,1158,1),(1478,1164,1),(1478,1305,1),(1478,1322,1),(1478,1329,1),(1478,1362,1),(1478,2020,1),(1478,6001,1),(1478,6002,1),(1478,6005,1),(1478,6006,1),(1478,6017,1),(1478,6020,1),(1478,6022,1),(1478,6025,1),(1480,1001,1),(1481,1001,1),(1481,1002,1),(1481,1012,1),(1481,1017,1),(1481,1035,1),(1481,1073,1),(1481,1362,1),(1481,6005,1),(1482,1001,1),(1483,1001,1),(1483,1073,1),(1484,1001,1),(1484,1002,1),(1484,1007,1),(1484,1009,1),(1484,1012,1),(1484,1015,1),(1484,1017,1),(1484,1020,1),(1484,1035,1),(1484,1047,1),(1484,1073,1),(1484,1078,1),(1484,1094,1),(1484,1116,1),(1484,1325,1),(1484,1362,1),(1484,2009,1),(1484,2011,1),(1484,2018,1),(1484,2020,1),(1484,6001,1),(1484,6002,1),(1484,6005,1),(1484,6008,1),(1484,6012,1),(1484,6017,1),(1487,8012,1),(1487,9016,1),(1489,1001,1),(1490,76,2),(1490,1001,1),(1490,1002,1),(1490,1012,1),(1490,1017,1),(1490,1020,1),(1490,1023,1),(1490,1032,1),(1490,1035,1),(1490,1116,1),(1490,1164,1),(1490,1329,1),(1490,1362,1),(1490,2009,1),(1490,2011,1),(1490,2020,1),(1490,6001,1),(1490,6002,1),(1490,6005,1),(1490,6008,1),(1490,6012,1),(1490,6017,1),(1490,6018,1),(1490,6020,1),(1490,6023,1),(1490,6024,1),(1490,6025,1),(1492,1001,1),(1494,1001,1),(1495,1001,1),(1497,1001,1),(1498,1001,1),(1499,1001,1),(1499,1017,1),(1500,1013,1),(1502,1001,1),(1503,1001,1),(1503,1002,1),(1503,1012,1),(1503,1017,1),(1503,1073,1),(1503,1078,1),(1504,1001,1),(1504,1002,1),(1504,1012,1),(1504,1017,1),(1504,1073,1),(1504,1078,1),(1506,1001,1),(1508,1001,1),(1508,1012,1),(1508,1017,1),(1508,1020,1),(1508,1021,1),(1508,1032,1),(1508,1035,1),(1508,1073,1),(1508,1078,1),(1508,6001,1),(1508,6002,1),(1508,6005,1),(1508,6007,1),(1508,6017,1),(1508,6018,1),(1508,6020,1),(1508,6025,1),(1509,1001,1),(1510,1001,1),(1510,1012,1),(1510,1013,1),(1510,1017,1),(1510,1073,1),(1510,1078,1),(1510,6022,1),(1513,1001,1),(1514,1035,1),(1518,1379,1),(1518,1382,1),(1518,1383,1),(1519,1001,1),(1519,1017,1),(1519,1020,1),(1519,1073,1),(1519,6017,1),(1520,1001,1),(1520,1035,1),(1520,1078,1),(1522,1012,1),(1526,1001,1),(1530,1001,1),(1530,1020,1),(1530,1032,1),(1530,1073,1),(1530,1078,1),(1530,6002,1),(1530,6018,1),(1530,6020,1),(1530,6022,1),(1530,6025,1),(1532,1001,1),(1535,1001,1),(1535,1002,1),(1535,1017,1),(1535,1020,1),(1535,1035,1),(1535,1073,1),(1535,1078,1),(1535,6012,1),(1535,6017,1),(1536,1001,1),(1536,1020,1),(1536,1032,1),(1536,1035,1),(1536,1073,1),(1536,6017,1),(1537,1035,1),(1539,1001,1),(1539,1020,1),(1539,1035,1),(1539,1078,1),(1539,1362,1),(1540,1001,1),(1540,1035,1),(1540,1073,1),(1542,1001,1),(1542,1002,1),(1542,1012,1),(1545,1001,1),(1546,1396,1),(1546,2020,1),(1546,2027,1),(1546,8000,1),(1546,8001,1),(1546,8003,1),(1546,8006,1),(1548,1001,1),(1548,1002,1),(1548,1007,1),(1548,1012,1),(1548,1017,1),(1548,1020,1),(1548,1021,1),(1548,1032,1),(1548,1035,1),(1548,1055,1),(1548,1073,1),(1548,1116,1),(1548,1147,1),(1548,1158,1),(1548,1164,1),(1548,1200,1),(1548,1305,1),(1548,1322,1),(1548,1329,1),(1548,1353,1),(1548,1362,1),(1548,1382,1),(1548,2009,1),(1548,2020,1),(1548,6001,1),(1548,6002,1),(1548,6004,1),(1548,6005,1),(1548,6015,1),(1548,6017,1),(1548,6018,1),(1548,6020,1),(1548,6025,1),(1549,1012,1),(1549,1017,1),(1549,1020,1),(1550,1012,1),(1550,1078,1),(1550,6005,1),(1550,6025,1),(1551,1012,1),(1552,1001,1),(1552,1002,1),(1552,1007,1),(1552,1012,1),(1552,1017,1),(1552,1020,1),(1552,1021,1),(1552,1032,1),(1552,1035,1),(1552,1055,1),(1552,1073,1),(1552,1116,1),(1552,1158,1),(1552,1164,1),(1552,1200,1),(1552,1305,1),(1552,1322,1),(1552,1329,1),(1552,1362,1),(1552,1382,1),(1552,2000,1),(1552,2009,1),(1552,2020,1),(1552,6002,1),(1552,6004,1),(1552,6005,1),(1552,6015,1),(1552,6017,1),(1552,6018,1),(1552,6020,1),(1552,6025,1),(1555,1389,1),(1555,1391,1),(1555,1433,1),(1556,1001,1),(1556,1012,1),(1556,1035,1),(1556,1078,1),(1556,6017,1),(1556,6025,1),(1557,1001,1),(1561,1001,1),(1561,1012,1),(1561,1035,1),(1561,6001,1),(1561,6005,1),(1561,6017,1),(1563,1001,1),(1563,1009,1),(1563,1012,1),(1563,1032,1),(1563,1035,1),(1563,1078,1),(1563,6025,1),(1564,1001,1),(1565,1001,1),(1565,1002,1),(1565,1012,1),(1565,1017,1),(1565,1020,1),(1565,1021,1),(1565,1032,1),(1565,1035,1),(1565,1073,1),(1565,1078,1),(1565,2011,1),(1565,6001,1),(1565,6005,1),(1565,6012,1),(1565,6017,1),(1565,6020,1),(1566,1001,1),(1566,1012,1),(1566,1020,1),(1566,1032,1),(1566,1035,1),(1566,1073,1),(1566,6017,1),(1567,1001,1),(1567,1012,1),(1567,1017,1),(1567,1020,1),(1567,1032,1),(1567,1035,1),(1567,1073,1),(1567,6017,1),(1568,1001,1),(1571,1012,1),(1575,1001,1),(1576,1001,1),(1576,1002,1),(1576,1012,1),(1576,1020,1),(1576,1035,1),(1576,1073,1),(1576,6007,1),(1576,6017,1),(1577,1001,1),(1577,1002,1),(1577,1012,1),(1577,1020,1),(1577,1032,1),(1577,1035,1),(1577,1073,1),(1577,1078,1),(1577,1164,1),(1577,6012,1),(1577,6017,1),(1578,1017,1),(1578,2020,1),(1578,6017,1),(1579,1001,1),(1579,1020,1),(1579,1035,1),(1579,1073,1),(1579,6017,1),(1581,1001,1),(1581,1035,1),(1582,1001,1),(1583,1001,1),(1583,1020,1),(1583,1032,1),(1583,1035,1),(1583,1073,1),(1583,6012,1),(1583,6017,1),(1584,1001,1),(1584,1002,1),(1584,1017,1),(1584,1020,1),(1584,1032,1),(1584,1035,1),(1584,1073,1),(1584,1362,1),(1584,6001,1),(1584,6012,1),(1584,6017,1),(1585,1001,1),(1585,1020,1),(1585,1032,1),(1585,1035,1),(1585,1073,1),(1585,6012,1),(1587,1001,1),(1587,1035,1),(1587,1073,1),(1587,6017,1),(1588,1001,1),(1588,1020,1),(1588,1035,1),(1588,1073,1),(1588,6017,1),(1589,1001,1),(1589,1002,1),(1589,1017,1),(1589,1020,1),(1589,1035,1),(1589,1073,1),(1589,2009,1),(1589,6005,1),(1589,6007,1),(1589,6017,1),(1590,1001,1),(1590,1020,1),(1591,1001,1),(1591,1002,1),(1591,1012,1),(1591,1017,1),(1591,1020,1),(1591,1035,1),(1591,1073,1),(1591,6005,1),(1591,6017,1),(1592,1001,1),(1592,1020,1),(1592,1032,1),(1592,1035,1),(1592,1073,1),(1592,1078,1),(1592,6007,1),(1592,6017,1),(1593,1001,1),(1593,1035,1),(1597,1020,1),(1597,1035,1),(1597,1073,1),(1597,1362,1),(1598,1001,1),(1599,1001,1),(1599,1002,1),(1599,1003,1),(1599,1007,1),(1599,1012,1),(1599,1017,1),(1599,1020,1),(1599,1021,1),(1599,1023,1),(1599,1032,1),(1599,1035,1),(1599,1055,1),(1599,1073,1),(1599,1078,1),(1599,1116,1),(1599,1140,1),(1599,1147,1),(1599,1164,1),(1599,1322,1),(1599,1323,1),(1599,1329,1),(1599,1459,1),(1599,1460,1),(1599,1461,1),(1599,1462,1),(1599,2011,1),(1599,6001,1),(1599,6003,1),(1599,6005,1),(1599,6006,1),(1599,6008,1),(1599,6009,1),(1599,6010,1),(1599,6016,1),(1599,6017,1),(1599,6018,1),(1599,6019,1),(1599,6020,1),(1599,6022,1),(1599,6023,1),(1599,6024,1),(1599,6025,1),(1599,9100,1),(1599,9104,1),(1599,9106,1),(1600,1001,1),(1600,1035,1),(1600,6025,1),(1601,1001,1),(1601,1012,1),(1601,1017,1),(1603,1001,1),(1603,1012,1),(1603,1017,1),(1603,1020,1),(1603,1035,1),(1605,1001,1),(1605,1035,1),(1607,1001,1),(1608,1001,1),(1608,1035,1),(1608,1073,1),(1609,1001,1),(1609,1035,1),(1610,1001,1),(1610,1012,1),(1610,1035,1),(1611,1001,1),(1611,1020,1),(1611,1035,1),(1613,1001,1),(1613,1002,1),(1613,1012,1),(1613,1020,1),(1613,1035,1),(1613,1073,1),(1613,6012,1),(1613,6017,1),(1614,1001,1),(1614,1002,1),(1614,1012,1),(1614,1017,1),(1614,1035,1),(1614,1073,1),(1614,1362,1),(1614,6005,1),(1614,6025,1),(1616,1001,1),(1616,1035,1),(1618,1001,1),(1618,1035,1),(1619,1001,1),(1619,1017,1),(1619,1116,1),(1619,1146,1),(1619,1301,1),(1619,1322,1),(1619,1329,1),(1619,1362,1),(1619,1363,1),(1619,1364,1),(1619,1367,1),(1619,6001,1),(1619,6002,1),(1619,6006,1),(1619,6017,1),(1619,6018,1),(1619,6020,1),(1619,6023,1),(1619,6025,1),(1621,1001,1),(1622,1001,1),(1622,1035,1),(1622,6017,1),(1623,1001,1),(1623,1002,1),(1623,1020,1),(1623,1035,1),(1623,1073,1),(1624,1001,1),(1624,1002,1),(1624,1017,1),(1624,1020,1),(1624,1035,1),(1624,1073,1),(1624,1078,1),(1624,6012,1),(1624,6017,1),(1625,1001,1),(1625,1020,1),(1625,1032,1),(1625,1035,1),(1625,1073,1),(1626,1035,1),(1627,1001,1),(1628,1001,1),(1628,1012,1),(1628,1020,1),(1628,1032,1),(1628,1035,1),(1628,1055,1),(1628,1362,1),(1628,6002,1),(1628,6017,1),(1629,1001,1),(1629,1012,1),(1629,1017,1),(1629,1032,1),(1629,1035,1),(1629,1073,1),(1630,1001,1),(1630,1020,1),(1630,1035,1),(1631,1001,1),(1631,1002,1),(1631,1012,1),(1631,1017,1),(1631,1020,1),(1631,1035,1),(1631,1073,1),(1631,6002,1),(1631,6005,1),(1631,6012,1),(1631,6017,1),(1632,1001,1),(1632,1012,1),(1632,1017,1),(1632,1020,1),(1632,1035,1),(1632,1073,1),(1632,6017,1),(1633,1001,1),(1633,1020,1),(1633,1035,1),(1633,1073,1),(1633,1078,1),(1633,6017,1),(1635,1078,1),(1636,1001,1),(1636,1035,1),(1636,1073,1),(1637,1035,1),(1637,1073,1),(1637,1078,1),(1637,6001,1),(1638,1001,1),(1638,1020,1),(1638,1032,1),(1638,1035,1),(1638,6012,1),(1638,6017,1),(1639,1001,1),(1639,1035,1),(1639,1073,1),(1640,1007,1),(1640,1020,1),(1640,1055,1),(1640,1062,1),(1640,1078,1),(1640,1116,1),(1640,1134,1),(1640,1322,1),(1640,1329,1),(1640,1353,1),(1640,1362,1),(1640,1363,1),(1640,6002,1),(1640,6015,1),(1640,6025,1),(1641,1001,1),(1641,1012,1),(1641,1017,1),(1641,1020,1),(1641,1035,1),(1641,1073,1),(1641,6017,1),(1642,1001,1),(1644,47,2),(1644,1001,1),(1644,1002,1),(1644,1012,1),(1644,1017,1),(1644,1020,1),(1644,1035,1),(1644,1073,1),(1644,6002,1),(1644,6005,1),(1644,6008,1),(1644,6012,1),(1644,6017,1),(1645,1001,1),(1645,1012,1),(1645,1017,1),(1645,1035,1),(1645,1164,1),(1645,2020,1),(1645,6005,1),(1645,6017,1),(1645,6020,1),(1645,6025,1),(1647,1003,1),(1647,1009,1),(1647,1362,1),(1647,6021,1),(1648,1001,1),(1648,2020,1),(1648,6005,1),(1649,8009,1),(1649,8012,1),(1650,1001,1),(1650,1035,1),(1653,1001,1),(1653,1012,1),(1653,1017,1),(1653,1020,1),(1653,1032,1),(1653,1035,1),(1653,1073,1),(1653,1146,1),(1653,1158,1),(1653,1164,1),(1653,1305,1),(1653,1329,1),(1653,1362,1),(1653,1363,1),(1653,2000,1),(1653,2020,1),(1653,6001,1),(1653,6002,1),(1653,6005,1),(1653,6006,1),(1653,6010,1),(1653,6012,1),(1653,6017,1),(1653,6020,1),(1653,6023,1),(1653,6025,1),(1654,1001,1),(1654,1017,1),(1654,1020,1),(1654,1032,1),(1654,1035,1),(1654,6005,1),(1655,1017,1),(1655,6005,1),(1656,1001,1),(1656,1020,1),(1656,1035,1),(1657,1001,1),(1658,1035,1),(1658,6017,1),(1661,1002,1),(1661,1035,1),(1663,1001,1),(1663,1002,1),(1663,1003,1),(1663,1005,1),(1663,1007,1),(1663,1012,1),(1663,1013,1),(1663,1017,1),(1663,1020,1),(1663,1021,1),(1663,1032,1),(1663,1035,1),(1663,1055,1),(1663,1073,1),(1663,1078,1),(1663,1116,1),(1663,1146,1),(1663,1158,1),(1663,1164,1),(1663,1305,1),(1663,1322,1),(1663,1328,1),(1663,1329,1),(1663,1362,1),(1663,1363,1),(1663,2011,1),(1663,2020,1),(1663,6001,1),(1663,6002,1),(1663,6005,1),(1663,6006,1),(1663,6010,1),(1663,6012,1),(1663,6017,1),(1663,6018,1),(1663,6020,1),(1663,6025,1),(1664,1001,1),(1666,1001,1),(1666,1017,1),(1666,1020,1),(1666,6017,1),(1667,1001,1),(1667,1002,1),(1667,1005,1),(1667,1301,1),(1667,1305,1),(1667,1322,1),(1667,1329,1),(1667,1362,1),(1667,2020,1),(1667,6005,1),(1667,6006,1),(1668,1333,1),(1668,1362,1),(1668,1363,1),(1668,1364,1),(1668,1367,1),(1671,1001,1),(1674,6017,1),(1675,1032,1),(1675,6017,1),(1677,1001,1),(1677,1396,1),(1677,1400,1),(1677,2020,1),(1677,2021,1),(1677,2025,1),(1681,1001,1),(1681,1002,1),(1681,1012,1),(1681,1035,1),(1681,1073,1),(1681,1362,1),(1681,6005,1),(1681,6025,1),(1685,1001,1),(1685,1055,1),(1685,1116,1),(1685,1305,1),(1685,1322,1),(1685,1329,1),(1685,1353,1),(1685,1363,1),(1685,6005,1),(1685,6025,1),(1687,1012,1),(1688,1012,1),(1688,1078,1),(1688,6005,1),(1688,6025,1),(1691,1,2),(1691,1001,1),(1693,1001,1),(1693,1035,1),(1693,1362,1),(1693,2020,1),(1693,2021,1),(1693,2025,1),(1693,6005,1),(1693,6025,1),(1694,2020,1),(1694,2021,1),(1694,2022,1),(1694,2025,1),(1694,2026,1),(1694,2027,1),(1695,1001,1),(1695,1017,1),(1695,1020,1),(1695,1035,1),(1695,2009,1),(1695,2020,1),(1695,2021,1),(1695,6002,1),(1695,6005,1),(1695,6012,1),(1695,6017,1),(1695,6020,1),(1698,2020,1),(1698,2021,1),(1699,2020,1),(1700,2020,1),(1701,2020,1),(1702,2020,1),(1703,2020,1),(1703,2021,1),(1704,2020,1),(1704,2021,1),(1707,1001,1),(1707,1023,1),(1707,1409,1),(1707,1413,1),(1707,1414,1),(1707,1415,1),(1707,1429,1),(1707,2003,1),(1707,2020,1),(1707,2021,1),(1707,2022,1),(1707,2024,1),(1707,2025,1),(1707,2026,1),(1707,2027,1),(1707,6005,1),(1708,1001,1),(1708,2020,1),(1708,6005,1),(1708,6018,1),(1710,1001,1),(1710,1021,1),(1710,1433,1),(1710,2020,1),(1710,2021,1),(1710,6023,1),(1711,1001,1),(1711,2020,1),(1712,1001,1),(1712,2020,1),(1712,6005,1),(1713,1001,1),(1713,1023,1),(1713,1433,1),(1713,2003,1),(1713,2020,1),(1713,2021,1),(1713,2022,1),(1713,2025,1),(1713,2026,1),(1713,2027,1),(1713,6005,1),(1714,1001,1),(1714,1433,1),(1714,6005,1),(1715,1001,1),(1715,1430,1),(1715,1433,1),(1715,2020,1),(1717,1427,1),(1717,1428,1),(1717,1433,1),(1717,2020,1),(1717,2021,1),(1717,2026,1),(1717,2027,1),(1721,1001,1),(1721,1002,1),(1721,1007,1),(1721,1017,1),(1721,1032,1),(1721,1035,1),(1721,1073,1),(1721,1078,1),(1721,1116,1),(1721,1158,1),(1721,1164,1),(1721,1329,1),(1721,1353,1),(1721,1362,1),(1721,1363,1),(1721,1433,1),(1721,2009,1),(1721,2020,1),(1721,6002,1),(1721,6005,1),(1721,6009,1),(1721,6017,1),(1721,6018,1),(1721,6023,1),(1721,6025,1),(1721,9016,1),(1722,1001,1),(1723,2020,1),(1723,2021,1),(1724,1001,1),(1725,1001,1),(1725,1002,1),(1725,1012,1),(1725,1017,1),(1725,1032,1),(1725,1055,1),(1725,1073,1),(1725,1364,1),(1725,1405,1),(1725,1408,1),(1725,1409,1),(1725,1414,1),(1725,1415,1),(1725,1426,1),(1725,1427,1),(1725,1428,1),(1725,1429,1),(1725,1430,1),(1725,1431,1),(1725,1432,1),(1725,1433,1),(1725,1434,1),(1725,1435,1),(1725,1436,1),(1725,2020,1),(1725,2021,1),(1725,6002,1),(1725,6005,1),(1725,6017,1),(1725,6025,1),(1726,1001,1),(1726,1433,1),(1726,2020,1),(1726,2021,1),(1726,2022,1),(1726,6005,1),(1727,2020,1),(1728,2020,1),(1731,1001,1),(1731,1023,1),(1731,2020,1),(1731,2021,1),(1731,2026,1),(1731,6005,1),(1732,74,2),(1732,1001,1),(1732,1002,1),(1732,1017,1),(1732,1020,1),(1732,1023,1),(1732,1035,1),(1732,2020,1),(1732,2021,1),(1732,6002,1),(1732,6005,1),(1733,1001,1),(1733,1035,1),(1734,1001,1),(1734,1017,1),(1734,1020,1),(1734,1032,1),(1734,1035,1),(1734,6005,1),(1736,6001,1),(1743,2020,1),(1744,47,2),(1744,1001,1),(1744,1002,1),(1744,1003,1),(1744,1017,1),(1744,1055,1),(1745,1001,1),(1746,1001,1),(1746,1020,1),(1746,1035,1),(1746,1073,1),(1746,6017,1),(1747,1001,1),(1753,1001,1),(1756,1001,1),(1756,1164,1),(1756,2020,1),(1756,6017,1),(1759,2020,1),(1760,1001,1),(1760,1003,1),(1760,1433,1),(1760,2020,1),(1760,2021,1),(1760,6005,1),(1761,1001,1),(1764,1001,1),(1765,1001,1),(1765,1035,1),(1765,2020,1),(1765,6005,1),(1766,1001,1),(1766,1017,1),(1766,1032,1),(1766,1035,1),(1766,1073,1),(1766,2020,1),(1766,6002,1),(1766,6005,1),(1766,6023,1),(1767,1001,1),(1767,1012,1),(1767,1017,1),(1767,1020,1),(1767,1021,1),(1767,1032,1),(1767,1035,1),(1767,1073,1),(1767,1078,1),(1767,6001,1),(1767,6002,1),(1767,6005,1),(1767,6017,1),(1767,6018,1),(1767,6020,1),(1767,6025,1),(1768,2020,1),(1768,2021,1),(1769,1001,1),(1769,2020,1),(1769,6005,1),(1770,2020,1),(1770,2021,1),(1774,1001,1),(1774,2020,1),(1774,2021,1),(1774,2027,1),(1775,1001,1),(1775,2020,1),(1775,6005,1),(1776,1001,1),(1777,1001,1),(1777,2020,1),(1778,1001,1),(1778,2020,1),(1778,6005,1),(1780,1322,1),(1780,1323,1),(1780,1324,1),(1780,1325,1),(1780,1326,1),(1780,1327,1),(1780,1329,1),(1780,1330,1),(1780,2020,1),(1780,2021,1),(1780,2022,1),(1780,2025,1),(1780,2026,1),(1780,2027,1),(1781,1001,1),(1781,2020,1),(1782,1001,1),(1784,2020,1),(1784,2021,1),(1784,2022,1),(1784,2025,1),(1784,2026,1),(1784,2027,1),(1786,1428,1),(1786,1433,1),(1786,2020,1),(1786,2021,1),(1786,2022,1),(1786,2026,1),(1788,2020,1),(1789,1001,1),(1789,2020,1),(1789,2021,1),(1791,1001,1),(1791,1433,1),(1791,2020,1),(1792,2020,1),(1792,2021,1),(1792,2022,1),(1792,2026,1),(1794,2003,1),(1794,2021,1),(1795,2020,1),(1798,1001,1),(1804,1001,1),(1804,2020,1),(1805,1001,1),(1805,2020,1),(1805,2021,1),(1805,2026,1),(1808,2020,1),(1808,2021,1),(1810,2020,1),(1816,1001,1),(1818,1001,1),(1818,2020,1),(1818,2021,1),(1819,2020,1),(1819,2021,1),(1819,2022,1),(1819,2024,1),(1819,2025,1),(1819,2026,1),(1819,2027,1),(1820,1001,1),(1820,2020,1),(1820,2021,1),(1821,2020,1),(1824,1001,1),(1824,1023,1),(1824,2020,1),(1824,2021,1),(1825,66,2),(1825,1001,1),(1825,1023,1),(1825,1428,1),(1825,1433,1),(1825,2020,1),(1825,2021,1),(1825,2026,1),(1825,6005,1),(1826,2020,1),(1826,2021,1),(1826,2026,1),(1827,1001,1),(1827,1023,1),(1827,2020,1),(1827,2021,1),(1827,2025,1),(1827,2026,1),(1827,6005,1),(1828,1001,1),(1829,1001,1),(1829,1023,1),(1829,2020,1),(1829,6005,1),(1830,1001,1),(1830,1023,1),(1830,6005,1),(1831,2020,1),(1831,2021,1),(1831,6002,1),(1831,6005,1),(1832,1001,1),(1832,1023,1),(1832,6005,1),(1835,1001,1),(1835,1023,1),(1835,1433,1),(1835,2020,1),(1835,2021,1),(1835,6005,1),(1836,1001,1),(1836,1426,1),(1836,1428,1),(1836,1433,1),(1836,2020,1),(1836,2021,1),(1836,6005,1),(1837,1322,1),(1837,1325,1),(1837,1326,1),(1837,1329,1),(1837,2020,1),(1837,2021,1),(1838,2020,1),(1839,50,2),(1839,60,2),(1839,80,2),(1839,1001,1),(1839,1017,1),(1839,1023,1),(1839,1032,1),(1839,1035,1),(1839,1116,1),(1839,1158,1),(1839,1305,1),(1839,1322,1),(1839,1326,1),(1839,1329,1),(1839,1362,1),(1839,2021,1),(1839,2022,1),(1839,2025,1),(1839,2026,1),(1839,6002,1),(1839,6005,1),(1839,6008,1),(1839,6009,1),(1839,6017,1),(1839,6018,1),(1839,6025,1),(1840,1001,1),(1840,2020,1),(1841,1001,1),(1841,2020,1),(1841,2021,1),(1842,1001,1),(1842,2020,1),(1843,1001,1),(1844,2020,1),(1844,2021,1),(1846,2020,1),(1846,2021,1),(1848,1001,1),(1849,1001,1),(1849,2020,1),(1849,2021,1),(1850,1001,1),(1850,1012,1),(1850,1017,1),(1850,1405,1),(1850,1406,1),(1850,1407,1),(1850,1408,1),(1850,1409,1),(1850,1410,1),(1850,1414,1),(1850,1415,1),(1850,1433,1),(1850,2021,1),(1851,1001,1),(1853,2020,1),(1854,1001,1),(1854,2009,1),(1854,2010,1),(1854,2011,1),(1854,2018,1),(1854,2020,1),(1854,2021,1),(1854,2022,1),(1854,2025,1),(1854,2026,1),(1854,2027,1),(1854,6005,1),(1856,1001,1),(1856,2020,1),(1856,2021,1),(1858,2020,1),(1858,2021,1),(1858,2022,1),(1858,2025,1),(1858,2026,1),(1858,2027,1),(1861,2020,1),(1862,1001,1),(1862,1002,1),(1862,1003,1),(1862,1005,1),(1862,1006,1),(1862,1009,1),(1862,1012,1),(1862,1013,1),(1862,1017,1),(1862,1020,1),(1862,1021,1),(1862,1028,1),(1862,1032,1),(1862,1034,1),(1862,1035,1),(1862,1036,1),(1862,1038,1),(1862,1043,1),(1862,1045,1),(1862,1050,1),(1862,1055,1),(1862,1058,1),(1862,1067,1),(1862,1071,1),(1862,1073,1),(1862,1078,1),(1862,1090,1),(1862,1093,1),(1862,1109,1),(1862,1116,1),(1862,1126,1),(1862,1134,1),(1862,1140,1),(1862,1146,1),(1862,1151,1),(1862,1158,1),(1862,1164,1),(1862,1166,1),(1862,1171,1),(1862,1173,1),(1862,1174,1),(1862,1175,1),(1862,1177,1),(1862,1200,1),(1862,1301,1),(1862,1303,1),(1862,1305,1),(1862,1309,1),(1862,1311,1),(1862,1313,1),(1862,1319,1),(1862,1322,1),(1862,1326,1),(1862,1329,1),(1862,1332,1),(1862,1333,1),(1862,1343,1),(1862,1344,1),(1862,1345,1),(1862,1347,1),(1862,1353,1),(1862,1362,1),(1862,1363,1),(1862,1364,1),(1862,1365,1),(1862,1367,1),(1862,1369,1),(1862,1382,1),(1862,1383,1),(1862,1391,1),(1862,1459,1),(1862,1460,1),(1862,1461,1),(1862,1462,1),(1862,2000,1),(1862,2002,1),(1862,2009,1),(1862,2020,1),(1862,2021,1),(1862,6001,1),(1862,6002,1),(1862,6003,1),(1862,6005,1),(1862,6006,1),(1862,6007,1),(1862,6008,1),(1862,6009,1),(1862,6010,1),(1862,6012,1),(1862,6014,1),(1862,6015,1),(1862,6016,1),(1862,6017,1),(1862,6018,1),(1862,6019,1),(1862,6020,1),(1862,6021,1),(1862,6022,1),(1862,6023,1),(1862,6024,1),(1862,6025,1),(1863,2020,1),(1863,2021,1),(1863,2027,1),(1866,2020,1),(1866,2021,1),(1867,2020,1),(1867,2021,1),(1869,2020,1),(1870,1001,1),(1870,1012,1),(1870,1020,1),(1870,1032,1),(1870,1035,1),(1870,1073,1),(1870,2009,1),(1870,2020,1),(1870,2021,1),(1870,6002,1),(1870,6017,1),(1870,6018,1),(1870,6020,1),(1870,6021,1),(1870,6022,1),(1870,6023,1),(1870,6024,1),(1870,6025,1),(1871,2020,1),(1873,2020,1),(1875,2020,1),(1876,2020,1),(1876,2021,1),(1876,2026,1),(1878,2020,1),(1879,2020,1),(1879,2021,1),(1882,2020,1),(1882,2021,1),(1882,2027,1),(1884,2020,1),(1884,2021,1),(1886,2020,1),(1886,2021,1),(1886,2026,1),(1888,63,2),(1888,1001,1),(1888,2020,1),(1888,2021,1),(1892,1001,1),(1892,1002,1),(1892,1012,1),(1892,1020,1),(1892,1035,1),(1892,1073,1),(1892,6017,1),(1893,1001,1),(1893,6017,1),(1897,1001,1),(1897,1002,1),(1897,1012,1),(1897,1017,1),(1897,1020,1),(1897,1035,1),(1897,1073,1),(1897,1164,1),(1897,2010,1),(1897,2020,1),(1897,2021,1),(1897,6002,1),(1897,6005,1),(1897,6017,1),(1897,6018,1),(1897,6020,1),(1897,6023,1),(1897,6025,1),(1898,2020,1),(1899,1001,1),(1901,1001,1),(1903,1001,1),(1903,1002,1),(1904,1001,1),(1909,1001,1),(1909,1035,1),(1909,1078,1),(1909,6025,1),(1910,1001,1),(1910,1007,1),(1910,1158,1),(1910,1353,1),(1910,1363,1),(1910,1426,1),(1910,1433,1),(1912,1001,1),(1912,1002,1),(1912,1017,1),(1912,1020,1),(1912,1023,1),(1912,1035,1),(1912,2020,1),(1912,2021,1),(1912,6002,1),(1912,6005,1),(1913,1116,1),(1913,1362,1),(1914,1001,1),(1914,1002,1),(1914,1003,1),(1914,1007,1),(1914,1009,1),(1914,1012,1),(1914,1013,1),(1914,1017,1),(1914,1020,1),(1914,1021,1),(1914,1032,1),(1914,1035,1),(1914,1036,1),(1914,1055,1),(1914,1073,1),(1914,1078,1),(1914,1116,1),(1914,1140,1),(1914,1146,1),(1914,1147,1),(1914,1164,1),(1914,1171,1),(1914,1311,1),(1914,1319,1),(1914,1322,1),(1914,1329,1),(1914,1332,1),(1914,1333,1),(1914,1342,1),(1914,1344,1),(1914,1362,1),(1914,1364,1),(1914,2009,1),(1914,2011,1),(1914,2020,1),(1914,2021,1),(1914,6001,1),(1914,6002,1),(1914,6005,1),(1914,6010,1),(1914,6016,1),(1914,6017,1),(1914,6018,1),(1914,6019,1),(1914,6020,1),(1914,6022,1),(1914,6023,1),(1914,6024,1),(1914,6025,1),(1916,1001,1),(1916,1017,1),(1916,1020,1),(1916,1035,1),(1916,1073,1),(1916,6017,1),(1920,1001,1),(1920,1035,1),(1922,1001,1),(1923,1001,1),(1923,1017,1),(1923,1020,1),(1923,1032,1),(1923,1073,1),(1923,1078,1),(1923,6002,1),(1923,6012,1),(1923,6017,1),(1923,6020,1),(1925,2011,1),(1926,1001,1),(1927,1001,1),(1927,1017,1),(1927,1362,1),(1927,6001,1),(1927,6017,1),(1927,6018,1),(1927,6022,1),(1928,2027,1),(1929,6001,1),(1929,6005,1),(1929,6017,1),(1931,1001,1),(1931,1017,1),(1931,1164,1),(1933,1164,1),(1935,1001,1),(1938,76,2),(1938,81,2),(1938,89,2),(1938,1001,1),(1938,1002,1),(1938,1017,1),(1938,1020,1),(1938,1362,1),(1938,1363,1),(1938,6001,1),(1938,6002,1),(1938,6003,1),(1938,6010,1),(1938,6018,1),(1938,6022,1),(1938,6023,1),(1938,6025,1),(1939,2021,1),(1939,2026,1),(1939,2027,1),(1943,1001,1),(1943,1012,1),(1943,1017,1),(1943,1020,1),(1943,1021,1),(1943,1032,1),(1943,1035,1),(1943,1036,1),(1943,1055,1),(1943,1073,1),(1943,1078,1),(1943,1116,1),(1943,1164,1),(1943,1305,1),(1943,1322,1),(1943,1329,1),(1943,1362,1),(1943,1363,1),(1943,2020,1),(1943,6001,1),(1943,6002,1),(1943,6005,1),(1943,6006,1),(1943,6007,1),(1943,6008,1),(1943,6009,1),(1943,6010,1),(1943,6012,1),(1943,6017,1),(1943,6018,1),(1943,6020,1),(1943,6022,1),(1943,6023,1),(1943,6024,1),(1943,6025,1),(1946,1433,1),(1949,1428,1),(1953,1001,1),(1953,1002,1),(1953,1003,1),(1953,1007,1),(1953,1009,1),(1953,1012,1),(1953,1013,1),(1953,1017,1),(1953,1020,1),(1953,1021,1),(1953,1023,1),(1953,1032,1),(1953,1035,1),(1953,1055,1),(1953,1067,1),(1953,1071,1),(1953,1073,1),(1953,1078,1),(1953,1090,1),(1953,1093,1),(1953,1094,1),(1953,1116,1),(1953,1140,1),(1953,1146,1),(1953,1147,1),(1953,1151,1),(1953,1158,1),(1953,1164,1),(1953,1177,1),(1953,1200,1),(1953,1301,1),(1953,1303,1),(1953,1305,1),(1953,1322,1),(1953,1329,1),(1953,1333,1),(1953,1344,1),(1953,1362,1),(1953,1363,1),(1953,1364,1),(1953,1365,1),(1953,1459,1),(1953,1460,1),(1953,1461,1),(1953,2002,1),(1953,2009,1),(1953,2011,1),(1953,2020,1),(1953,2021,1),(1953,6001,1),(1953,6002,1),(1953,6003,1),(1953,6004,1),(1953,6005,1),(1953,6006,1),(1953,6007,1),(1953,6008,1),(1953,6009,1),(1953,6010,1),(1953,6012,1),(1953,6015,1),(1953,6016,1),(1953,6017,1),(1953,6018,1),(1953,6019,1),(1953,6020,1),(1953,6021,1),(1953,6022,1),(1953,6023,1),(1953,6024,1),(1953,6025,1),(1954,1001,1),(1954,1002,1),(1954,1003,1),(1954,1017,1),(1954,1166,1),(1954,1200,1),(1954,1414,1),(1954,6002,1),(1957,1001,1),(1958,1001,1),(1958,1002,1),(1958,1003,1),(1958,1007,1),(1958,1012,1),(1958,1013,1),(1958,1017,1),(1958,1020,1),(1958,1021,1),(1958,1023,1),(1958,1032,1),(1958,1035,1),(1958,1045,1),(1958,1055,1),(1958,1067,1),(1958,1078,1),(1958,1090,1),(1958,1093,1),(1958,1116,1),(1958,1151,1),(1958,1158,1),(1958,1177,1),(1958,1200,1),(1958,1301,1),(1958,1305,1),(1958,1322,1),(1958,1329,1),(1958,1344,1),(1958,1363,1),(1958,1364,1),(1958,1365,1),(1958,2002,1),(1958,2009,1),(1958,2011,1),(1958,2020,1),(1958,2021,1),(1958,6001,1),(1958,6002,1),(1958,6003,1),(1958,6004,1),(1958,6005,1),(1958,6006,1),(1958,6007,1),(1958,6008,1),(1958,6009,1),(1958,6010,1),(1958,6012,1),(1958,6015,1),(1958,6016,1),(1958,6017,1),(1958,6019,1),(1958,6020,1),(1958,6021,1),(1958,6022,1),(1958,6023,1),(1958,6024,1),(1958,6025,1),(1960,1001,1),(1960,1002,1),(1960,1032,1),(1961,1032,1),(1964,1001,1),(1964,1017,1),(1964,1035,1),(1964,1329,1),(1964,6002,1),(1964,6017,1),(1965,1001,1),(1965,1002,1),(1965,1012,1),(1965,1017,1),(1965,1020,1),(1965,1035,1),(1965,1090,1),(1965,1322,1),(1965,1329,1),(1965,1362,1),(1965,6001,1),(1965,6002,1),(1965,6017,1),(1969,1001,1),(1969,1146,1),(1969,1301,1),(1969,1362,1),(1969,1363,1),(1969,1364,1),(1969,1365,1),(1969,1367,1),(1969,6002,1),(1969,6017,1),(1971,1001,1),(1971,1017,1),(1971,1020,1),(1971,1055,1),(1971,2020,1),(1975,6001,1),(1975,6017,1),(1975,6018,1),(1975,6023,1),(1976,1001,1),(1976,1002,1),(1976,1003,1),(1977,1001,1),(1979,6001,1),(1982,1,2),(1983,6005,1),(1983,6006,1),(1983,6017,1),(1984,1329,1),(1984,6001,1),(1984,6002,1),(1986,1362,1),(1986,6002,1),(1988,6001,1),(1988,6002,1),(1988,6005,1),(1990,6001,1),(1990,6002,1),(1994,1001,1),(1994,1017,1),(1994,1020,1),(1994,1035,1),(1994,1073,1),(1994,6017,1),(1996,98,2),(1996,99,2),(1996,106,2),(1996,108,2),(1996,1001,1),(1996,1002,1),(1996,1003,1),(1996,1004,1),(1996,1007,1),(1996,1009,1),(1996,1011,1),(1996,1012,1),(1996,1017,1),(1996,1020,1),(1996,1021,1),(1996,1023,1),(1996,1032,1),(1996,1034,1),(1996,1035,1),(1996,1036,1),(1996,1055,1),(1996,1065,1),(1996,1067,1),(1996,1068,1),(1996,1071,1),(1996,1073,1),(1996,1116,1),(1996,1140,1),(1996,1146,1),(1996,1147,1),(1996,1148,1),(1996,1151,1),(1996,1158,1),(1996,1159,1),(1996,1164,1),(1996,1171,1),(1996,1200,1),(1996,1301,1),(1996,1305,1),(1996,1309,1),(1996,1313,1),(1996,1319,1),(1996,1322,1),(1996,1323,1),(1996,1329,1),(1996,1332,1),(1996,1333,1),(1996,1342,1),(1996,1344,1),(1996,1347,1),(1996,1353,1),(1996,1362,1),(1996,1363,1),(1996,1365,1),(1996,1383,1),(1996,1391,1),(1996,1433,1),(1996,1460,1),(1996,1461,1),(1996,1462,1),(1996,2009,1),(1996,2010,1),(1996,2011,1),(1996,2020,1),(1996,2021,1),(1996,2022,1),(1996,2025,1),(1996,2027,1),(1996,6001,1),(1996,6002,1),(1996,6003,1),(1996,6004,1),(1996,6005,1),(1996,6006,1),(1996,6008,1),(1996,6009,1),(1996,6010,1),(1996,6012,1),(1996,6015,1),(1996,6016,1),(1996,6017,1),(1996,6018,1),(1996,6019,1),(1996,6020,1),(1996,6022,1),(1996,6023,1),(1996,6024,1),(1996,6025,1),(1998,1001,1),(1999,1001,1),(1999,1002,1),(1999,1073,1),(2004,1001,1),(2004,1017,1),(2004,1032,1),(2004,1073,1),(2005,1001,1),(2005,1017,1),(2005,1073,1),(2006,1001,1),(2007,1001,1),(2008,1001,1),(2009,1001,1),(2010,8013,1),(2010,8014,1),(2011,1001,1),(2011,1032,1),(2011,1073,1),(2012,1001,1),(2018,1001,1),(2021,8013,1),(2021,8014,1),(2022,8013,1),(2022,8014,1),(2022,8016,1),(2022,8017,1),(2022,8018,1),(2023,8013,1),(2023,8014,1),(2024,8013,1),(2024,8014,1),(2024,8016,1),(2025,8013,1),(2025,8014,1),(2026,8013,1),(2026,8014,1),(2026,8016,1),(2027,8013,1),(2027,8014,1),(2028,8013,1),(2028,8014,1),(2030,1001,1),(2031,1001,1),(2031,8012,1),(2032,1001,1),(2032,6005,1),(2032,6017,1),(2032,6025,1),(2033,1001,1),(2033,1002,1),(2033,1007,1),(2033,1012,1),(2033,1017,1),(2033,1020,1),(2033,1021,1),(2033,1032,1),(2033,1055,1),(2033,1073,1),(2033,1078,1),(2033,1116,1),(2033,1146,1),(2033,1459,1),(2033,1460,1),(2033,2020,1),(2033,6001,1),(2033,6002,1),(2033,6017,1),(2033,6020,1),(2033,6022,1),(2033,6023,1),(2033,6024,1),(2033,6025,1),(2033,9106,1),(2033,9108,1),(2033,9109,1),(2033,9113,1),(2035,8012,1),(2036,1,2),(2036,1001,1),(2036,8012,1),(2039,1001,1),(2042,2020,1),(2043,1,2),(2043,1001,1),(2044,98,2),(2044,1001,1),(2044,1002,1),(2044,1003,1),(2044,1020,1),(2048,1001,1),(2048,1020,1),(2048,1116,1),(2048,1301,1),(2048,1329,1),(2048,1362,1),(2048,1363,1),(2048,6001,1),(2048,6002,1),(2048,6017,1),(2057,1001,1),(2057,1020,1),(2057,1116,1),(2057,1301,1),(2057,1329,1),(2057,1362,1),(2057,1363,1),(2057,6001,1),(2057,6002,1),(2057,6017,1),(2059,108,2),(2059,1001,1),(2059,1002,1),(2059,1003,1),(2059,1004,1),(2059,1005,1),(2059,1006,1),(2059,1007,1),(2059,1009,1),(2059,1011,1),(2059,1012,1),(2059,1013,1),(2059,1015,1),(2059,1017,1),(2059,1020,1),(2059,1021,1),(2059,1023,1),(2059,1026,1),(2059,1032,1),(2059,1034,1),(2059,1035,1),(2059,1036,1),(2059,1043,1),(2059,1055,1),(2059,1065,1),(2059,1067,1),(2059,1071,1),(2059,1072,1),(2059,1073,1),(2059,1078,1),(2059,1090,1),(2059,1093,1),(2059,1116,1),(2059,1121,1),(2059,1140,1),(2059,1146,1),(2059,1147,1),(2059,1149,1),(2059,1151,1),(2059,1158,1),(2059,1164,1),(2059,1171,1),(2059,1177,1),(2059,1200,1),(2059,1300,1),(2059,1301,1),(2059,1302,1),(2059,1303,1),(2059,1305,1),(2059,1306,1),(2059,1309,1),(2059,1322,1),(2059,1329,1),(2059,1333,1),(2059,1344,1),(2059,1353,1),(2059,1362,1),(2059,1363,1),(2059,1364,1),(2059,1365,1),(2059,1367,1),(2059,2000,1),(2059,2001,1),(2059,2002,1),(2059,2009,1),(2059,2011,1),(2059,2020,1),(2059,2021,1),(2059,2022,1),(2059,2025,1),(2059,2026,1),(2059,2027,1),(2059,6001,1),(2059,6002,1),(2059,6003,1),(2059,6004,1),(2059,6005,1),(2059,6006,1),(2059,6007,1),(2059,6008,1),(2059,6009,1),(2059,6010,1),(2059,6011,1),(2059,6012,1),(2059,6013,1),(2059,6014,1),(2059,6015,1),(2059,6016,1),(2059,6017,1),(2059,6018,1),(2059,6019,1),(2059,6020,1),(2059,6021,1),(2059,6022,1),(2059,6023,1),(2059,6024,1),(2059,6025,1),(2062,1001,1),(2062,1012,1),(2062,1017,1),(2062,1094,1),(2066,8008,1),(2066,8009,1),(2066,8012,1),(2068,1001,1),(2068,1012,1),(2068,1017,1),(2068,1094,1),(2069,1001,1),(2070,8009,1),(2070,8011,1),(2073,1001,1),(2073,1017,1),(2073,1146,1),(2073,1362,1),(2073,1459,1),(2073,1460,1),(2073,1462,1),(2073,2020,1),(2073,6002,1),(2073,6017,1),(2080,1001,1),(2080,1002,1),(2080,1009,1),(2080,1012,1),(2080,1017,1),(2080,1020,1),(2080,1032,1),(2080,1035,1),(2080,1073,1),(2080,1140,1),(2080,1146,1),(2080,1311,1),(2080,1313,1),(2080,1322,1),(2080,1329,1),(2080,1333,1),(2080,1362,1),(2080,2020,1),(2080,6001,1),(2080,6002,1),(2080,6005,1),(2080,6017,1),(2080,6018,1),(2080,6022,1),(2080,6023,1),(2080,6024,1),(2080,6025,1),(2081,1001,1),(2081,1002,1),(2081,1017,1),(2081,1020,1),(2081,1032,1),(2081,1035,1),(2081,1073,1),(2081,1146,1),(2081,1305,1),(2081,1322,1),(2081,1362,1),(2081,1460,1),(2081,2009,1),(2081,2020,1),(2081,6002,1),(2081,6003,1),(2081,6005,1),(2081,6012,1),(2081,6017,1),(2081,6018,1),(2081,6020,1),(2081,6023,1),(2081,6024,1),(2081,6025,1),(2082,1017,1),(2084,1001,1),(2084,1002,1),(2084,1003,1),(2084,1007,1),(2084,1012,1),(2084,1017,1),(2084,1020,1),(2084,1021,1),(2084,1032,1),(2084,1035,1),(2084,1073,1),(2084,1078,1),(2084,1116,1),(2084,1140,1),(2084,1164,1),(2084,1200,1),(2084,1322,1),(2084,1329,1),(2084,1362,1),(2084,1383,1),(2084,1459,1),(2084,1460,1),(2084,1461,1),(2084,1462,1),(2084,2002,1),(2084,2009,1),(2084,2011,1),(2084,2020,1),(2084,6001,1),(2084,6002,1),(2084,6003,1),(2084,6004,1),(2084,6005,1),(2084,6006,1),(2084,6007,1),(2084,6008,1),(2084,6009,1),(2084,6012,1),(2084,6017,1),(2084,6018,1),(2084,6019,1),(2084,6020,1),(2084,6022,1),(2084,6023,1),(2084,6024,1),(2084,6025,1),(2086,1001,1),(2086,1012,1),(2086,1017,1),(2086,1020,1),(2086,1035,1),(2086,1073,1),(2086,6017,1),(2086,6018,1),(2086,6020,1),(2086,6023,1),(2086,9106,1),(2087,1001,1),(2087,1002,1),(2089,1001,1),(2089,1002,1),(2090,103,2),(2090,1001,1),(2090,1002,1),(2090,1003,1),(2090,1007,1),(2090,1009,1),(2090,1012,1),(2090,1017,1),(2090,1020,1),(2090,1021,1),(2090,1032,1),(2090,1035,1),(2090,1055,1),(2090,1067,1),(2090,1071,1),(2090,1073,1),(2090,1100,1),(2090,1116,1),(2090,1140,1),(2090,1147,1),(2090,1151,1),(2090,1158,1),(2090,1164,1),(2090,1200,1),(2090,1301,1),(2090,1305,1),(2090,1319,1),(2090,1322,1),(2090,1329,1),(2090,1333,1),(2090,1344,1),(2090,1362,1),(2090,1363,1),(2090,1383,1),(2090,2011,1),(2090,2020,1),(2090,2021,1),(2090,6001,1),(2090,6002,1),(2090,6005,1),(2090,6006,1),(2090,6008,1),(2090,6017,1),(2090,6018,1),(2090,6019,1),(2090,6020,1),(2090,6022,1),(2090,6023,1),(2090,6024,1),(2090,6025,1),(2091,1001,1),(2091,1459,1),(2091,1460,1),(2091,1461,1),(2091,1462,1),(2094,1035,1),(2097,1344,1),(2098,1001,1),(2099,1001,1),(2101,1001,1),(2103,1001,1),(2103,1002,1),(2103,1009,1),(2103,1012,1),(2103,1017,1),(2103,1020,1),(2103,1032,1),(2103,1035,1),(2103,1036,1),(2103,1073,1),(2103,1146,1),(2103,1313,1),(2103,1323,1),(2103,1329,1),(2103,1362,1),(2103,2002,1),(2103,2020,1),(2103,6001,1),(2103,6002,1),(2103,6005,1),(2103,6010,1),(2103,6017,1),(2103,6018,1),(2103,6022,1),(2103,6023,1),(2103,6024,1),(2103,6025,1),(2106,1001,1),(2107,6005,1),(2108,1001,1),(2108,1078,1),(2109,1078,1),(2109,2011,1),(2109,6012,1),(2110,1001,1),(2110,1002,1),(2110,1007,1),(2110,1012,1),(2110,1017,1),(2110,1032,1),(2110,1035,1),(2110,1055,1),(2110,1116,1),(2110,1301,1),(2110,1305,1),(2110,1322,1),(2110,1459,1),(2110,1460,1),(2110,1461,1),(2110,1462,1),(2110,6005,1),(2110,6020,1),(2116,1001,1),(2116,1002,1),(2116,1012,1),(2116,1017,1),(2116,1020,1),(2116,1035,1),(2116,1073,1),(2116,1147,1),(2116,1164,1),(2116,1329,1),(2116,1362,1),(2116,1363,1),(2116,2020,1),(2116,6006,1),(2116,6017,1),(2116,6018,1),(2116,6020,1),(2116,6023,1),(2117,1001,1),(2117,6017,1),(2117,6018,1),(2118,1007,1),(2118,6002,1),(2118,6017,1),(2118,6018,1),(2119,6017,1),(2120,6017,1),(2120,6018,1),(2122,6017,1),(2122,6018,1),(2125,1001,1),(2125,1002,1),(2125,1012,1),(2125,1017,1),(2125,1032,1),(2125,1035,1),(2125,1036,1),(2125,1055,1),(2125,1073,1),(2125,1116,1),(2125,1147,1),(2125,1164,1),(2125,1322,1),(2125,1329,1),(2125,1342,1),(2125,1362,1),(2125,6002,1),(2125,6003,1),(2125,6005,1),(2125,6006,1),(2125,6017,1),(2125,6018,1),(2125,6020,1),(2125,6022,1),(2125,6025,1),(2126,1001,1),(2126,1002,1),(2126,1003,1),(2126,1007,1),(2126,1012,1),(2126,1017,1),(2126,1020,1),(2126,1032,1),(2126,1033,1),(2126,1035,1),(2126,1050,1),(2126,1073,1),(2126,1116,1),(2126,1164,1),(2126,1171,1),(2126,1313,1),(2126,1329,1),(2126,1362,1),(2126,2020,1),(2126,6002,1),(2126,6006,1),(2126,6008,1),(2126,6015,1),(2126,6017,1),(2126,6018,1),(2126,6020,1),(2126,6022,1),(2126,6023,1),(2127,1,2),(2135,1001,1),(2136,1001,1),(2136,1002,1),(2136,1003,1),(2136,1006,1),(2136,1007,1),(2136,1009,1),(2136,1012,1),(2136,1017,1),(2136,1020,1),(2136,1021,1),(2136,1032,1),(2136,1035,1),(2136,1036,1),(2136,1055,1),(2136,1073,1),(2136,1078,1),(2136,1116,1),(2136,1134,1),(2136,1140,1),(2136,1146,1),(2136,1147,1),(2136,1164,1),(2136,1200,1),(2136,1301,1),(2136,1305,1),(2136,1311,1),(2136,1315,1),(2136,1319,1),(2136,1322,1),(2136,1329,1),(2136,1332,1),(2136,1333,1),(2136,1344,1),(2136,1346,1),(2136,1362,1),(2136,1363,1),(2136,1383,1),(2136,1459,1),(2136,1460,1),(2136,1461,1),(2136,1462,1),(2136,2009,1),(2136,2020,1),(2136,6001,1),(2136,6002,1),(2136,6003,1),(2136,6005,1),(2136,6006,1),(2136,6012,1),(2136,6016,1),(2136,6017,1),(2136,6018,1),(2136,6020,1),(2136,6022,1),(2136,6023,1),(2136,6024,1),(2136,6025,1),(2136,9106,1),(2136,9109,1),(2136,9111,1),(2136,9113,1),(2136,9114,1),(2139,1001,1),(2139,1020,1),(2140,1001,1),(2140,1020,1),(2142,1001,1),(2144,1001,1),(2144,1002,1),(2144,2001,1),(2145,1001,1),(2149,1001,1),(2149,1002,1),(2149,1003,1),(2149,1005,1),(2149,1034,1),(2149,1100,1),(2151,1001,1),(2159,1001,1),(2161,1032,1),(2163,131,2),(2163,1001,1),(2163,1012,1),(2163,1017,1),(2163,1020,1),(2163,1032,1),(2163,1035,1),(2163,1073,1),(2163,1078,1),(2163,1459,1),(2163,1460,1),(2163,1461,1),(2163,9108,1),(2166,1001,1),(2168,1001,1),(2171,1001,1),(2171,1002,1),(2171,1007,1),(2171,1012,1),(2171,1017,1),(2171,1021,1),(2171,1032,1),(2171,1035,1),(2171,1073,1),(2171,1459,1),(2171,9106,1),(2171,9109,1),(2171,9113,1),(2172,1001,1),(2173,1001,1),(2173,9100,1),(2173,9106,1),(2173,9107,1),(2173,9108,1),(2173,9109,1),(2174,1459,1),(2177,1001,1),(2177,1002,1),(2178,1001,1),(2178,1002,1),(2178,1459,1),(2178,1460,1),(2178,1462,1),(2182,1001,1),(2182,1035,1),(2184,2,2),(2184,1001,1),(2184,1002,1),(2184,1003,1),(2184,1005,1),(2184,1007,1),(2184,1009,1),(2184,1012,1),(2184,1017,1),(2184,1020,1),(2184,1021,1),(2184,1032,1),(2184,1034,1),(2184,1035,1),(2184,1036,1),(2184,1044,1),(2184,1045,1),(2184,1065,1),(2184,1066,1),(2184,1071,1),(2184,1073,1),(2184,1084,1),(2184,1085,1),(2184,1093,1),(2184,1094,1),(2184,1097,1),(2184,1100,1),(2184,1101,1),(2184,1102,1),(2184,1116,1),(2184,1118,1),(2184,1147,1),(2184,1151,1),(2184,1158,1),(2184,1164,1),(2184,1171,1),(2184,1200,1),(2184,1305,1),(2184,1306,1),(2184,1322,1),(2184,1329,1),(2184,1342,1),(2184,1344,1),(2184,1362,1),(2184,1363,1),(2184,1369,1),(2184,1383,1),(2184,2011,1),(2184,2020,1),(2184,6001,1),(2184,6002,1),(2184,6003,1),(2184,6004,1),(2184,6005,1),(2184,6006,1),(2184,6008,1),(2184,6009,1),(2184,6011,1),(2184,6012,1),(2184,6015,1),(2184,6017,1),(2184,6018,1),(2184,6019,1),(2184,6020,1),(2184,6022,1),(2184,6023,1),(2184,6024,1),(2184,6025,1),(2186,1001,1),(2186,1017,1),(2186,1032,1),(2186,6017,1),(2189,1001,1),(2189,1017,1),(2191,112,2),(2191,1001,1),(2191,1002,1),(2191,1007,1),(2191,1012,1),(2191,1032,1),(2191,1035,1),(2191,1073,1),(2191,1078,1),(2191,1116,1),(2191,1140,1),(2191,1164,1),(2191,1200,1),(2191,1305,1),(2191,1322,1),(2191,1362,1),(2191,1363,1),(2191,1378,1),(2191,2020,1),(2191,6005,1),(2191,6017,1),(2191,6020,1),(2191,6022,1),(2191,6025,1),(2192,1001,1),(2192,1002,1),(2192,1020,1),(2192,1032,1),(2192,1035,1),(2192,1073,1),(2192,1301,1),(2192,6017,1),(2192,6018,1),(2192,6023,1),(2193,1001,1),(2193,1002,1),(2193,1032,1),(2193,1035,1),(2193,1073,1),(2194,1017,1),(2195,1001,1),(2195,1012,1),(2195,1013,1),(2195,1017,1),(2195,1020,1),(2195,1032,1),(2195,1035,1),(2195,1073,1),(2195,1164,1),(2195,1301,1),(2195,1362,1),(2195,1378,1),(2195,2009,1),(2195,2011,1),(2195,6005,1),(2195,6017,1),(2195,6018,1),(2195,6020,1),(2195,6022,1),(2195,6023,1),(2195,6025,1),(2196,1001,1),(2196,1035,1),(2198,1001,1),(2198,1002,1),(2198,1003,1),(2200,1001,1),(2204,1001,1),(2204,1017,1),(2204,1020,1),(2204,1032,1),(2204,1035,1),(2204,1073,1),(2204,6017,1),(2204,6025,1),(2205,1383,1),(2206,1001,1),(2206,1002,1),(2206,1012,1),(2206,1017,1),(2206,1020,1),(2206,1021,1),(2206,1032,1),(2206,1035,1),(2206,1073,1),(2206,1116,1),(2206,1460,1),(2206,6001,1),(2207,1001,1),(2207,1002,1),(2207,1003,1),(2207,1007,1),(2207,1017,1),(2207,1020,1),(2207,1032,1),(2207,1035,1),(2207,1073,1),(2207,1459,1),(2207,1460,1),(2207,1461,1),(2207,1462,1),(2207,6001,1),(2207,6010,1),(2207,6017,1),(2207,6020,1),(2207,6022,1),(2207,6023,1),(2207,6024,1),(2207,6025,1),(2208,1001,1),(2212,1001,1),(2212,1460,1),(2215,1001,1),(2215,1017,1),(2215,1164,1),(2217,1001,1),(2217,1002,1),(2221,1428,1),(2221,1433,1),(2224,1001,1),(2224,1035,1),(2225,1001,1),(2225,1012,1),(2229,1085,1),(2229,1094,1),(2229,1103,1),(2229,1107,1),(2230,1094,1),(2230,1103,1),(2230,1107,1),(2231,1001,1),(2231,1012,1),(2231,1085,1),(2231,1094,1),(2231,1103,1),(2231,1107,1),(2233,1001,1),(2236,1001,1),(2236,1362,1),(2238,1001,1),(2239,6017,1),(2240,1055,1),(2240,1073,1),(2240,1362,1),(2240,6002,1),(2240,6020,1),(2241,1001,1),(2242,1001,1),(2242,1085,1),(2242,1094,1),(2243,1094,1),(2244,1085,1),(2244,1094,1),(2244,1103,1),(2245,1085,1),(2245,1094,1),(2245,1103,1),(2247,1094,1),(2247,1103,1),(2253,1103,1),(2256,1329,1),(2261,47,2),(2261,1001,1),(2261,1002,1),(2261,1017,1),(2261,1032,1),(2261,1301,1),(2261,6020,1),(2263,1001,1),(2263,1035,1),(2266,1085,1),(2267,1094,1),(2269,1,2),(2269,1001,1),(2270,47,2),(2270,1001,1),(2270,1002,1),(2272,1459,1),(2274,1426,1),(2274,1427,1),(2274,1430,1),(2274,1431,1),(2276,1460,1),(2276,1462,1),(2278,1429,1),(2282,1459,1),(2282,1460,1),(2282,1461,1),(2282,1462,1),(2284,1001,1),(2284,1017,1),(2286,1459,1),(2286,1460,1),(2286,1462,1),(2287,1462,1),(2288,1001,1),(2292,1001,1),(2294,1002,1),(2294,1007,1),(2294,1020,1),(2294,1147,1),(2294,1158,1),(2294,1164,1),(2294,1200,1),(2294,1305,1),(2294,1322,1),(2294,1353,1),(2294,6001,1),(2294,6004,1),(2294,6005,1),(2294,6017,1),(2294,6018,1),(2294,6020,1),(2296,1460,1),(2296,1461,1),(2296,1462,1),(2303,1001,1),(2309,6018,1),(2310,1001,1),(2310,1002,1),(2310,1003,1),(2310,1007,1),(2310,1009,1),(2310,1012,1),(2310,1013,1),(2310,1017,1),(2310,1020,1),(2310,1021,1),(2310,1032,1),(2310,1035,1),(2310,1036,1),(2310,1055,1),(2310,1067,1),(2310,1071,1),(2310,1073,1),(2310,1078,1),(2310,1108,1),(2310,1116,1),(2310,1134,1),(2310,1140,1),(2310,1146,1),(2310,1147,1),(2310,1149,1),(2310,1158,1),(2310,1164,1),(2310,1171,1),(2310,1200,1),(2310,1305,1),(2310,1322,1),(2310,1329,1),(2310,1353,1),(2310,1362,1),(2310,2000,1),(2310,2002,1),(2310,2009,1),(2310,6001,1),(2310,6002,1),(2310,6005,1),(2310,6006,1),(2310,6008,1),(2310,6009,1),(2310,6012,1),(2310,6017,1),(2310,6018,1),(2310,6020,1),(2310,6022,1),(2310,6023,1),(2310,6024,1),(2310,6025,1),(2312,1001,1),(2312,1009,1),(2312,1012,1),(2312,1013,1),(2312,1017,1),(2312,1021,1),(2312,1032,1),(2312,1067,1),(2312,1158,1),(2312,1305,1),(2312,1362,1),(2312,6002,1),(2312,6004,1),(2312,6005,1),(2312,6007,1),(2312,6017,1),(2312,6020,1),(2312,6025,1),(2313,1001,1),(2324,47,2),(2324,1001,1),(2326,1001,1),(2326,2020,1),(2326,6017,1),(2329,1,2),(2329,1001,1),(2331,6014,1),(2332,1,2),(2332,1001,1),(2342,1001,1),(2345,2000,1),(2345,2001,1),(2345,2002,1),(2345,2003,1),(2345,2004,1),(2345,2005,1),(2345,2006,1),(2345,2007,1),(2345,2008,1),(2346,2000,1),(2349,1001,1),(2352,1001,1),(2358,1001,1),(2359,1001,1),(2359,1002,1),(2359,1003,1),(2359,1035,1),(2359,2002,1),(2359,6002,1),(2359,6006,1),(2362,1001,1),(2362,6017,1),(2373,1001,1);
/*!40000 ALTER TABLE `subscriptions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `themes`
--

DROP TABLE IF EXISTS `themes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `themes` (
  `id` int(11) NOT NULL,
  `dir` varchar(32) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `themes`
--

LOCK TABLES `themes` WRITE;
/*!40000 ALTER TABLE `themes` DISABLE KEYS */;
INSERT INTO `themes` VALUES (1,'default'),(2,'new');
/*!40000 ALTER TABLE `themes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_acc`
--

DROP TABLE IF EXISTS `user_acc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_acc` (
  `user_id` int(11) NOT NULL,
  `problem_id` int(11) NOT NULL,
  PRIMARY KEY (`user_id`,`problem_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_acc`
--

LOCK TABLES `user_acc` WRITE;
/*!40000 ALTER TABLE `user_acc` DISABLE KEYS */;
INSERT INTO `user_acc` VALUES (7,1001),(10,1001),(10,1002),(10,1007),(10,1010),(10,1012),(10,1013),(10,1017),(10,1020),(10,1023),(10,1032),(10,1035),(10,1043),(10,1045),(10,1050),(10,1055),(10,1056),(10,1057),(10,1062),(10,1064),(10,1065),(10,1066),(10,1067),(10,1068),(10,1069),(10,1071),(10,1072),(10,1073),(10,1074),(10,1076),(10,1078),(10,1079),(10,1084),(10,1085),(10,1087),(10,1088),(10,1090),(10,1097),(10,1098),(10,1099),(10,1102),(10,1107),(10,1108),(10,1109),(10,1116),(10,1121),(10,1123),(10,1124),(10,1127),(10,1130),(10,1133),(10,1134),(10,1140),(10,1148),(10,1149),(10,1158),(10,1160),(10,1164),(10,1165),(10,1189),(10,1192),(10,1193),(10,1197),(10,1198),(10,1200),(10,1322),(10,1323),(10,1324),(10,1325),(10,1326),(10,1327),(10,1328),(10,1329),(10,1331),(10,1332),(10,1333),(10,1336),(10,1337),(10,1338),(10,1340),(10,1341),(10,1342),(10,1343),(10,1344),(10,1345),(10,1346),(10,1347),(10,1348),(10,1349),(10,1350),(10,1351),(10,1352),(10,1353),(10,1354),(10,1359),(10,1361),(10,1362),(10,1363),(10,1364),(10,1365),(10,1367),(10,1369),(10,1387),(10,1388),(10,1389),(10,1391),(10,1393),(10,1395),(10,1396),(10,1397),(10,1400),(10,1402),(10,1404),(10,1405),(10,1408),(10,1409),(10,1414),(10,1415),(10,1416),(10,1417),(10,1418),(10,1420),(10,1422),(10,1426),(10,1428),(10,1430),(10,1433),(10,1437),(10,1438),(10,1441),(10,1443),(10,1444),(10,1446),(10,1448),(10,1455),(10,1456),(10,1457),(10,2000),(10,2001),(10,2006),(10,2008),(10,2009),(10,2010),(10,2011),(10,2012),(10,2015),(10,2016),(10,2017),(10,2018),(10,2020),(10,2021),(10,2022),(10,2023),(10,6001),(10,6002),(10,6003),(10,6005),(10,6006),(10,6007),(10,6008),(10,6009),(10,6013),(10,6017),(10,6020),(10,6022),(10,6025),(12,1001),(12,1003),(12,1005),(12,1006),(12,1007),(12,1009),(12,1011),(12,1012),(12,1013),(12,1015),(12,1017),(12,1019),(12,1020),(12,1021),(12,1023),(12,1025),(12,1027),(12,1029),(12,1031),(12,1032),(12,1033),(12,1035),(12,1037),(12,1039),(12,1041),(12,1043),(12,1044),(12,1045),(12,1046),(12,1048),(12,1050),(12,1051),(12,1052),(12,1055),(12,1057),(12,1069),(12,1071),(12,1072),(12,1073),(12,1078),(12,1079),(12,1082),(12,1084),(12,1085),(12,1087),(12,1088),(12,1135),(12,1143),(12,1158),(12,1160),(12,1171),(12,1172),(12,1174),(12,1175),(12,1177),(12,1319),(12,1322),(12,1323),(12,1324),(12,1325),(12,1326),(12,1327),(12,1328),(12,1329),(12,1331),(12,2009),(12,2011),(12,2014),(12,2018),(12,2020),(12,2021),(12,2026),(12,6002),(12,6005),(12,6020),(14,1046),(14,1064),(14,1065),(14,1066),(14,1067),(14,1068),(14,1069),(14,1079),(14,1088),(14,1090),(14,1115),(14,1200),(14,1395),(14,1396),(14,1397),(14,1404),(14,1413),(14,8000),(14,8001),(14,8003),(14,8004),(14,8005),(14,8006),(14,8007),(15,1001),(15,1013),(15,1094),(15,1107),(16,1106),(16,1107),(16,1108),(16,1109),(16,1116),(16,1120),(16,1121),(16,1123),(16,1126),(16,1127),(16,1130),(16,1132),(16,1140),(16,1146),(16,1147),(16,1148),(16,1149),(16,1151),(16,1152),(16,1153),(16,1155),(16,1156),(16,2007),(19,1001),(19,1002),(20,1001),(21,6002),(22,1001),(22,1069),(22,1090),(22,1200),(22,2020),(22,2021),(22,2026),(22,2027),(22,9017),(22,9020),(22,9022),(23,1001),(23,1002),(23,1003),(23,1006),(23,1007),(23,1009),(23,1012),(23,1013),(23,1017),(23,1020),(23,1021),(23,1023),(23,1026),(23,1032),(23,1035),(23,1045),(23,1055),(23,1057),(23,1071),(23,1072),(23,1073),(23,1078),(23,1085),(23,1087),(23,1088),(23,1090),(23,1094),(23,1098),(23,1107),(23,1109),(23,1116),(23,1121),(23,1123),(23,1146),(23,1147),(23,1149),(23,1151),(23,1153),(23,1158),(23,1164),(23,1166),(23,1171),(23,1172),(23,1173),(23,1174),(23,1175),(23,1177),(23,1200),(23,1311),(23,1313),(23,1315),(23,1316),(23,1319),(23,1328),(23,1329),(23,2002),(23,2003),(23,2009),(23,2011),(23,2018),(23,6001),(23,6002),(23,6003),(23,6004),(23,6005),(23,6006),(23,6007),(23,6008),(23,6009),(23,6010),(23,6011),(23,6012),(23,6014),(23,6015),(23,6016),(23,6017),(23,6018),(23,6019),(23,6020),(23,6021),(23,6022),(23,6023),(23,6024),(23,6025),(23,8000),(23,8001),(23,8003),(23,8006),(23,9000),(23,9001),(23,9002),(23,9003),(23,9006),(24,1001),(24,1013),(24,1062),(24,1069),(24,1075),(24,1084),(24,1087),(24,1091),(24,1143),(24,1145),(24,1166),(24,1167),(24,1171),(24,1172),(24,1173),(24,1174),(24,1175),(24,1177),(24,1178),(24,1179),(24,1180),(24,1201),(24,1300),(24,1301),(24,1303),(24,1305),(24,1307),(24,1308),(24,1309),(24,1310),(24,1311),(24,1313),(24,1315),(24,1316),(24,1319),(24,1322),(24,1323),(24,1324),(24,1325),(24,1326),(24,1327),(24,1329),(24,1330),(24,1353),(24,2006),(24,2011),(24,2013),(24,6001),(24,6002),(24,6003),(24,6004),(24,6005),(24,6006),(24,6007),(24,6008),(24,6010),(24,6011),(24,6012),(24,6013),(24,6014),(24,6015),(24,6016),(24,6017),(24,6018),(24,6019),(24,6020),(24,6021),(24,6022),(24,6023),(24,6024),(24,6025),(25,1001),(25,1002),(25,1003),(25,1004),(25,1005),(25,1006),(25,1007),(25,1009),(25,1012),(25,1013),(25,1015),(25,1017),(25,1020),(25,1021),(25,1023),(25,1026),(25,1029),(25,1032),(25,1034),(25,1035),(25,1043),(25,1055),(25,1073),(25,1078),(25,1090),(25,1116),(25,1146),(25,1158),(25,1164),(25,2000),(25,2001),(25,2002),(25,2011),(25,6005),(25,6018),(25,6020),(25,6021),(25,6022),(25,6023),(25,6024),(25,6025),(30,1058),(30,1116),(30,1121),(30,1123),(30,1124),(30,1126),(33,1013),(33,1107),(33,1116),(36,1001),(36,1002),(36,1003),(36,1020),(36,1045),(36,1078),(36,1093),(36,1146),(36,1164),(36,6003),(36,6022),(36,6023),(38,1001),(38,1002),(38,1020),(38,1032),(38,1035),(38,1078),(38,1130),(38,1146),(38,1149),(38,1151),(38,1164),(38,1171),(38,1174),(38,1177),(38,2018),(38,6001),(38,6002),(38,6003),(38,6005),(38,6006),(38,6007),(38,6008),(38,6009),(38,6015),(38,6017),(38,6018),(38,6019),(38,6020),(38,6021),(38,6022),(38,6023),(38,6024),(38,6025),(40,1001),(40,1032),(40,6001),(40,6002),(40,6005),(42,1001),(42,1085),(42,1094),(42,1103),(42,1107),(42,8013),(42,8014),(42,8016),(44,1020),(44,1155),(44,1332),(44,1333),(44,1334),(44,1335),(44,1336),(44,1337),(44,1338),(44,1339),(44,1340),(44,1341),(44,1342),(44,1343),(44,1344),(44,1345),(44,1346),(44,1347),(44,1348),(44,1349),(44,1350),(44,1351),(44,1352),(44,1353),(44,1354),(44,1355),(44,1356),(44,1358),(44,1359),(44,1361),(44,1362),(44,1363),(44,1364),(44,1365),(44,1366),(44,1367),(44,1368),(44,1369),(44,2004),(45,1001),(45,1361),(46,1001),(46,1002),(46,1012),(46,1015),(46,1017),(46,1020),(46,1023),(46,1032),(46,1066),(46,1078),(46,1164),(46,1325),(46,6013),(46,6018),(46,6019),(46,6021),(46,6023),(47,1001),(47,1002),(47,1003),(47,1007),(47,1009),(47,1012),(47,1013),(47,1017),(47,1020),(47,1021),(47,1025),(47,1032),(47,1035),(47,1038),(47,1055),(47,1158),(47,2000),(47,2002),(47,2003),(47,2025),(47,2026),(47,6004),(47,6008),(47,6009),(47,6018),(47,6024),(47,6025),(48,1001),(48,1002),(48,1003),(48,1005),(48,1007),(48,1009),(48,1012),(48,1017),(48,1020),(48,1021),(48,1023),(48,1032),(48,1035),(48,1036),(48,1038),(48,1055),(48,1071),(48,1073),(48,1078),(48,1094),(48,1116),(48,1146),(48,1147),(48,1158),(48,1164),(48,1177),(48,1200),(48,1301),(48,1305),(48,1329),(48,1362),(48,2000),(48,2002),(48,2009),(48,2011),(48,2018),(48,2020),(48,2021),(48,2022),(48,2023),(48,2024),(48,2025),(48,2026),(48,2027),(48,6001),(48,6002),(48,6003),(48,6004),(48,6005),(48,6006),(48,6007),(48,6008),(48,6009),(48,6010),(48,6012),(48,6015),(48,6016),(48,6017),(48,6018),(48,6019),(48,6020),(48,6021),(48,6022),(48,6023),(48,6024),(48,6025),(48,9016),(49,1001),(49,1002),(49,1007),(49,1012),(49,1013),(49,1015),(49,1017),(49,1023),(49,1032),(49,1035),(49,1073),(49,1078),(49,1094),(49,1134),(49,1164),(49,1200),(49,1325),(49,1362),(49,2009),(49,2011),(49,6002),(49,6004),(49,6005),(49,6016),(49,6017),(49,6022),(49,6024),(49,6025),(52,1001),(52,2009),(52,2010),(52,2011),(52,2018),(54,1001),(54,1002),(55,1013),(56,1013),(56,1107),(57,1013),(57,1107),(58,1013),(58,1107),(59,1001),(59,1013),(59,1032),(59,1035),(59,1107),(59,6002),(59,6007),(59,6018),(59,6020),(59,6025),(60,8008),(60,8009),(60,8011),(60,8012),(60,9016),(62,1001),(62,1013),(62,1107),(63,1013),(63,1107),(66,1001),(71,1013),(72,1013),(72,1107),(73,1001),(73,1013),(73,1032),(73,1073),(73,1107),(73,6025),(74,1001),(74,1013),(74,1107),(76,1001),(77,1013),(77,1107),(79,1013),(79,1107),(80,1013),(80,1107),(81,1013),(81,1107),(83,1013),(85,1013),(85,1107),(86,1013),(87,1013),(88,1013),(88,1107),(90,1013),(90,1107),(91,1001),(92,1013),(92,1107),(93,1013),(93,1107),(94,1001),(94,1013),(96,1001),(96,1002),(96,1013),(96,1107),(98,1013),(99,1013),(99,1107),(101,1043),(101,1045),(101,1055),(101,1064),(101,1065),(101,1067),(101,1068),(101,1084),(101,1087),(101,1088),(101,1090),(101,1093),(101,1094),(102,1001),(102,1012),(103,1001),(103,1002),(103,1003),(103,1043),(103,1045),(103,1050),(103,1057),(103,1071),(103,1073),(103,1078),(103,1085),(103,1087),(103,1090),(103,1094),(103,1103),(103,1107),(103,6001),(103,6002),(103,6004),(103,6005),(103,6006),(103,6007),(103,6008),(103,6009),(104,1001),(105,1001),(105,1023),(105,2003),(105,6005),(106,1001),(107,1013),(109,1001),(110,1001),(111,1001),(111,1002),(111,1003),(111,1012),(111,1013),(111,1017),(111,1020),(111,1021),(111,1032),(111,1073),(111,1078),(111,6005),(112,1001),(112,1013),(113,1001),(113,1013),(113,1107),(117,1001),(117,1002),(117,1003),(117,1004),(117,1005),(117,1006),(117,1007),(117,1012),(117,1013),(117,1017),(117,1021),(117,1024),(117,1025),(117,1026),(117,1032),(117,1035),(117,1043),(117,1067),(117,1073),(117,1084),(117,1085),(117,1087),(117,1090),(117,1093),(117,6002),(117,6005),(117,6018),(117,6019),(117,6021),(117,6023),(117,6024),(117,6025),(126,1055),(126,1057),(126,1062),(127,1065),(127,2022),(130,1013),(130,1107),(131,1013),(133,1013),(133,1107),(134,1013),(137,1001),(137,1002),(137,1017),(137,6017),(139,1001),(140,1001),(140,1134),(140,1200),(140,1319),(141,1001),(141,1020),(141,1065),(141,1067),(142,1058),(144,1001),(144,1032),(145,1002),(145,1078),(145,1087),(145,2001),(145,2009),(148,1001),(424,1001),(428,1001),(428,1073),(428,1116),(428,1118),(428,1121),(428,1123),(428,1126),(428,1147),(428,1149),(428,1151),(430,1001),(431,1001),(431,1073),(431,2000),(431,2002),(432,1001),(432,2002),(433,1001),(433,1017),(433,1020),(433,1032),(433,1073),(433,2000),(433,2002),(434,1001),(436,1090),(436,1093),(436,1094),(436,1096),(436,1098),(436,1099),(436,1101),(436,1102),(436,1103),(436,1107),(436,1108),(436,1109),(436,1115),(436,1116),(436,1118),(436,1121),(436,1123),(436,1124),(436,1126),(436,1127),(436,1130),(436,1132),(436,1133),(436,1134),(436,1139),(436,1140),(436,1144),(436,1146),(436,1147),(436,1148),(436,1149),(436,1150),(436,1151),(436,1152),(436,1153),(436,1155),(436,1158),(436,1160),(436,1164),(436,1165),(436,2000),(436,2001),(436,2002),(436,2003),(436,2006),(436,2008),(436,2020),(436,2021),(436,2022),(436,2024),(436,2025),(436,2026),(436,2027),(437,1001),(437,1073),(437,2000),(437,2018),(437,2021),(438,2002),(439,1108),(439,2000),(439,2002),(440,1001),(440,1116),(440,1121),(440,1123),(440,1124),(440,1126),(441,2000),(442,2000),(442,2002),(442,2003),(444,1001),(444,1073),(444,2000),(444,2002),(445,2000),(445,2001),(445,2002),(445,2003),(445,2005),(445,2006),(445,2007),(445,2008),(446,2000),(446,2002),(447,2000),(447,2002),(448,2000),(448,2002),(449,2000),(451,2000),(453,1001),(454,1001),(456,2000),(457,1001),(457,1134),(457,2000),(460,2000),(460,2002),(461,2000),(463,1001),(463,1032),(463,1073),(466,1001),(466,1073),(466,2000),(466,2002),(466,2003),(467,1106),(467,1107),(467,1108),(467,1109),(467,1112),(467,1116),(467,1118),(467,1121),(467,1123),(467,1124),(467,1126),(467,1139),(467,1140),(467,1146),(467,2001),(468,2000),(468,2002),(478,1001),(478,1433),(478,2000),(478,2002),(478,2020),(478,2021),(478,2025),(478,2026),(478,6005),(480,2000),(481,2000),(482,1001),(482,1073),(482,1132),(482,1134),(482,1139),(482,1140),(482,1146),(482,1158),(482,1164),(482,2000),(482,2002),(482,2003),(483,2000),(483,2002),(484,2002),(485,1001),(485,1073),(485,2000),(485,2002),(485,2003),(486,1001),(486,2000),(486,2002),(488,1001),(489,1001),(489,1012),(489,1017),(489,1032),(489,1035),(489,1078),(489,1158),(489,1164),(489,2000),(489,6005),(489,6017),(489,6020),(489,6023),(490,1001),(491,1001),(491,1073),(491,2000),(491,2002),(493,1001),(493,1073),(494,2000),(494,2002),(495,1001),(495,2002),(497,1001),(497,1017),(497,1073),(497,1129),(497,1134),(497,1135),(497,1140),(497,1146),(497,1147),(497,1149),(497,1151),(497,1158),(497,1174),(497,1177),(497,2000),(497,2002),(498,1001),(500,1001),(502,1001),(502,2000),(502,2002),(503,1001),(503,2000),(505,1001),(505,1073),(505,1127),(505,1140),(505,1144),(505,1146),(505,2000),(505,2001),(505,2002),(505,2003),(505,2006),(505,2008),(508,1001),(508,1073),(509,1001),(511,1001),(511,1073),(511,2000),(511,2002),(512,1001),(512,2000),(512,2002),(512,2004),(513,1001),(515,1001),(515,1017),(515,1073),(515,2000),(515,2002),(516,1001),(516,2000),(517,2000),(518,1001),(518,1073),(520,1001),(520,1002),(520,1003),(520,1005),(520,1007),(520,1009),(520,1011),(520,1012),(520,1013),(520,1017),(520,1020),(520,1021),(520,1023),(520,1032),(520,1034),(520,1035),(520,1036),(520,1055),(520,1065),(520,1067),(520,1071),(520,1073),(520,1078),(520,1093),(520,1116),(520,1121),(520,1140),(520,1146),(520,1147),(520,1149),(520,1151),(520,1158),(520,1164),(520,1171),(520,1174),(520,1175),(520,1177),(520,1200),(520,1301),(520,1303),(520,1305),(520,1309),(520,1311),(520,1313),(520,1319),(520,1322),(520,1323),(520,1329),(520,1332),(520,1333),(520,1342),(520,1343),(520,1344),(520,1353),(520,1362),(520,1363),(520,1364),(520,1365),(520,1367),(520,1382),(520,1383),(520,1433),(520,2000),(520,2002),(520,2009),(520,2010),(520,2011),(520,2016),(520,2020),(520,2021),(520,6001),(520,6002),(520,6003),(520,6004),(520,6005),(520,6006),(520,6007),(520,6008),(520,6009),(520,6010),(520,6012),(520,6013),(520,6014),(520,6015),(520,6016),(520,6017),(520,6018),(520,6019),(520,6020),(520,6021),(520,6022),(520,6023),(520,6024),(520,6025),(522,2000),(522,2002),(523,1001),(523,1073),(523,1106),(523,1107),(523,1108),(523,1109),(523,1116),(523,1118),(523,1121),(523,1123),(523,1124),(523,1126),(523,1130),(523,1132),(523,1133),(523,1134),(523,1139),(523,1140),(523,1145),(523,1146),(523,1158),(523,1164),(523,1165),(523,2000),(523,2002),(523,6002),(523,6025),(524,1001),(524,1073),(524,1134),(524,1135),(524,2000),(524,2002),(524,6019),(527,1001),(528,1001),(528,2000),(530,1001),(530,1073),(531,1001),(531,1073),(533,2000),(533,2002),(534,2000),(534,2001),(534,2002),(535,1001),(535,2002),(536,2002),(537,2000),(537,2002),(539,1001),(539,2000),(541,2000),(541,2002),(542,1001),(542,2000),(542,2002),(543,1001),(543,1073),(543,2000),(543,2002),(544,1001),(546,1001),(546,1073),(546,2000),(546,2001),(546,2002),(546,2003),(546,2006),(546,2007),(548,1001),(548,2000),(548,2002),(548,2006),(549,1001),(549,1073),(549,1078),(550,1001),(550,1073),(550,1098),(550,1106),(550,1108),(550,1109),(550,1116),(550,1121),(550,1123),(550,1126),(550,1140),(550,1145),(550,1146),(550,2000),(550,2001),(550,2002),(550,2003),(550,2006),(551,2000),(551,2002),(552,1001),(552,1137),(552,1139),(552,1140),(552,1146),(552,2000),(552,2001),(552,2002),(552,2003),(552,2005),(552,2006),(553,1073),(553,1106),(553,1107),(553,1108),(553,1109),(553,1112),(553,1116),(553,1121),(553,1123),(553,1124),(553,1126),(553,1138),(553,1139),(553,1140),(553,1146),(553,1147),(553,1148),(553,1149),(553,1151),(553,1152),(553,1153),(553,2000),(553,2001),(553,2002),(553,2003),(553,2006),(553,2008),(554,1073),(554,1090),(554,1093),(554,1094),(554,1102),(554,1108),(554,1109),(554,1116),(554,1121),(554,1301),(554,1305),(554,1309),(554,2000),(554,2002),(554,8013),(554,8014),(554,8016),(554,8017),(554,8018),(554,9000),(554,9001),(554,9002),(554,9003),(554,9005),(554,9006),(554,9007),(555,2000),(555,2002),(556,1001),(556,1023),(556,1073),(556,1108),(556,1109),(556,1116),(556,1121),(556,1123),(556,1126),(556,1147),(556,1148),(556,1149),(556,1151),(556,1153),(556,1455),(556,1456),(556,2000),(556,2002),(556,2003),(556,2009),(556,2010),(556,2011),(556,2014),(556,2016),(556,2018),(556,2020),(556,2021),(556,2022),(556,2026),(556,2027),(556,6005),(557,1090),(557,1091),(557,1093),(557,1094),(557,1096),(557,1097),(557,1098),(557,1101),(557,1102),(557,1103),(557,1107),(557,1108),(557,1109),(557,1116),(557,1118),(557,1120),(557,1121),(557,1123),(557,1124),(557,1126),(557,1127),(557,1130),(557,1132),(557,1134),(557,1139),(557,1140),(557,1146),(557,1147),(557,1148),(557,1149),(557,1150),(557,1151),(557,1153),(557,1158),(557,1160),(557,1164),(557,1165),(557,2000),(557,2001),(557,2002),(557,2003),(557,2006),(557,2008),(559,1001),(559,2002),(561,1001),(561,1073),(561,2002),(562,1001),(562,1073),(562,2002),(562,6019),(563,1001),(563,1073),(563,2000),(563,2002),(563,2006),(567,1045),(567,1328),(567,2006),(567,2008),(567,6003),(567,6004),(567,6005),(567,6018),(568,2000),(568,2002),(568,2003),(569,1001),(573,1158),(573,1164),(576,1001),(576,1023),(576,1127),(576,2009),(576,2010),(576,2011),(576,6005),(577,1001),(580,1001),(584,2020),(590,1001),(590,2002),(592,1001),(592,1073),(596,1001),(596,2000),(596,2002),(601,1001),(608,1001),(608,2000),(608,2002),(611,1134),(611,1135),(612,1001),(612,1362),(612,2000),(612,2020),(614,1001),(616,1001),(621,1013),(623,2021),(623,2025),(624,1001),(624,1005),(624,1009),(625,1013),(629,1001),(630,1001),(630,1002),(630,1003),(630,1004),(630,1005),(630,1006),(630,1007),(630,1008),(630,1009),(630,1011),(630,1012),(630,1013),(630,1017),(630,1020),(630,1023),(630,1026),(630,1032),(630,1034),(630,1035),(630,1043),(630,1045),(630,1055),(630,1065),(630,1067),(630,1069),(630,1071),(630,1072),(630,1073),(630,1079),(630,1087),(630,1088),(630,1090),(630,1094),(630,1097),(630,1098),(630,1102),(630,1107),(630,1108),(630,1109),(630,1116),(630,1121),(630,1123),(630,1130),(630,1139),(630,1140),(630,1146),(630,1147),(630,1148),(630,1149),(630,1151),(630,1153),(630,1158),(630,1164),(630,1166),(630,1174),(630,1177),(630,1200),(630,1322),(630,1323),(630,1324),(630,1328),(630,1329),(630,1348),(630,1382),(630,1383),(630,2000),(630,2001),(630,2002),(630,2003),(630,2005),(630,2006),(630,2008),(630,2009),(630,2010),(630,2011),(630,2014),(630,2018),(630,6001),(630,6002),(630,6003),(630,6004),(630,6005),(630,6006),(630,6007),(630,6008),(630,6009),(630,6010),(630,6011),(630,6012),(630,6013),(630,6014),(630,6015),(630,6016),(630,6017),(630,6018),(630,6019),(630,6020),(630,6021),(630,6022),(630,6023),(630,6024),(630,6025),(630,8008),(630,8009),(630,8010),(630,8011),(630,8012),(630,8019),(630,9000),(630,9001),(630,9002),(630,9003),(630,9005),(630,9006),(630,9007),(630,9016),(633,6001),(633,6002),(633,6005),(633,6008),(633,6009),(633,6012),(633,6017),(633,6018),(633,6019),(633,6020),(633,6022),(633,6023),(633,6024),(633,6025),(635,1001),(635,1002),(635,1003),(635,1006),(635,1007),(635,1009),(635,1012),(635,1013),(635,1017),(635,1020),(635,1021),(635,1032),(635,1035),(635,1043),(635,1055),(635,1071),(635,1073),(635,1078),(635,1090),(635,1139),(635,1140),(635,1177),(635,1309),(635,1313),(635,1315),(635,1319),(635,1322),(635,1329),(635,2009),(635,2011),(635,2020),(635,2021),(635,6001),(635,6002),(635,6003),(635,6005),(635,6006),(635,6008),(635,6009),(635,6010),(635,6011),(635,6012),(635,6017),(635,6020),(635,6021),(635,6022),(635,6023),(635,6024),(635,6025),(636,1001),(636,6001),(636,6002),(636,6003),(636,6005),(636,6006),(636,6008),(636,6009),(636,6010),(636,6017),(636,6018),(636,6020),(636,6022),(636,6023),(636,6024),(636,6025),(637,1001),(640,1001),(641,1001),(641,1382),(641,6001),(641,6002),(641,6003),(641,6004),(641,6005),(641,6006),(641,6007),(641,6008),(641,6009),(641,6010),(641,6011),(641,6012),(641,6013),(641,6015),(641,6016),(641,6017),(641,6018),(641,6019),(641,6020),(641,6021),(641,6022),(641,6023),(641,6024),(641,6025),(641,9017),(641,9031),(641,9032),(642,1043),(642,1045),(642,1322),(642,1324),(642,1325),(642,1326),(642,1329),(642,2020),(642,2021),(642,2027),(643,1001),(643,6001),(643,6002),(643,6005),(643,6006),(643,6008),(643,6017),(643,6020),(643,6022),(643,6023),(645,1013),(646,1139),(646,1140),(646,1144),(646,1146),(648,1001),(649,1001),(649,1017),(651,1116),(651,1121),(651,1124),(652,1116),(652,1121),(652,1123),(652,1124),(652,1126),(653,1116),(653,1121),(653,1123),(653,1124),(653,1126),(655,1001),(656,1001),(656,1002),(656,1003),(656,1004),(656,1005),(656,1006),(656,1007),(656,1009),(656,1011),(656,1012),(656,1013),(656,1017),(656,1020),(656,1021),(656,1023),(656,1026),(656,1028),(656,1032),(656,1034),(656,1035),(656,1036),(656,1043),(656,1045),(656,1050),(656,1055),(656,1057),(656,1065),(656,1067),(656,1069),(656,1071),(656,1072),(656,1073),(656,1075),(656,1076),(656,1077),(656,1078),(656,1084),(656,1087),(656,1088),(656,1090),(656,1091),(656,1093),(656,1094),(656,1098),(656,1107),(656,1108),(656,1116),(656,1134),(656,1143),(656,1146),(656,1147),(656,1149),(656,1151),(656,1158),(656,1164),(656,1171),(656,1172),(656,1174),(656,1175),(656,1177),(656,1200),(656,1301),(656,1303),(656,1305),(656,1307),(656,1309),(656,1310),(656,1311),(656,1313),(656,1315),(656,1316),(656,1319),(656,1322),(656,1324),(656,1325),(656,1326),(656,1327),(656,1329),(656,1332),(656,1337),(656,1338),(656,1339),(656,1345),(656,1346),(656,1352),(656,1353),(656,1354),(656,1362),(656,1363),(656,1364),(656,1365),(656,1367),(656,1378),(656,1380),(656,2000),(656,2002),(656,2006),(656,2009),(656,2011),(656,2013),(656,6001),(656,6002),(656,6003),(656,6004),(656,6005),(656,6006),(656,6007),(656,6008),(656,6009),(656,6010),(656,6011),(656,6012),(656,6013),(656,6014),(656,6015),(656,6016),(656,6017),(656,6018),(656,6019),(656,6020),(656,6021),(656,6022),(656,6023),(656,6024),(656,6025),(656,9000),(656,9005),(656,9011),(656,9016),(656,9017),(656,9018),(656,9020),(656,9021),(656,9022),(656,9032),(657,1001),(657,1043),(657,1045),(657,1073),(657,1090),(657,1311),(657,1383),(657,2011),(657,6001),(657,6002),(657,6003),(657,6004),(657,6005),(657,6017),(657,6018),(657,6020),(657,6023),(657,6025),(658,1013),(658,1107),(665,1001),(665,1013),(668,1001),(668,1002),(668,1003),(668,1007),(668,1012),(668,1017),(668,1020),(668,1021),(668,1032),(668,1035),(668,1055),(668,1073),(668,1078),(668,1090),(668,1158),(668,1174),(668,1200),(668,6002),(668,6005),(668,6006),(668,6008),(668,6009),(668,6017),(668,6018),(668,6020),(668,6022),(668,6023),(668,6025),(671,1171),(671,6003),(671,6010),(671,6012),(671,6015),(671,6017),(671,6020),(671,6023),(671,6025),(675,1001),(675,1017),(679,1001),(680,1147),(680,1149),(680,1150),(680,1151),(680,1152),(680,1153),(686,1001),(686,1003),(686,1006),(686,1007),(686,1009),(686,1013),(686,1017),(686,1021),(686,1023),(686,1026),(686,1028),(686,1032),(686,1034),(686,1043),(686,1050),(686,1055),(686,1057),(686,1067),(686,1071),(686,1072),(686,1073),(686,1077),(686,1084),(686,1087),(686,1090),(686,1093),(686,1146),(686,1158),(686,1164),(686,1172),(686,1301),(686,1305),(686,1309),(686,1352),(686,1353),(686,1354),(686,6001),(686,6002),(686,6003),(686,6005),(686,6006),(686,6007),(686,6008),(686,6010),(686,6012),(686,6016),(686,6017),(686,6018),(686,6020),(686,6023),(686,6024),(686,6025),(686,9000),(686,9017),(686,9022),(686,9032),(689,1013),(690,1001),(690,1002),(690,2020),(690,2021),(690,6001),(690,6002),(690,6003),(690,6005),(690,6006),(690,6007),(690,6008),(690,6010),(690,6012),(690,6017),(690,6020),(694,1001),(694,6001),(694,6002),(694,6003),(694,6005),(694,6006),(694,6008),(694,6012),(694,6017),(694,6018),(694,6020),(694,6025),(695,1164),(695,6002),(696,1001),(696,6003),(696,6005),(696,6006),(696,6017),(696,6020),(696,6022),(696,6023),(699,1001),(699,6001),(699,6017),(704,1147),(704,2009),(704,6017),(704,6020),(706,1001),(707,1001),(707,1009),(707,1012),(707,1017),(707,1020),(707,1021),(707,1035),(707,1073),(707,6001),(707,6002),(707,6005),(707,6006),(707,6008),(707,6017),(707,6020),(712,1001),(713,1001),(716,6005),(716,6015),(716,6017),(716,6018),(716,6020),(717,1001),(718,6017),(721,1001),(721,1002),(721,1003),(721,1006),(721,1007),(721,1011),(721,1012),(721,1017),(721,1020),(721,1021),(721,1032),(721,1035),(721,1045),(721,1073),(721,1078),(721,1116),(721,1146),(721,1147),(721,2011),(721,6001),(721,6002),(721,6003),(721,6005),(721,6006),(721,6007),(721,6008),(721,6009),(721,6017),(721,6018),(721,6019),(721,6020),(721,6022),(721,6023),(721,6024),(721,6025),(723,1001),(725,1001),(725,1002),(725,1032),(725,1078),(725,6003),(725,6017),(726,1001),(726,1002),(726,1007),(726,1012),(726,1013),(726,1017),(726,1020),(726,1021),(726,1035),(726,1055),(726,1073),(726,1078),(726,1090),(726,1151),(726,1164),(726,1200),(726,1301),(726,1305),(726,1309),(726,2011),(726,6001),(726,6002),(726,6003),(726,6005),(726,6006),(726,6008),(726,6009),(726,6010),(726,6017),(726,6018),(726,6022),(726,6023),(726,6024),(726,6025),(726,9000),(726,9001),(726,9002),(726,9003),(727,1001),(727,1002),(727,1003),(727,1007),(727,1012),(727,1017),(727,1021),(727,1032),(727,1073),(727,1078),(727,1087),(727,1116),(727,1123),(727,1146),(727,1147),(727,1164),(727,6002),(727,6005),(727,6006),(727,6008),(727,6012),(727,6017),(727,6020),(727,6022),(727,6023),(727,6024),(727,6025),(728,1001),(728,1002),(728,1003),(728,1005),(728,1006),(728,1007),(728,1012),(728,1013),(728,1017),(728,1020),(728,1021),(728,1023),(728,1032),(728,1034),(728,1035),(728,1045),(728,1055),(728,1065),(728,1073),(728,1078),(728,1085),(728,1090),(728,1116),(728,1130),(728,1149),(728,1151),(728,1158),(728,1164),(728,1166),(728,1171),(728,1172),(728,1173),(728,1174),(728,1175),(728,1177),(728,1200),(728,1311),(728,1325),(728,2001),(728,2011),(728,2018),(728,6001),(728,6002),(728,6003),(728,6005),(728,6006),(728,6007),(728,6008),(728,6010),(728,6011),(728,6012),(728,6014),(728,6015),(728,6017),(728,6018),(728,6019),(728,6020),(728,6021),(728,6022),(728,6023),(728,6024),(728,6025),(728,9000),(728,9001),(728,9002),(728,9003),(728,9006),(729,8009),(729,9016),(730,1002),(730,1017),(730,1073),(730,6002),(730,6005),(730,6017),(730,6020),(730,6024),(730,6025),(732,1001),(732,1002),(732,1013),(732,1073),(732,1116),(732,1164),(732,6002),(732,6005),(732,6006),(732,6008),(732,6017),(732,6020),(732,6023),(732,6024),(732,6025),(733,1001),(733,1002),(733,1003),(733,1004),(733,1005),(733,1007),(733,1009),(733,1012),(733,1013),(733,1017),(733,1020),(733,1021),(733,1032),(733,1035),(733,1036),(733,1055),(733,1071),(733,1073),(733,1078),(733,1116),(733,1140),(733,1158),(733,1164),(733,1200),(733,1305),(733,1322),(733,1325),(733,1329),(733,1362),(733,2000),(733,2002),(733,2011),(733,2016),(733,2021),(733,6001),(733,6002),(733,6003),(733,6004),(733,6005),(733,6006),(733,6007),(733,6008),(733,6009),(733,6010),(733,6012),(733,6013),(733,6015),(733,6016),(733,6017),(733,6018),(733,6020),(733,6021),(733,6022),(733,6023),(733,6024),(733,6025),(733,9016),(734,1001),(734,1035),(734,6003),(734,6023),(736,1001),(736,1002),(737,6001),(737,6002),(737,6003),(737,6008),(741,6023),(748,1001),(748,6019),(761,1001),(761,1002),(761,8009),(761,8010),(761,8011),(761,8012),(761,9016),(768,1001),(768,1002),(768,1003),(768,1005),(768,1006),(768,1007),(768,1012),(768,1017),(768,1020),(768,1021),(768,1023),(768,1029),(768,1032),(768,1034),(768,1035),(768,1073),(768,1078),(768,1087),(768,1116),(768,1121),(768,1140),(768,1146),(768,1147),(768,1158),(768,1164),(768,1171),(768,1174),(768,2001),(768,2002),(768,2009),(768,2011),(768,6001),(768,6002),(768,6003),(768,6005),(768,6006),(768,6007),(768,6008),(768,6009),(768,6010),(768,6011),(768,6012),(768,6014),(768,6015),(768,6017),(768,6018),(768,6020),(768,6021),(768,6022),(768,6023),(768,6024),(768,6025),(768,8009),(768,8010),(768,8012),(769,1001),(769,1362),(769,6001),(769,6003),(769,6020),(769,8012),(769,9016),(772,6005),(772,6017),(772,6020),(780,1001),(780,1002),(780,1003),(780,1012),(780,1013),(780,1017),(780,1020),(780,1021),(780,1032),(780,1035),(780,1073),(780,1078),(780,1116),(780,1164),(780,1200),(780,1362),(780,2020),(780,2021),(780,6001),(780,6005),(780,6017),(780,6020),(780,6023),(781,1001),(781,1009),(781,1362),(781,2009),(781,2020),(781,6002),(781,6018),(781,6025),(784,1001),(784,1002),(786,1001),(786,1002),(786,6017),(786,6018),(787,1001),(787,1002),(787,1017),(787,6005),(787,6012),(787,6017),(787,6018),(787,6020),(791,1001),(791,1020),(791,6018),(791,6020),(791,6023),(791,8009),(791,8012),(791,9016),(792,6018),(793,1001),(793,6001),(794,1323),(794,1379),(794,1382),(794,1383),(794,2018),(795,1001),(796,1001),(796,6018),(796,6020),(797,1102),(797,6018),(797,6020),(798,6018),(798,6020),(799,6018),(799,6020),(800,6018),(800,6020),(801,6018),(801,6020),(802,6018),(802,6020),(803,6018),(803,6020),(804,6003),(804,6018),(804,6020),(805,2018),(805,6003),(805,6018),(805,6020),(806,6018),(807,6003),(807,6018),(807,6020),(810,1001),(810,1002),(810,1005),(810,1007),(810,1012),(810,1013),(810,1017),(810,1020),(810,1021),(810,1032),(810,1035),(810,1055),(810,1067),(810,1071),(810,1073),(810,1078),(810,1116),(810,1134),(810,1140),(810,1146),(810,1147),(810,1149),(810,1158),(810,1164),(810,1175),(810,1305),(810,1329),(810,1362),(810,1363),(810,2009),(810,2011),(810,6001),(810,6002),(810,6005),(810,6006),(810,6008),(810,6012),(810,6015),(810,6016),(810,6017),(810,6020),(810,6022),(810,6023),(810,6025),(812,1001),(814,1001),(814,1032),(814,1035),(814,1055),(814,1116),(814,8009),(814,8012),(814,9016),(835,1001),(835,1002),(835,1007),(835,1012),(835,1017),(835,1035),(835,1073),(835,1459),(835,6018),(835,6024),(839,1001),(839,1021),(840,1001),(840,1032),(840,1035),(840,8008),(840,8009),(840,8010),(840,8012),(840,9016),(842,1001),(842,1002),(842,1007),(842,1012),(842,1013),(842,1017),(842,1021),(842,1029),(842,1032),(842,1035),(842,1036),(842,1055),(842,1073),(842,1164),(842,1171),(842,1301),(842,1305),(842,1322),(842,1329),(842,1362),(842,2020),(842,2021),(842,6001),(842,6002),(842,6005),(842,6009),(842,6010),(842,6012),(842,6017),(842,6018),(842,6020),(842,6022),(842,6023),(842,6025),(844,1001),(844,1002),(844,1003),(844,1004),(844,1005),(844,1006),(844,1007),(844,1009),(844,1011),(844,1012),(844,1013),(844,1015),(844,1016),(844,1017),(844,1174),(846,1139),(847,1001),(847,1002),(847,1005),(847,1007),(847,1009),(847,1012),(847,1013),(847,1017),(847,1020),(847,1021),(847,1032),(847,1035),(847,1043),(847,1055),(847,1067),(847,1071),(847,1073),(847,1078),(847,1093),(847,1108),(847,1116),(847,1134),(847,1140),(847,1146),(847,1147),(847,1149),(847,1158),(847,1164),(847,1175),(847,1322),(847,1329),(847,1363),(847,2000),(847,2009),(847,2010),(847,2011),(847,2020),(847,2021),(847,2026),(847,6001),(847,6002),(847,6003),(847,6004),(847,6005),(847,6006),(847,6008),(847,6010),(847,6011),(847,6012),(847,6015),(847,6016),(847,6017),(847,6018),(847,6019),(847,6020),(847,6021),(847,6022),(847,6023),(847,6024),(847,6025),(849,1001),(849,1002),(849,1032),(851,1032),(852,1001),(852,1002),(852,1020),(852,1035),(852,9016),(853,1001),(856,1001),(856,1002),(856,1009),(857,1001),(858,1001),(858,1002),(858,1007),(858,1009),(858,1012),(858,1013),(858,1017),(858,1020),(858,1021),(858,1032),(858,1035),(858,1055),(858,1067),(858,1073),(858,1078),(858,1108),(858,1116),(858,1140),(858,1146),(858,1147),(858,1158),(858,1164),(858,2000),(858,2009),(858,2011),(858,6001),(858,6002),(858,6005),(858,6006),(858,6008),(858,6012),(858,6015),(858,6016),(858,6017),(858,6020),(858,6022),(858,6023),(858,6025),(859,1001),(859,1002),(859,1003),(859,1007),(859,1012),(859,1013),(859,1017),(859,1020),(859,1021),(859,1035),(859,1071),(859,1073),(859,1078),(859,1085),(859,1090),(859,1094),(859,1096),(859,1102),(859,1103),(859,1107),(859,1116),(859,1121),(859,1134),(859,1140),(859,1146),(859,1149),(859,1151),(859,1158),(859,1164),(859,1301),(859,1305),(859,1309),(859,1311),(859,1313),(859,1319),(859,1322),(859,1325),(859,1329),(859,1332),(859,1333),(859,1382),(859,1383),(859,2009),(859,2011),(859,2020),(859,2021),(859,6001),(859,6002),(859,6003),(859,6005),(859,6006),(859,6007),(859,6008),(859,6009),(859,6010),(859,6015),(859,6017),(859,6018),(859,6020),(859,6022),(859,6023),(859,6024),(859,6025),(859,8013),(859,8014),(859,9000),(859,9001),(859,9002),(862,1001),(862,1094),(862,1107),(862,8013),(862,8014),(862,8016),(865,1001),(865,1002),(865,1003),(865,1005),(865,1007),(865,1011),(865,1012),(865,1013),(865,1015),(865,1017),(865,1020),(865,1021),(865,1029),(865,1032),(865,1035),(865,1055),(865,1067),(865,1071),(865,1073),(865,1078),(865,1093),(865,1116),(865,1134),(865,1140),(865,1146),(865,1147),(865,1153),(865,1158),(865,1164),(865,1171),(865,1175),(865,1177),(865,1200),(865,1301),(865,1305),(865,1309),(865,1319),(865,1322),(865,1326),(865,1329),(865,1332),(865,1333),(865,1362),(865,1363),(865,1364),(865,1365),(865,1383),(865,1391),(865,1396),(865,2000),(865,2002),(865,2009),(865,2011),(865,2020),(865,2021),(865,2026),(865,6001),(865,6002),(865,6003),(865,6004),(865,6005),(865,6006),(865,6008),(865,6009),(865,6010),(865,6012),(865,6015),(865,6016),(865,6017),(865,6018),(865,6019),(865,6020),(865,6021),(865,6022),(865,6023),(865,6024),(865,6025),(868,1020),(868,1035),(868,6010),(870,1078),(871,2013),(871,2015),(871,2017),(871,2018),(871,2019),(872,6007),(874,2013),(874,2018),(875,2000),(875,2002),(875,2003),(875,2009),(875,2010),(875,2011),(875,2013),(875,2015),(875,2017),(875,2018),(875,2019),(877,1001),(878,1001),(878,6018),(878,6025),(881,8012),(881,9016),(883,1001),(883,8009),(883,8012),(884,8012),(886,1001),(886,1002),(886,1003),(886,1004),(886,1005),(886,1007),(886,1009),(886,1011),(886,1012),(886,1013),(886,1017),(886,1020),(886,1021),(886,1023),(886,1032),(886,1035),(886,1036),(886,1055),(886,1071),(886,1073),(886,1078),(886,1085),(886,1090),(886,1093),(886,1094),(886,1107),(886,1109),(886,1116),(886,1121),(886,1134),(886,1146),(886,1151),(886,1164),(886,1200),(886,1301),(886,1305),(886,1309),(886,1437),(886,1438),(886,1448),(886,2000),(886,2002),(886,2009),(886,2011),(886,6001),(886,6002),(886,6003),(886,6004),(886,6005),(886,6006),(886,6007),(886,6008),(886,6009),(886,6010),(886,6011),(886,6012),(886,6016),(886,6017),(886,6018),(886,6020),(886,6021),(886,6022),(886,6023),(886,6024),(886,6025),(888,1001),(888,1002),(888,1003),(888,1007),(888,1012),(888,1013),(888,1017),(888,1020),(888,1021),(888,1035),(888,1073),(888,1078),(888,1094),(888,1164),(888,1322),(888,1362),(888,2020),(888,6001),(888,6005),(888,6017),(888,6025),(888,8013),(888,8014),(889,1001),(889,1002),(889,1003),(889,6005),(889,6023),(890,1090),(891,1001),(893,1001),(897,1001),(897,1002),(897,1003),(897,1007),(897,1012),(897,1017),(897,1171),(898,1007),(898,1017),(898,6002),(898,6024),(899,1085),(899,1094),(899,1103),(899,1107),(901,1001),(901,1012),(901,1035),(901,1073),(901,1078),(901,1094),(904,1001),(904,1002),(904,1017),(904,6019),(907,2020),(907,2027),(909,1094),(909,1107),(910,1001),(910,1002),(910,1007),(910,1017),(910,1020),(910,1036),(910,1071),(910,1116),(910,1164),(910,1200),(910,1301),(910,1305),(910,1309),(910,1322),(910,1343),(910,1344),(910,1362),(910,1364),(910,1365),(910,6001),(910,6002),(910,6005),(910,6006),(910,6008),(910,6009),(910,6010),(910,6012),(910,6017),(910,6020),(910,6022),(910,6023),(910,6024),(910,6025),(912,6002),(914,1001),(914,1002),(914,1012),(914,1017),(914,1021),(914,1073),(914,1078),(914,1158),(914,1164),(914,1200),(914,1301),(914,1305),(914,1322),(914,6001),(914,6002),(914,6005),(914,6006),(914,6009),(914,6010),(914,6018),(914,6025),(914,9000),(915,1001),(915,1002),(915,1003),(915,1004),(915,1005),(915,1007),(915,1011),(915,1012),(915,1013),(915,1015),(915,1017),(915,1020),(915,1021),(915,1023),(915,1026),(915,1029),(915,1032),(915,1035),(915,1055),(915,1067),(915,1071),(915,1073),(915,1078),(915,1085),(915,1090),(915,1094),(915,1103),(915,1107),(915,1116),(915,1121),(915,1134),(915,1140),(915,1146),(915,1149),(915,1151),(915,1153),(915,1158),(915,1164),(915,1175),(915,1200),(915,1301),(915,1305),(915,1311),(915,1313),(915,1315),(915,1319),(915,1322),(915,1323),(915,1326),(915,1329),(915,1332),(915,1333),(915,1342),(915,1343),(915,1344),(915,1346),(915,1348),(915,1350),(915,1364),(915,1365),(915,1382),(915,1428),(915,1437),(915,1438),(915,1448),(915,2000),(915,2009),(915,2010),(915,2011),(915,2018),(915,2020),(915,2021),(915,2025),(915,6001),(915,6002),(915,6003),(915,6004),(915,6005),(915,6006),(915,6007),(915,6008),(915,6009),(915,6010),(915,6011),(915,6012),(915,6015),(915,6016),(915,6017),(915,6018),(915,6019),(915,6020),(915,6021),(915,6022),(915,6023),(915,6024),(915,6025),(915,9000),(915,9001),(915,9002),(915,9003),(915,9004),(915,9005),(915,9017),(915,9018),(915,9022),(915,9032),(916,1001),(916,1002),(916,1007),(916,1020),(916,1021),(916,1073),(916,1078),(916,1085),(916,1094),(916,1134),(916,1149),(916,1151),(916,1158),(916,1164),(916,1301),(916,1305),(916,1311),(916,1313),(916,1319),(916,1322),(916,1325),(916,1326),(916,1329),(916,1332),(916,1333),(916,6001),(916,6002),(916,6005),(916,6006),(916,6008),(916,6009),(916,6010),(916,6017),(916,6020),(916,6024),(916,6025),(916,9000),(917,1021),(917,1073),(917,1078),(917,1090),(917,1134),(917,1158),(917,1164),(917,6001),(917,6002),(917,6003),(917,6004),(917,6005),(917,9000),(917,9001),(917,9002),(917,9005),(919,1001),(919,1002),(919,1085),(919,1094),(919,1103),(919,1107),(919,1171),(919,1396),(920,1007),(920,1017),(920,1021),(920,6001),(920,6002),(920,6008),(920,6024),(923,1001),(923,1002),(923,1017),(923,1032),(923,1035),(923,1085),(923,1094),(923,1103),(923,8013),(923,8014),(923,9000),(924,1001),(924,1085),(924,1094),(924,1103),(924,1107),(925,1001),(925,1021),(925,1073),(925,1078),(925,1134),(925,1149),(925,1151),(925,1164),(925,6001),(925,6002),(925,6004),(925,6005),(925,6018),(925,6020),(927,1007),(927,1017),(927,6002),(927,6024),(928,1001),(928,1002),(928,1003),(928,1012),(928,1017),(928,1020),(928,1021),(928,1032),(928,1035),(928,1055),(928,1073),(928,1078),(928,1116),(928,1146),(928,1164),(928,6001),(928,6002),(928,6005),(928,6006),(928,6009),(928,6010),(928,6012),(928,6017),(928,6018),(928,6020),(928,6022),(929,1001),(929,1002),(929,1003),(929,1005),(929,1007),(929,1009),(929,1012),(929,1013),(929,1017),(929,1020),(929,1021),(929,1023),(929,1032),(929,1035),(929,1036),(929,1055),(929,1067),(929,1071),(929,1073),(929,1078),(929,1090),(929,1093),(929,1102),(929,1116),(929,1130),(929,1134),(929,1149),(929,1151),(929,1158),(929,1164),(929,1200),(929,1301),(929,1305),(929,1309),(929,1311),(929,1313),(929,1322),(929,1324),(929,1325),(929,1326),(929,1329),(929,1332),(929,1333),(929,1342),(929,1344),(929,1362),(929,2009),(929,6001),(929,6002),(929,6003),(929,6004),(929,6005),(929,6006),(929,6007),(929,6008),(929,6009),(929,6010),(929,6011),(929,6012),(929,6015),(929,6016),(929,6017),(929,6018),(929,6020),(929,6022),(929,6023),(929,6024),(929,6025),(929,8013),(929,8014),(929,8016),(929,8017),(929,8018),(929,9000),(929,9004),(929,9017),(929,9018),(929,9022),(929,9032),(930,1085),(930,1094),(931,1001),(931,1035),(931,1094),(932,1001),(932,1002),(932,1012),(932,1017),(932,1020),(932,1021),(932,1032),(932,1035),(932,1108),(932,1116),(932,1164),(932,2009),(932,6002),(932,6005),(932,6008),(932,6016),(932,6017),(932,6020),(932,6022),(932,6023),(932,6025),(934,1001),(934,1007),(934,1017),(934,6002),(938,1001),(938,1002),(938,1003),(938,1005),(938,1007),(938,1009),(938,1012),(938,1013),(938,1017),(938,1020),(938,1021),(938,1024),(938,1025),(938,1026),(938,1028),(938,1032),(938,1035),(938,1036),(938,1053),(938,1055),(938,1058),(938,1059),(938,1062),(938,1071),(938,1078),(938,1085),(938,1116),(938,1129),(938,1147),(938,1166),(938,1200),(938,6001),(938,6002),(938,6005),(938,6006),(938,6008),(938,6012),(938,6017),(938,6020),(938,6023),(938,6024),(938,6025),(938,9000),(938,9001),(938,9002),(938,9005),(938,9006),(939,1001),(939,6001),(940,1001),(940,1002),(940,1200),(940,6001),(940,6002),(941,1001),(941,1002),(941,1017),(941,1020),(941,1021),(941,1158),(941,1164),(941,6001),(942,1085),(942,1094),(942,1103),(943,1001),(943,1003),(943,1005),(943,1007),(943,1011),(943,1012),(943,1013),(943,1017),(943,1032),(943,1035),(943,1073),(943,1078),(943,1151),(943,1164),(943,2009),(943,6002),(943,6003),(943,6005),(943,6009),(943,6017),(943,6020),(943,6023),(943,6025),(944,1094),(945,1001),(945,1002),(945,1012),(945,1017),(945,1032),(945,1035),(945,1055),(945,1116),(945,1164),(945,1362),(945,6002),(945,6006),(945,6017),(945,6018),(945,8013),(945,8014),(946,1001),(946,1002),(946,1005),(946,1007),(946,1009),(946,1012),(946,1013),(946,1017),(946,1020),(946,1085),(946,1094),(946,1107),(946,2021),(946,6003),(946,6017),(946,6020),(946,6021),(946,6022),(946,6023),(946,6024),(947,1001),(947,1002),(947,1012),(947,1021),(947,1032),(947,1035),(947,1116),(947,1305),(947,1322),(947,6001),(947,6005),(947,6006),(947,6007),(947,6017),(947,6020),(947,6022),(947,6023),(947,6025),(947,8013),(947,8014),(947,8018),(950,1001),(950,1002),(950,8009),(950,8012),(950,9016),(952,1001),(952,1002),(952,1017),(952,1020),(952,1035),(952,1055),(952,1078),(952,1164),(952,1200),(952,2000),(952,6001),(952,6002),(952,6005),(952,6006),(952,6012),(952,6017),(952,6018),(952,6020),(952,6022),(952,6023),(952,6025),(952,8013),(952,8014),(952,8016),(952,8018),(954,1017),(954,6024),(956,1001),(956,1078),(956,1164),(956,6001),(956,6002),(956,6005),(956,6006),(956,6008),(956,6009),(956,6010),(956,6012),(956,6017),(956,6020),(956,6022),(956,6025),(963,1001),(963,1002),(963,1003),(963,1007),(963,1012),(963,1013),(963,1015),(963,1017),(963,1020),(963,1021),(963,1023),(963,1029),(963,1032),(963,1035),(963,1043),(963,1045),(963,1050),(963,1055),(963,1067),(963,1068),(963,1071),(963,1073),(963,1078),(963,1090),(963,1116),(963,1121),(963,1134),(963,1140),(963,1146),(963,1148),(963,1149),(963,1151),(963,1158),(963,1164),(963,1175),(963,1200),(963,1301),(963,1303),(963,1305),(963,1309),(963,1311),(963,1319),(963,1322),(963,1326),(963,1329),(963,1343),(963,1346),(963,1362),(963,2000),(963,2002),(963,2009),(963,2010),(963,2011),(963,6001),(963,6002),(963,6003),(963,6004),(963,6005),(963,6006),(963,6007),(963,6008),(963,6009),(963,6010),(963,6011),(963,6012),(963,6013),(963,6014),(963,6015),(963,6016),(963,6017),(963,6018),(963,6019),(963,6020),(963,6021),(963,6022),(963,6023),(963,6024),(963,6025),(963,9000),(963,9001),(963,9002),(963,9003),(968,1007),(968,1017),(968,6002),(968,6024),(971,1078),(971,1151),(971,1164),(974,1007),(974,1017),(974,6002),(975,1001),(975,1007),(975,1017),(975,6002),(975,6024),(976,1001),(976,1002),(976,1003),(976,1005),(976,1007),(976,1009),(976,1011),(976,1012),(976,1013),(976,1017),(976,1020),(976,1021),(976,1032),(976,1035),(976,1055),(976,1065),(976,1067),(976,1071),(976,1073),(976,1078),(976,1093),(976,1116),(976,1134),(976,1140),(976,1146),(976,1147),(976,1151),(976,1158),(976,1164),(976,1171),(976,1200),(976,1301),(976,1305),(976,1309),(976,1313),(976,1319),(976,1353),(976,1362),(976,2000),(976,2009),(976,2011),(976,2020),(976,6001),(976,6002),(976,6003),(976,6004),(976,6005),(976,6006),(976,6007),(976,6008),(976,6009),(976,6010),(976,6011),(976,6012),(976,6014),(976,6016),(976,6017),(976,6018),(976,6020),(976,6021),(976,6022),(976,6023),(976,6024),(976,6025),(979,1001),(979,1002),(979,1003),(979,1007),(979,1012),(979,1017),(979,1020),(979,1021),(979,1032),(979,1035),(979,1071),(979,1073),(979,1078),(979,1116),(979,1134),(979,1158),(979,1164),(979,2000),(979,2020),(979,6001),(979,6002),(979,6003),(979,6005),(979,6007),(979,6008),(979,6009),(979,6010),(979,6017),(979,6018),(979,6020),(979,6022),(979,6023),(979,6025),(979,9000),(979,9002),(980,1001),(980,6001),(981,1007),(981,1017),(981,6002),(981,6024),(987,1001),(987,6002),(990,1094),(990,1164),(990,6001),(996,1001),(996,1012),(996,1017),(996,1021),(996,1032),(996,1035),(996,1073),(996,1078),(996,1116),(996,1164),(996,6002),(996,6017),(996,6025),(997,1001),(997,1002),(1000,9016),(1003,1001),(1003,1002),(1003,1003),(1003,1006),(1003,1007),(1003,1009),(1003,1012),(1003,1013),(1003,1017),(1003,1020),(1003,1021),(1003,1023),(1003,1026),(1003,1028),(1003,1032),(1003,1035),(1003,1036),(1003,1043),(1003,1045),(1003,1050),(1003,1055),(1003,1058),(1003,1071),(1003,1073),(1003,1077),(1003,1078),(1003,1087),(1003,1090),(1003,1091),(1003,1116),(1003,1121),(1003,1132),(1003,1133),(1003,1134),(1003,1139),(1003,1140),(1003,1146),(1003,1147),(1003,1164),(1003,1171),(1003,1172),(1003,1174),(1003,1177),(1003,1193),(1003,1200),(1003,1301),(1003,1303),(1003,1305),(1003,1309),(1003,1310),(1003,1311),(1003,1313),(1003,1315),(1003,1319),(1003,1322),(1003,1325),(1003,1326),(1003,1329),(1003,1332),(1003,1333),(1003,1334),(1003,1337),(1003,1338),(1003,1339),(1003,1341),(1003,1343),(1003,1344),(1003,1345),(1003,1346),(1003,1353),(1003,1362),(1003,1363),(1003,1364),(1003,1365),(1003,1367),(1003,1378),(1003,1379),(1003,1382),(1003,1383),(1003,1391),(1003,1396),(1003,1433),(1003,2009),(1003,2011),(1003,2020),(1003,2021),(1003,6001),(1003,6002),(1003,6003),(1003,6004),(1003,6005),(1003,6006),(1003,6007),(1003,6008),(1003,6009),(1003,6010),(1003,6011),(1003,6012),(1003,6013),(1003,6015),(1003,6016),(1003,6017),(1003,6018),(1003,6019),(1003,6020),(1003,6021),(1003,6022),(1003,6023),(1003,6024),(1003,6025),(1003,9017),(1003,9020),(1003,9021),(1003,9022),(1003,9026),(1003,9028),(1003,9032),(1004,1001),(1004,1078),(1007,1001),(1007,1002),(1007,1003),(1007,1007),(1007,1009),(1007,1012),(1007,1013),(1007,1017),(1007,1020),(1007,1021),(1007,1032),(1007,1035),(1007,1055),(1007,1073),(1007,1116),(1007,1158),(1007,1164),(1007,1175),(1007,1329),(1007,1362),(1007,2000),(1007,2009),(1007,2011),(1007,6002),(1007,6005),(1007,6006),(1007,6008),(1007,6010),(1007,6012),(1007,6016),(1007,6017),(1007,6018),(1007,6020),(1007,6021),(1007,6022),(1007,6023),(1007,6024),(1007,6025),(1009,6001),(1009,6002),(1009,6005),(1009,6008),(1009,6009),(1009,6017),(1009,6025),(1010,6001),(1010,6002),(1010,6008),(1010,6009),(1010,6012),(1010,6017),(1010,6018),(1010,6022),(1010,6023),(1010,6025),(1011,1001),(1011,1002),(1011,1012),(1011,1017),(1011,1020),(1011,1021),(1011,1032),(1011,1035),(1011,1073),(1011,1116),(1011,1147),(1011,1164),(1011,2009),(1011,6002),(1016,1171),(1016,1172),(1016,1175),(1017,1001),(1017,1002),(1017,1003),(1017,1005),(1017,1007),(1017,1009),(1017,1012),(1017,1013),(1017,1017),(1017,1020),(1017,1021),(1017,1032),(1017,1035),(1017,1043),(1017,1055),(1017,1067),(1017,1071),(1017,1073),(1017,1078),(1017,1093),(1017,1108),(1017,1116),(1017,1134),(1017,1140),(1017,1146),(1017,1147),(1017,1149),(1017,1158),(1017,1164),(1017,1171),(1017,1175),(1017,1200),(1017,1305),(1017,1322),(1017,1329),(1017,1362),(1017,1363),(1017,2000),(1017,2009),(1017,2010),(1017,2011),(1017,2020),(1017,2021),(1017,2022),(1017,2023),(1017,2025),(1017,2026),(1017,6001),(1017,6002),(1017,6003),(1017,6004),(1017,6005),(1017,6006),(1017,6008),(1017,6010),(1017,6011),(1017,6012),(1017,6015),(1017,6016),(1017,6017),(1017,6018),(1017,6019),(1017,6020),(1017,6021),(1017,6022),(1017,6023),(1017,6024),(1017,6025),(1019,1001),(1019,1002),(1019,1003),(1019,1007),(1019,1009),(1019,1012),(1019,1013),(1019,1017),(1019,1020),(1019,1021),(1019,1023),(1019,1032),(1019,1035),(1019,1043),(1019,1045),(1019,1055),(1019,1071),(1019,1072),(1019,1073),(1019,1075),(1019,1078),(1019,1087),(1019,1090),(1019,1116),(1019,1134),(1019,1140),(1019,1146),(1019,1147),(1019,1164),(1019,1171),(1019,1177),(1019,1200),(1019,1301),(1019,1305),(1019,1311),(1019,1313),(1019,1322),(1019,1326),(1019,1329),(1019,1344),(1019,1362),(1019,1363),(1019,1367),(1019,1369),(1019,1378),(1019,1382),(1019,1383),(1019,1396),(1019,1433),(1019,1460),(1019,2000),(1019,2009),(1019,2011),(1019,2020),(1019,2021),(1019,2027),(1019,6001),(1019,6002),(1019,6003),(1019,6004),(1019,6005),(1019,6006),(1019,6007),(1019,6008),(1019,6009),(1019,6010),(1019,6012),(1019,6013),(1019,6015),(1019,6016),(1019,6017),(1019,6018),(1019,6019),(1019,6020),(1019,6022),(1019,6023),(1019,6024),(1019,6025),(1019,9017),(1019,9032),(1020,1001),(1020,1012),(1020,1035),(1020,6018),(1020,6020),(1020,6023),(1021,1001),(1021,1078),(1021,1130),(1021,1134),(1021,1151),(1021,1164),(1021,6001),(1021,6005),(1021,6009),(1022,1149),(1023,1002),(1023,6023),(1024,1001),(1024,1002),(1024,1012),(1024,1032),(1024,1035),(1024,1073),(1024,1078),(1024,1164),(1024,6017),(1024,6025),(1025,1017),(1028,1001),(1028,1002),(1029,1001),(1029,1002),(1029,1003),(1029,6005),(1033,1001),(1033,1002),(1033,1009),(1033,1032),(1033,6023),(1035,1001),(1035,1002),(1035,1007),(1036,1032),(1037,1076),(1038,1001),(1038,6005),(1045,1001),(1045,1002),(1046,1001),(1046,1002),(1046,1012),(1046,1035),(1046,1164),(1046,1200),(1046,6001),(1046,6005),(1046,6017),(1046,6018),(1046,6020),(1046,6022),(1046,6023),(1046,6025),(1048,1001),(1048,1012),(1048,1017),(1048,1020),(1048,1032),(1048,1035),(1048,1073),(1048,1078),(1048,6002),(1048,6008),(1048,6012),(1048,6017),(1048,6025),(1049,1001),(1052,1201),(1105,1001),(1106,1140),(1106,1147),(1106,1175),(1108,1146),(1108,1149),(1110,1067),(1112,1002),(1112,1003),(1112,1004),(1116,1012),(1116,1078),(1116,1171),(1116,2009),(1118,1001),(1118,1002),(1118,1003),(1121,1057),(1126,1001),(1127,1001),(1127,1002),(1127,1003),(1127,1007),(1127,1009),(1127,1012),(1127,1017),(1127,1020),(1127,1021),(1127,1032),(1127,1035),(1127,1043),(1127,1055),(1127,1071),(1127,1073),(1127,1078),(1127,1116),(1127,1134),(1127,1140),(1127,1146),(1127,1158),(1127,1164),(1127,1305),(1127,1322),(1127,1329),(1127,1353),(1127,1362),(1127,1363),(1127,1382),(1127,2000),(1127,2002),(1127,2020),(1127,2021),(1127,6001),(1127,6002),(1127,6003),(1127,6004),(1127,6005),(1127,6006),(1127,6007),(1127,6008),(1127,6009),(1127,6010),(1127,6015),(1127,6017),(1127,6018),(1127,6020),(1127,6021),(1127,6022),(1127,6023),(1127,6024),(1127,6025),(1127,9016),(1128,1001),(1128,1002),(1128,1007),(1128,1009),(1128,1012),(1128,1017),(1128,1020),(1128,1021),(1128,1032),(1128,1035),(1128,1073),(1128,1078),(1128,1116),(1128,1134),(1128,1140),(1128,1164),(1128,1305),(1128,1322),(1128,1329),(1128,1353),(1128,1362),(1128,1382),(1128,2020),(1128,6002),(1128,6005),(1128,6006),(1128,6007),(1128,6008),(1128,6010),(1128,6015),(1128,6017),(1128,6020),(1128,6023),(1128,6025),(1130,9016),(1131,1152),(1133,1001),(1133,1007),(1133,1032),(1133,1035),(1133,1329),(1133,2000),(1133,6003),(1133,6004),(1133,6007),(1133,6009),(1133,6018),(1133,6024),(1133,9016),(1135,1017),(1135,1020),(1138,1001),(1140,1017),(1142,1001),(1142,1002),(1142,1007),(1142,1012),(1142,1013),(1142,1017),(1142,1020),(1142,1021),(1142,1032),(1142,1035),(1142,1055),(1142,1073),(1142,1078),(1142,1116),(1142,1134),(1142,1140),(1142,1158),(1142,1164),(1142,1329),(1142,1382),(1142,2009),(1142,6001),(1142,6002),(1142,6005),(1142,6006),(1142,6008),(1142,6015),(1142,6017),(1142,6018),(1142,6020),(1142,6023),(1144,1001),(1145,1001),(1147,1139),(1150,1001),(1151,1001),(1155,2009),(1155,2010),(1155,2011),(1155,2012),(1155,2013),(1155,2014),(1155,2015),(1155,2016),(1155,2017),(1155,2018),(1156,1001),(1156,2016),(1158,1002),(1158,1012),(1158,1017),(1158,1021),(1158,1032),(1158,1035),(1158,1073),(1158,1116),(1158,1147),(1158,1164),(1158,2009),(1158,6002),(1163,1001),(1163,1002),(1163,1007),(1163,1012),(1163,1013),(1163,1017),(1163,1020),(1163,1021),(1163,1032),(1163,1035),(1163,1073),(1163,1078),(1163,1116),(1163,1164),(1163,1362),(1163,2011),(1163,6001),(1163,6005),(1163,6007),(1163,6008),(1163,6012),(1163,6017),(1163,6018),(1163,6020),(1163,6025),(1166,6002),(1167,6002),(1168,1001),(1168,1023),(1168,1342),(1168,1343),(1168,1344),(1168,1345),(1168,1346),(1168,1352),(1168,1353),(1168,1354),(1168,2003),(1168,6005),(1179,1001),(1179,1002),(1179,1007),(1183,8009),(1183,8012),(1183,9016),(1194,1001),(1195,1001),(1195,1002),(1195,1012),(1195,1017),(1195,1020),(1195,1032),(1195,1035),(1195,1073),(1195,1078),(1195,1164),(1195,6001),(1195,6005),(1195,6017),(1195,6018),(1195,6020),(1195,6022),(1195,6023),(1195,6025),(1198,1001),(1198,1002),(1198,1003),(1198,1004),(1198,1005),(1198,1006),(1198,1007),(1198,1012),(1198,1017),(1198,1019),(1198,1020),(1198,1021),(1198,1032),(1198,1035),(1198,1073),(1198,1164),(1198,1200),(1198,2000),(1198,2011),(1198,6001),(1198,6002),(1198,6004),(1198,6005),(1198,6006),(1198,6007),(1198,6008),(1198,6010),(1198,6012),(1198,6014),(1198,6015),(1198,6016),(1198,6017),(1198,6018),(1198,6019),(1198,6020),(1198,6021),(1198,6022),(1198,6023),(1198,6024),(1198,6025),(1199,1146),(1200,1001),(1200,1002),(1200,1007),(1200,1012),(1200,1017),(1200,1020),(1200,1021),(1200,1032),(1200,1035),(1200,1055),(1200,1073),(1200,1116),(1200,1147),(1200,1164),(1200,1200),(1200,1305),(1200,1322),(1200,1329),(1200,1353),(1200,1362),(1200,1363),(1200,2009),(1200,2011),(1200,2020),(1200,2021),(1200,6001),(1200,6002),(1200,6005),(1200,6017),(1200,6020),(1200,6022),(1200,6023),(1200,6025),(1202,1001),(1202,6002),(1202,6006),(1202,6010),(1202,6025),(1202,9000),(1202,9001),(1202,9002),(1203,1109),(1207,1001),(1209,1001),(1209,1002),(1209,1003),(1209,1007),(1209,1009),(1209,1012),(1209,1013),(1209,1017),(1209,1020),(1209,1021),(1209,1032),(1209,1035),(1209,1073),(1209,1078),(1209,1116),(1209,1147),(1209,1164),(1209,1171),(1209,1200),(1209,2000),(1209,2009),(1209,2011),(1209,6001),(1209,6002),(1209,6004),(1209,6005),(1209,6006),(1209,6007),(1209,6008),(1209,6009),(1209,6010),(1209,6012),(1209,6017),(1209,6020),(1209,6022),(1209,6025),(1209,8012),(1209,9016),(1211,1001),(1211,1017),(1213,1001),(1216,1001),(1216,1002),(1216,1012),(1216,1032),(1216,1035),(1216,1055),(1216,1073),(1216,6020),(1216,6022),(1216,9016),(1217,1001),(1217,1002),(1217,1005),(1217,1012),(1217,1017),(1217,1020),(1217,1021),(1217,1032),(1217,1035),(1217,1055),(1217,1071),(1217,1073),(1217,1164),(1217,1200),(1217,2009),(1217,6001),(1217,6002),(1217,6007),(1217,6008),(1217,6009),(1217,6010),(1217,6012),(1217,6017),(1217,6018),(1217,6020),(1217,6021),(1217,6022),(1217,6023),(1217,6024),(1217,6025),(1219,1001),(1223,1001),(1223,1007),(1223,1017),(1223,6002),(1223,6024),(1226,1001),(1227,1001),(1227,1021),(1227,1073),(1227,1164),(1227,2018),(1227,6001),(1227,6002),(1227,6005),(1227,6007),(1227,6008),(1227,6009),(1227,6010),(1229,6003),(1229,6016),(1232,1007),(1232,1017),(1232,6002),(1234,1078),(1234,1151),(1234,1164),(1238,1001),(1238,1007),(1238,1017),(1238,6001),(1238,6002),(1238,6024),(1239,1001),(1239,1012),(1239,1017),(1239,1032),(1239,1035),(1239,1073),(1239,1078),(1239,2020),(1240,1001),(1243,1107),(1244,1001),(1244,1362),(1244,1363),(1244,6002),(1244,6017),(1244,9017),(1245,1001),(1246,1001),(1246,1002),(1246,1003),(1248,1001),(1248,1002),(1248,1003),(1249,1001),(1251,1138),(1253,1001),(1253,1002),(1253,1007),(1253,1009),(1253,1012),(1253,1017),(1253,1020),(1253,1021),(1253,1023),(1253,1032),(1253,1035),(1253,1036),(1253,1055),(1253,1068),(1253,1073),(1253,1078),(1253,1093),(1253,1116),(1253,1140),(1253,1146),(1253,1147),(1253,1149),(1253,1158),(1253,1171),(1253,1174),(1253,1305),(1253,1309),(1253,1311),(1253,1313),(1253,1315),(1253,1319),(1253,1322),(1253,1329),(1253,1333),(1253,1344),(1253,1353),(1253,1362),(1253,1363),(1253,1364),(1253,1383),(1253,1459),(1253,1460),(1253,1461),(1253,1462),(1253,2000),(1253,2002),(1253,2011),(1253,2020),(1253,6001),(1253,6002),(1253,6003),(1253,6004),(1253,6005),(1253,6006),(1253,6007),(1253,6008),(1253,6009),(1253,6010),(1253,6012),(1253,6016),(1253,6017),(1253,6018),(1253,6019),(1253,6020),(1253,6023),(1253,6024),(1253,6025),(1253,8013),(1253,8014),(1253,8016),(1253,9000),(1253,9001),(1253,9002),(1253,9005),(1253,9007),(1253,9100),(1253,9101),(1253,9104),(1253,9106),(1253,9108),(1253,9109),(1253,9110),(1253,9113),(1254,1001),(1254,1002),(1254,1007),(1254,1012),(1254,1017),(1254,1020),(1254,1021),(1254,1032),(1254,1035),(1254,1036),(1254,6018),(1254,6019),(1256,1001),(1256,1002),(1256,1020),(1256,1073),(1256,2000),(1257,9000),(1257,9001),(1257,9002),(1258,9000),(1258,9001),(1258,9002),(1258,9003),(1258,9007),(1259,9000),(1259,9001),(1259,9002),(1259,9003),(1259,9005),(1259,9006),(1260,1059),(1260,1071),(1260,9008),(1262,1001),(1262,1012),(1262,6020),(1264,1001),(1264,1002),(1266,1001),(1266,1002),(1266,1012),(1266,1017),(1266,1032),(1266,1073),(1266,1078),(1266,1116),(1266,1362),(1266,1363),(1266,6002),(1266,6020),(1266,6023),(1266,6024),(1268,1301),(1268,1305),(1268,1309),(1268,1322),(1268,1323),(1268,1324),(1268,1325),(1268,1326),(1268,1328),(1268,1329),(1268,1332),(1268,1333),(1268,1337),(1268,1338),(1268,1339),(1268,1341),(1268,1342),(1268,1343),(1268,1344),(1268,1346),(1268,1347),(1268,1349),(1268,1350),(1268,1351),(1268,1352),(1268,1353),(1268,1354),(1268,1358),(1268,1359),(1268,1362),(1268,1363),(1268,1364),(1268,1365),(1268,1367),(1268,1369),(1268,1396),(1268,9017),(1268,9018),(1268,9019),(1268,9020),(1268,9021),(1268,9022),(1269,1300),(1269,1301),(1269,1302),(1269,1303),(1269,1304),(1269,1305),(1269,1307),(1269,1308),(1269,1309),(1269,1310),(1269,8013),(1269,8014),(1269,8016),(1269,8018),(1275,1001),(1275,1002),(1275,1005),(1275,1012),(1275,1017),(1275,1020),(1275,1021),(1275,1032),(1275,1035),(1275,1055),(1275,1071),(1275,1073),(1275,1164),(1275,1200),(1275,1305),(1275,1311),(1275,1329),(1275,2009),(1275,6001),(1275,6002),(1275,6007),(1275,6008),(1275,6009),(1275,6010),(1275,6012),(1275,6017),(1275,6018),(1275,6020),(1275,6021),(1275,6022),(1275,6023),(1275,6024),(1275,6025),(1275,9016),(1279,1078),(1279,1164),(1280,1001),(1280,1002),(1282,1001),(1282,1002),(1282,1003),(1282,1073),(1284,1107),(1284,1108),(1284,1110),(1284,1112),(1284,1115),(1287,1001),(1288,1001),(1288,1023),(1288,1322),(1288,1323),(1288,1325),(1288,1326),(1288,1327),(1288,1328),(1288,1329),(1288,1332),(1288,1333),(1288,1337),(1288,1338),(1288,1339),(1288,1340),(1288,1341),(1288,1343),(1288,1344),(1288,1347),(1288,1351),(1288,1352),(1288,1353),(1288,1354),(1288,2025),(1288,6005),(1289,1001),(1289,1322),(1289,1325),(1289,1326),(1289,1329),(1289,1332),(1289,1333),(1289,1338),(1289,1339),(1289,1341),(1289,1342),(1289,1343),(1289,1344),(1289,1346),(1289,1347),(1289,1350),(1289,1362),(1289,1363),(1289,1364),(1289,1365),(1289,1367),(1289,1369),(1289,1428),(1289,1433),(1289,2020),(1289,2021),(1289,2022),(1289,2025),(1289,2026),(1289,2027),(1290,1322),(1290,1324),(1290,1325),(1290,1326),(1290,1327),(1290,1328),(1290,1329),(1290,1330),(1290,1331),(1291,1001),(1291,1322),(1291,1324),(1291,1325),(1291,1326),(1291,1327),(1291,1329),(1291,1330),(1291,1342),(1291,1343),(1291,1344),(1291,1345),(1291,1346),(1291,1347),(1291,1348),(1291,1349),(1291,1350),(1291,1351),(1291,1362),(1291,1363),(1291,1364),(1291,1365),(1291,1366),(1291,1367),(1291,1368),(1291,1369),(1291,1378),(1291,1388),(1291,1389),(1291,1391),(1291,1405),(1291,1408),(1291,1409),(1291,1413),(1291,1414),(1291,1415),(1291,1426),(1291,1428),(1291,1429),(1291,1430),(1291,1433),(1291,1435),(1291,2012),(1291,2014),(1291,2016),(1291,2020),(1291,2021),(1291,2022),(1291,2023),(1291,2024),(1291,2025),(1291,2026),(1291,2027),(1292,1322),(1292,1326),(1292,1329),(1294,1322),(1294,1323),(1294,1324),(1294,1325),(1294,1326),(1294,1327),(1294,1328),(1294,1329),(1294,1330),(1294,1331),(1294,1342),(1294,1343),(1294,1344),(1294,1345),(1294,1346),(1294,1347),(1294,1348),(1294,1349),(1294,1350),(1294,1351),(1294,1352),(1294,1353),(1294,1354),(1294,1359),(1294,1361),(1295,1322),(1295,1323),(1295,1325),(1295,1326),(1295,1327),(1295,1328),(1295,1329),(1295,1342),(1295,1343),(1295,1344),(1295,1345),(1295,1346),(1295,1347),(1295,1348),(1295,1349),(1295,1350),(1295,1351),(1295,1352),(1295,1353),(1295,1354),(1295,1358),(1295,1359),(1295,1362),(1295,1363),(1296,1333),(1296,1342),(1296,1344),(1296,1346),(1296,1347),(1296,1362),(1296,1363),(1296,1364),(1296,1365),(1296,1367),(1296,1369),(1296,2020),(1296,2021),(1296,2025),(1300,1329),(1301,1001),(1302,1001),(1302,1062),(1302,1332),(1302,1333),(1302,1334),(1302,1337),(1302,1338),(1302,1339),(1302,1340),(1302,1341),(1302,1342),(1302,1343),(1302,1344),(1302,1345),(1302,1346),(1302,1347),(1302,1349),(1302,1350),(1302,1351),(1302,1362),(1302,1363),(1302,1367),(1302,1378),(1302,1379),(1302,1380),(1302,1382),(1302,1383),(1302,1396),(1302,2020),(1302,2021),(1302,2022),(1302,2024),(1302,2025),(1302,2026),(1302,2027),(1302,8000),(1302,8001),(1302,8003),(1302,8004),(1302,8005),(1302,8006),(1302,8007),(1303,1057),(1303,1058),(1303,1059),(1303,1060),(1303,1062),(1303,1065),(1303,1322),(1303,1323),(1303,1324),(1303,1326),(1303,1327),(1303,1328),(1303,1329),(1303,1330),(1303,1331),(1303,1332),(1303,1333),(1303,1334),(1303,1335),(1303,1336),(1303,1337),(1303,1338),(1303,1339),(1303,1340),(1303,1341),(1303,1342),(1303,1343),(1303,1344),(1303,1345),(1303,1346),(1303,1347),(1303,1348),(1303,1349),(1303,1350),(1303,1351),(1303,1362),(1303,1363),(1303,1364),(1303,1365),(1303,1366),(1303,1367),(1303,1368),(1303,1369),(1303,1377),(1303,1378),(1303,1379),(1303,1382),(1303,1383),(1303,1408),(1303,1409),(1303,1413),(1303,1414),(1303,1415),(1303,1426),(1303,1428),(1303,1430),(1303,1433),(1303,1435),(1303,2020),(1303,2021),(1303,2022),(1303,2024),(1303,2025),(1303,2026),(1303,2027),(1303,9017),(1303,9018),(1303,9019),(1303,9020),(1303,9021),(1303,9022),(1303,9025),(1303,9026),(1303,9028),(1303,9029),(1303,9030),(1303,9031),(1303,9032),(1304,1001),(1304,1332),(1304,1333),(1304,1344),(1304,1347),(1304,6005),(1305,1001),(1305,1017),(1305,1020),(1305,1021),(1305,1035),(1305,1073),(1305,1116),(1305,1151),(1305,1164),(1305,1322),(1305,1332),(1305,1333),(1305,1342),(1305,1343),(1305,1344),(1305,1345),(1305,1346),(1305,1347),(1305,1348),(1305,1349),(1305,1350),(1305,1351),(1305,1352),(1305,1353),(1305,1354),(1305,1356),(1305,1358),(1305,1359),(1305,1360),(1305,1361),(1305,1362),(1305,1363),(1305,1364),(1305,1365),(1305,1366),(1305,1367),(1305,1368),(1305,1369),(1305,1378),(1305,2020),(1305,6001),(1305,6002),(1305,6003),(1305,6004),(1305,6006),(1305,9000),(1305,9004),(1305,9017),(1305,9018),(1305,9022),(1306,2022),(1309,1329),(1309,1340),(1309,1351),(1310,1323),(1310,1325),(1310,1327),(1310,1332),(1310,1333),(1310,1339),(1310,1341),(1310,1342),(1310,1343),(1310,1344),(1310,1346),(1310,1352),(1310,1353),(1310,1354),(1310,1362),(1310,1363),(1310,1364),(1310,1367),(1310,1369),(1310,1428),(1310,1433),(1310,2000),(1310,2002),(1310,2020),(1310,2021),(1310,2026),(1310,2027),(1315,1001),(1315,2020),(1315,2021),(1315,2027),(1317,1001),(1318,1001),(1318,1002),(1319,1001),(1319,1353),(1321,1343),(1322,1012),(1322,1013),(1322,1017),(1323,1341),(1323,2021),(1325,1351),(1325,9026),(1325,9028),(1325,9030),(1325,9031),(1325,9032),(1326,1343),(1326,1344),(1326,1351),(1326,1352),(1326,1353),(1327,1342),(1328,1001),(1328,1012),(1328,1017),(1328,1020),(1328,1073),(1328,1305),(1328,1322),(1328,1362),(1328,6001),(1328,6002),(1328,6017),(1328,6018),(1328,6022),(1328,6025),(1329,1001),(1331,1001),(1333,1001),(1333,1002),(1333,1007),(1333,1017),(1333,6002),(1333,6024),(1335,1007),(1335,6002),(1336,1007),(1336,1017),(1336,6002),(1336,6024),(1337,1007),(1337,1017),(1337,6002),(1337,6024),(1338,1007),(1338,1017),(1338,6002),(1338,6024),(1339,6002),(1340,1007),(1340,1017),(1340,6002),(1340,6024),(1341,6002),(1342,1017),(1342,6002),(1342,6024),(1343,1007),(1343,1017),(1343,6002),(1344,6002),(1345,1001),(1345,1007),(1345,1017),(1345,6024),(1346,1094),(1348,1001),(1350,6002),(1352,1007),(1352,1017),(1352,6002),(1352,6024),(1354,1001),(1354,1017),(1355,1001),(1356,1017),(1357,1001),(1360,1001),(1360,1023),(1360,1352),(1360,1353),(1360,1354),(1360,2003),(1360,6005),(1361,6002),(1362,1001),(1362,1023),(1362,1353),(1362,2003),(1362,6005),(1363,1352),(1363,1353),(1364,1001),(1364,6002),(1364,6008),(1364,6009),(1364,6010),(1364,6011),(1364,6012),(1364,6013),(1364,6014),(1364,6015),(1364,6016),(1364,6017),(1364,6018),(1364,6019),(1364,6020),(1364,6021),(1364,6022),(1364,6023),(1364,6024),(1364,6025),(1367,1001),(1367,6002),(1369,1017),(1374,6001),(1376,1001),(1376,1362),(1376,1363),(1376,1364),(1376,1367),(1376,6005),(1376,8000),(1376,8006),(1376,9022),(1376,9032),(1378,1032),(1378,1073),(1379,1001),(1379,1013),(1379,1073),(1379,1091),(1379,1116),(1379,1146),(1379,1164),(1379,1301),(1379,1329),(1379,1353),(1379,1362),(1379,1363),(1379,1364),(1379,1365),(1379,1367),(1379,6001),(1379,6002),(1379,6003),(1379,6004),(1379,6005),(1379,6006),(1379,6007),(1379,6010),(1379,6011),(1379,6014),(1379,6016),(1379,6017),(1379,6018),(1379,6020),(1379,6023),(1379,6025),(1380,1369),(1387,9016),(1388,8009),(1388,8012),(1388,9016),(1390,1001),(1390,8012),(1390,9016),(1391,8009),(1391,8012),(1391,9016),(1392,8009),(1392,8012),(1392,9016),(1396,1001),(1398,8009),(1398,9016),(1399,1001),(1400,8009),(1400,8010),(1400,8012),(1400,9016),(1401,8009),(1401,8012),(1401,9016),(1403,1001),(1403,8012),(1403,9016),(1406,1001),(1408,8012),(1408,9016),(1409,8009),(1410,1001),(1410,8012),(1410,9016),(1411,8012),(1411,9016),(1412,8012),(1412,9016),(1413,8009),(1413,8012),(1413,9016),(1414,8009),(1414,9016),(1418,8009),(1418,8012),(1418,9016),(1419,8009),(1419,9016),(1420,8012),(1421,8009),(1421,9016),(1422,8009),(1422,8012),(1422,9016),(1423,1001),(1423,1002),(1423,1007),(1423,1012),(1423,1017),(1423,1020),(1423,1035),(1423,1073),(1423,1362),(1423,6001),(1423,6002),(1423,6017),(1423,6025),(1424,1001),(1424,1012),(1424,1017),(1424,1020),(1424,1021),(1424,1032),(1424,1035),(1424,1073),(1424,1078),(1424,1116),(1424,1164),(1424,1200),(1424,6007),(1424,6017),(1424,6018),(1425,1001),(1425,1002),(1425,1012),(1425,1017),(1425,1020),(1425,1032),(1425,1035),(1425,1073),(1425,1078),(1425,6001),(1425,6002),(1425,6005),(1425,6008),(1425,6012),(1426,1001),(1426,1012),(1426,1017),(1426,1094),(1427,1001),(1427,1017),(1428,1001),(1428,1002),(1428,1007),(1428,1012),(1428,1013),(1428,1020),(1428,1023),(1428,1032),(1428,1035),(1428,1073),(1428,1078),(1428,1116),(1428,1164),(1428,2000),(1428,2002),(1428,2011),(1428,6001),(1428,6002),(1428,6003),(1428,6005),(1428,6007),(1428,6017),(1428,6022),(1428,9016),(1430,1001),(1430,1032),(1430,1116),(1430,1164),(1430,1322),(1430,6001),(1430,6007),(1430,6020),(1431,1001),(1433,1001),(1433,1352),(1433,1353),(1433,9017),(1433,9021),(1433,9022),(1436,1001),(1436,1002),(1436,1012),(1436,1073),(1436,1078),(1436,6001),(1436,6005),(1437,1001),(1437,1002),(1437,1012),(1437,1017),(1437,1073),(1437,6002),(1438,1001),(1438,1002),(1438,1012),(1438,1017),(1438,1020),(1438,1073),(1438,1078),(1439,1012),(1439,1078),(1440,1001),(1440,1002),(1440,1012),(1440,1017),(1440,1073),(1440,1078),(1440,1362),(1441,1078),(1441,1362),(1443,1001),(1443,1002),(1443,1078),(1443,1322),(1444,1001),(1444,1002),(1444,1012),(1444,1020),(1444,1035),(1444,1073),(1444,1078),(1444,1116),(1444,2018),(1444,2020),(1444,6012),(1444,6017),(1446,1001),(1446,1002),(1446,1012),(1446,1078),(1447,1001),(1447,1002),(1447,1078),(1449,1001),(1451,8009),(1451,8012),(1451,9016),(1454,1001),(1454,1002),(1454,1003),(1454,1007),(1454,1012),(1454,1017),(1454,1020),(1454,1021),(1454,1032),(1454,1035),(1454,1055),(1454,1073),(1454,1078),(1454,1116),(1454,1158),(1454,1164),(1454,1305),(1454,1309),(1454,1322),(1454,1329),(1454,1333),(1454,1362),(1454,1363),(1454,2000),(1454,2002),(1454,2009),(1454,2011),(1454,2020),(1454,2021),(1454,6001),(1454,6002),(1454,6005),(1454,6006),(1454,6008),(1454,6009),(1454,6010),(1454,6012),(1454,6017),(1454,6018),(1454,6019),(1454,6020),(1454,6021),(1454,6022),(1454,6023),(1454,6024),(1454,6025),(1455,1001),(1455,1035),(1456,1001),(1456,1012),(1456,1017),(1456,1032),(1458,1001),(1459,1001),(1459,1002),(1459,1012),(1459,1017),(1459,1078),(1460,1001),(1460,1002),(1460,1012),(1460,1017),(1460,1078),(1461,1001),(1462,1001),(1462,1002),(1463,1001),(1463,1002),(1463,1012),(1463,1020),(1463,1035),(1463,6025),(1464,1017),(1467,1001),(1467,1002),(1467,1012),(1467,1020),(1467,1035),(1467,1073),(1467,6012),(1467,6017),(1476,9016),(1478,1001),(1478,1017),(1478,1032),(1478,1055),(1478,1073),(1478,1078),(1478,1116),(1478,1158),(1478,1164),(1478,1305),(1478,1322),(1478,1329),(1478,1362),(1478,2020),(1478,6001),(1478,6002),(1478,6005),(1478,6006),(1478,6017),(1478,6020),(1478,6022),(1478,6025),(1480,1001),(1481,1001),(1481,1002),(1481,1012),(1481,1017),(1481,1035),(1481,1073),(1481,1362),(1481,6005),(1482,1001),(1483,1001),(1483,1073),(1484,1001),(1484,1002),(1484,1007),(1484,1009),(1484,1012),(1484,1015),(1484,1017),(1484,1020),(1484,1035),(1484,1047),(1484,1073),(1484,1078),(1484,1094),(1484,1116),(1484,1325),(1484,1362),(1484,2009),(1484,2011),(1484,2018),(1484,2020),(1484,6001),(1484,6002),(1484,6005),(1484,6008),(1484,6012),(1484,6017),(1487,8012),(1487,9016),(1489,1001),(1490,1001),(1490,1002),(1490,1012),(1490,1017),(1490,1020),(1490,1023),(1490,1032),(1490,1035),(1490,1116),(1490,1164),(1490,1329),(1490,1362),(1490,2009),(1490,2011),(1490,2020),(1490,6001),(1490,6002),(1490,6005),(1490,6008),(1490,6012),(1490,6017),(1490,6018),(1490,6020),(1490,6023),(1490,6024),(1490,6025),(1492,1001),(1494,1001),(1495,1001),(1497,1001),(1498,1001),(1499,1001),(1499,1017),(1500,1013),(1502,1001),(1503,1001),(1503,1002),(1503,1012),(1503,1017),(1503,1073),(1503,1078),(1504,1001),(1504,1002),(1504,1012),(1504,1017),(1504,1073),(1504,1078),(1506,1001),(1508,1001),(1508,1012),(1508,1017),(1508,1020),(1508,1021),(1508,1032),(1508,1035),(1508,1073),(1508,1078),(1508,6001),(1508,6002),(1508,6005),(1508,6007),(1508,6017),(1508,6018),(1508,6020),(1508,6025),(1509,1001),(1510,1001),(1510,1012),(1510,1013),(1510,1017),(1510,1073),(1510,1078),(1510,6022),(1513,1001),(1514,1035),(1518,1379),(1518,1382),(1518,1383),(1519,1001),(1519,1017),(1519,1020),(1519,1073),(1519,6017),(1520,1001),(1520,1035),(1520,1078),(1522,1012),(1526,1001),(1530,1001),(1530,1020),(1530,1032),(1530,1073),(1530,1078),(1530,6002),(1530,6018),(1530,6020),(1530,6022),(1530,6025),(1532,1001),(1535,1001),(1535,1002),(1535,1017),(1535,1020),(1535,1035),(1535,1073),(1535,1078),(1535,6012),(1535,6017),(1536,1001),(1536,1020),(1536,1032),(1536,1035),(1536,1073),(1536,6017),(1537,1035),(1539,1001),(1539,1020),(1539,1035),(1539,1078),(1539,1362),(1540,1001),(1540,1035),(1540,1073),(1542,1001),(1542,1002),(1542,1012),(1545,1001),(1546,1396),(1546,2020),(1546,2027),(1546,8000),(1546,8001),(1546,8003),(1546,8006),(1548,1001),(1548,1002),(1548,1007),(1548,1012),(1548,1017),(1548,1020),(1548,1021),(1548,1032),(1548,1035),(1548,1055),(1548,1073),(1548,1116),(1548,1147),(1548,1158),(1548,1164),(1548,1200),(1548,1305),(1548,1322),(1548,1329),(1548,1353),(1548,1362),(1548,1382),(1548,2009),(1548,2020),(1548,6001),(1548,6002),(1548,6004),(1548,6005),(1548,6015),(1548,6017),(1548,6018),(1548,6020),(1548,6025),(1549,1012),(1549,1017),(1549,1020),(1550,1012),(1550,1078),(1550,6005),(1550,6025),(1551,1012),(1552,1001),(1552,1002),(1552,1007),(1552,1012),(1552,1017),(1552,1020),(1552,1021),(1552,1032),(1552,1035),(1552,1055),(1552,1073),(1552,1116),(1552,1158),(1552,1164),(1552,1200),(1552,1305),(1552,1322),(1552,1329),(1552,1362),(1552,1382),(1552,2000),(1552,2009),(1552,2020),(1552,6002),(1552,6004),(1552,6005),(1552,6015),(1552,6017),(1552,6018),(1552,6020),(1552,6025),(1555,1389),(1555,1391),(1555,1433),(1556,1001),(1556,1012),(1556,1035),(1556,1078),(1556,6017),(1556,6025),(1557,1001),(1561,1001),(1561,1012),(1561,1035),(1561,6001),(1561,6005),(1561,6017),(1563,1001),(1563,1009),(1563,1012),(1563,1032),(1563,1035),(1563,1078),(1563,6025),(1564,1001),(1565,1001),(1565,1002),(1565,1012),(1565,1017),(1565,1020),(1565,1021),(1565,1032),(1565,1035),(1565,1073),(1565,1078),(1565,2011),(1565,6001),(1565,6005),(1565,6012),(1565,6017),(1565,6020),(1566,1001),(1566,1012),(1566,1020),(1566,1032),(1566,1035),(1566,1073),(1566,6017),(1567,1001),(1567,1012),(1567,1017),(1567,1020),(1567,1032),(1567,1035),(1567,1073),(1567,6017),(1568,1001),(1571,1012),(1575,1001),(1576,1001),(1576,1002),(1576,1012),(1576,1020),(1576,1035),(1576,1073),(1576,6007),(1576,6017),(1577,1001),(1577,1002),(1577,1012),(1577,1020),(1577,1032),(1577,1035),(1577,1073),(1577,1078),(1577,1164),(1577,6012),(1577,6017),(1578,1017),(1578,2020),(1578,6017),(1579,1001),(1579,1020),(1579,1035),(1579,1073),(1579,6017),(1581,1001),(1581,1035),(1582,1001),(1583,1001),(1583,1020),(1583,1032),(1583,1035),(1583,1073),(1583,6012),(1583,6017),(1584,1001),(1584,1002),(1584,1017),(1584,1020),(1584,1032),(1584,1035),(1584,1073),(1584,1362),(1584,6001),(1584,6012),(1584,6017),(1585,1001),(1585,1020),(1585,1032),(1585,1035),(1585,1073),(1585,6012),(1587,1001),(1587,1035),(1587,1073),(1587,6017),(1588,1001),(1588,1020),(1588,1035),(1588,1073),(1588,6017),(1589,1001),(1589,1002),(1589,1017),(1589,1020),(1589,1035),(1589,1073),(1589,2009),(1589,6005),(1589,6007),(1589,6017),(1590,1001),(1590,1020),(1591,1001),(1591,1002),(1591,1012),(1591,1017),(1591,1020),(1591,1035),(1591,1073),(1591,6005),(1591,6017),(1592,1001),(1592,1020),(1592,1032),(1592,1035),(1592,1073),(1592,1078),(1592,6007),(1592,6017),(1593,1001),(1593,1035),(1597,1020),(1597,1035),(1597,1073),(1597,1362),(1598,1001),(1599,1001),(1599,1002),(1599,1003),(1599,1007),(1599,1012),(1599,1017),(1599,1020),(1599,1021),(1599,1023),(1599,1032),(1599,1035),(1599,1055),(1599,1073),(1599,1078),(1599,1116),(1599,1140),(1599,1147),(1599,1164),(1599,1322),(1599,1323),(1599,1329),(1599,1459),(1599,1460),(1599,1461),(1599,1462),(1599,2011),(1599,6001),(1599,6003),(1599,6005),(1599,6006),(1599,6008),(1599,6009),(1599,6010),(1599,6016),(1599,6017),(1599,6018),(1599,6019),(1599,6020),(1599,6022),(1599,6023),(1599,6024),(1599,6025),(1599,9100),(1599,9104),(1599,9106),(1600,1001),(1600,1035),(1600,6025),(1601,1001),(1601,1012),(1601,1017),(1603,1001),(1603,1012),(1603,1017),(1603,1020),(1603,1035),(1605,1001),(1605,1035),(1607,1001),(1608,1001),(1608,1035),(1608,1073),(1609,1001),(1609,1035),(1610,1001),(1610,1012),(1610,1035),(1611,1001),(1611,1020),(1611,1035),(1613,1001),(1613,1002),(1613,1012),(1613,1020),(1613,1035),(1613,1073),(1613,6012),(1613,6017),(1614,1001),(1614,1002),(1614,1012),(1614,1017),(1614,1035),(1614,1073),(1614,1362),(1614,6005),(1614,6025),(1616,1001),(1616,1035),(1618,1001),(1618,1035),(1619,1001),(1619,1017),(1619,1116),(1619,1146),(1619,1301),(1619,1322),(1619,1329),(1619,1362),(1619,1363),(1619,1364),(1619,1367),(1619,6001),(1619,6002),(1619,6006),(1619,6017),(1619,6018),(1619,6020),(1619,6023),(1619,6025),(1621,1001),(1622,1001),(1622,1035),(1622,6017),(1623,1001),(1623,1002),(1623,1020),(1623,1035),(1623,1073),(1624,1001),(1624,1002),(1624,1017),(1624,1020),(1624,1035),(1624,1073),(1624,1078),(1624,6012),(1624,6017),(1625,1001),(1625,1020),(1625,1032),(1625,1035),(1625,1073),(1626,1035),(1627,1001),(1628,1001),(1628,1012),(1628,1020),(1628,1032),(1628,1035),(1628,1055),(1628,1362),(1628,6002),(1628,6017),(1629,1001),(1629,1012),(1629,1017),(1629,1032),(1629,1035),(1629,1073),(1630,1001),(1630,1020),(1630,1035),(1631,1001),(1631,1002),(1631,1012),(1631,1017),(1631,1020),(1631,1035),(1631,1073),(1631,6002),(1631,6005),(1631,6012),(1631,6017),(1632,1001),(1632,1012),(1632,1017),(1632,1020),(1632,1035),(1632,1073),(1632,6017),(1633,1001),(1633,1020),(1633,1035),(1633,1073),(1633,1078),(1633,6017),(1635,1078),(1636,1001),(1636,1035),(1636,1073),(1637,1035),(1637,1073),(1637,1078),(1637,6001),(1638,1001),(1638,1020),(1638,1032),(1638,1035),(1638,6012),(1638,6017),(1639,1001),(1639,1035),(1639,1073),(1640,1007),(1640,1020),(1640,1055),(1640,1062),(1640,1078),(1640,1116),(1640,1134),(1640,1322),(1640,1329),(1640,1353),(1640,1362),(1640,1363),(1640,6002),(1640,6015),(1640,6025),(1641,1001),(1641,1012),(1641,1017),(1641,1020),(1641,1035),(1641,1073),(1641,6017),(1642,1001),(1644,1001),(1644,1002),(1644,1012),(1644,1017),(1644,1020),(1644,1035),(1644,1073),(1644,6002),(1644,6005),(1644,6012),(1644,6017),(1645,1001),(1645,1012),(1645,1017),(1645,1035),(1645,1164),(1645,2020),(1645,6005),(1645,6017),(1645,6020),(1645,6025),(1647,1003),(1647,1009),(1647,1362),(1647,6021),(1648,1001),(1648,2020),(1648,6005),(1649,8009),(1649,8012),(1650,1001),(1650,1035),(1653,1001),(1653,1012),(1653,1017),(1653,1020),(1653,1032),(1653,1035),(1653,1073),(1653,1146),(1653,1158),(1653,1164),(1653,1305),(1653,1329),(1653,1362),(1653,1363),(1653,2000),(1653,2020),(1653,6001),(1653,6002),(1653,6005),(1653,6006),(1653,6010),(1653,6012),(1653,6017),(1653,6020),(1653,6023),(1653,6025),(1654,1001),(1654,1017),(1654,1020),(1654,1032),(1654,1035),(1654,6005),(1655,1017),(1655,6005),(1656,1001),(1656,1020),(1656,1035),(1657,1001),(1658,1035),(1658,6017),(1661,1002),(1661,1035),(1663,1001),(1663,1002),(1663,1003),(1663,1005),(1663,1007),(1663,1012),(1663,1013),(1663,1017),(1663,1020),(1663,1021),(1663,1032),(1663,1035),(1663,1055),(1663,1073),(1663,1078),(1663,1116),(1663,1146),(1663,1158),(1663,1164),(1663,1305),(1663,1322),(1663,1329),(1663,1362),(1663,1363),(1663,2011),(1663,2020),(1663,6001),(1663,6002),(1663,6005),(1663,6006),(1663,6010),(1663,6012),(1663,6017),(1663,6018),(1663,6020),(1663,6025),(1664,1001),(1666,1001),(1666,1017),(1666,1020),(1666,6017),(1667,1001),(1667,1002),(1667,1005),(1667,1301),(1667,1305),(1667,1322),(1667,1329),(1667,1362),(1667,2020),(1667,6005),(1667,6006),(1668,1333),(1668,1362),(1668,1363),(1668,1364),(1668,1367),(1671,1001),(1674,6017),(1675,1032),(1675,6017),(1677,1001),(1677,1396),(1677,1400),(1677,2020),(1677,2021),(1677,2025),(1681,1001),(1681,1002),(1681,1012),(1681,1035),(1681,1073),(1681,1362),(1681,6005),(1681,6025),(1685,1001),(1685,1055),(1685,1116),(1685,1305),(1685,1322),(1685,1329),(1685,1353),(1685,1363),(1685,6005),(1685,6025),(1687,1012),(1688,1012),(1688,1078),(1688,6005),(1688,6025),(1691,1001),(1693,1001),(1693,1035),(1693,1362),(1693,2020),(1693,2021),(1693,2025),(1693,6005),(1693,6025),(1694,2020),(1694,2021),(1694,2022),(1694,2025),(1694,2026),(1694,2027),(1695,1001),(1695,1017),(1695,1020),(1695,1035),(1695,2009),(1695,2020),(1695,2021),(1695,6002),(1695,6005),(1695,6012),(1695,6017),(1695,6020),(1698,2020),(1698,2021),(1699,2020),(1700,2020),(1701,2020),(1702,2020),(1703,2020),(1703,2021),(1704,2020),(1704,2021),(1707,1001),(1707,1023),(1707,1409),(1707,1413),(1707,1414),(1707,1415),(1707,1429),(1707,2003),(1707,2020),(1707,2021),(1707,2022),(1707,2024),(1707,2025),(1707,2026),(1707,2027),(1707,6005),(1708,1001),(1708,2020),(1708,6005),(1708,6018),(1710,1001),(1710,1021),(1710,1433),(1710,2020),(1710,2021),(1710,6023),(1711,1001),(1711,2020),(1712,1001),(1712,2020),(1712,6005),(1713,1001),(1713,1023),(1713,1428),(1713,1433),(1713,2003),(1713,2020),(1713,2021),(1713,2022),(1713,2025),(1713,2026),(1713,2027),(1713,6005),(1714,1001),(1714,1433),(1714,6005),(1715,1001),(1715,1430),(1715,1433),(1715,2020),(1717,1427),(1717,1428),(1717,1433),(1717,2020),(1717,2021),(1717,2026),(1717,2027),(1721,1001),(1721,1002),(1721,1007),(1721,1017),(1721,1032),(1721,1035),(1721,1073),(1721,1078),(1721,1116),(1721,1158),(1721,1164),(1721,1329),(1721,1353),(1721,1362),(1721,1363),(1721,1433),(1721,2009),(1721,2020),(1721,6002),(1721,6005),(1721,6009),(1721,6017),(1721,6018),(1721,6023),(1721,6025),(1721,9016),(1722,1001),(1723,2020),(1723,2021),(1724,1001),(1725,1001),(1725,1002),(1725,1012),(1725,1017),(1725,1032),(1725,1055),(1725,1073),(1725,1364),(1725,1405),(1725,1408),(1725,1409),(1725,1414),(1725,1415),(1725,1426),(1725,1427),(1725,1428),(1725,1429),(1725,1430),(1725,1431),(1725,1432),(1725,1433),(1725,1434),(1725,1435),(1725,1436),(1725,2020),(1725,2021),(1725,6002),(1725,6005),(1725,6017),(1725,6025),(1726,1001),(1726,1433),(1726,2020),(1726,2021),(1726,2022),(1726,6005),(1727,2020),(1728,2020),(1731,1001),(1731,1023),(1731,2020),(1731,2021),(1731,2026),(1731,6005),(1732,1001),(1732,1002),(1732,1017),(1732,1020),(1732,1023),(1732,1035),(1732,2020),(1732,2021),(1732,6002),(1732,6005),(1733,1001),(1733,1035),(1734,1001),(1734,1017),(1734,1020),(1734,1032),(1734,1035),(1734,6005),(1736,6001),(1743,2020),(1744,1001),(1744,1002),(1744,1003),(1744,1017),(1744,1055),(1745,1001),(1746,1001),(1746,1020),(1746,1035),(1746,1073),(1746,6017),(1747,1001),(1753,1001),(1756,1001),(1756,1164),(1756,2020),(1756,6017),(1759,2020),(1760,1001),(1760,1003),(1760,1433),(1760,2020),(1760,2021),(1760,6005),(1761,1001),(1764,1001),(1765,1001),(1765,1035),(1765,2020),(1765,6005),(1766,1001),(1766,1017),(1766,1032),(1766,1035),(1766,1073),(1766,2020),(1766,6002),(1766,6005),(1766,6023),(1767,1001),(1767,1012),(1767,1017),(1767,1020),(1767,1021),(1767,1032),(1767,1035),(1767,1073),(1767,1078),(1767,6001),(1767,6002),(1767,6005),(1767,6017),(1767,6018),(1767,6020),(1767,6025),(1768,2020),(1768,2021),(1769,1001),(1769,2020),(1769,6005),(1770,2020),(1770,2021),(1774,1001),(1774,2020),(1774,2021),(1774,2027),(1775,1001),(1775,2020),(1775,6005),(1776,1001),(1777,1001),(1777,2020),(1778,1001),(1778,2020),(1778,6005),(1780,1322),(1780,1323),(1780,1324),(1780,1325),(1780,1326),(1780,1327),(1780,1329),(1780,1330),(1780,2020),(1780,2021),(1780,2022),(1780,2025),(1780,2026),(1780,2027),(1781,1001),(1781,2020),(1782,1001),(1784,2020),(1784,2021),(1784,2022),(1784,2025),(1784,2026),(1784,2027),(1786,1428),(1786,1433),(1786,2020),(1786,2021),(1786,2022),(1786,2026),(1788,2020),(1789,1001),(1789,2020),(1789,2021),(1791,1001),(1791,1433),(1791,2020),(1792,2020),(1792,2021),(1792,2022),(1792,2026),(1794,2003),(1794,2021),(1795,2020),(1798,1001),(1804,1001),(1804,2020),(1805,1001),(1805,2020),(1805,2021),(1805,2026),(1808,2020),(1808,2021),(1810,2020),(1816,1001),(1818,1001),(1818,2020),(1818,2021),(1819,2020),(1819,2021),(1819,2022),(1819,2024),(1819,2025),(1819,2026),(1819,2027),(1820,1001),(1820,2020),(1820,2021),(1821,2020),(1824,1001),(1824,1023),(1824,2020),(1824,2021),(1825,1001),(1825,1023),(1825,1428),(1825,1433),(1825,2020),(1825,2021),(1825,2026),(1825,6005),(1826,2020),(1826,2021),(1826,2026),(1827,1001),(1827,1023),(1827,2020),(1827,2021),(1827,2025),(1827,2026),(1827,6005),(1828,1001),(1829,1001),(1829,1023),(1829,2020),(1829,6005),(1830,1001),(1830,1023),(1830,6005),(1831,2020),(1831,2021),(1831,6002),(1831,6005),(1832,1001),(1832,1023),(1832,6005),(1835,1001),(1835,1023),(1835,1433),(1835,2020),(1835,2021),(1835,6005),(1836,1001),(1836,1426),(1836,1428),(1836,1433),(1836,2020),(1836,2021),(1836,6005),(1837,1322),(1837,1325),(1837,1326),(1837,1329),(1837,2020),(1837,2021),(1838,2020),(1839,1001),(1839,1017),(1839,1023),(1839,1032),(1839,1035),(1839,1116),(1839,1158),(1839,1305),(1839,1322),(1839,1326),(1839,1329),(1839,1362),(1839,2021),(1839,2022),(1839,2025),(1839,2026),(1839,6002),(1839,6005),(1839,6008),(1839,6009),(1839,6017),(1839,6018),(1839,6025),(1840,1001),(1840,2020),(1841,1001),(1841,2020),(1841,2021),(1842,1001),(1842,2020),(1843,1001),(1844,2020),(1844,2021),(1846,2020),(1846,2021),(1848,1001),(1849,1001),(1849,2020),(1849,2021),(1850,1001),(1850,1012),(1850,1017),(1850,1405),(1850,1406),(1850,1407),(1850,1408),(1850,1409),(1850,1410),(1850,1414),(1850,1415),(1850,1433),(1850,2021),(1851,1001),(1853,2020),(1854,1001),(1854,2009),(1854,2010),(1854,2011),(1854,2018),(1854,2020),(1854,2021),(1854,2022),(1854,2025),(1854,2026),(1854,2027),(1854,6005),(1856,1001),(1856,2020),(1856,2021),(1858,2020),(1858,2021),(1858,2022),(1858,2025),(1858,2026),(1858,2027),(1861,2020),(1862,1001),(1862,1002),(1862,1003),(1862,1005),(1862,1006),(1862,1009),(1862,1012),(1862,1013),(1862,1017),(1862,1020),(1862,1021),(1862,1028),(1862,1032),(1862,1034),(1862,1035),(1862,1036),(1862,1038),(1862,1043),(1862,1045),(1862,1050),(1862,1055),(1862,1058),(1862,1067),(1862,1071),(1862,1073),(1862,1078),(1862,1090),(1862,1093),(1862,1109),(1862,1116),(1862,1126),(1862,1134),(1862,1140),(1862,1146),(1862,1151),(1862,1158),(1862,1164),(1862,1166),(1862,1171),(1862,1173),(1862,1174),(1862,1175),(1862,1177),(1862,1200),(1862,1301),(1862,1303),(1862,1305),(1862,1309),(1862,1311),(1862,1313),(1862,1319),(1862,1322),(1862,1326),(1862,1329),(1862,1332),(1862,1333),(1862,1343),(1862,1344),(1862,1345),(1862,1347),(1862,1353),(1862,1362),(1862,1363),(1862,1364),(1862,1365),(1862,1367),(1862,1369),(1862,1382),(1862,1383),(1862,1391),(1862,1459),(1862,1460),(1862,1461),(1862,2000),(1862,2002),(1862,2009),(1862,2020),(1862,2021),(1862,6001),(1862,6002),(1862,6003),(1862,6005),(1862,6006),(1862,6007),(1862,6008),(1862,6009),(1862,6010),(1862,6012),(1862,6014),(1862,6015),(1862,6016),(1862,6017),(1862,6018),(1862,6019),(1862,6020),(1862,6021),(1862,6022),(1862,6023),(1862,6024),(1862,6025),(1863,2020),(1863,2021),(1863,2027),(1866,2020),(1866,2021),(1867,2020),(1867,2021),(1869,2020),(1870,1001),(1870,1012),(1870,1020),(1870,1032),(1870,1035),(1870,1073),(1870,2009),(1870,2020),(1870,2021),(1870,6002),(1870,6017),(1870,6018),(1870,6020),(1870,6021),(1870,6022),(1870,6023),(1870,6024),(1870,6025),(1871,2020),(1873,2020),(1875,2020),(1876,2020),(1876,2021),(1876,2026),(1878,2020),(1879,2020),(1879,2021),(1882,2020),(1882,2021),(1882,2027),(1884,2020),(1884,2021),(1886,2020),(1886,2021),(1886,2026),(1888,1001),(1888,2020),(1888,2021),(1892,1001),(1892,1002),(1892,1012),(1892,1020),(1892,1035),(1892,1073),(1892,6017),(1893,1001),(1893,6017),(1897,1001),(1897,1002),(1897,1012),(1897,1017),(1897,1020),(1897,1035),(1897,1073),(1897,1164),(1897,2010),(1897,2020),(1897,2021),(1897,6002),(1897,6005),(1897,6017),(1897,6018),(1897,6020),(1897,6023),(1897,6025),(1898,2020),(1899,1001),(1901,1001),(1903,1001),(1903,1002),(1904,1001),(1909,1001),(1909,1035),(1909,1078),(1909,6025),(1910,1001),(1910,1007),(1910,1158),(1910,1353),(1910,1363),(1910,1426),(1910,1433),(1912,1001),(1912,1002),(1912,1017),(1912,1020),(1912,1023),(1912,1035),(1912,2020),(1912,2021),(1912,6002),(1912,6005),(1913,1116),(1913,1362),(1914,1001),(1914,1002),(1914,1003),(1914,1007),(1914,1009),(1914,1012),(1914,1013),(1914,1017),(1914,1020),(1914,1021),(1914,1032),(1914,1035),(1914,1036),(1914,1055),(1914,1073),(1914,1078),(1914,1116),(1914,1140),(1914,1146),(1914,1147),(1914,1164),(1914,1171),(1914,1311),(1914,1319),(1914,1322),(1914,1329),(1914,1332),(1914,1333),(1914,1342),(1914,1344),(1914,1362),(1914,1364),(1914,2009),(1914,2011),(1914,2020),(1914,2021),(1914,6001),(1914,6002),(1914,6005),(1914,6010),(1914,6016),(1914,6017),(1914,6018),(1914,6019),(1914,6020),(1914,6022),(1914,6023),(1914,6024),(1914,6025),(1916,1001),(1916,1017),(1916,1020),(1916,1035),(1916,1073),(1916,6017),(1920,1001),(1920,1035),(1922,1001),(1923,1001),(1923,1017),(1923,1020),(1923,1032),(1923,1073),(1923,1078),(1923,6002),(1923,6012),(1923,6017),(1923,6020),(1925,2011),(1926,1001),(1927,1001),(1927,1017),(1927,1362),(1927,6001),(1927,6017),(1927,6018),(1927,6022),(1928,2027),(1929,6001),(1929,6005),(1929,6017),(1931,1001),(1931,1017),(1931,1164),(1933,1164),(1935,1001),(1938,1001),(1938,1002),(1938,1017),(1938,1020),(1938,1362),(1938,1363),(1938,6001),(1938,6002),(1938,6003),(1938,6010),(1938,6018),(1938,6022),(1938,6023),(1938,6025),(1939,2021),(1939,2026),(1939,2027),(1943,1001),(1943,1012),(1943,1017),(1943,1020),(1943,1021),(1943,1032),(1943,1035),(1943,1036),(1943,1055),(1943,1073),(1943,1078),(1943,1116),(1943,1164),(1943,1305),(1943,1322),(1943,1329),(1943,1362),(1943,1363),(1943,2020),(1943,6001),(1943,6002),(1943,6005),(1943,6006),(1943,6007),(1943,6008),(1943,6009),(1943,6010),(1943,6012),(1943,6017),(1943,6018),(1943,6020),(1943,6022),(1943,6023),(1943,6024),(1943,6025),(1946,1433),(1949,1428),(1953,1001),(1953,1002),(1953,1003),(1953,1007),(1953,1009),(1953,1012),(1953,1013),(1953,1017),(1953,1020),(1953,1021),(1953,1023),(1953,1032),(1953,1035),(1953,1055),(1953,1067),(1953,1071),(1953,1073),(1953,1078),(1953,1090),(1953,1093),(1953,1094),(1953,1116),(1953,1140),(1953,1146),(1953,1147),(1953,1151),(1953,1158),(1953,1164),(1953,1177),(1953,1200),(1953,1301),(1953,1303),(1953,1305),(1953,1322),(1953,1329),(1953,1333),(1953,1344),(1953,1362),(1953,1363),(1953,1364),(1953,1365),(1953,1459),(1953,1460),(1953,1461),(1953,2002),(1953,2009),(1953,2011),(1953,2020),(1953,2021),(1953,6001),(1953,6002),(1953,6003),(1953,6004),(1953,6005),(1953,6006),(1953,6007),(1953,6008),(1953,6009),(1953,6010),(1953,6012),(1953,6015),(1953,6016),(1953,6017),(1953,6018),(1953,6019),(1953,6020),(1953,6021),(1953,6022),(1953,6023),(1953,6024),(1953,6025),(1954,1001),(1954,1002),(1954,1003),(1954,1017),(1954,1166),(1954,1200),(1954,1414),(1954,6002),(1957,1001),(1958,1001),(1958,1002),(1958,1003),(1958,1007),(1958,1012),(1958,1013),(1958,1017),(1958,1020),(1958,1021),(1958,1023),(1958,1032),(1958,1035),(1958,1045),(1958,1055),(1958,1067),(1958,1078),(1958,1090),(1958,1093),(1958,1116),(1958,1151),(1958,1158),(1958,1177),(1958,1200),(1958,1301),(1958,1305),(1958,1322),(1958,1329),(1958,1344),(1958,1363),(1958,1364),(1958,1365),(1958,2002),(1958,2009),(1958,2011),(1958,2020),(1958,2021),(1958,6001),(1958,6002),(1958,6003),(1958,6004),(1958,6005),(1958,6006),(1958,6007),(1958,6008),(1958,6009),(1958,6010),(1958,6012),(1958,6015),(1958,6016),(1958,6017),(1958,6019),(1958,6020),(1958,6021),(1958,6022),(1958,6023),(1958,6024),(1958,6025),(1960,1001),(1960,1002),(1960,1032),(1961,1032),(1964,1001),(1964,1017),(1964,1035),(1964,1329),(1964,6002),(1964,6017),(1965,1001),(1965,1002),(1965,1012),(1965,1017),(1965,1020),(1965,1035),(1965,1090),(1965,1322),(1965,1329),(1965,1362),(1965,6001),(1965,6002),(1965,6017),(1969,1001),(1969,1146),(1969,1301),(1969,1362),(1969,1363),(1969,1364),(1969,1365),(1969,1367),(1969,6002),(1969,6017),(1971,1001),(1971,1017),(1971,1020),(1971,1055),(1971,2020),(1975,6001),(1975,6017),(1975,6018),(1975,6023),(1976,1001),(1976,1002),(1976,1003),(1977,1001),(1979,6001),(1983,6005),(1983,6006),(1983,6017),(1984,1329),(1984,6001),(1984,6002),(1986,1362),(1986,6002),(1988,6001),(1988,6002),(1988,6005),(1990,6001),(1990,6002),(1994,1001),(1994,1017),(1994,1020),(1994,1035),(1994,1073),(1994,6017),(1996,1001),(1996,1002),(1996,1003),(1996,1004),(1996,1007),(1996,1009),(1996,1011),(1996,1012),(1996,1017),(1996,1020),(1996,1021),(1996,1023),(1996,1032),(1996,1034),(1996,1035),(1996,1036),(1996,1055),(1996,1065),(1996,1067),(1996,1068),(1996,1071),(1996,1073),(1996,1116),(1996,1140),(1996,1146),(1996,1147),(1996,1148),(1996,1151),(1996,1158),(1996,1159),(1996,1164),(1996,1171),(1996,1200),(1996,1301),(1996,1305),(1996,1309),(1996,1313),(1996,1319),(1996,1322),(1996,1323),(1996,1329),(1996,1332),(1996,1333),(1996,1342),(1996,1344),(1996,1347),(1996,1353),(1996,1362),(1996,1363),(1996,1365),(1996,1383),(1996,1391),(1996,1433),(1996,1460),(1996,1461),(1996,1462),(1996,2009),(1996,2010),(1996,2011),(1996,2020),(1996,2021),(1996,2022),(1996,2025),(1996,2027),(1996,6001),(1996,6002),(1996,6003),(1996,6004),(1996,6005),(1996,6006),(1996,6008),(1996,6009),(1996,6010),(1996,6012),(1996,6015),(1996,6016),(1996,6017),(1996,6018),(1996,6019),(1996,6020),(1996,6022),(1996,6023),(1996,6024),(1996,6025),(1998,1001),(1999,1001),(1999,1002),(1999,1073),(2004,1001),(2004,1017),(2004,1032),(2004,1073),(2005,1001),(2005,1017),(2005,1073),(2006,1001),(2007,1001),(2008,1001),(2009,1001),(2010,8013),(2010,8014),(2011,1001),(2011,1032),(2011,1073),(2012,1001),(2018,1001),(2021,8013),(2021,8014),(2022,8013),(2022,8014),(2022,8016),(2022,8017),(2022,8018),(2023,8013),(2023,8014),(2024,8013),(2024,8014),(2024,8016),(2025,8013),(2025,8014),(2026,8013),(2026,8014),(2026,8016),(2027,8013),(2027,8014),(2028,8013),(2028,8014),(2030,1001),(2031,1001),(2031,8012),(2032,1001),(2032,6005),(2032,6017),(2032,6025),(2033,1001),(2033,1002),(2033,1007),(2033,1012),(2033,1017),(2033,1020),(2033,1021),(2033,1032),(2033,1055),(2033,1073),(2033,1078),(2033,1116),(2033,1146),(2033,1459),(2033,1460),(2033,2020),(2033,6001),(2033,6002),(2033,6017),(2033,6020),(2033,6022),(2033,6023),(2033,6024),(2033,6025),(2033,9106),(2033,9108),(2033,9109),(2033,9113),(2035,8012),(2036,1001),(2036,8012),(2039,1001),(2042,2020),(2043,1001),(2044,1001),(2044,1002),(2044,1003),(2044,1020),(2048,1001),(2048,1020),(2048,1116),(2048,1301),(2048,1329),(2048,1362),(2048,1363),(2048,6001),(2048,6002),(2048,6017),(2057,1001),(2057,1020),(2057,1116),(2057,1301),(2057,1329),(2057,1362),(2057,1363),(2057,6001),(2057,6002),(2057,6017),(2059,1001),(2059,1002),(2059,1003),(2059,1004),(2059,1005),(2059,1006),(2059,1007),(2059,1009),(2059,1011),(2059,1012),(2059,1013),(2059,1015),(2059,1017),(2059,1020),(2059,1021),(2059,1023),(2059,1026),(2059,1032),(2059,1034),(2059,1035),(2059,1036),(2059,1043),(2059,1055),(2059,1065),(2059,1067),(2059,1071),(2059,1072),(2059,1073),(2059,1078),(2059,1090),(2059,1093),(2059,1116),(2059,1121),(2059,1140),(2059,1146),(2059,1147),(2059,1149),(2059,1151),(2059,1158),(2059,1164),(2059,1171),(2059,1177),(2059,1200),(2059,1301),(2059,1302),(2059,1303),(2059,1305),(2059,1306),(2059,1309),(2059,1322),(2059,1329),(2059,1333),(2059,1344),(2059,1353),(2059,1362),(2059,1363),(2059,1364),(2059,1365),(2059,1367),(2059,2000),(2059,2001),(2059,2002),(2059,2009),(2059,2011),(2059,2020),(2059,2021),(2059,2022),(2059,2025),(2059,2026),(2059,2027),(2059,6001),(2059,6002),(2059,6003),(2059,6004),(2059,6005),(2059,6006),(2059,6007),(2059,6008),(2059,6009),(2059,6010),(2059,6011),(2059,6012),(2059,6013),(2059,6014),(2059,6015),(2059,6016),(2059,6017),(2059,6018),(2059,6019),(2059,6020),(2059,6021),(2059,6022),(2059,6023),(2059,6024),(2059,6025),(2062,1001),(2062,1012),(2062,1017),(2062,1094),(2066,8008),(2066,8009),(2066,8012),(2068,1001),(2068,1012),(2068,1017),(2068,1094),(2069,1001),(2070,8009),(2070,8011),(2073,1001),(2073,1017),(2073,1146),(2073,1362),(2073,1459),(2073,1460),(2073,1462),(2073,2020),(2073,6002),(2073,6017),(2080,1001),(2080,1002),(2080,1009),(2080,1012),(2080,1017),(2080,1020),(2080,1032),(2080,1035),(2080,1073),(2080,1140),(2080,1146),(2080,1311),(2080,1313),(2080,1322),(2080,1329),(2080,1333),(2080,1362),(2080,2020),(2080,6001),(2080,6002),(2080,6005),(2080,6017),(2080,6018),(2080,6022),(2080,6023),(2080,6024),(2080,6025),(2081,1001),(2081,1002),(2081,1017),(2081,1020),(2081,1032),(2081,1035),(2081,1073),(2081,1146),(2081,1305),(2081,1322),(2081,1362),(2081,1460),(2081,2009),(2081,2020),(2081,6002),(2081,6003),(2081,6005),(2081,6012),(2081,6017),(2081,6018),(2081,6020),(2081,6023),(2081,6024),(2081,6025),(2082,1017),(2084,1001),(2084,1002),(2084,1003),(2084,1007),(2084,1012),(2084,1017),(2084,1020),(2084,1021),(2084,1032),(2084,1035),(2084,1073),(2084,1078),(2084,1116),(2084,1140),(2084,1164),(2084,1200),(2084,1322),(2084,1329),(2084,1362),(2084,1383),(2084,1459),(2084,1460),(2084,1461),(2084,1462),(2084,2002),(2084,2009),(2084,2011),(2084,2020),(2084,6001),(2084,6002),(2084,6003),(2084,6004),(2084,6005),(2084,6006),(2084,6007),(2084,6008),(2084,6009),(2084,6012),(2084,6017),(2084,6018),(2084,6019),(2084,6020),(2084,6022),(2084,6023),(2084,6024),(2084,6025),(2086,1001),(2086,1012),(2086,1017),(2086,1020),(2086,1035),(2086,1073),(2086,6017),(2086,6018),(2086,6020),(2086,6023),(2086,9106),(2087,1001),(2087,1002),(2089,1001),(2089,1002),(2090,1001),(2090,1002),(2090,1003),(2090,1007),(2090,1009),(2090,1012),(2090,1017),(2090,1020),(2090,1021),(2090,1032),(2090,1035),(2090,1055),(2090,1067),(2090,1071),(2090,1073),(2090,1100),(2090,1116),(2090,1140),(2090,1147),(2090,1151),(2090,1158),(2090,1164),(2090,1200),(2090,1301),(2090,1305),(2090,1319),(2090,1322),(2090,1329),(2090,1333),(2090,1344),(2090,1362),(2090,1363),(2090,1383),(2090,2011),(2090,2020),(2090,2021),(2090,6001),(2090,6002),(2090,6005),(2090,6006),(2090,6008),(2090,6017),(2090,6018),(2090,6019),(2090,6020),(2090,6022),(2090,6023),(2090,6024),(2090,6025),(2091,1001),(2091,1459),(2091,1460),(2091,1461),(2094,1035),(2097,1344),(2098,1001),(2099,1001),(2101,1001),(2103,1001),(2103,1002),(2103,1009),(2103,1012),(2103,1017),(2103,1020),(2103,1032),(2103,1035),(2103,1036),(2103,1073),(2103,1146),(2103,1313),(2103,1323),(2103,1329),(2103,1362),(2103,2002),(2103,2020),(2103,6001),(2103,6002),(2103,6005),(2103,6010),(2103,6017),(2103,6018),(2103,6022),(2103,6023),(2103,6024),(2103,6025),(2106,1001),(2107,6005),(2108,1001),(2108,1078),(2109,1078),(2109,2011),(2109,6012),(2110,1001),(2110,1002),(2110,1007),(2110,1012),(2110,1017),(2110,1032),(2110,1035),(2110,1055),(2110,1116),(2110,1301),(2110,1305),(2110,1322),(2110,1459),(2110,1460),(2110,1461),(2110,1462),(2110,6005),(2110,6020),(2116,1001),(2116,1002),(2116,1012),(2116,1017),(2116,1020),(2116,1035),(2116,1073),(2116,1147),(2116,1164),(2116,1329),(2116,1362),(2116,1363),(2116,2020),(2116,6006),(2116,6017),(2116,6018),(2116,6020),(2116,6023),(2117,1001),(2117,6017),(2117,6018),(2118,1007),(2118,6002),(2118,6017),(2118,6018),(2119,6017),(2120,6017),(2120,6018),(2122,6017),(2122,6018),(2125,1001),(2125,1002),(2125,1012),(2125,1017),(2125,1032),(2125,1035),(2125,1036),(2125,1055),(2125,1073),(2125,1116),(2125,1147),(2125,1164),(2125,1322),(2125,1329),(2125,1342),(2125,1362),(2125,6002),(2125,6003),(2125,6005),(2125,6006),(2125,6017),(2125,6018),(2125,6020),(2125,6022),(2125,6025),(2126,1001),(2126,1002),(2126,1003),(2126,1007),(2126,1012),(2126,1017),(2126,1020),(2126,1032),(2126,1033),(2126,1035),(2126,1050),(2126,1073),(2126,1116),(2126,1164),(2126,1171),(2126,1313),(2126,1329),(2126,1362),(2126,2020),(2126,6002),(2126,6006),(2126,6008),(2126,6015),(2126,6017),(2126,6018),(2126,6020),(2126,6022),(2126,6023),(2135,1001),(2136,1001),(2136,1002),(2136,1003),(2136,1006),(2136,1007),(2136,1009),(2136,1012),(2136,1017),(2136,1020),(2136,1021),(2136,1032),(2136,1035),(2136,1036),(2136,1055),(2136,1073),(2136,1078),(2136,1116),(2136,1134),(2136,1140),(2136,1146),(2136,1147),(2136,1164),(2136,1200),(2136,1301),(2136,1305),(2136,1311),(2136,1315),(2136,1319),(2136,1322),(2136,1329),(2136,1332),(2136,1333),(2136,1344),(2136,1346),(2136,1362),(2136,1363),(2136,1383),(2136,1459),(2136,1460),(2136,1461),(2136,1462),(2136,2009),(2136,2020),(2136,6001),(2136,6002),(2136,6003),(2136,6005),(2136,6006),(2136,6012),(2136,6016),(2136,6017),(2136,6018),(2136,6020),(2136,6022),(2136,6023),(2136,6024),(2136,6025),(2136,9106),(2136,9109),(2136,9111),(2136,9113),(2136,9114),(2139,1001),(2139,1020),(2140,1001),(2140,1020),(2142,1001),(2144,1001),(2144,1002),(2144,2001),(2145,1001),(2149,1001),(2149,1002),(2149,1003),(2149,1005),(2149,1034),(2149,1100),(2151,1001),(2159,1001),(2161,1032),(2163,1001),(2163,1012),(2163,1017),(2163,1020),(2163,1032),(2163,1035),(2163,1073),(2163,1078),(2163,1459),(2163,1460),(2163,1461),(2163,9108),(2166,1001),(2168,1001),(2171,1001),(2171,1002),(2171,1007),(2171,1012),(2171,1017),(2171,1021),(2171,1032),(2171,1035),(2171,1073),(2171,1459),(2171,9106),(2171,9109),(2171,9113),(2172,1001),(2173,1001),(2173,9100),(2173,9106),(2173,9107),(2173,9108),(2173,9109),(2174,1459),(2177,1001),(2177,1002),(2178,1001),(2178,1002),(2178,1459),(2178,1460),(2178,1462),(2182,1001),(2182,1035),(2184,1001),(2184,1002),(2184,1003),(2184,1005),(2184,1007),(2184,1009),(2184,1012),(2184,1017),(2184,1020),(2184,1021),(2184,1032),(2184,1034),(2184,1035),(2184,1036),(2184,1044),(2184,1045),(2184,1065),(2184,1066),(2184,1071),(2184,1073),(2184,1084),(2184,1085),(2184,1093),(2184,1094),(2184,1097),(2184,1100),(2184,1101),(2184,1102),(2184,1116),(2184,1118),(2184,1147),(2184,1151),(2184,1158),(2184,1164),(2184,1171),(2184,1200),(2184,1305),(2184,1306),(2184,1322),(2184,1329),(2184,1342),(2184,1344),(2184,1362),(2184,1363),(2184,1369),(2184,1383),(2184,2011),(2184,2020),(2184,6001),(2184,6002),(2184,6003),(2184,6004),(2184,6005),(2184,6006),(2184,6008),(2184,6009),(2184,6011),(2184,6012),(2184,6015),(2184,6017),(2184,6018),(2184,6019),(2184,6020),(2184,6022),(2184,6023),(2184,6024),(2184,6025),(2186,1001),(2186,1017),(2186,1032),(2186,6017),(2189,1001),(2189,1017),(2191,1001),(2191,1002),(2191,1007),(2191,1012),(2191,1032),(2191,1035),(2191,1073),(2191,1078),(2191,1116),(2191,1140),(2191,1164),(2191,1200),(2191,1305),(2191,1322),(2191,1362),(2191,1363),(2191,1378),(2191,2020),(2191,6005),(2191,6017),(2191,6020),(2191,6022),(2191,6025),(2192,1001),(2192,1002),(2192,1020),(2192,1032),(2192,1035),(2192,1073),(2192,1301),(2192,6017),(2192,6018),(2192,6023),(2193,1001),(2193,1002),(2193,1032),(2193,1035),(2193,1073),(2194,1017),(2195,1001),(2195,1012),(2195,1013),(2195,1017),(2195,1020),(2195,1032),(2195,1035),(2195,1073),(2195,1164),(2195,1301),(2195,1362),(2195,1378),(2195,2009),(2195,2011),(2195,6005),(2195,6017),(2195,6018),(2195,6020),(2195,6022),(2195,6023),(2195,6025),(2196,1001),(2196,1035),(2198,1001),(2198,1002),(2198,1003),(2200,1001),(2204,1001),(2204,1017),(2204,1020),(2204,1032),(2204,1035),(2204,1073),(2204,6017),(2204,6025),(2205,1383),(2206,1001),(2206,1002),(2206,1012),(2206,1017),(2206,1020),(2206,1021),(2206,1032),(2206,1035),(2206,1073),(2206,1116),(2206,1460),(2206,6001),(2207,1001),(2207,1002),(2207,1003),(2207,1007),(2207,1017),(2207,1020),(2207,1032),(2207,1035),(2207,1073),(2207,1460),(2207,1461),(2207,1462),(2207,6001),(2207,6010),(2207,6017),(2207,6020),(2207,6022),(2207,6023),(2207,6024),(2207,6025),(2208,1001),(2212,1001),(2212,1460),(2215,1001),(2215,1017),(2215,1164),(2217,1001),(2217,1002),(2221,1428),(2221,1433),(2224,1001),(2224,1035),(2225,1001),(2225,1012),(2229,1085),(2229,1094),(2229,1103),(2229,1107),(2230,1094),(2230,1103),(2230,1107),(2231,1001),(2231,1012),(2231,1085),(2231,1094),(2231,1103),(2231,1107),(2233,1001),(2236,1001),(2236,1362),(2238,1001),(2239,6017),(2240,1055),(2240,1073),(2240,1362),(2240,6002),(2240,6020),(2241,1001),(2242,1001),(2242,1085),(2242,1094),(2243,1094),(2244,1085),(2244,1094),(2244,1103),(2245,1085),(2245,1094),(2245,1103),(2247,1094),(2247,1103),(2253,1103),(2256,1329),(2261,1001),(2261,1002),(2261,1017),(2261,1032),(2261,1301),(2261,6020),(2263,1001),(2263,1035),(2266,1085),(2267,1094),(2269,1001),(2270,1001),(2270,1002),(2272,1459),(2274,1426),(2274,1427),(2274,1430),(2274,1431),(2276,1460),(2276,1462),(2278,1429),(2282,1460),(2282,1461),(2284,1001),(2284,1017),(2286,1459),(2286,1460),(2286,1462),(2288,1001),(2292,1001),(2294,1002),(2294,1007),(2294,1020),(2294,1147),(2294,1158),(2294,1164),(2294,1200),(2294,1305),(2294,1322),(2294,1353),(2294,6001),(2294,6004),(2294,6005),(2294,6017),(2294,6018),(2294,6020),(2296,1460),(2296,1461),(2296,1462),(2303,1001),(2309,6018),(2310,1001),(2310,1002),(2310,1003),(2310,1007),(2310,1009),(2310,1012),(2310,1013),(2310,1017),(2310,1020),(2310,1021),(2310,1032),(2310,1035),(2310,1036),(2310,1055),(2310,1067),(2310,1071),(2310,1073),(2310,1078),(2310,1108),(2310,1116),(2310,1134),(2310,1140),(2310,1146),(2310,1147),(2310,1149),(2310,1158),(2310,1164),(2310,1171),(2310,1200),(2310,1305),(2310,1322),(2310,1329),(2310,1353),(2310,1362),(2310,2000),(2310,2002),(2310,2009),(2310,6001),(2310,6002),(2310,6005),(2310,6006),(2310,6008),(2310,6009),(2310,6012),(2310,6017),(2310,6018),(2310,6020),(2310,6022),(2310,6023),(2310,6024),(2310,6025),(2312,1001),(2312,1009),(2312,1012),(2312,1013),(2312,1017),(2312,1021),(2312,1032),(2312,1067),(2312,1158),(2312,1305),(2312,1362),(2312,6002),(2312,6004),(2312,6005),(2312,6007),(2312,6017),(2312,6020),(2312,6025),(2313,1001),(2324,1001),(2326,1001),(2326,2020),(2326,6017),(2329,1001),(2331,6014),(2332,1001),(2342,1001),(2345,2000),(2345,2001),(2345,2002),(2345,2003),(2345,2004),(2345,2005),(2345,2006),(2345,2007),(2345,2008),(2346,2000),(2349,1001),(2352,1001),(2358,1001),(2359,1001),(2359,1002),(2359,1003),(2359,1035),(2359,2002),(2359,6002),(2359,6006),(2362,1001),(2362,6017),(2373,1001);
/*!40000 ALTER TABLE `user_acc` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(256) NOT NULL,
  `password` varchar(40) NOT NULL,
  `email` text NOT NULL,
  `is_valid` tinyint(1) NOT NULL,
  `username_changes` int(11) NOT NULL,
  `activation_key` varchar(50) NOT NULL,
  `name` varchar(256) NOT NULL,
  `school` text NOT NULL,
  `last_submit` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `picture` varchar(100) NOT NULL,
  `theme` int(11) NOT NULL,
  `default_compiler` int(11) NOT NULL,
  `show_email` tinyint(1) NOT NULL,
  `show_compiler` tinyint(1) NOT NULL,
  `perm_problem_setter` tinyint(1) NOT NULL,
  `perm_judge` tinyint(1) NOT NULL,
  `perm_create_contest` tinyint(1) NOT NULL,
  `perm_moderator` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2384 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (12,'coolzero','e9a1dc7b5ba2d9934a34e0e330fbf06785a5c66c','behnood1370@acm.org',1,1,'489e823d97d6f05ac5addf91a47e65861d969ff3','CoolZero','UT','2013-06-23 19:37:20','400489aebd0ba1f4a5f9a5cb062593b3c54e81e8.jpg',2,1,1,1,1,1,1,0),(11,'boomz','a0cbdd4d6117a0a9ed61448a8588ba627f61f975','hamedzamani@acm.org',1,1,'fbf8632335f915cb2136a14a6ced6a85f1a873dd','BoomZ!','UT','2012-07-23 09:16:11','default.png',2,1,0,1,0,0,0,0),(7,'Farzaneh','6b607a949badffea1c668a4017a52d6f2705b749','farzaneh.ghods@gmail.com',0,1,'e457512d133765feb2aadfa7803b11ae1229b67a','Judi','','2011-11-08 17:02:33','default.png',2,-1,1,1,0,0,0,0),(10,'amir','ab6d21c64a0e19d73df9170dcc511760b32f8795','amir.s@acm.org',1,1,'e3d34ca855eae8e37a4f4e9b04a796028f5585f8','AMiR','University of Tehran (Here for Lunch)','2013-04-03 07:42:11','24f642e1f0e0169ec83203a1e2f6d16f2d5ae515.jpg',2,1,0,1,1,1,1,1),(13,'Mahsa','9a29a101c980784a31646b1c2b577b018e4d7571','mahsa.m@acm.org',0,1,'df9a1d9f9e4750b42ad1aa53a5d370732147c632','mahsa','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(14,'hasan','b1481c85c0be5f8ecf774a7626f5020e3e61e465','hne1991@gmail.com',1,1,'4ce0dc8f75e3a6a05e9224037b83b2f50111ff4d','hasan','ECE of university of Tehran','2013-01-19 11:35:07','default.png',2,-1,1,1,1,1,1,0),(15,'tavakoli','99165718426e6dc7d5060cef700e5444b32af20b','rta.0070@gmail.com',1,1,'6bb99618e42fa5c94cbfefadf8ff77612f0b115e','Reza Tavakoli','University of Tehran','2012-02-14 14:24:56','default.png',2,1,0,1,0,1,0,0),(16,'HadiAsiaie','550786ff522fee565f2bc56f510554fe6df1cd03','h.asiayfard@gmail.com',1,1,'cfcf9716d3aa1afaa797f4ec1f1385528c467fc8','Hadi','Tehran university','2011-11-29 15:50:31','default.png',2,-1,1,1,0,0,0,0),(566,'llvllahsa','067ae73e42223f32a87239b2a94294f4a8fdfaea','llvllahsa@gmail.com',0,1,'7990f59b7249292518c82a0ba073ff7732aa920f','Mahsaa','Shiraz University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(18,'kenjush','398f105c12dc455c61c8ef8772178501ee4b6097','msoleimaninasab@ymail.com',0,1,'6eadb3be9b58d1d99d4dc8cb90ff45bd0bb90eb5','Mehdi Soleimani','UT','2011-08-18 07:00:59','default.png',2,-1,1,1,0,0,0,0),(19,'cartoonist','c76043085ac2ba1b379f45e889776c46e8f2a880','ali.ghaffaari@gmail.com',1,1,'80ec4e48ec8f01dd969dccee1260b21272778133','Cartoonist','University of Tehran','2012-10-18 17:20:13','e56fb6a69ddaccb21e0a89d9b1a0ff68f20e9d27.jpg',2,1,1,1,0,0,0,0),(20,'pbehghader','342ba628dc5e4d8281afb068c376f6b00bdf3290','behnamghader@gmail.com',0,1,'97a6aef5febafab598dba4a4bf27728bf419ba38','Pooyan Behnamghader','the University of Tehran','2012-01-05 09:21:35','5ed4b066d7f6ae829f5fbcd3d6c081a749f1c15d.jpg',2,-1,1,1,0,0,0,0),(21,'mdehghani','67bdf947204cf7b975ab59e9c60e107f89a065b5','m.dehghani612@gmail.com',1,1,'e0e82b323c3250a19d5c462b99b1ad2e1d9cb0aa','Mahdi Dehghani','University of Tehran','2012-09-20 20:32:09','default.png',2,-1,1,1,0,0,0,0),(22,'hoosssein','330a4abad482b45f0d49fed6c6354ee8822eb7c2','h.nasr@acm.org',1,1,'f7fff1dbc304aea35ae2bf811e32145905e4a9b4','hossein','university of tehran','2012-12-06 09:30:29','a1f77c32b4ef28844d2a89bbe83b58be3ca8a19f.jpg',2,-1,1,1,0,0,0,0),(23,'EAAL','c4e489378c9ff78fcb591fed7c432cf1d1518582','aryaz.egh@gmail.com',1,1,'c120613259cff09f42adb1358b72953537fbb407','Aryaz','University of Tehran','2013-03-08 05:24:46','dec1c61fff65258ddb8aa4fbc9c3e7862899d154.jpg',2,-1,1,1,1,1,1,0),(24,'m.sabouri','dfd92769db6ce8740b671b5d555df5142ef459eb','m.sabouri92@yahoo.com',1,1,'fe36091a2c034d1b7c02b2e52538716d1f4a27c6','m.sabouri','University of Tehran','2012-12-20 06:54:08','default.png',2,3,1,1,0,0,0,0),(25,'mj','8fb314af6dff299d44dbe328956afc5ede3652a9','m.j.izadi@gmail.com',1,1,'5846ce894a548e9ccf62f3d15139e7475e6c3d1b','mj','ECE','2012-08-21 08:11:17','c74a37f1f2ef5b9dbe708cf01a92b5e7d5c77b27.jpg',2,0,1,1,0,1,0,0),(26,'seyyed','0cf82604d1b012b89ed0697395fbda1299707bc7','iqadas@gmail.com',0,1,'e2ad8cfb411b429cc73d495893957bb8b1098ae2','seyyed mohammad mahdi','tehran','2011-08-11 12:59:28','default.png',2,-1,1,1,0,0,0,0),(28,'ramtung','05c6f634835b880e04c52014f4170c47c0657ee7','ramtung@gmail.com',0,1,'973bd4fa7c7dbb819556c1c8dac0540b0b80a12b','Ramtin Khosravi','','2011-08-13 12:08:02','default.png',2,-1,1,1,1,1,1,0),(29,'M.K.','17f7ab115b2c1ee247eff7c31f2fc6916c9ac088','mahsa.keramatee@gmail.com',0,1,'2ad59dc7b40380d44fb6beeb0aac75e544230d35','mahsa','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(30,'AmooArsalan','1e42fae21b0a29496615f30bf468f51f6919567c','arsalan.mousavian@gmail.com',0,1,'23de8a2862ddf6cef49c4534618d1f6493f3200e','Amoo Arsalan','University of Tehran','2011-11-18 10:59:32','default.png',2,-1,1,1,0,0,0,0),(31,'hrm.','44f1737b72b65b4c9acf15bb9165c0dc022ce830','hamed.roaufian@gmail.com',0,1,'be586d6d6c17015aff9993e18072be5d552cf39e','hamed roaufian moghaddam','helli3 highschool','2011-08-15 13:52:34','default.png',2,-1,1,1,0,0,0,0),(32,'moh.mah1','d7493fc26d8b7cc14440a4f21550a4ad970ebf3c','moh.mahdieh@gmail.com',0,1,'f6b8278132ae9e3b6b18851a95e872fa0d402276','Mohsen Mahdieh','University of Tehran','2011-08-17 06:30:54','default.png',2,-1,1,1,0,0,0,0),(33,'captain.misugi11','4197a68eda374e5aee2ef1e14ce6904de21851a4','captain_misugi11@yahoo.com',1,1,'36ca85cdd95c4212f1d445b2bdfa0c50d49b6a1c','Mohammad Abbasi','University Of Tehran','2012-01-01 16:45:28','default.png',2,-1,1,1,0,0,0,0),(39,'nikh','765c7961b872a5575458e2e421ecad0f30d2e2ce','nik_shakeri@yahoo.com',0,1,'e5fc66e8fce514b5e39cc404e59ad04c11cac698','NIkh','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(35,'moojan','65f36be32479893af5346573a4e9e83dad8d8efc','ghafurian.m@gmail.com',0,1,'4b300d63898198e4a88c77c887bd555480c433c5','moojan','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(36,'ashkan.dant3','7aeb89eb7e3321fb03be594b347b153de1015cd0','ashkan.dant3@gmail.com',1,1,'1147af3c791df7a50eb8d2e7d09af0603bf17b01','::|Ashkan|::','Tehran-UT','2012-12-27 13:49:58','80bae1e32c4c56f4f0803a08c2d391e3ddcc1951.jpg',2,1,1,1,0,0,0,0),(37,'aida-amini','6bacda84ff532e2f0f3218bbd481bc9129ac94f7','ida_topoly@yahoo.com',0,1,'324490d9991f72504c528e02246f69197286e7e9','ida:D','ut','2011-08-19 08:13:35','default.png',2,-1,1,1,0,0,0,0),(38,'mohammadnaseri','a56ab1134e68bdbc7cc619fd147732104502234a','mohammad.nsr@gmail.com',1,1,'e8da4d133cd02e23a303e770be39c821111d8315','Ice Cream','UT','2012-07-26 09:31:04','314249a43c9c1f653d1cb53977da5436b0241d9d.jpg',2,-1,1,1,1,0,0,0),(40,'Gajoo','9a2b7fac5d4de5bc1071c0f7227c71d6d584f593','alisattari.coder@Gmail.com',1,0,'8559a39b759f1bd56977b07be544b586a0f9afd4','ali.S','UT/Math','2012-11-27 13:26:00','a3b634696b04728ac80a0891f334d7db35b6ba79.jpg',2,0,1,1,0,0,0,0),(41,'farid','3aa766b8b0e650229c8dcb92e503c3310b352da0','faridshariaty@gmail.com',0,1,'7e97d9906ea1abfa4e70eefbbb4fbfc9bb62d004','Farid','Islamic Azad University, Sanandaj Branch','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(42,'hhasani','1bc251e2f5606e165aaaaec1e2582eaeb0bdb59e','hmdhasani@hotmail.com',1,1,'45e8d01b1c9fe77de71c94f7ac6fe600c0ce062c','Hamed Hasani','Tehran ut','2013-06-10 15:01:04','default.png',2,1,0,1,0,0,0,0),(43,'Mersedeh','28152ca36eb47382609e51b95978fbb4e0730c54','mersedehjahangiri@gmail.com',0,1,'8176e32db5644c4cb2e65cd6b8ada928cafc19e9','Mersedeh','university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(44,'poopi','14f7371bc6eedc2a204a97435c08d0ad6cfddc08','pooya.zafar@gmail.com',1,1,'ad0ce02991e790288f2c06d3f99fd384f47d77b9','poopi','AUT','2012-12-06 09:30:47','default.png',2,1,1,1,0,0,0,0),(45,'RobotBoy','4d97c2a446fc922a80d4ea802f8822ffb263b096','aliseif1991@gmail.com',1,0,'1d1b50a2baf43d02379166c7d5365c280431fc2c','RobotBoy','Amirkabir University of Technology','2012-09-30 15:02:47','default.png',2,1,0,1,0,0,0,0),(46,'masoudjjgh','b383b30dbbdf781506079345dbbb183991532491','masoudjjgh@yahoo.com',1,1,'182eff4ccfdf273a649c4a7177850d77d9b0e569','masoudjjgh','Sadjad','2013-03-03 19:14:14','default.png',2,-1,1,1,0,0,0,0),(47,'amiaty','e880c1775e3c9f9f7caf739ea33afcc53d0b36fe','amir.atashin@gmail.com',1,1,'b491c6d13a470f6f15e32ccd56d51c606d3b2851','Amir Atashin','Sadjad','2012-12-14 20:45:11','default.png',2,1,1,1,0,0,0,0),(48,'sy.NBA','bb9a22ad5e0c4ebcb82f02cfa8f8117594484abf','sy_goodboy@yahoo.com',1,1,'2253471d37453c152f2a8a8f5f3043bb3cbd0a6e','sy NBA (Shitmars Approved)','Sadjad Higher Education Institute','2012-12-13 11:30:18','1c319d62495b372f4d34b9e5b074dae2b7133f77.jpg',2,1,1,1,0,0,0,0),(49,'mohammad.m','677b6826ed5fe04b6aa92da1a3a574706c0fa7a7','mohammad.minooee@gmail.com',1,0,'f98196a478d25ea236b48ec67f2c351e646dfaed','mohammad.m (Shitmars Approved)','Sadjad Higher Education Institute','2013-03-10 10:22:16','27a573d0a89890c408430893e19433ff14d1f614.jpg',2,1,1,1,0,0,0,0),(424,'DATA--C0D3R','44b1a90404147785bff36faf80a815f9cf2746c7','bug.c0der@yahoo.com',0,1,'62af08fdf7da3da1b514f55b9a750b030893f868','DATA--C0D3R','Tehran','2011-11-18 08:58:07','default.png',2,-1,1,1,0,0,0,0),(52,'fzafarani','853c526a8b02776ac53fd58ba2b31ec9756c4793','fzafarani@gmail.com',0,1,'4f992e7f543ed31b3485d145c12d96691c5aed32','Farzad','Isfahan University of Technology','2012-01-06 19:27:35','default.png',2,-1,1,1,0,0,0,0),(53,'shayanuser','c230a11c4715ebc6af3b06863b069f8802d91827','shrezvankhah@gmail.com',0,1,'e2c62fb78f8617b0785eb833a18231d4d91e5d82','Rezvankhah','UT','2011-11-22 08:34:23','default.png',2,-1,1,1,0,0,0,0),(54,'ali1024','108efc7521ce9a9dde9f858eb3a1099fc3e5d3a1','aliyousefi.hec@gmail.com',1,1,'6c6b257627d86f97a2a14d3c5a2417b6ff386fa8','Ali++','','2011-10-18 22:47:25','default.png',2,0,1,1,0,0,0,0),(103,'NavidSaleh','b9ae916f370d34b0cfef414008b91405942d8bbd','navid.saleh.n@gmail.com',1,1,'032443f050d843a6f3dc62e323f8638fe19d276f','Noid','Tehran','2013-06-12 16:33:14','default.png',2,-1,1,1,0,0,0,0),(55,'saman.aghazadeh','cb0ecf44c989b7f4879e28a657717eb9084194af','saman.aghazadeh@gmail.com',0,1,'72f590dbe108ec285ebb07eec7561bd31944c6a6','saman biook','university of tehran','2012-01-01 11:14:49','default.png',2,-1,1,1,0,0,0,0),(56,'pandeh','c3733608cac8fe82e92815587d73df37bcbabbdf','pandeh55@gmail.com',1,1,'c46af828c3fae8082e4f66fa1a520dc7710a67c9','hopa','University of Tehran','2011-12-29 07:12:53','6f9cfcd02679a9820a870023e698ed743bc9235f.jpg',2,-1,1,1,0,0,0,0),(57,'a.azin','7f1390e740b6f2ccdbdf328512b770e9662eed2d','ariansacct@gmail.com',1,1,'65fd55b764cc29b0114daa5ee393874ec40764da','Arian','ECE','2012-02-06 13:22:48','default.png',2,-1,1,1,0,0,0,0),(58,'a.majidi','c888cb6fa15879aeaecd68d2ff485ac50a3a948a','alireza.majidi@ymail.com',1,1,'7d78f045e3e788f5d58c839b606ad41a218f33ed','AliReza','UT','2011-12-29 07:35:02','5029bd3790cd5fbafbcd4ff79cb990f51d330f02.jpg',2,-1,1,1,0,0,0,0),(59,'Sassan','04a5b1d3cbaaa5ca41ef989edb27c1fd6ef7da9c','sassan_sadeghi@yahoo.com',1,1,'22df069354c7d204308f7bc995e60bd5331c91db','Sassan','University of Tehran','2012-09-26 14:13:48','default.png',2,-1,1,1,0,0,0,0),(60,'epezhman','141e58e99a361da4c007b3067e8733e4fe17f99f','epezhman@gmail.com',1,1,'82845eab93c201591cb5a93d4e0082f66e39df46','ePezhman','University of Tehran','2013-01-25 15:16:16','default.png',2,1,0,0,0,0,0,0),(61,'s.d.s','e7422e8405dc9cc1abb69d4ffe857dd9e9455120','dsh.shadi@gmail.com',0,1,'6551c07a35a281ef2556feb07dc134ffec5c1f61','s.d.s','Tehran','2011-10-28 16:56:00','default.png',2,-1,1,1,0,0,0,0),(62,'Sara','6306e22d27cab197ebf4be1c8f6b0e8919116a29','just.skb@gmail.com',0,1,'b7e23f327a3143ebd4da01c46d2d713632800c08','Sara Kashani Bozorg','University of Tehran','2011-12-30 08:53:48','default.png',2,-1,1,1,0,0,0,0),(63,'amin','5d2d01ef04ba7bc812f3cf010559f3186180e4df','m.aminimani@gmail.com',0,1,'6353b6ff3902e43073d666871ed0bc3a4e9a1506','Ameno','UT','2011-12-30 20:31:02','c736463b32517d96ed7ec063452d2bbdfcebb698.jpg',2,-1,1,1,0,0,0,0),(65,'Hastich','810c4909d0c5dc3bac84285a88fd6db28fbe444a','chhasti@yahoo.com',0,1,'695da9e2d60d0b064acdd5f53774a59403ef865c','HastiCh','university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(66,'salpha.2004','a61d77e5793f770c15e79f60151bcaad706a77e6','salpha_2004@yahoo.com',1,1,'34b475e6c1f09aef6219785829c5871168129490','SAeeD','ECE UT','2012-11-13 14:30:49','default.png',2,-1,1,1,0,0,0,0),(67,'the_mrt','ea5f871b4ff85499c9ef309269bfb8132e1a5db9','mhmmdrz_taj@yahoo.com',0,1,'9a256b2e7150114e2cd34d9f62898e7b87ba909c','mamad t','university of tehran','2011-12-02 19:21:36','default.png',2,-1,1,1,0,0,0,0),(68,'a.pourahmad','90d9db513691bb28d2f1fe59fd338859b83825c6','apoura_iat@yahoo.com',0,1,'d669423b945bba6e022748ae6ae9e2057debd90b','Ateeyeh Pourahmad','Tehran University','2011-11-20 20:16:23','default.png',2,-1,1,1,0,0,0,0),(69,'e.pazoki','729cdcac7dd58f614b28ae0db7c2a71b8942bd9f','e.pazoki@gmail.com',0,1,'a05c67f9b4b11e19fd9422072c26df63ce1c2a20','e.pazoki','Tehran university','2012-02-06 18:16:40','default.png',2,-1,1,1,0,0,0,0),(70,'Neshat','abc1088010c571b6fe11651b467534ceb1535b8e','n_ceng91@yahoo.com',0,1,'024d0de099ec2ea5384012ccc481a6b49d0221a7','Neshat Korivand','university of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(71,'k.hamraie','0c4bdf3c8256610638e21e386f6b4d05c0016812','hamra_c77@yahoo.com',0,1,'dcab54afe6afb621834145db65dcac3fbc88343a','kobra hamrah','Tehran university','2011-12-11 12:47:36','default.png',2,-1,1,1,0,0,0,0),(72,'d3gan','b9aa93513d5fd94534b59229de60b1935ed17bb0','d3gan1618@gmail.com',0,1,'eaa097a9fdc2058175444fb82beb82e8ea0921d3','Pooya','University Of Tehran','2011-12-30 13:10:16','default.png',2,-1,1,1,0,0,0,0),(73,'sajjjjad','54a2b2f100aab421e744103556268659b81b9025','sajjjjad_68@yahoo.com',1,1,'d5dfdc47d8179a2d1d0ee975c41f58779afb7002','sajjjjad','ut','2012-01-02 15:50:29','default.png',2,-1,1,1,0,0,0,0),(74,'vhd.afr','5c920abc4abf1bd6b05acf16bb9fd450ce6d8ede','vhd.afr@gmail.com',0,1,'b33b9feb0724c6f890e54d65b2f91448440380c0','Vahid','UT','2011-12-31 22:10:56','default.png',2,-1,1,1,0,0,0,0),(75,'FaridSh','d320d9fb13a01fee81c9ef9375509ad8b9bf1826','faridshariaty@gmail.com',0,1,'67a5a22ca882b1bcc61dec0b16c2615a005f9c4f','Farid','Islamic Azad University, Sanandaj Branch','2011-10-19 21:27:59','default.png',2,-1,1,1,0,0,0,0),(76,'best_coder','9ebe9e4a52771929d690982e1356679146197a0f','saeed.taghizadeh_computer@yahoo.com',0,1,'ff490e84b286420b362267763857c414a59f5d99','Number1','Tehran university','2011-12-14 12:40:07','default.png',2,-1,1,1,0,0,0,0),(77,'ye9ane','669a3d23feb8844500a74c100b5e27aef912a649','y_m915@yahoo.com',1,1,'b01af77cb730aade8ab00b52662c616d1d7bd630','ye9ane','UT','2012-01-10 15:21:17','default.png',2,-1,1,1,0,0,0,0),(78,'infinity31','35dc7eb927cb1466c7757fa85efdf61f7a281a52','maganiss@yahoo.com',0,1,'f1e348f9552075fadaec55f1bdd1dae7c196759c','Aniss','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(79,'arezoosalehi','ce1c327b6f94ce820b7614855bc344315d8e200f','arezoo.salehi70@yahoo.com',0,1,'3eeb100c0e11c3eaf957ccfb504c74eb5e4e6de6','arezoosalehi','tehran','2011-12-31 15:14:05','default.png',2,-1,1,1,0,0,0,0),(80,'minarazqandi','49bd84c13d0925c1a7a633409810fa09fd88b96b','mina_razghandi@yahoo.com',0,1,'6342b53b8b4757a31f4c5ba17aa2fb7002371b18','minarazqandi','tehran','2012-01-05 17:37:19','default.png',2,-1,1,1,0,0,0,0),(81,'hastichitsazan','68a8ca52981b25d3a70c34ec7918ea7b00d2771c','chhasti@yahoo.com',0,1,'8f0b12417e4f16600940d8f5bf7309720a851b69','hastichitsazan','tehran','2012-02-08 16:39:17','default.png',2,-1,1,1,0,0,0,0),(82,'maryambehbahani','a343f71fb043075bb764f5ed1172b9c3450840ad','maryambehbahani91@yahoo.com',0,1,'584c19030368698e37181af9806d94ec0743ed50','maryam','tehran','2011-10-27 21:20:15','default.png',2,-1,1,1,0,0,0,0),(83,'maryam','d0daff4109821b0e0f2310ad2c6c932730eeab29','maryam0o@yahoo.com',0,1,'1b1449556cbe9908c1840947f9b0da3ea00ea724','maryam','tehran','2011-12-27 11:49:58','default.png',2,-1,1,1,0,0,0,0),(84,'zahra','a07aae83765fe574c077768d0ff9cf4eab52160e','z.alizadeh_88@yahoo.com',0,1,'f8a695fa816bcec1405fc09cd3cd3d8d2994978d','zahra','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(85,'arash_k_90','60c7441e8fe8d8140bb6d5be9de593e8c32f2a2f','arash.koushkestani@gmail.com',0,1,'48754a55d8d52806da3ee88a664ff707fb09f03b','Arash','University of Tehran','2011-12-22 08:40:20','default.png',2,-1,1,1,0,0,0,0),(86,'leonid20000','8584c5016c7dbcad987819704aa9969704f17518','leonid20000@yahoo.com',0,1,'989dc8a1d91c2429940524cfd3546ac02635a013','Leonid Zeynalvand','UT','2012-01-01 16:59:55','default.png',2,-1,1,1,0,0,0,0),(87,'e.farmad','9afb134ff09f51cccadfa7c3ed1dde850fff8f7d','e.farmad@gmail.com',0,1,'7fbbb3d7b8f83379ac19ec544cf75932158ddfb5','elFar','Tehran','2012-02-03 19:27:54','default.png',2,-1,1,1,0,0,0,0),(88,'rezkesh','f4c35c85cad42fad4ff19b5ee187b26ceb3ab4fd','rkashmir@ymail.com',0,1,'41088505a60459d3b94ecfcd336b519b79b56a83','rezkesh','University of Tehran','2011-12-30 15:33:29','default.png',2,-1,1,1,0,0,0,0),(89,'hossein91','78f3ea3941c123367ea9bf8275a4e4847f8dff5f','h.shafeizadeh@gmail.com',0,1,'e90b1cb3ed85c8bb4c684e5294c4f5c6e79981aa','h.sh','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(90,'mahdi','137750773b3cf0a402ca4df25b67d0895af4b55d','mehdidolati@hotmail.com',1,1,'41f9a83c9db856fda43820cc84be51e005ef7bbf','mahdi','University of Tehran','2012-01-12 14:17:22','default.png',2,-1,1,1,0,0,0,0),(91,'mbadkoobeh1991','7bbafe76e5c2a153d89c5c1a882c1e44491f5644','mbadkoobeh1991@gmail.com',0,1,'b47aadaed3d6770ec9b2939637e2cd4d94e9e4da','ALI','TEHRAN','2011-12-15 10:26:55','default.png',2,-1,1,1,0,0,0,0),(92,'sajjadtorabian','127a210297b069b1080fbfb1a9727e7ac6aa05f6','sajjadtorabian@yahoo.com',0,1,'595d35cb01a37a102c50b1992bce56b8abeb20d8','Sajjad','UT','2011-12-30 15:34:42','default.png',2,-1,1,1,0,0,0,0),(93,'saeed','bc7a2f8a87e81d2b7390983caf2adb8f8de63e0a','saeed_Zareean@yahoo.com',0,1,'a1d53e67e24535ede806838df532cb1d501fac48','Saeed Zareia','ECE UT','2011-12-30 15:40:57','default.png',2,-1,1,1,0,0,0,0),(94,'i.azari','59ebce6f099c457197440722fe718a52ed930dba','i.azari@yahoo.com',0,1,'c7b81972a37b9d7a1c40845056a5cb0887c969f4','iman','ut','2011-12-24 19:58:20','default.png',2,-1,1,1,0,0,0,0),(95,'borgir','4936aeebd644cd83accca88039d22fbadc91aac0','ali.30.man@gmail.com',0,1,'8b8cbfc1ccc08fa92414e75d01fe31f15a848978','borgir-810188290','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(96,'babak6','e31cdcdf4a5379f294f68799f575b5791b57ac12','mehrabibabak@yahoo.com',0,1,'d829af26fbb7d07c034cf53473b5abcbb7a04ba3','babak6','terhran','2012-01-09 16:46:44','default.png',2,-1,1,1,0,0,0,0),(97,'hamid68','e242ed6d52871ddefa7bf0f09974abb1cbefda97','hamid.nejatollahi@gmail.com',0,1,'fe05017cea229835f7eab886ee155915774bb548','zero','tehran','2011-12-09 19:33:01','default.png',2,-1,1,1,0,0,0,0),(98,'safooray','82b8dcb7946fe9802c07cea382a1b5b7403087a7','Safoora.yousefi1192@gmail.com',0,1,'e9d4a4626985f460cfe7f183752c8b3bfb5bdf02','Safoora','UT','2011-12-22 21:54:12','default.png',2,-1,1,1,0,0,0,0),(99,'M.H.R','85a1398b713a4be91466d1c821dca610c1cbb508','m.hr90@yahoo.com',1,1,'bd93ad16f1b4e9c43f055212c374581553135790','Mohammad Rahbari','Tehran','2012-04-25 18:01:11','default.png',2,-1,1,1,0,0,0,0),(100,'corc','da13e36f8952f5f869caf3b633b8c0715cafab20','smasjavadi@yahoo.com',0,1,'1fd154a403982d42b357137d01bb60a895df9d17','memyself','tehran','2011-11-22 07:02:02','default.png',2,-1,1,1,0,0,0,0),(101,'BlackHat','21f10f5e2940fa68fea0fd819a9416ae2ac751e8','moh.mahdieh@gmail.com',0,1,'df3ee36b747843297331500fa6bcd5db04d2ff95','BlackHat','University of Tehran','2012-07-19 10:53:29','default.png',2,-1,1,1,0,0,0,0),(102,'pezhman32','fe2714eed3de531e458aa3049cd8935f966fcc18','pezhman32@gmail.com',1,1,'c3b0c33a2355ccc482702426ae0e252482b81ddf','Pezhi','sadjad','2012-05-03 07:55:53','default.png',2,-1,1,1,0,0,0,0),(104,'Sisa','5f0511a51f2f03b7b8539df7aacca398074affda','ensmgh@gmail.com',0,1,'f1d28eff338f6b84f7534715bbc48c8130cf3918','Sisa','Shahid beheshti university','2011-10-21 06:16:25','default.png',2,-1,1,1,0,0,0,0),(105,'mizgly','08e175be522e592d57568ce5b205a12b645a6a17','amir.hossein.shahriari@gmail.com',1,1,'aaaa668467fda4c65173e8dde5f5f0cc79f5818e','man o ishun o ushun','Shiraz University','2012-12-05 17:38:23','default.png',2,1,1,0,0,0,0,0),(106,'hamidmansouri','8b8d369e79db90edf79e2c8f77c792b14f50377d','hamid.mansouri@gmail.com',0,1,'ff171ff37974b67138c6405046299cf94d5e5119','BlackCrow','Ferdowsi University of Mashhad','2011-10-23 08:39:38','default.png',2,-1,1,1,0,0,0,0),(107,'parvan1370','daa4d20c53650667d03d6bd906e285546e090c26','parvan1370@gmail.com',0,1,'e9199f33423cbba719269bbb33a99053236f48dc','aboozar parvan','Tehran','2011-12-02 17:44:37','default.png',2,-1,1,1,0,0,0,0),(108,'Mahdi007','e70d57819cface9f9a41cfdbeb9219fb99e2a3ed','mahdi.mp@gmail.com',0,1,'da6176f6c51f9b910a451a9d41fd71f91d0a3f96','Mahdi','JDM','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(109,'mimsad','8f019f755d60bfcf03788f4d6ba021c3d1064532','mimsad8@yahoo.com',0,1,'edcfc40fb8933dbb9141cce79d8b1fd40fecfc2d','mimsad','ferdowsi','2011-11-28 14:13:10','default.png',2,-1,1,1,0,0,0,0),(110,'Spooky','0d1efe8019c81304a8d3fb6a88ba796e675001a7','behnamarbab@yahoo.com',1,1,'a9ca10e7f599e6bbeb9867c189bb0ff6aaac506e','Spooky','Ferdowsi Mashhad','2012-09-26 17:17:35','default.png',2,1,1,1,0,0,0,0),(111,'omid','d95cf00daa11d6be250d801405e1804abe787b29','omid.malek.1990@gmail.com',1,1,'df48719f65875d52b0292148ce43b95ac088a5f5','omid','sadjad university','2012-11-19 11:22:51','a29b41940a0eb687717fec01d4647dcbbfa6b122.jpg',2,-1,1,1,0,0,0,0),(112,'h.shafeizadeh','be55b7bb67ffa0cbe25d1ea9d5e32abcc4e4fd55','h.shafeizadeh@gmail.com',1,1,'a7b60470b69838ec81341ad6b20c0e17e84035de','Hossein-SH','Tehran University','2011-12-22 17:56:25','default.png',2,-1,1,1,0,0,0,0),(113,'mahsa.f','029c136b7fe2102fb74dc31888e48826cec63199','mahsa.forati@gmail.com',1,1,'9bab4bfa54b3074df92d9b25fbf8487b3e671696','Mah Sa','ECE','2012-01-30 23:01:07','d9bc553b624a33e11d46eb6449831ce534fd3442.jpg',2,-1,1,1,0,0,0,0),(114,'Arm1nE','0bead6f7a624bc4adec237eeb6fd71f9bb988abe','Master.Fibex@Gmail.com',0,1,'3567b9249ed1878b0ce90d4cc2d3c49f01ca5caf','ArminE','Uncharted','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(115,'amin3d','dfcf5fa16b7724a0122eb070f098e359db1e7d67','amin3d@gmail.com',0,1,'3ef0eb6c5c547fef2e8726e4785e126b9ff369b1','amin3d','Khorasan Higher Education Institute','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(116,'hamidreza','c8c2595625491eb30783da1d43f365bf1f51752f','hosseinkhani@live.com',0,1,'d7aac3bad89d2e1fba55c3ec4358f5705744ed07','Hamidreza Hosseinkhani','IAU - TCB','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(117,'arash16','da98317ded8bf1180fdd49661d82b57e2d1994aa','arash.shakery@gmail.com',1,1,'e2b37f592ffa8a82a05e3e058de7a8e6c08ad3a5','arash','sadjad','2012-05-31 09:43:52','default.png',2,-1,1,1,0,0,0,0),(118,'arashmsn','808ea65ed589e69d5c115707710e91ec7fdc09c7','arashmsn@yahoo.com',0,1,'92a0c4e716bccccf0527a2dc27caf528d35cefb2','arashM','','2011-10-27 10:00:34','default.png',2,-1,1,1,0,0,0,0),(119,'hadi7tir','ed2c73bb784ea63394951e520b51cde4a6916078','hadi7tir@yahoo.com',0,1,'781d34e4dd4e29157ee7e186654e546239e3e914','hadi','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(120,'imanrazavi','797a6c42ea0ac6ad080cd33de3532f8e8f40a5ff','imanrazavi.cm@gmail.com',0,1,'f411cfd15a4d77681d247327f2d7dd111e2fabb8','seyediman','sadjad university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(121,'faridshariati','efd3a0430779cc66690ef07f315fcd8c2584cc71','faridshariaty@gmail.com',0,1,'e43469c2b400e06be0ac890b324848bd19934a06','Farid','IAU Of Sanandaj','2011-10-28 04:47:34','default.png',2,-1,1,1,0,0,0,0),(122,'vahidsepehri','ca6ce106cceed772aa8d1ae641890b5aef04b306','faridshariaty@gmail.com',0,1,'449c77e5cd8e1baee8c3a4a15a5e6363c32387aa','Vahid','IAU Of Sanandaj','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(123,'rezavaisi','5df8653b55099c06112c390c189e290299a018cd','faridshariaty@gmail.com',0,1,'31ee6dc9f6ee403452e7a56e222081a55c606199','Reza','IAU Of Sanandaj','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(124,'mehrdad ghasemiani','9b1db3a84180af2c4b01ed76f9702b26d574e4da','faridshariaty@gmail.com',0,1,'e1cc5c9d12b0c2c53ac097673993dd3aa1b86519','Mehrdad','IAU Of Sanandaj','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(125,'MohammadMahdi','1e79245e4d6693f61ad680a38016d4a7d75e7ac9','mahdiatut24@gmail.com',0,1,'f98a13601076ee7472e8b92b53ac99c6d39b90eb','MohammadMahdi','ROUZBEH/TEHRAN','2011-11-04 18:05:59','default.png',2,-1,1,1,0,0,0,0),(126,'mnafshin','67fa5593829355b97f5268f9c132ecf3c773aeb5','mnafshin@gmail.com',0,1,'8acf721cff3e1947d4501dffd9f01beff861929e','Afshin','UT','2011-10-28 11:38:17','default.png',2,-1,1,1,0,0,0,0),(127,'iman.kiarazm','9814a61ade33237954c14f4e6d48920bdb198ed7','iman_kiarazm@yahoo.com',1,1,'1eee9205888f2523bfb6769636c0e1543dfdb396','.:: i.k ::.','Ferdowsi University Of Mashhad','2012-12-18 07:35:04','default.png',2,1,1,1,0,0,0,0),(128,'salpha','fc8c2589be3ea64c8b271b81add783432982f22b','salpha_2004@yahoo.com',0,1,'2cc54d01a7de566ce69f97b746cd980ccd1165ec','Saeed Ehteshamifar','ECE UT','2011-12-22 08:26:40','default.png',2,-1,1,1,0,0,0,0),(129,'corc2','76513e1f548a6fbb670991cb314dcb05020aae11','smasjavadi@yahoo.com',0,1,'44d045b78448de19b9518d8f697c753eaf31511b','memyself','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(130,'zahraaa','d9d217a2aa6375ba5674dfcb087c25c2f6f2130f','z.alizadeh_88@yahoo.com',0,1,'87ee37851f977ac59cf9cdf38c2e4f151500be0b','zahra','tehran','2012-01-01 12:04:33','default.png',2,-1,1,1,0,0,0,0),(131,'shadi shafighi','c7cf081cef34197c59fcfdf3cb5e317174c2c245','dsh.shadi@gmail.com',0,1,'bfdb23008b3042719c42dd02b303d7eec9288fa7','s.d.s','Tehran','2012-02-04 17:39:02','default.png',2,-1,1,1,0,0,0,0),(132,'safoorayousefi','ae7c2d2c36c2d41e651b0b83de36e62243af7015','Safoora.yousefi1192@gmail.com',0,1,'1c70c209b54a30df1d5a94660399be55eb447542','Safoora','','2011-11-04 20:27:41','default.png',2,-1,1,1,0,0,0,0),(133,'ali_moharrami','f4c46818603876d4ab0cc730b8cf5dc86583d203','ali.30.man@gmail.com',0,1,'2e18780b10bd637541e98c0dba32b61235510fc5','ali_moharrami','teh','2012-02-06 13:52:30','default.png',2,-1,1,1,0,0,0,0),(134,'smrt','23ea72860bf6d175ed3d07f54234f93b5160e61e','mhmmdrz_taj@yahoo.com',0,1,'229c8211dd373d896d4902c9354d1cd429012ef8','mohammadreza_tajzad','UT','2011-12-31 15:45:20','default.png',2,-1,1,1,0,0,0,0),(136,'REAL','38ff9b0873d0583802eed4c493d009214adaaffe','aleyasin.nodet@gmail.com',0,1,'6ffd830c5ff5172a676a809a10150edd0b4a8b14','REAL','Helli','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(137,'masood45c','b09517d3298ff4f2dd7a0e3a10fd2796d68ce888','masood45c@yahoo.com',1,1,'6dfc196d1e1be69983aa48e420c524d30502c6c8','masood','sajad uni.','2012-11-08 10:04:05','default.png',2,1,1,1,0,0,0,0),(138,'Amanj','bba7d3bf9402172bfb608c3af61f8b2da9849443','faridshariaty@gmail.com',0,1,'85862162866451d7033c6180a2d94bc4ae111fbc','Amanj','Islamic Azad University of Sanandaj','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(139,'mehdi3254','e564ca1bea44c69e9a94fde0686f1023b62001cd','mehdi3254@gmail.com',0,1,'629d6bf7c221edeaa80ac650346859b6fb9d28da','mehdi','sheikh bahaie university','2011-11-08 10:08:25','default.png',2,-1,1,1,0,0,0,0),(140,'HajiAcm','efd9578e146cfa1a8623fa9e2390269f7d20c44b','abaei1370@gmail.com',1,0,'2fe3557a689c551effbad02e84018f638066beac','mohammad ali','damghan','2012-11-26 19:02:38','default.png',2,-1,1,1,0,0,0,0),(141,'G_o_c','3506d8da3dd11b2dd7d235fe97117d09e932981f','abaei1370@gmail.com',0,1,'96c7c1c25f121ac225b5884b26e0c96b711ddca5','G_o_c','damghan','2011-11-06 19:18:48','default.png',2,-1,1,1,0,0,0,0),(142,'cboy','06d02fb7985ffc95de6eafdff8780e4d99646c7c','msoleimaninasab@ymail.com',0,1,'bf9fc7bc4643507cb9ae26e6aec23ac3e66ee2ad','CBoy','UT','2011-10-31 10:35:46','default.png',2,-1,1,1,0,0,0,0),(143,'Reza Kashmir','c8e8967d0377df6f8284735308ddf6b934333ff5','rkashmir@ymail.com',0,1,'d524fd0633e9786f8e1d03611aa81393e4587354','rezkesh','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(144,'programmers','a2eb3b9efa80ed231f289dfc9680123e92c39fd0','mr.vahedi68@gmail.com',0,1,'6a2e08420cf1ea138518cc735e6769fad558aebf','Programmers','damghan university','2011-11-18 13:44:55','default.png',2,-1,1,1,0,0,0,0),(145,'goolakh','460495dbbf005ce94534116d888bdb9fea8ff737','robahian@gmail.com',0,1,'a79dd3bb582f20af263edad71573bbb9cd537634','tester','tester','2012-03-26 20:39:07','default.png',2,-1,0,1,0,0,0,0),(146,'mrmasoud','666b05b5c62cfe97e4aab2ff952cc63294bba2e1','mas.rahimi@gmail.com',0,1,'0ba0dbcc00c88fb4d7154425f6ccf4fbb56855e9','SomeOne','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(147,'mohammadrdeh','3412bbc722af82e3224bf154c6e535ed1bcb0df8','mohammadrdeh@gmail.com',0,1,'08c819b4f105b26e95a139232cc65edf9b492b81','mohammadrdeh','AUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(148,'mehdi_khademloo','9ed1ece83089c19c9efb8d79a8a9d9cbcc917ca4','sam87_kha@yahoo.com',0,1,'a2419a7e583be192b5375b8db7b926237b950ba2','Mehdi Khademloo','damghan university','2011-11-05 21:29:39','default.png',2,-1,1,1,0,0,0,0),(560,'team254','f069da0b4373f6912a3334b7b3ea3c23167a9d48','mohamad.zehtabi@gmail.com',0,1,'b8d36972b9f5a380e4871ee274e0bc37658bef12','IAU of Tehran - South Branch - RCMaster','','2011-11-10 10:33:19','default.png',2,-1,1,1,0,0,0,0),(558,'team252','4fb321d2b911787ee9ceab7ad054b025938a466c','m.zandy@gmail.com',0,1,'31bb66782941d78ad6e2e253b9e5134eb3578473','Shahid Bahonar U of Kerman - DosShell','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(559,'team253','f0eb236c9d6d20c9c2fdcff30cf39fc2c0a0d7d5','mohamad.zehtabi@gmail.com',0,1,'1d1e77f0def620310e82068fb1e9baeb7a6ac8c3','IAU of Tehran - South Branch - Pristine','','2011-11-10 11:12:20','default.png',2,-1,1,1,0,0,0,0),(557,'team251','41e7025e378a3b1170bea70b9246bb2edac8f0cd','h.zamany@ece.ut.ac.ir',0,1,'c11a1c76f8cd2f014d812689ee2b86da865dcf36','U of Tehran - Mistakable','','2011-12-06 11:33:52','default.png',2,-1,1,1,0,0,0,0),(556,'team250','f44b3bf07f2d7b4e92ad3f1fb1c51593fd32850a','moh.mahdieh@gmail.com',1,1,'4a07e148098b281418c7572ce806e6eba711994e','Any Interesting Name','University of Tehran','2012-12-19 09:46:19','default.png',2,-1,0,1,0,0,0,0),(555,'team249','a00f1593ee1d52d7d3ce121a28c282a996d407c5','h.zamany@ece.ut.ac.ir',0,1,'e901a820d6a0f110926df2073cde06786c8f9214','U of Tehran - S-Fun','','2011-11-10 10:47:18','default.png',2,-1,1,1,0,0,0,0),(554,'team248','631cf2624c372d5c05d4785af2af83d52b717822','navid.saleh.n@gmail.com',1,1,'0a81011960e59584c723151625566e46b493d590','U of Tehran - Shas Maghzhaye Jahande','','2012-12-27 11:27:13','default.png',2,-1,0,1,0,0,0,0),(552,'team246','bcda7aa4721eaa123d25128018bf15906cb3c4ac','pooya.zafar@gmail.com',0,1,'256e7b468509f417b5794d079e75a39a131e9142','AUT - Victorious','','2011-11-30 18:03:53','default.png',2,-1,1,1,0,0,0,0),(553,'team247','c4c0e6d14251448e6c3892d2595eb9da7a38db8c','pooya.zafar@gmail.com',0,1,'cd180cb9634fed15459332b2cd5ead70438c22bf','AUT - Nanehvis','','2011-11-28 20:25:23','default.png',2,-1,1,1,0,0,0,0),(551,'team245','301bd60eacdef2227ec813c2b13d0282d94376ae','pooya.zafar@gmail.com',0,1,'c1aa650d6e5ee37e7fb27e3dafb3e556495e0cc3','AUT - SAR Cheshme','','2011-11-10 08:42:03','default.png',2,-1,1,1,0,0,0,0),(549,'team243','213f74cf4c02fcc437209397c04bcf5f954f48c2','pooya.zafar@gmail.com',0,1,'649ac3959713660a5c867df0e8f5225930a8a4e8','AUT - Challengers','','2011-11-09 22:24:57','default.png',2,-1,1,1,0,0,0,0),(550,'TotalEclipse','78bb0c814898ac12cc425fe69f40b470c773b3cb','aliseif1991@gmail.com',1,0,'db03812c0d662df0634a3791a4d70c4a7c4a6666','AUT - Total Eclipse','Amirkabir University of Technology','2011-11-27 13:45:01','default.png',2,1,1,1,0,0,0,0),(548,'team242','9fc80e596de4f7cb334d20aca5189599a261cf95','pooya.zafar@gmail.com',0,1,'a572cb662bb8019960bd0867b32ada0408747346','AUT - Ghoolhaye Mehraboon','','2011-11-14 17:02:54','default.png',2,-1,1,1,0,0,0,0),(547,'team241','542458815711a1e30edd6550c234dce8ac01993f','a.yazdpoor@gmail.com',0,1,'4e01a2326225f3f42525a7295eb532beae2c2575','Mohaghegh Ardebili U - Golden Loop','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(546,'team240','113739f5b588dc62aca0c708de520046af358a70','mahdi.yazdian@gmail.com',0,1,'2526c4f4c66d62d3778df3db87a2ede6c4750690','Shiraz U - SuccessHamineh','','2011-11-11 11:45:17','default.png',2,-1,1,1,0,0,0,0),(545,'team239','f9967e9b2952c6ae0dc070be95a113910fcd3ca0','aryan.jacobs@gmail.com',0,1,'3b2241ce98c96b27b766882c330d403c678f3627','Shahid Beheshti U - OloOmiz','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(544,'team238','dcaffcf64721e7183c4174df1f4ee586033c8c73','JTC_ACM@yahoo.com',0,1,'77078f82cb682b6e91333c83a06847bab6c3a4e7','Jahad Daneshgahi of Kermanshah - JTC','','2011-11-10 09:47:18','default.png',2,-1,1,1,0,0,0,0),(543,'team237','0f8e0b1073cb44a8a8254aa15498e82b5e089081','koosha_tah@yahoo.com',0,1,'73df3add63a8e315a7b0a71c730a3c63925d04d1','Shahid Beheshti U - Vampire ZIQQI','','2011-11-10 10:05:01','default.png',2,-1,1,1,0,0,0,0),(542,'team236','59e4fead09d8e180edf7c7f3da4b438134e489a4','m.shokri@acm.org',0,1,'24249f5ae880acb409cc7acaa03669d3daba949b','Ferdowsi U of Mashhad - FUM4','','2011-11-10 10:54:51','default.png',2,-1,1,1,0,0,0,0),(540,'team234','46093fb171a9ea3b1dac038bef3ab797edf5b2fb','m.shokri@acm.org',0,1,'1a246c38b2be15572995fa85b80ee5daf9c222a6','Ferdowsi U of Mashhad - FUM3','','2011-11-10 09:21:50','default.png',2,-1,1,1,0,0,0,0),(541,'team235','23d5ac28a313147fdcc891eb21224fe6d423f323','m.shokri@acm.org',0,1,'caf5ac3fa6e2862462ab765bf2405e4b9939a89b','Ferdowsi U of Mashhad - FUM1','','2011-11-14 18:06:16','default.png',2,-1,1,1,0,0,0,0),(539,'team233','643145d4decaa472f27d377cf561fa48c1edf786','m.shokri@acm.org',0,1,'9ed2c1d3ca4184f77859a9b839db238f3490dd95','Ferdowsi U of Mashhad - FUM2','','2011-11-10 10:57:05','default.png',2,-1,1,1,0,0,0,0),(538,'team232','81b2b7382509de5756721aea06cf22b2b422feac','shahgholi@eng.ui.ac.ir',0,1,'84a111115c6530f5379130ce2a46a5a56de3bfe9','U of Isfahan - PhoeniX-355','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(537,'team231','f490c2885c73b3173de2fe106d0e7b7ae798c085','shahgholi@eng.ui.ac.ir',0,1,'f65b874723dc6ea858d158576bb7ceda80696a99','U of Isfahan - :D','','2011-11-10 09:17:08','default.png',2,-1,1,1,0,0,0,0),(536,'team230','e2e59237847863a713785e48cf16d522994599fe','shahgholi@eng.ui.ac.ir',0,1,'da3d0826679d566032c3a1927722e90f89e80196','U of Isfahan - Untitled','','2011-11-10 11:29:11','default.png',2,-1,1,1,0,0,0,0),(535,'team229','693413674cfd64a011d054abfdda5fb9e3a68dc2','mhsg67@yahoo.com',0,1,'2c19a703f429e251ee6fbf9e5c26b52ee5b53866','Shahid Beheshti U - Bingo','','2011-11-10 11:15:31','default.png',2,-1,1,1,0,0,0,0),(534,'team228','24f3fea98d1cd5f6a78aeb64a4d09cfdd5c21a52','seddigin.masood@gmail.com',0,1,'b4dc8e1bfb2aab9aae66c88b8d63b928ae4060c4','Isfahan U of Technology - Snow Leopard','','2011-11-10 12:32:16','default.png',2,-1,1,1,0,0,0,0),(533,'team227','0fe0dac8a47e5226648e9ee2f2e2dc5e52941f0d','s.keshavarzi@yahoo.com',1,1,'f11ec33527756f9fcad9d236199c6a2b627b9b55','Omid Robotics Team','Shahed University','2012-12-13 07:58:15','7590c108c0a5d27c5e6c47150a404ac2c9560d47.jpg',2,1,1,1,0,0,0,0),(532,'team226','1b420f0c9082a40b57fc0662230a37c66f0c42b4','ghanonenei@gmail.com',0,1,'caa25d5c79c80248ef468648b3c803b19f12f971','Isfahan U of Technology - yek yek sefr','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(531,'team225','7d4f07c4b88f46768db70d4da17ec26617c60368','goldenkalagh3000@gmail.com',0,1,'e759e58b77ba2ac36d3b86ff6d3b0b4a1b5cb467','Sharif U of Technology - LiveCode.H','','2011-11-11 15:28:42','default.png',2,-1,1,1,0,0,0,0),(530,'team224','793899f35a02aa7bf638a39511301850688ed2d7','mehran.rigi@gmail.com',0,1,'f8afb57182bb013ca959ac4fbe4f3f93becf9d18','U of Sistan and Baluchestan - Oshida','','2011-11-10 17:26:36','default.png',2,-1,1,1,0,0,0,0),(529,'team223','36269be5cb25740abc000c8d41f99e5715297210','mrk3796@gmail.com',0,1,'da31cdac4e573f8ab633b69662abd1bc743db0c9','Quchan IET - Thundetbolt','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(528,'team222','3eba2572f6e3bc79b9e1f64eb7a09ba23dbf8965','smr913@gmail.com',0,1,'73bfa41ae00704919158d9a44e69e57ee3c86b8c','Ghis-al-din Jamshid Kashani Abyek - Ghiasodin','','2011-12-03 16:12:03','default.png',2,-1,1,1,0,0,0,0),(526,'team220','895201e21060c603d7c26000aa5d2dff0cb89cf9','rashidiansina@gmail.com',0,1,'cda781aa13df3f528720027fcc0caeef25a66645','Sharif U of Technology - Oila','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(527,'team221','89f8620f486b748fa73e850fe12e12ecd17f09c9','smr913@gmail.com',0,1,'e84f520e81a48cccdadb6df2abe63b189908848a','Ghis-al-din Jamshid Kashani Abyek - Ghiasodin2','','2011-11-10 20:17:48','default.png',2,-1,1,1,0,0,0,0),(525,'team219','a040919b6b2a6aa0879f5aa63b965597d03b7bd7','rc_bagher@yahoo.com',0,1,'256edd4474458174e80b7e3bc655b4c6fd7258c9','Mazandaran U of Science and Technology - OFU-90','','2011-11-10 11:23:35','default.png',2,-1,1,1,0,0,0,0),(524,'team218','8f23c212af004387ce62cb00e1954ec9f0c93021','s.omrani@gmail.com',0,1,'0767819c716f773af148e6cb2120129fe1350acb','IAU of Tehran - South Branch - ChiChi spoony','','2011-11-25 09:31:11','default.png',2,-1,1,1,0,0,0,0),(523,'team217','382763dd4dcae37206a81f8e28f9efefcc0505a0','nejati@gmail.com',0,1,'085c8be30881b636a3ae3d9cbbc8fc13d893546c','Shahid Beheshti U - Tricycle','','2011-11-29 16:41:17','default.png',2,-1,1,1,0,0,0,0),(522,'team216','b653258fd672834f97933c99cb1d42723612bcf5','m_nejati3000@yahoo.com',0,1,'647b36c3226a063d1709c0c5a9d44c279ee15533','Ferdowsi U of Mashhad - chichak','','2011-11-10 11:46:40','default.png',2,-1,1,1,0,0,0,0),(521,'team215','25eaabf94db9307205009aff4637562b70a1461a','meysam.navaei@gmail.com',0,1,'e76d2d45b7df34000c598d9c4d686428fcceeb68','Safahan U of Isfahan - Safahan','','2011-11-26 18:31:35','default.png',2,-1,1,1,0,0,0,0),(519,'team213','8c3353ed6baee672514517ded444747f6ad8cdcd','rezanamin2@gmail.com',0,1,'fd6d5c407c289b92fbfdc496dbeb77011a2f9191','Sharif U of Technology - BAN','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(520,'Sarv123','c2c27e2ac4d528286f6bafd4ac56446b91aca47c','adel_khanjari@yahoo.com',1,0,'b2f03c9728ba347de9e088c7d55cf65e3fc3dc47','Birjand U - Sarv 123','Birjand University','2013-03-25 01:06:16','abc5fd660d59d2397d57ad740d425fef0b4f1398.jpg',2,1,1,1,0,0,0,0),(518,'team212','a9aee637679e6908ca9a0dcde1eb38445a03c3d9','momeni@shahed.ac.ir',0,1,'025a55a95f96bda3745176333a009ea0e789a59a','Shahed U - Happy Coder','','2011-11-30 17:11:39','default.png',2,-1,1,1,0,0,0,0),(517,'team211','dca83d4759964f000eb2b83f3f1aa6be33eb80dd','acm.mnasiri@yahoo.com',0,1,'877f5cfc507b34f92502ac5c7fa17f8c904b8c8f','Qom U - QU1','','2011-12-15 20:03:59','default.png',2,-1,1,1,0,0,0,0),(516,'team210','f7e87fb647073d6b07a0add004c9ef404ab71c23','acm.mnasiri@yahoo.com',0,1,'d3088e6913826db9eb6cb61e51286eb8c00c1c2e','Qom U - QU2','','2011-12-04 10:14:31','default.png',2,-1,1,1,0,0,0,0),(515,'kamalmohammadiasl','4df91ce52c5d3e78d356b36aaab27a7deb9826d0','mohammadiasl@ce.sharif.edu',1,0,'54af580916b89ce21162f2146e360cb56bfa724f','Kamal Mohammadi ASL','PNU','2012-11-18 13:05:48','ca43725a02d9834c9fc0c25bff5df2214c53c500.jpg',2,-1,1,1,0,0,0,0),(514,'team208','3e5177f8c20af6d04cfbd626f6f28ff38697cc03','r_mohammadi_88@yahoo.com',0,1,'93e66f8dcd70fbd4f2cd6620309c6c3a32a1a73d','U of Kashan - god coder','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(513,'team207','84756f2b89d3c96cf54e69f6011466bd22a77bc7','r_mohammadi_88@yahoo.com',0,1,'ef96b79f4b94d6bf134dd5bd6b1931d7c96c9cdb','U of Kashan - Phoenix2','','2011-11-10 11:17:17','default.png',2,-1,1,1,0,0,0,0),(512,'team206','56a5e8f9e43499d952bfc0972dac24de3c6bf8ae','malek.3030@gmail.com',0,1,'66d40cdde5d554e7951ae385299130e6ef00f53f','U of Isfahan - Vuvuzela','','2011-11-10 08:38:30','default.png',2,-1,1,1,0,0,0,0),(511,'team205','a555f2c591a1f5661fbadedfd6e67caf9efe9a1d','malek.3030@gmail.com',0,1,'4670e933e34d70a7a221bd2f6ad69904e924ea19','U of Isfahan - Fantastic3','','2011-11-10 11:28:29','default.png',2,-1,1,1,0,0,0,0),(509,'team203','f5dc480202349c5903826516d4efb8371e318c0e','smr.lotfi@gmail.com',0,1,'62ed576347c44ef9fcae63058aba7c66618e05ec','U of Semnan - Antisem','','2011-11-10 11:25:24','default.png',2,-1,1,1,0,0,0,0),(510,'team204','4c0a275e727bd4fb847651796f1e50d7d4976bc7','meshkat89@yahoo.com',0,1,'4ec26b2be5976d9895279b167891dfd4dfaad05c','Shiraz U of Applied Science and Technology - yasin','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(508,'team202','33b10f2399789e6c711e5970b7dbdb1c6fc7b69d','mahdieh_hosseini_1317@yahoo.com',0,1,'af56ebc824c744c3c3c01e3d2fd9b85adca072cf','U of Kashan - Beep','','2011-11-10 07:31:20','default.png',2,-1,1,1,0,0,0,0),(507,'team201','2bdf3e24990152dd5223440bd1682b8a868d2c09','khayami.raouf@yahoo.com',0,1,'943c7fa3c0b84ef82f4cf3868872d77e5dad6119','Shiraz U of Technology - You\'ll Never Walk Alone','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(506,'team200','54950931fe5edde07d3433ed2d678052386ca284','khayami@gmail.com',0,1,'0ba5288d8cfc0008d6e3e02b290b030b933aff06','Shiraz U of Technology - SUTech01','','2011-11-09 18:59:30','default.png',2,-1,1,1,0,0,0,0),(505,'team199','ef9c564a4962d17b74966a39aa06dd8ef61d25ad','morteza.keshtkaran@gmail.com',0,1,'d4c02adfe0bce7949579c26a73586d780a91ad08','Shiraz U - owzoy al','','2011-11-28 23:43:30','default.png',2,-1,1,1,0,0,0,0),(504,'team198','561259b08b8d5be6e257c0df88acdb2f8e71207c','morteza.keshtkaran@gmail.com',0,1,'4c4b2ed51fdb7754f1bf7db7a9103601287842cd','Shiraz U - Motöde','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(502,'team196','e39c24592c3637fb8a68be1abd0a3bd5e10a1aed','morteza.keshtkaran@gmail.com',0,1,'cda31926e8d0b092d4f54a398d561cf5fc44abae','Shiraz U - Lift Track','','2011-11-10 19:54:12','default.png',2,-1,1,1,0,0,0,0),(503,'team197','135a792812a755243b7fa4c31dab1ec631084496','morteza.keshtkaran@gmail.com',0,1,'03aba69c8e8a1324b2fa111fa8f5a7a27991f680','Shiraz U - kateb mateba','','2011-11-10 10:55:12','default.png',2,-1,1,1,0,0,0,0),(501,'team195','7b0dfbdc882d48a08986f1c92d11008fdb7fcfaa','armanksh71@gmail.com',0,1,'8b05c297f62dee554547a52f7a5c09c05eac6519','Shiraz U of Technology - JDK7','','2011-11-10 10:59:55','default.png',2,-1,1,1,0,0,0,0),(499,'team193','3678d1edf06c44c04d9eaf895549e0490af7dd04','m.kazemifard@gmail.com',0,1,'3e272c97528574c16264e7632454b4293e931501','Kermanshah U of Technology - KUT1','','2011-11-10 09:55:12','default.png',2,-1,1,1,0,0,0,0),(500,'team194','4ae8c9aa2c5d2a2776cea556139d0271e282209f','m.kazemifard@gmail.com',0,1,'6027512ab9a6e0511a9d732250860d76933b1d32','Kermanshah U of Technology - KUT 2','','2011-11-10 09:54:45','default.png',2,-1,1,1,0,0,0,0),(498,'team192','9d88613306999cc20f717bf1e3a71c6ca571dc53','mehdi.kazemi8@gmail.com',0,1,'50eceb538950663445dcf6a99d9a47db4f275683','AUT - Perses','','2011-11-09 13:57:43','default.png',2,-1,1,1,0,0,0,0),(497,'team191','c5e631a622ce937287741cbe90a34165af079933','mehdi.kazemi8@gmail.com',0,1,'f5151810ec12cb6c047a3e3a0a169f3b52456d1f','AUT - Iron Will','','2012-03-02 06:46:21','default.png',2,-1,1,1,0,0,0,0),(495,'team189','42890867c64968c5f0b563d06fb7e33fce398654','mehdi.kazemi8@gmail.com',0,1,'3c5fbba14dd761afaa33b1e865c48995a638fb9c','AUT - REZA_H','','2011-11-20 15:45:09','default.png',2,-1,1,1,0,0,0,0),(496,'team190','17444e1a2476a0c53a0e3f3886e7975751816d2b','mehdi.kazemi8@gmail.com',0,1,'a744ea2ada96afbb5723c2f46b5fe21305aaa275','AUT - SuperNova','','2011-11-10 10:04:08','default.png',2,-1,1,1,0,0,0,0),(494,'team188','d6ce848c1950b2dcf4e8488c7f418c453d524210','mehdi.kazemi8@gmail.com',0,1,'612853f4ddd17e05a9c07b84caf6c373fa93ad07','AUT - MasoudCS','','2011-11-10 11:23:05','default.png',2,-1,1,1,0,0,0,0),(493,'team187','2a496ba52230b9f5e2acd0eb3ba7b33ef642024f','mehdi.kazemi8@gmail.com',0,1,'650e20c26d5f9e01a9d8953fddfa6f8e634631a5','AUT - 5om ke mishim','','2011-11-10 08:11:18','default.png',2,-1,1,1,0,0,0,0),(492,'team186','726696e98220620ea0d258577455a9db51f19de0','Kkavousi@yahoo.com',0,1,'b72c1ed607fd7d89d7298efbf950119058b4f8de','IAU of Garmsar - Life is meaningless ...','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(490,'team184','d635d51d53e8d1a7b24b772f4a0976a4b53193ca','acm.jafari@gmail.com',0,1,'99f700d3df03345ee6f18f084234277dcf2d66be','Jahad Daneshgahi Isfahan - Simple_Fun ;_)','','2011-11-10 11:29:51','default.png',2,-1,1,1,0,0,0,0),(491,'team185','b82843044dfa142355e747a0b29934983690200b','coybit@gmail.com',1,1,'f73547e95d39a7d5bf94084abd9aab79954b2d79','CoyBit','','2011-11-10 11:21:28','default.png',2,1,1,1,0,0,0,0),(489,'team183','a729e77637568a5d0839aa346eafd370ac8b6362','mohsensarmast@ymail.com',1,1,'4527b01ca189bdf3a3d23880b306761240b13a6f','shbu','Sheikhbahaee Universtity','2012-12-11 09:16:08','default.png',2,-1,1,1,0,0,0,0),(488,'team182','df9be4f54d8da65458ea3c55b25461051c11273c','mjameli@yahoo.com',0,1,'404d6aadb2aa3290d91ab886913cbcce6567aad1','Sheikhbahaee Universtity - shbu','','2011-11-29 19:55:44','default.png',2,-1,1,1,0,0,0,0),(487,'team181','03120fb1e059f2f6729c0a13459b8408cce2e89e','mjameli@yahoo.com',0,1,'b8607f22d2501c674a83b078fe59480e0da79579','Sheikhbahaee Universtity - shbu 3','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(486,'team180','a24ce7e90df6ccde10994f865e40d5b68a228f84','aachp2005@gmail.com',0,1,'64550cb2023331094ccf4dfc8f02bbf771085f8f','U College of Daneshvaran - Daneshvaran Net','','2011-11-14 17:51:16','default.png',2,-1,1,1,0,0,0,0),(485,'team179','36fe4f82a3bc1a23532d4fc4ef7cdaa71d476a64','hooshmand@fastmail.fm',0,1,'888c13ffaa64109a0c3229eff860def6cda59c56','Yazd U of Iran - Yazduni','','2011-11-18 12:55:17','default.png',2,-1,1,1,0,0,0,0),(484,'team178','a5ea3fda43543e419d883d7c6a59f724ab9d18af','rezagodaz@gmail.com',0,1,'1826e266e14d0374701123bb6c0a88425c0816d4','IAU of Mashhad - HisSs','','2011-11-10 11:07:53','default.png',2,-1,1,1,0,0,0,0),(483,'team177','1e8d55ea349cda009e80e89915ea5eb136d9fd6f','behzad.helli@gmail.com',0,1,'bd970342216d0099bf27493852bf3a89ee282751','Shahid Beheshti U - Stupid Legends','','2011-11-10 11:28:59','default.png',2,-1,1,1,0,0,0,0),(482,'team176','6f2355c489facd77b7fabcc566ba5c4f92c1321b','behzad.helli@gmail.com',0,1,'df6f3db938db39b4e83d38cba7b5c3ab0bd552bb','Shahid Beheshti U - ah_docs','','2011-11-29 13:17:53','default.png',2,-1,1,1,0,0,0,0),(481,'team175','0b18ce719526557307259a53b26b155ac4b36d8a','mohammad.hs1999@gmail.com',0,1,'21ff5af2b2ff9cdb5b0a8eb2411ac624fcb8496f','IAU of Qazvin - CSRDL-ACM2','','2011-11-10 08:50:40','default.png',2,-1,1,1,0,0,0,0),(480,'team174','0a9721f663bb2f3ed1a27df537aceea31a617dde','mohammad.hs1999@gmail.com',0,1,'59fb97a7da78df6f9bd480b77731e1e60fb9aa23','IAU of Qazvin - CSRDL-ACM1','','2011-11-10 10:29:01','default.png',2,-1,1,1,0,0,0,0),(479,'team173','26368b32af226b9d9d5816a3a73f3b34f21beba2','b.2050.h@gmail.com',0,1,'0d4754c3ab7834b1902752e641bcb46d878a7b82','Khaje Nasir Toosi U of Technology - KN2C','','2011-11-09 18:33:42','default.png',2,-1,1,1,0,0,0,0),(477,'team171','891e35cc52ae3a7f2c27c401a5d630d35c4b1d46','sam.hamzeloo@gmail.com',0,1,'22c2cdeb48ed8de344affb75980e21ed5f2f153e','Pasargad U of Shiraz - Pasargad','','2011-11-10 11:45:23','default.png',2,-1,1,1,0,0,0,0),(478,'team172','886ee5c948c08636fbb551ab0719d2de09c355f2','m_nejati3000@yahoo.com',1,1,'ddd1ba7aa258c831e565a3d8aa270c3a1ee63d87','Ferdowsi U of Mashhad - relax','','2012-12-13 12:40:19','default.png',2,-1,0,1,0,0,0,0),(476,'team170','2a4220dbabc3f52034e67cdc05f8d45ba3bd811f','haghshenas.e@gmail.com',0,1,'10f2d1b88b23995799677235f0552a1f0f3b7f98','Isfahan U of Technology - beheshtraya','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(475,'team169','2dae0c6e2af8d6ffb2be3d8fdeed94a1d1430213','haghshenas.e@gmail.com',0,1,'2c9ffdf881a39af1fe2d8bd24136b9f6261bb628','Isfahan U of Technology - Amitris','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(464,'team158','75078a07710f6c5627cbdc94d5cdaca6e28c82e7','m_sadjad_fallah@yahoo.com',0,1,'97c250a26f764267f0d82152df2822ab04a0e101','U of Science &amp; Culture - USC3','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(465,'team159','6f24369704467a47b46ac8721105d9b36900852a','sajjad.gerami@gmail.com',0,1,'26a99acf4d621b9164a49544d73f52c046498214','Shahid Bahonar U of Kerman - CSB_87','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(466,'team160','1eb2777a44b29142d13d73b058e55bd8bb23c213','farzanehgh@yahoo.com',0,1,'ed226220f9745be7fe186aff92be13ef3a03b035','U of Tehran - BlackBox','','2011-11-10 11:29:37','default.png',2,-1,1,1,0,0,0,0),(473,'team167','b20fc63c4a3a9a9e4fbdbbc2ba622ef8099d2d69','haghshenas.e@gmail.com',0,1,'a2361b9c0c6ff254cfb1c46f93cde7a7af759310','Isfahan U of Technology - emam sajad','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(474,'team168','4aa5f3fd5c2c3c8b8c8b5c9626eb5fcf506d9398','haghshenas.e@gmail.com',0,1,'176e8a9f3adcdba331ffbb4579508ba816290de1','Isfahan U of Technology - Nodet','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(472,'team166','01cd7233694edfada32eae5d5a46f65ea642d039','haghshenas.e@gmail.com',0,1,'7f8a4d302639ea6b8050141796eb5ae91b17fc26','Isfahan U of Technology - Bash','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(471,'team165','5b541a47a4ec546a2f102a8eff22a1e4964daea0','haghshenas.e@gmail.com',0,1,'7a99b0ddcbfc24d0f2802519fce9342b703cc309','Isfahan U of Technology - Incredibles','','2011-11-10 09:08:30','default.png',2,-1,1,1,0,0,0,0),(470,'team164','620dd84074f4223856b600fb85775cba11973c82','haghshenas.e@gmail.com',0,1,'d8ca24f8af9ef1fa563c8a0ba5a6c3a6e0a30400','Isfahan U of Technology - Golabia','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(469,'team163','a88e6c98821e2cdeb7315ef0d8463b698aa9c7d4','haghshenas.e@gmail.com',0,1,'118f0cadb14a5ddc10acd71a37dbedbcee5ebc33','Isfahan U of Technology - Turing','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(468,'team162','1b305b98a8e15c1f21a2e2c9ffebef469799aa25','rezagodaz@yahoo.com',0,1,'e31f476c6f3cc9242cf8fd8069f933bb7a136166','IAU of Mashhad - pat-o-mat','','2011-11-10 11:12:26','default.png',2,-1,1,1,0,0,0,0),(467,'team161','5bf01864eaa1862d57fb4fdd3433b33d46bc5e2e','aminrgh@gmail.com',0,1,'de78b1e80a597e20d77de1d1cd5f5f586de526c1','Sharif U of Technology - Reincarnation of PMP','','2011-11-24 10:39:32','default.png',2,-1,1,1,0,0,0,0),(463,'team157','73fc6831638f13f7db5fd9d70bdf955829aaceb5','m_sadjad_fallah@yahoo.com',0,1,'c4ca350fa97331a56ffa03d7fe09d8da5ca411cc','U of Science &amp; Culture - J2SAE','','2011-11-11 11:56:28','default.png',2,-1,1,1,0,0,0,0),(462,'team156','3688656fc9c48d48da6919def77fd5b5357ff96a','m_sadjad_fallah@yahoo.com',0,1,'8fb270f41dcaf1dc1c0c31383fdc82609ee230f8','U of Science &amp; Culture - USC1','','2011-11-10 09:37:22','default.png',2,-1,1,1,0,0,0,0),(461,'team155','481862d66c490c40cb1ef24dc3c2eae0cb27793a','m_sadjad_fallah@yahoo.com',0,1,'546cee462ecc2c49e1463fdd981ed5d0633aa462','U of Science &amp; Culture - ACM go0ogirls','','2011-11-14 12:41:16','default.png',2,-1,1,1,0,0,0,0),(460,'team154','fd9fcefa0d49ad8f4bd08ffb1c0da62d855d7aaf','m_sadjad_fallah@yahoo.com',0,1,'f74b5bb7229fedef54d8af0283f5ba5646f457e3','U of Science &amp; Culture - U.S.C.oder','','2011-11-10 10:21:03','default.png',2,-1,1,1,0,0,0,0),(459,'team153','7446d90a345c1d2b78256118d834edf0a1bcdd91','m_sadjad_fallah@yahoo.com',0,1,'fd408d704097be3f3f4da3adb384ce3e6c7029ac','U of Science &amp; Culture - USC4','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(458,'team152','5e49177c50169193feeaaccef8408727a98deb20','m_sadjad_fallah@yahoo.com',0,1,'d3d9e60afd779aa4f164c30a433e950e17f2377c','U of Science &amp; Culture - USC2','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(457,'team151','4a6e301f525ac0ab0bea26255f920cc9639b51af','navideghbali@yahoo.com',0,1,'31f813945f398674555247687f5c6d6e53066405','Shahid Beheshti U - ADM','','2011-11-22 15:36:16','default.png',2,-1,1,1,0,0,0,0),(456,'team150','a782655e792fb4178b1031e804c1edb37ca758b8','navideghbali@yahoo.com',0,1,'33b5917c091c0ef41439b2e5fb7919ea0a2a1ccc','Shahid Beheshti U - Triumph','','2011-11-10 10:28:37','default.png',2,-1,1,1,0,0,0,0),(455,'team149','d9881e75e31f6818c2003e29ab3d0a29b80ca2b5','ahmad.ebrahimi68@gmail.com',0,1,'f97da647d5023d5af48dbc86a3573235ab54f83c','Shahid Bahonar U of Kerman - Foolish Boyss','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(454,'team148','fb77aaabe555804600d0d93503fa21889b229e06','ali.dmohammadi@gmail.com',0,1,'e61daf108fc2404b31e01c18df9b4412efb86539','Shahrood U - Dokhtare Balaa','','2011-11-10 11:05:01','default.png',2,-1,1,1,0,0,0,0),(453,'team147','df0be171d115ac885affda1c56f941e404bc0737','ali.dmohammadi@gmail.com',0,1,'51c260be0d367287c6dc62b76117244d50b056d4','Shahrood U - Amgheziiiiiii','','2011-11-10 11:03:49','default.png',2,-1,1,1,0,0,0,0),(451,'team145','a5f4fe6085d1fda69cae4ae77ea8a94840c2e730','ali.dmohammadi@gmail.com',0,1,'8e551de79cd3edb1373810af426d7ef25afc4354','Shahrood U - Bapoo_','','2011-11-10 10:44:12','default.png',2,-1,1,1,0,0,0,0),(452,'team146','705d0eef1574d2a4924c51c13204a4ddc2dd5935','ali.dmohammadi@gmail.com',0,1,'51635a8016bb9997187d24215dba19770af89f6e','Shahrood U - Stars','','2011-11-10 11:20:25','default.png',2,-1,1,1,0,0,0,0),(450,'team144','be7cfa6cabad86fc56252a786f61c99153acba3f','mj_davari@yahoo.com',0,1,'bf56a09414fae5d21a78e25d223fca927264b852','U of Tehran - pat &amp; mat','','2011-11-10 09:55:06','default.png',2,-1,1,1,0,0,0,0),(449,'team143','b8fa9ee543de96164629af304dd18b9556203e60','mj_davari@yahoo.com',0,1,'ed7a243d62a5d03cd3cb53d3dff4e0323c49488e','U of Tehran - spara','','2011-11-10 11:17:40','default.png',2,-1,1,1,0,0,0,0),(448,'team142','6a3cc48e82dc363f24a4b40d0a13dec14ff95819','mj_davari@yahoo.com',0,1,'692490e6d59d62cbb74814bf767acf37421f433c','U of Tehran - Nova','','2011-11-10 11:06:10','default.png',2,-1,1,1,0,0,0,0),(447,'team141','3cbc411542ffc5f37a38168f7fecec773816f164','mj_davari@yahoo.com',0,1,'6359c2c52d3f925cebb6e49b49056a66b13accc9','U of Tehran - salam','','2011-11-10 09:03:44','default.png',2,-1,1,1,0,0,0,0),(444,'team138','60e34a3d19f1a122399f387d99c8a244b300985f','mr.vahedi68@yahoo.com',0,1,'2e529074bdb225dd9affc898e16b1b2ed2f02872','Damghan U - God of code','','2011-11-24 09:06:00','default.png',2,-1,1,1,0,0,0,0),(445,'team139','20bc9339f1b0cb33d4f08e8511de8d376e8fda19','mh_hima@yahoo.com',0,1,'3d584d500e0c441d710cc27f7e4c7a164b4c7ea8','Ferdowsi U of Mashhad - Ferdowsi1','','2011-11-10 17:48:46','default.png',2,-1,1,1,0,0,0,0),(446,'team140','76adf4299bccf9ca4f0fb42bcf150fb0e79501bd','mj_davari@yahoo.com',0,1,'87b22031408317ef58172d32925e7673bfed1533','U of Tehran - ut.csXYZ','','2011-11-10 10:58:25','default.png',2,-1,1,1,0,0,0,0),(443,'team137','978674f4ec94bb702fae711f48e52dba1b38e279','bakhtiari@sadjad.ac.ir',0,1,'f2cde38452349ef3bec13e429995050ac80251b3','Sadjad Higher Education Institute - Sadjad1','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(442,'team136','6643db150e2d7f6be4fce4a46e615a8de2d0ad30','bakhtiari@sadjad.ac.ir',0,1,'23c3b3d18d8b5f5bc9b46c6beef29028642f3775','Sadjad Higher Education Institute - Footmen','','2011-11-10 10:26:20','default.png',2,-1,1,1,0,0,0,0),(441,'team135','057be5f4b3e1f06efdd5551c06e72c03571e93cb','bakhtiari@sadjad.ac.ir',0,1,'4db276a1c7d31b8bc1d929ec60f4a38c62f59ff9','Sadjad Higher Education Institute - Sadjad2','','2011-11-12 11:26:40','default.png',2,-1,1,1,0,0,0,0),(440,'team134','89b575489ebbed4ce3e6d5bae23bc8fac994ace8','hbagherinezhad@gmail.com',0,1,'051674b65773444d441f3daea4d30085ca6125a2','Sharif U of Technology - Musketeers','','2011-11-18 16:58:20','default.png',2,-1,1,1,0,0,0,0),(439,'team133','021f8882bb626e19bba8a6bc33e96e7180501fa7','ft.azadi@gmail.com',0,1,'9d47dd7952942bd53a04af34a152070496983f46','AUT - Pastil','','2011-11-17 09:57:56','default.png',2,-1,1,1,0,0,0,0),(438,'team132','b4f2cbbc09404d5edbeb862fa60257aa361f7e96','bazikhorclub@gmail.com',0,1,'ea156589d8e809673693b5b2f1b90f07e47994ff','IAU of Sanandaj - A.m.a.n.j','','2011-11-12 04:45:39','default.png',2,-1,1,1,0,0,0,0),(437,'sudomakeinstall2','6e4c96e056d0cba8be067934251e697423ad52df','askari.saeed@gmail.com',1,0,'4ec04ddb45af790dadbed85b6c5437412765639f','sudomakeinstall2','Ferdowsi','2012-12-15 21:31:48','default.png',2,-1,1,1,0,0,0,0),(436,'hereforlaunch','b06a39d69c00678e776da9dde037b591ddd3ea68','amir.s@acm.org',1,0,'b952672ace43fdf348d2659cee9b6bf127d7ea04','Here For lAunch','U of Tehran','2012-12-06 09:34:22','default.png',2,1,0,0,0,0,0,0),(435,'team129','bc298380ad5d08c0992b57061bbe32fffa48ea9c','mariwan30t@yahoo.com',0,1,'1fa06269bf1a9f05d95eae59cd7d8a29a003f869','IAU of Marivan - Zrebar','','2011-11-09 19:31:45','default.png',2,-1,1,1,0,0,0,0),(434,'team128','857ffef44cd58a182d07d1fca9e9cd95fce93fec','aryan.arbabi@gmail.com',0,1,'f30ec7e0c0c274c42515146ad6f294653cc0a015','Sharif U of Technology - :-sut','','2011-11-09 19:08:42','default.png',2,-1,1,1,0,0,0,0),(433,'team127','08eb54ada7e494fec327ababf913a03dc1632790','ansari.robo@gmail.com',0,1,'c6a17165a5cc36efba9a8a310c2ac1f3815e38a5','Shahed U - TUX','','2011-12-14 12:36:45','default.png',2,-1,1,1,0,0,0,0),(432,'team126','753007f7b6e386927c7df56bd674c4a308fb6bad','ansari.robo@gmail.com',0,1,'4e6077a153e6318b3030e9c4235871b46f93a3ad','Shahed U - Bug Killers','','2011-11-12 08:54:05','default.png',2,-1,1,1,0,0,0,0),(431,'team125','7494c28e0787bb174fb9f18ee0a1b6efb70878b6','amerireza@yahoo.com',0,1,'a4d273c9e7f6ea4113eb5c538b95499b2b945a18','U of Science &amp; Culture - 2 Pro\'s 1 Noob','','2011-11-10 11:15:50','default.png',2,-1,1,1,0,0,0,0),(430,'team124','ebeef9a69c8fbd80d6fcf1a3d3d6885910b4dabe','amin3d@gmail.com',0,1,'9c662130bbae563099f4ebd968ca00def3b8ffcb','Khorasan Higher Education Institute - Khorasan Team 1','','2011-11-09 19:17:27','default.png',2,-1,1,1,0,0,0,0),(429,'team123','1b5cda2cd941e4c9c10d1b4d335a82d665f8d02c','KARAJ_AZAD@YAHOO.COM',0,1,'fde684516c5b7f5ff205c3716f09c428b03e6174','IAU of Karaj - KIAU','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(428,'team122','32056b2a5668be089e6b07533db019460e8ae63a','amirmahdi.ahmadi@gmail.com',0,1,'113651271f00366fb494868d7b83edda5e0bf44d','Sharif U of Technology - Laconic','','2011-11-25 10:59:04','default.png',2,-1,1,1,0,0,0,0),(427,'team121','5585a3c923bca203864acc2ce5a758c7314883d5','Abbasifard_mr@yahoo.com',0,1,'0267e27edd416ec7323cf8846b13b5b21071c904','Adiban U - MigMig','','2011-11-10 10:18:55','default.png',2,-1,1,1,0,0,0,0),(426,'team120','1f5f77af0275ed13db014cb9c81f50338aefcc1d','Abbasifard_mr@yahoo.com',0,1,'8e3534fb2562b622ceb0ba8985e91a7b152f74bd','Adiban U - Adiban','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(425,'Tricycle','c74d8b3d19515271b657f2a141f9915ce507ce04','Arabpour.m@Gmail.com',0,1,'672f60149ca8481ebf9f33ffc65885546f002b39','Tricycle','Shahid Beheshti University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(561,'team255','c69d58bacc9e29b1e1bb6c134f8045bd2ebb7331','mohamad.zehtabi@gmail.com',0,1,'fcb1f9cc0f7905425cc93cb84c68b232413c5bfb','IAU of Tehran - South Branch - Golden Eagle','','2011-11-10 10:35:04','default.png',2,-1,1,1,0,0,0,0),(562,'team256','588bd0244f0ad050537ce1c2e08fe71c9815f6a1','mohamad.zehtabi@gmail.com',0,1,'ded2692b17f6a27a319f13ee25ee56f0f3af5675','IAU of Tehran - South Branch - SNA','','2011-12-03 18:57:54','default.png',2,-1,1,1,0,0,0,0),(563,'team257','701260ec678bacfca31fb9761ad569924d99f36d','m.kazemifard@gmail.com',0,1,'f76d1f06dcea2ff809d310111eac6e4e0a787a61','Razi U - flying fingers','','2011-11-25 08:36:10','default.png',2,-1,1,1,0,0,0,0),(564,'team258','71af20479c0ad0c2880e7ba557c2f96faf7b3905','m.kazemifard@gmail.com',0,1,'f9e8ae50c875ee39ca2ceac8f9c7cb6f5c2509be','Razi U - Razi 2','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(565,'team259','0270f46139bdb08a4abaf75b81f9caf08f408d10','m.kazemifard@gmail.com',0,1,'32ae118e1290c6ce3364a57c0387001939173111','Razi U - Razi 3','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(567,'babak','d3c6fabcd7cc05905335d086f8144ca50c2aebb5','babak.ahmadi87@gmail.com',1,1,'43df76087f8058115dffd6e2935e3f5ce216f957','babak','Shiraz University','2012-12-15 16:13:43','default.png',2,-1,1,1,0,0,0,0),(568,'goharshady','c26f1111279cbefb4cbbe690f096e2118b5cef3e','goharshady@gmail.com',1,1,'619d7d91154b789d990aeabfd1bedd052e039372','AKGMA','Yazd University of Iran','2012-09-03 09:58:00','default.png',2,1,1,1,0,0,0,0),(569,'yassaee','49b270400c698b69f713c055a4f5b366650bccfd','fatemeh.yassaee@gmail.com',0,1,'05fb7f4df4680e38d6cd8f269f92ac9aca27c6bb','yassaee','yazd university','2011-11-26 16:22:17','default.png',2,-1,1,1,0,0,0,0),(570,'acm20000','2c801cf141ff72eb6435614f1f738711ca7d9754','acm20000@gmail.com',0,1,'1918d0024c58e357253cd2d2b70074abae61d846','reza','semnan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(571,'directline','d683a18d5305165d06170b44e3ab2f734c7aa802','directline7@gmail.com',0,1,'483900dde620e19c44918360947c5df53b204be8','directline','razi','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(572,'saeedkh','913dd2afb1b7d506e0cbd1c06d1f46473f1705cb','saeedkh_2005@yahoo.com',0,1,'98e49803c5aac0daac1103c67c004b3c70c6c853','saeed','IAUM','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(573,'mohammadiasl','3179b5167077e8760f628cb760e81ef4bde86864','mohammadiasl@pnu.ac.ir',0,1,'06ccfd94eff9254e8100ff83031e387d88421351','LuciFer','Payam-e Nour University of URMIA','2011-11-30 21:39:59','default.png',2,-1,1,1,0,0,0,0),(574,'IronWill','db0ac1142a3ea793ee991c704bf2bd375c24caee','sepid014@gmail.com',0,1,'e4b349df6fa5875e0a6373a713efc28c6a9f71ad','IronWill','Amirkabir','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(575,'mhds','20fda5b11a35c2aa01bbb4e57af04d05a77653b2','mhds.fathollahi@gmail.com',0,1,'eae6a0276964e33a3591cef59846f45c02fd2689','mhds','Zeynab','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(576,'ashkan13','74300c422be1b098d3e961ef259805874fcdd6aa','ashkan13@gmail.com',1,0,'16bb98ff1d3fef769594d6b4470c0607421715ac','ashkan_d13','Razi University of Kermanshah (old)','2012-12-05 15:26:41','f99a46b8a65a9b2031d3d8f5db97b071b788dd69.jpg',2,-1,1,1,0,0,0,0),(577,'acmtabriz','72c7d014bb85b2c1f3e3d45b17d61f406c575b72','b.honarmand@gmail.com',0,1,'7c9162aabdc93b24a0e6963e6c8b452b3cdf78a0','ACMER','Tabriz Technical Cologe','2011-11-10 19:17:47','default.png',2,-1,1,1,0,0,0,0),(578,'ali.mashreghi','51b8ba08910d73445936702e16b42355dc5088f5','ali.mashreghi87@yahoo.com',0,1,'b9ead27bf9b3a32892adb79cb43558d721d65eba','ali_mashreghi','ferdowsi','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(579,'vorujack','073214486276a506fc7353567e633c29f449df4f','vorujack@gmail.com',0,1,'8580834093ef39074464ca5aaa1a91dd7b67fc3d','vorujack','Shiraz University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(580,'vb30mbian','307a1c0bd84fae4e5651d8633414d9964454423b','mousavi.uk@gmail.com',0,1,'122df58453cfdab6ed2668bc85e133d3bbd64c4a','Sayyed Ali Mousavi','Shahid Bahonar University Of Kerman','2011-11-10 16:13:11','default.png',2,-1,1,1,0,0,0,0),(581,'abbasiforud','4584ff1a6cdc9bf50c2ed6e87263e82c087bbd93','abbasiforud@yahoo.com',1,1,'6b643fbbdb5818343a581ee233a6b4d4b2be7bb2','abbasiforud','adiban','2011-11-11 18:18:35','default.png',2,-1,1,1,0,0,0,0),(582,'xxb2xx','4c530767331e917e717a558a290dc004047559f1','alijahanshahi91@yahoo.com',0,1,'ac171b8fd8d90a97fe6465e3628d9c083d9bdff0','Alijahan','SBU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(583,'acm-try','528ac16ddebf4814d394da065f0874cd2b92406b','zhirogroup@gmail.com',0,1,'7f830c23bfb7324fcc68d9c92a4db6b93f17f11a','aaaa','azad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(584,'Dragon','95c95376dd2613347b4f3a81d95addf501f52db4','sampad.abbas1370@gmail.com',1,0,'909709983d84ffa306198bf81cadaf12268df894','Dragon','Kashan University','2012-12-06 15:24:23','default.png',2,1,1,1,0,0,0,0),(585,'kingofcode','9a87e315f49c9aa4f7ff9070e924d6684c063b60','hadi_sinaee@hotmail.com',0,1,'346af69f194d5544ed8649f6013aca19bc7c629c','Constantine','Kashan University, Iran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(586,'y.nz','0dc1884b15c8d0119a690897d6f939de4f26ad3a','ya.nazari@gmail.com',0,1,'8393c4c5f968c598dc784b706bef655cbef99b5b','y.nz','shiraz university of technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(587,'maryam69','a380a2bce173886f98834a5f5a7b368ef92abdc1','maryam.karimi69@gmail.com',0,1,'aab7e4676ec00eb0199c0de6a667e62f5e7a3abb','maryam.karimi69@gmail.com','sutech','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(588,'sadjad','93890e805e1ee1cde28450795cd896f21061a112','ksadjad1991@gmail.com',0,1,'68456993a19a2499215dde05e6dfe5117b7c636a','Sadjad','SUTech','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(589,'ftaghiz1','f104139e1142795a3d85d2986d202f7c3645d881','ftaghizadeh69@yahoo.com',0,1,'f7ddc4c52df862a5bd155faaa8081c8c0135332e','fereshteh','qom','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(590,'ssmce','c7366f1970f0425d78f1ea537f063208e152dc43','sina.sajadmanesh@gmail.com',1,0,'8146b08ca923df7325b1ecd127371a5b23cdf1eb','s.s.m','University of Isfahan','2011-11-11 17:06:38','2635dabf16a7c21568906afc5586c5f2a3c28887.jpg',2,1,1,1,0,0,0,0),(591,'honarkhah','4f2d63c674db4fbd7a4c5fc13384f5e13bf106f0','m.honar@gmail.com',0,1,'233ee1719e9860b364613853675a92cc208d485d','honarkhah','ghiasodin','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(592,'Mehran','ecbef164d497a5eb397247e47c96341c972e3161','mehran.rigi@gmail.com',0,1,'5e4ba472b8322943d4ddd54de0a0e08977e9ef20','Mehran','University of Sistan &amp; Baluchestan','2011-11-19 18:42:49','default.png',2,-1,1,1,0,0,0,0),(593,'hossein.nasiri.gbd','1db731c8f88a699a16e30b40ca8acdeeb9e4421e','hossein.nasiri.gbi@gmail.com',0,1,'a0310a8e7d466938ee99811492e4b7405f85dfaf','hosseingbd','kashanu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(594,'labod','e179ce68607ad53a580eec07213242b07e7a74ee','aachp2005@gmail.com',0,1,'ab6357bc4b5eb7970d02a715574b7f6fc21b01af','Masoud Aghdasifam','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(595,'hossein.nasiri.gbi','124f6cefa5f293509934bec0a0f9b73c8404b170','hossein.nasiri.gbi@gmail.com',0,1,'3cd307760e781e3972cb267ba3e8a759872cd46a','hosseingbi','University of Kashan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(596,'Koochooloo','1ccebd8b902ba4741057953d65843655775e3f5e','s.fazleelahi@gmail.com',0,1,'a21a50996713cc76cae7c17a1606a5c13b1de327','Koochooloo','Daneshvaran','2011-11-24 08:45:58','default.png',2,-1,1,1,0,0,0,0),(597,'Sepj','a2206fdc67494de458cbab21f6b4f9a235db4501','sepehr@jalayer.com',0,1,'0a466de4edf7f0ff16e6f92dc738568dde2e2cf6','SepJApro2.0','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(598,'RezaSi','edb3701b6875dcfe5e7d1b63ae50396f2a3ddf98','rezashiri88@gmail.com',0,1,'3027d3704344305d127c672d1f6b55e6ad125026','RezaSi','Alghadir High School','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(599,'uscoder','1ddaa9b653b337cdc68e50d6b9aa0a67b8af88f2','ramtin_rostami@msn.com',0,1,'fa112546477800d7af207d6bc7540650adc61d79','U.S.C.oders','University of Science &amp; culture','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(600,'eh_sh70@yahoo.com','81b8bf0b07ca51c9c82bb7df8db7f78e56662333','eh_sh70@yahoo.com',0,1,'d434129e22d3d0a3085b164a515b4dc214c56150','Ehsan Sharifi','Shahrood ut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(601,'004993','593d061d60c8df11385332e51308f27d080c2f56','maseed123@yahoo.com',0,1,'42588ae510895969fee237ade0e73c21f594fd81','004993','SUT','2011-11-21 17:51:15','default.png',2,-1,1,1,0,0,0,0),(602,'saleki','4021eb5e926246bafdc0af65ea44a198f0c42447','amir.h.saleki@gmail.com',0,1,'46f0d4a58c22bd623e8538c99e52a8986e6d13b6','ikelas','SBU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(603,'mcms','147d2354ce5cf7f9a3863d6acf88fecd3e092ee7','salehe@gmail.com',0,1,'7b3da9a22c6550928cda2ed09c03b42b8b67b395','McMs','Sharif University of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(604,'saeedeh','a0b968181c657c6cc0cd29e7df1e5601cfcb0a42','saeedeh1234@gmail.com',0,1,'bccb70fcfaee20d8279575b5ca34fa6fa67c4d77','carbon','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(605,'S433D','a2063f3f36e0e856e8e93e6d51f26a5660c9236c','assaeiyan@gmail.com',0,1,'ba9ffe1ca13b10d13a4150c26d8f7b8720ab99ae','S433D','Guilan','2011-11-11 07:16:24','default.png',2,-1,1,1,0,0,0,0),(630,'moh.mah','c53e74ed4bb64e7ed262f4c3f65d1a6904917673','moh.mahdieh@qq.com',1,1,'54339ae300ab868579e6b5177b352f7b1688212a','Mohsen ㋡','University of Tehran','2013-01-24 10:25:07','a92d13ec6cb4af6da52aa5ffe5aad47485f6d2d7.jpg',2,1,1,1,0,0,0,0),(607,'amir2085','8fd520010b3d36ab0c421ea6db409312961f3fcd','amir.pourtalebi@gmail.com',0,1,'3e191b9acc76f1161231d8a3352eb410044afeb5','amir','university of guilan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(608,'keivan1','2ed30d9d3b402d477ca0be4d218bfe759fd628d1','keivan.bijari@gmail.com',0,1,'7dc080e65d3399bbc31db667ace6b7cbec2b549c','keivan1','Razi U','2011-11-16 19:24:43','default.png',2,-1,1,1,0,0,0,0),(609,'Pesteh','fef9a2205f2a795455b31be54b548505bd73ad5f','dep_20007@yahoo.com',0,1,'4a4b77780b4c19d3b9e9d4149156d1d70552118a','Pesteh','AmirKabir','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(610,'White','ab01a0254cdebeb542dc7700173970a294ce296c','enayati.farhad@gmail.com',0,1,'29e7790ccc060657a52e10d4df1f3f1cc23fcc6d','White',':-/','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(611,'mohamad_zehtabi','65da3ffbd7058a1f236370b23744279e241fc897','mohamad_zehtabi@yahoo.com',0,1,'a8a8bf960b9bad6276de7b98a3f5513022495357','mohamad zehtabi','IAU Of Tehran south branch','2011-11-22 15:36:59','default.png',2,-1,1,1,0,0,0,0),(612,'SeyyedMohammad','e7a2727fd5e33cbc44eccd723c91ee37bdfea90c','seyyedmohammadrazavi@gmail.com',1,1,'285f8cc7625c12286d20a432d53242231678b50c','Seyyed Mohammad Razavi','university of tehran','2012-12-22 14:40:42','default.png',2,1,1,1,0,0,0,0),(613,'M3hran','5d9361c11abe7df696677cf18db6b6453e81cca5','mehran.kh.68@gmail.com',0,1,'973b28a57a88850bf2ef64270d82eb26adee78ba','Mehran','Sharif University of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(614,'Hassan Zaboli','067ca988b2ba0a2a8ed5786fef62a3a347d4f03b','hasanzaboli7@gmail.com',0,1,'3a467ad2fa882d9481a433f0827f9d1d49f133f2','Hassan','Shahed University','2011-11-11 14:11:33','default.png',2,-1,1,1,0,0,0,0),(615,'nena','266235d1795f520f6393675a4c39cb6e054e5f8d','nnb029@gmail.com',0,1,'50f59a2346c1c3f2b5c0b808e4c62dc37ababf41','nena','','2011-11-11 15:34:08','default.png',2,-1,1,1,0,0,0,0),(616,'marmar','8833f986786e3b595422ecd947e235d21ec3507e','m.marmar26@gmail.com',0,1,'db980dfa8c23eb225638e386e8d7c83b8a6f4ed9','marmar','amirkabir','2011-11-11 14:57:34','default.png',2,-1,1,1,0,0,0,0),(617,'emadpres','80b602004e23e2ee1b0089592dc71959643171de','emadpres@gmail.com',0,1,'97d2bfa2d1c24f8aef6bf28772b45549c90a9980','EmadPres','IUST','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(618,'mohsen.pers','534592da4d9fc11c4e62c680772f3d882f3b789d','mohsen.pers@gmail.com',0,1,'a0b5befb6b4fe5776a79b392ce5aa05a83b41241','MohsenSafari','IAUP','2011-11-11 20:17:58','default.png',2,-1,1,1,0,0,0,0),(629,'BitLocker','a01cfaf5463d937bb25eaae3c6b1de601a899d0c','a.abasinezhad@gmail.com',1,0,'ddd616f533365a3eee27d72aee59250183cbe69a','C0d3r','Sadjad Institute of Higher Education','2012-10-18 10:03:51','default.png',2,1,0,1,0,0,0,0),(620,'s.vosooghi','79fd6e0d7fcd6cf13ad59e68910ff6d76669bd04','s.vosooghi@ut.ac.ir',0,1,'f21297bebe081474834fac62d959a131370737f9','lovleymessi','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(621,'ap13','871e2418cb2830d022f065bd68732f208e08806f','alh.p.13@gmail.com',0,1,'8e03124d413863862d0a2138f2456375732ec0ba','alireza','tehran','2011-12-22 08:03:43','default.png',2,-1,1,1,0,0,0,0),(622,'hossein','bc22e6145f92374fdfae2a0fa7e82d74f35d56f1','rahmatizadeh.hosein69@gmail.com',0,1,'036571adc592d9ca8f2882cb39161d83e321f3af','H.R.Z.','iust','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(623,'mostafa88','a39b2eedaa16fcd1eaa36765ffb37f872b897b95','mostafa.zamani88@gmail.com',1,1,'e697b470ced9990f64a70268da4f19fcb882268a','mostafa88','IUST','2012-12-18 20:25:03','default.png',2,-1,0,1,0,0,0,0),(624,'hamidbbc','88438762c5b2b7d9f78f9e9fc309b69be6f3a957','hamid.mansouri@gmail.com',1,1,'2c3125a97d631f66927279b68434a47e6ff56ea2','BlackCrow','Ferdowsi University of Mashhad','2012-12-21 16:43:12','default.png',2,1,1,1,0,0,0,0),(625,'minae','38f277ef4768b1e5096a8df9da8530db207a07a0','minaeshghyar@yahoo.com',0,1,'5338ecfdefaa794c1aafd96a325b4e4bfd4ec9ba','mina esh','tehran','2011-12-10 17:11:52','default.png',2,-1,1,1,0,0,0,0),(626,'saeid88','750a0700441e82bdf822bcc65a9b7ec2d7393d34','saeid_masoumi_88@yahoo.com',0,1,'3620ac6e1472dfde49fc544f752440d946191de4','saeid','Tabriz University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(627,'reza','04ac026de87f33e0899dc773ade1da5bc254b7bb','star_rh@yahoo.com',0,1,'d180098a2a77ea8a76d62312bc3a5aa95c4f7039','reza','pnu hashtrud','2011-11-13 15:46:22','default.png',2,-1,1,1,0,0,0,0),(628,'mahdi1362','3db93d87a57113a81addf2e154606ceaab76b44a','mahdi_zandi81@yahoo.com',0,1,'72a54d6a403f6d38e0b1eedcf1a492164cbf7c3e','mahdi','payame Noor Hashtrood','2011-11-13 20:07:46','default.png',2,-1,1,1,0,0,0,0),(631,'varahram','4474b0286b5af052d181868eca9721ec4b065d89','varahram@yahoo.com',0,1,'0ebe404d5a3d9462b3af7201ff1d02b69c124a2c','varahram','iust','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(632,'kiana','8c7718938df1e31ce194b782efe01f4676773eac','kiana.gholampoor@gmail.com',0,1,'504ee248e7ceeba8ba2831c984b5ccda6006ca60','kiana','farzanegan','2011-11-15 14:00:52','default.png',2,-1,1,1,0,0,0,0),(633,'vahid4m','02aa152383abd96c2b2213122693247eb2c44d1d','vahid.mostofi@live.com',1,1,'41edd0a1011499c5f03e6fed8482fe5c55505975','vahid-mosi','University of Tehran','2011-12-29 16:13:33','default.png',2,-1,1,1,0,0,0,0),(634,'Behnooshz','246b12afe09d4491a3e0cbe77556d7549713ce93','behnoosh.zamanlou@gmail.com',0,1,'bd5c8bb478adb8c05add03e6a6091741ca681f83','Behnooshz','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(635,'mojdehsaadati','5be4b17a38d1cf7f90adee83d7ed2a12a59539d9','mojdehsaadati@yahoo.com',1,1,'c9d836b05ea9d0486941839682eecbb8337829b7','mojdehsaadati','Unniversity of Tehran','2012-12-07 17:10:05','default.png',2,-1,1,1,0,0,0,0),(636,'behnooshzz','0c1a2ee1c3146e54c8c9cddc8b6df10ac6b634ab','behnoosh.zamanlou@gmail.com',0,1,'4431eb6cf2a1fcb06f467b934f86693f8384aec1','behnooshzz','Unniversity of Tehran','2012-02-29 08:14:45','default.png',2,-1,1,1,0,0,0,0),(637,'sorroshsaket','3670cb443010e702471c30ada91b08f07d431f15','kashizadehsajad2@yahoo.com',0,1,'a9064accd482d1def89f09cc4d87423dcef40bb7','sajad kashizadeh','guilan uni','2011-11-17 12:42:26','default.png',2,-1,1,1,0,0,0,0),(638,'tanha70','7d1eec429aca1569cda6c8132be9e822f2940d04','Bahmani6247@gmail.com',0,1,'74e0096363497e9292fefdfb56e34d87009a6c65','Hamed','Guilan university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(639,'hplusplus','dd571d57f565890c4f628b9134f6e39dbb1bbace','h.hmohseni@gmail.com',0,1,'b315ebef5c405522ae80733a8d7f470b84fb4c88','HOSSEIN-&gt;IUST','IUST','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(640,'jorge_aravn','84d46fd805cadb8cd06b2166a9c8955db16d1674','jorge.aravn@gmail.com',1,1,'a22508e506d6d874a09ba1fb13375479cdad77bd','Jorge','Technological University of Chile','2011-11-16 18:28:32','default.png',2,-1,1,1,0,0,0,0),(641,'lovleymessi','0e127446047750928146cd19b559e5d2592a14f2','s.vosooghi@ut.ac.ir',1,1,'6541141b24ee5e313befc34928d9fdf760965747','Sina','UT','2012-11-01 08:32:20','default.png',2,3,1,1,0,0,0,0),(642,'aslan','991d54d9a4c4872c05ca10abb6786dc2b47e2c73','aslan.mehrabi@yahoo.com',1,1,'07c6eb3f972515650458790f5c9f28c50ee0eb6d','Lift Truck(shirazU)','Shiraz university','2012-12-14 16:41:45','default.png',2,-1,1,1,0,0,0,0),(643,'Motahare-Mounesan','b070f7487e7a6c3fc92bc50a6085697e8fc52c50','cststm@gmail.com',0,1,'7aede1a2741ba2df383acee40fb3a98f842463c1','Motahare-M','','2012-01-10 11:50:47','default.png',2,-1,1,1,0,0,0,0),(645,'mahdi.torkaman','4cec6b26a6ecf812c229b4c4a92fb677c6f43f0c','mahdiar.com88@yahoo.com',0,1,'38537ef962c884dbf1edc3ef03da720f86657d43','mahdi.torkaman','Rouzbeh / Tehran','2011-12-22 09:56:34','default.png',2,-1,1,1,0,0,0,0),(646,'hadi','a5ae488b84a2d6b0b251d8dcce643dadfde83f08','hadi@moshayedi.net',0,1,'2a3198e89ec1c023fd87bec9268867bd69301c70','Hadi Moshayedi','Amirkabir UT','2011-11-24 10:59:25','default.png',2,-1,1,1,0,0,0,0),(647,'vnasrollahi','9681b9c04e1608ac452ee7987332d4d6eb9efb9c','vnasrollahi@gmail.com',0,1,'027396377d2831ff7ccd466e34b285e3bde1bdfe','Vahid Nasrollahi','UUT','2011-11-18 06:10:55','default.png',2,-1,1,1,0,0,0,0),(648,'uut1','f70d27f3cb181c7c9c4f7a8e30542c1aa8daeab9','vnasrollahi@gmail.com',0,1,'bac1f90aaef989b50858ea2a3ab4195f24079d41','UUT1','UUT','2011-11-18 08:12:41','default.png',2,-1,1,1,0,0,0,0),(649,'uut2','482a2f7145f5444853c64d724dcfec46e4e211d9','vnasrollahi@gmail.com',0,1,'87c661f3f898b0e1b1023a692d04f73c0e885172','UUT2','UUT','2011-12-01 19:40:19','default.png',2,-1,1,1,0,0,0,0),(650,'uut3','53af1f76979298b57b7d9b66e399bc0038317bb7','vnasrollahi@gmail.com',0,1,'8248147c95a3479f0845397f59c135965ea6b7a1','UUT3','UUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(651,'nima101','3e3de0c27c1b891f39c734b58f3d6e4ccc64cd5e','nima.aghdaii@gmail.com',0,1,'65d2758617424898fb640bfef06c5340195d732e','Old Dragons','University of Fun','2011-11-18 09:15:57','default.png',2,-1,1,1,0,0,0,0),(652,'asaba90','90097f63ac6699bae121a46a412d4eabb68a1d49','asaba90@gmail.com',0,1,'c190730785e60732692717f3b7f9db2bf739a375','Amir Sabbaghi','IUST','2011-11-18 10:48:56','default.png',2,-1,1,1,0,0,0,0),(653,'noInternet','b8255358c4522ed50586c9240f9b9976a674f7de','rahmtin.rotabi@gmail.com',0,1,'d0049ed452c3971d2510d3a1d9f274bfcb44b7e9','noInternet','sharif uni','2011-11-18 10:25:15','default.png',2,-1,1,1,0,0,0,0),(654,'Behnooshza','3e4f1d4c9682929d28dcf0f8d77058a2a9b79585','behnoosh.zamanlou@gmail.com',0,1,'a511c3892daf252ca7040cb047d0841fc3d5bf72','behnooshzz','University of Tehran','2011-11-18 11:11:42','default.png',2,-1,1,1,0,0,0,0),(655,'hassan','5feba02c0890a472e4c1871fc25372d37dedb1e0','hasanzaboli7@gmail.com',1,1,'bc02a16e26a5bfaf94dd70ff93a4cd5361515d25','hasan','','2012-08-01 08:40:16','8fa8a9bf0d53a69e02af2d4ad398e26f8991431d.jpg',2,-1,1,1,0,0,0,0),(656,'A.Elahi','06c63244005104f68a3cb9f088c22ab24836f153','a.elahi.93@gmail.com',1,1,'92c32b75f0b19b63d4a4172018acfceeb8eaaa2c','A.Elahi','University of Tehran','2013-05-16 10:29:26','default.png',2,3,1,1,0,0,0,0),(657,'hamedk72','87cd500a52d53a4a4cd0cfc6fc3086ae3f9394d6','hamedk72@yahoo.com',1,1,'cbd18d1670858875a14fd4c0095a61a68ad02253','hamedk72','university of Tehran','2012-12-06 18:25:04','default.png',2,1,1,1,0,0,0,0),(658,'mbehbahni','ec0146d74ec78b4248c0de9494d85cf77b1e845e','maryambehbahani91@yahoo.com',0,1,'56700f7accb4a879fecc2741abe3f87dc3345364','maryam behbahani','Uni Tehran','2011-12-31 09:46:16','default.png',2,-1,1,1,0,0,0,0),(659,'hanieh','8a1e31c365dd5fa8475f4f71e1f0c6d0f1db4363','h_hashemi70@yahoo.com',0,1,'86239e76098c3116b093ae7abfeed6e5f086d10a','hanieh','Tehran university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(660,'javad_r_85','ccc73050e1ac58d65a0242f80d5a780011d11535','javad_r_85@yahoo.com',0,1,'25b05d20a4dbc69502a88319d4f3350cac6071e6','جواد روستايي','دانشگاه پيام نور دليجان','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(661,'aryanet','a2f10a74ee9ee714d7e5ee7608eac459d62cae93','javad_r_85@yahoo.com',0,1,'60a878bf13077ffce469f3e8b41f20f965f5c4d4','AryaNet','دانشگاه پيام نور دليجان','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(664,'mehdi.mazrooei','4cce09f40d4818346ce5f822152cb3757008ad51','sn13mms@yahoo.com',0,1,'ca29e00ea5b7b345da5296426e21a224f6a5ddf9','mehdi.mazrooei','tehran','2011-11-20 20:28:41','default.png',2,-1,1,1,0,0,0,0),(665,'mbadkoobeh','07bf90c4d06af16613c509d77e483de871811b01','m.badkoobeh@ece.ut.ac.ir',1,1,'192351d85df18581807afb02d393d25c2463e8fd','M.Badkoobeh','ECE Department,University of Tehran','2011-12-20 21:28:45','a371449068345495a6122a5abe68aa67f0b6e8b5.jpg',2,-1,1,1,0,0,0,0),(666,'abolfathi','cbff3859dc69c45795b8e7ee8b916435fcc8ba0c','sohrab.abolfathi@gmail.com',0,1,'220b93bf2d90aaafe185d2097415a23cda9b0b78','abolfathi','null','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(667,'saeed.taghizadeh','5567a73ed6f44b1bcb52b8c535f96d86ee4eb2a2','saeed.taghizadeh_computer@yahoo.com',1,1,'37972af4bb9bb629664ec4fc44fbf8936a87806d','Number1','Tehran university','2013-05-26 10:56:43','default.png',2,-1,1,1,0,0,0,0),(668,'firiz','b065b215a27936234a4bfc7276215bc499f93234','f.sahafzadeh@gmail.com',1,1,'12522646f05b3da8ff74c240b11e2adde0898612','F!R!Z','UT','2013-03-21 23:55:38','431fbf40983336d62af58b8e548d9fbc4b84b80f.jpg',2,1,1,1,0,0,0,0),(669,'behnam.salili','3c13126954529c67f9b98b8ba955912b02bc8b19','behnam.salili@gmail.com',0,1,'c3e64dee362441257234599b5635826810150cda','Behnam Salili','University of Guilan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(670,'kour','35591fd73340d7bc538935f46ca0d1125d419025','email@email.com',0,1,'a921bde3e33f222be95efa112b63aafa02ac765c','KoUR','','2011-11-24 05:50:30','default.png',2,-1,1,1,0,0,0,0),(673,'OurGroup','6346ad5c2e8c9bcfc80774b47c69c67bf2ae150d','saeed_zareean@yahoo.com',0,1,'234e4597852c6fa3c4bb834998dfeaad89baab09','OurGroup','UT ECE','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(671,'azin_asg','ab0e05242136588f231d5693c4473590def476ca','azin_asg@yahoo.com',0,1,'e6ed1be709f0f02e87a1d53bdf53bba00021f7e9','azin','university of Tehran','2012-02-27 10:56:53','default.png',2,-1,1,1,0,0,0,0),(672,'mohs3n71','59de6819b9592ed2b199e2fed9267ff244e97812','mohs3n71@gmail.com',0,1,'3ac8e0938e6bdceb4082c3176c7051126084505a','Mohsen Pouryazdan','Amirkabir University of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(674,'qadir','2f63ac0846352b500b80592419824f696b8cf5b9','saeed_zareean@yahoo.com',0,1,'b5c2431bb89db8cf521ff90248f0af9cf277621b','Qadir','ECE UT','2011-11-24 08:39:44','default.png',2,-1,1,1,0,0,0,0),(675,'Mostafa','a3e30a92c11837d60078061a4a6bc6403919af6d','telescopeit86@yahoo.com',0,1,'a449a8d3e9b5398437d6451b0954e053f4b2b04c','Mostafa Movahedi','SHBU','2011-11-26 23:22:12','default.png',2,-1,1,1,0,0,0,0),(676,'luck','f3f285fb012bdb78d2b49ece5fabc3b848e7a398','m.aminimani@gmail.com',0,1,'00bf9335eab9b9cd363ee2142f72b0f26bec0b45','Lucky Luck','Tehran','2011-11-27 15:30:46','default.png',2,-1,1,1,0,0,0,0),(677,'aTyea','d744277b77d4c3883863d5979842161aa024094e','atiyeh.pourahmad@gmai.com',0,1,'f0ec437602acb0294499bf9a5b20dc429a11be50','POAT','Tehran University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(678,'borgir-mrt','4b3ad7a2791623f17654790db14763a56a1b53b5','mhmmdrz_taj@yahoo.com',0,1,'d8946576ca07759f99f77064ce9d03d85ff8ea89','moharrami-tajzad','UT','2011-11-27 14:55:23','default.png',2,-1,1,1,0,0,0,0),(679,'hosein_z3','ad42b6f9a8af95437c575b21be631a610b7659a5','mhs.abedi@gmail.com',0,1,'e90a431f6e2a8ec87cd91a7e3a9d1a397e1c6f8f','hosein_z3','shahid beheshti','2011-11-24 17:39:35','default.png',2,-1,1,1,0,0,0,0),(680,':-sut-&gt;sadra','b4a0877c9e7bd7ba86eaa684ea6dc30bcde0be5d','sadra.yazdanbod@gmail.com',0,1,'c675dec21b5ccf72e7dac03f7f194e9c76b07344',':-sut-&gt;sadra','sharif','2011-11-25 10:52:13','default.png',2,-1,1,1,0,0,0,0),(701,'romixery','531610eeb65eba3ee5ed54edef935682cab74daa','topcoder.romixery@gmail.com',0,1,'e5f0d9f501233411415737e5f6973ddb81165c31','Romixery','SBU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(702,'mohamadasgari','c450180e878dd602c9b2a105c49ffe8658a3b5e7','sdf@gmail.com',0,1,'e742bb201aa909d7323b460e64e39d5be0b7d206','mohamadasgari','ut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(700,'ramz','d0b73b166623aca0a9d769cc2a6b631f87ede609','rahman_1234@yahoo.com',0,1,'bd402aecf8a93d8201cf4d58454fb803ebe7c206','ramz','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(698,'zaghaghi','1066112fcdb53c1e37e108f116115e8b7c5935d1','hamed.zaghaghi@gmail.com',0,1,'8111b1b1b0766b54fb763cc1442961292298eefd','Hamed Zaghaghi','University of Tehran','2011-12-02 21:31:37','default.png',2,-1,1,1,0,0,0,0),(699,'storkamannejad','40e21f7c75d529838290218ae5174c452eb1dce9','storkamannejad@yahoo.com',0,1,'e0c019c02843ac0fe4662884132cfd8e6a289e87','siavash','University Tehran','2012-01-09 15:50:11','default.png',2,-1,1,1,0,0,0,0),(684,'shomal U','18a2ec3272360dc76fd64ebe49c499d7e12b96b9','betoche@yahoo.com',0,1,'0729327cff1912e6e1b7ae5c91a5351a411422de','Shomal Uni','Shomal Uni','2011-11-25 09:48:35','default.png',2,-1,1,1,0,0,0,0),(685,'daffes','ef3d78d9134f05b821bf2a7e05c31ffcaff7889e','daffes@gmail.com',0,1,'65a0273fd312535f405694cff0acc12dc612278e','daffes','Universidade Estadual de Campinas','2011-11-25 12:32:50','default.png',2,-1,1,1,0,0,0,0),(686,'sisihos','ad3d049718e7cb68d6465bc7dc64307e827b883f','sisi_hos@yahoo.com',1,1,'ab26cd79d9a29345a841526cefcef0fbf1cc2283','sepideh','Tehran','2012-12-05 17:04:51','default.png',2,-1,1,1,0,0,0,0),(687,'K1.m','1bfc21e454b4cc7230dab9956b3c9cf557db7544','keivan.maghsoodloo@yahoo.com',0,1,'28b58e695a8625243b3ac828943093d0dc948bac','Keivan','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(688,'razavi1371','31a4763be01f6279c1a6f8a3f2c985cb614abfa7','razavi1371@gmail.com',0,1,'79460d9e49e57f9dd5e8a94760ba29f2aaefa103','K_Razavi','Tehran University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(689,'smsjavadi','634bb05b0428c025d15abcbb9aee075470c9edfb','smsjavadi@yahoo.com',0,1,'2ae2eacd90a2a52f701a5a9d46f1e38b2890408e','smsjavadi','UT','2012-02-04 16:18:54','default.png',2,-1,1,1,0,0,0,0),(690,'pourheidary','1adfa6599e044df0c394a64e938a6c58a74ac5bd','runnerofhonor@yahoo.com',0,1,'29dd5adf31fd91e2b26e062bbc85310e2d811e9c','Legendary Thinkers','University Tehran','2012-12-06 09:32:10','default.png',2,-1,1,1,0,0,0,0),(691,'farid.for','79798cbbe109b48a80179624cd51e3b4d2d9b945','farid.for@gmail.com',0,1,'e41c59fc817dcd64331b91e9f154cbbcdad0a07c','Farid Forootan Shad','UT','2011-11-27 19:46:30','default.png',2,-1,1,1,0,0,0,0),(692,'bahar','1e4c5d9cd7d68569ae2b634093028590d841ab0f','sunny.web68@yahoo.com',0,1,'3f6f8aeefd0afcc9856a19099cfc09bb536b86ec','maryam','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(693,'hope','8bb524c9fec6afeb8e440af5c291343034c7d19d','h0p3hope@gmail.com',0,1,'6fed4ab0353206377f8fca6dff1bbee866433c26','Davood','Shiraz University','2011-11-28 11:16:28','default.png',2,-1,1,1,0,0,0,0),(694,'hanie.1371','a8d491cd00d145ca748ef435a8163af204e8ada2','hanie.1371@yahoo.com',1,1,'9cd584fad11c4f547664d1903c1e020503ded084','hanie','university of tehran','2012-06-09 09:06:02','default.png',2,-1,1,1,0,0,0,0),(695,'yashar','595cfccd0267bfb50d8f4f378224add5d271d23a','yashar_dorostkar@yahoo.com',1,1,'c937f624d51ff858ae15de581a4817c05923564d','Payam Noore Urmia - LuciFer','PNU of Urmia','2012-10-22 00:02:28','default.png',2,1,1,1,0,0,0,0),(696,'610390090','b61d7d9ea9ba339e6c294c4aa3205f084392f8d5','fdaneshi@Gmail.com',0,1,'2bd80ce911a20ef35e46d19d0e0ce59c652b151a','F_Daneshi','University of Tehran','2012-01-12 16:19:40','default.png',2,-1,1,1,0,0,0,0),(697,'MrMalek','90d3f17906b5274c5c24dae441eec7e0163082a7','maleki.mr@gmail.com',0,1,'451846c31afff14edca3c7dddc98e3673a99923b','MrMalek','. . .','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(703,'minaabdi','34d37169e9c7556e7ee85985b22f4a7f5068e2cb','mina.abdi71@gmail.com',0,1,'b6a0ac63d3fa8721df099c4f3febc7534af9147a','mina','tehran university','2012-12-06 09:02:36','default.png',2,-1,1,1,0,0,0,0),(704,'bafekr','d0c0c8d75759986112bef2f279601f4f7becaab7','bafekr@gmail.com',0,1,'57935f68d459e2a0ee7b0a33f56e271bc23e5f33','lool','shahab','2012-01-06 16:02:39','default.png',2,-1,1,1,0,0,0,0),(705,'pooyan','ef597432206403c7b72831f6b5976c492af0c295','pooyanmaghdoori@gmail.com',0,1,'5c0f54cc1b5f0afc6b1daec306e4540de6e26b1d','pooyan','Semnan University','2011-12-07 11:47:29','default.png',2,-1,1,1,0,0,0,0),(706,'calculator','82605e40828ea60f65beb56e366065abf153f027','behnoosh.zamanlou@gmail.com',0,1,'660e7ffe417af8ddf4fc4995145ddb23543f3a01','calculator','ut','2011-12-05 11:00:13','default.png',2,-1,1,1,0,0,0,0),(707,'sina_bhh','3bb8590d83fabeff64f7a35b0e924537f9ce6c6d','sina.gentelman@yahoo.com',0,1,'ba2b4a574adaa3bbd3f6ebbf0c364dead8543aa6','sina_bhh','uok','2012-03-18 18:24:41','default.png',2,-1,1,1,0,0,0,0),(708,'thermantica','10710ff06fa862954771c04036952651b7b8eed7','python.developr@gmail.com',0,1,'d24d22f2af99da517c0c310d838ee8cb5cecf2fc','hamidReza','qom university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(709,'hamed053','f2cefc02def5128b4f772322ac53bf2756558bc5','hamed053@ymail.com',1,1,'8409c1d9f33635a19cf2654384a40883e08279a3','Saeed Keshavarzi','Shahed University','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(710,'mojtaba87','46bf316ff7a613514d656c4c6de639998908a058','mojtaba87@ymail.com',0,1,'a7eda4244f39dc134bb5df913e25ca32b77a0b92','mojtaba','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(711,'h.shariati','9fcae503e0ed9e8d021948c4628d1a17b0140f70','hshrtn@gmail.com',0,1,'73232e92ec08369d0bbeddd06bddea79f3489500','Shariati','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(712,'odman7','6c525c84eac70d8d3570ce6d7362674d699a02cc','odman7@gmail.com',0,1,'8e4d9a4d35630d1ed24c1b8c986dc9d54b213e94','odman','','2011-12-08 14:55:46','default.png',2,-1,1,1,0,0,0,0),(713,'saeid.esm','fc05fe90031d780ecd2d0b66c7ccfa35bd5808a1','s.esmaiilzade@gmail.com',0,1,'87c92bded2ec66ba3c2dc9fdd4000f1c32713c97','saeid','shahid bahonar university of kerman','2011-12-19 17:18:35','default.png',2,-1,1,1,0,0,0,0),(714,'erfanrazi','091c2f406e4f9a3b19c180889b9db7f10773998f','erfan.flash.69@gmail.com',0,1,'9f0573d1ccd6e4e4d67bb251666d4ab91c2bd61a','erfan','Shahid Bahonar University of Kerman','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(715,'Ehsan.mashhadi','8ef8117a0b5e47888cd757681914c59a9c63ced0','ehsan.mashhadi@gmail.com',0,1,'d30585e98e34500c236ea8a8822a28336d32c122','Mysterious','Isfahan university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(716,'keivan','fe32c613e143abd885fed781d6cf599a6f879204','keivan.maghsoodloo@yahoo.com',0,1,'8e717d5ad28e9a89372008fc7b30e4ad3d0e1b45','keivan','','2011-12-17 12:19:54','b89825034cf00e52ba061f92475a563dc3d0fb94.jpg',2,-1,1,1,0,0,0,0),(717,'hhhh','54ff9942fbb4473d7d6250e5e08babadb1372671','red_Devils3000@yahoo.com',0,1,'dfdc1c32591148bb4273a37cc9c515efbc85a420','haha','hhaha','2011-12-11 17:18:05','default.png',2,-1,1,1,0,0,0,0),(718,'saman_gholami','3ebf5d2b7de41f0defe75591afd6119b5c4d59fb','samy3320023@Gmail.com',0,1,'ab956bb2a19b0bd200c8b425b0b60001258e8941','Saman','mySelf','2011-12-21 19:11:10','default.png',2,-1,1,1,0,0,0,0),(719,'abdolmaleki.s@gmail.com','a6cf60ae4082fece05682843d5797a526293479d','abdolmaleki.s@gmail.com',0,1,'a42ae4162120ba6bb3eca3c0f3a0bd2e8cc13ee1','sajjad abdolmaleki','uok','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(720,'NegarH','339e884010a70ece8038792fc9604828727e67cb','negarheydari71@gmail.com',0,1,'c439dd988d9b8e686e7fc22d73071732c5b14b75','NegarH','isfahan university of technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(721,'Hamid','371e5e8e3d99022f13de01fc5a7bfb5a4a12c3bf','hamidrezatf@gmail.com',1,0,'a30a6a4e0ebb4885836c036214c3fd5bce324660','Hamid','University of Tehran','2012-07-04 13:48:09','default.png',2,3,1,1,0,0,0,0),(722,'asdflkjasdflkj','8b9c77bddb5fa79a8202620c43321d0a7404c0b2','s.script.er@gmail.com',0,1,'eb8766b175d63d577ee4b1767548d517d3199b70','asdflkjasdflkj','asdflkjasdflkj','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(723,'nanarazi','0b247728b05be7fc3f310350038719b6c822ac65','nazanin.seyedrazi@gmail.com',1,1,'8abb762e62f7df760e73c816ef4a353f3bbdcfdf','nazanin sadat','tehran','2011-12-12 15:18:34','83c9e7ac88c36f7048f2f3b5f1a816141ed8e115.jpg',2,-1,1,1,0,0,0,0),(724,'kavosh8','78c0468e6c85ad699751aed73f87fd0e36b0083c','kavosh.asadi8@gmail.com',1,1,'f75c41cf5d6d062795c02d536f18a8376cc219d7','kavosh8','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(725,'a.pouya','e1ec70df334beb3eaba44ad53008a1fa9529bfa5','a.pouyabahar@gmail.com',1,1,'c7d002b52a7ed2c8d5105457c869d45f8e7cbc4c','a.pouya','ECE','2012-05-23 03:29:17','default.png',2,-1,1,1,0,0,0,0),(726,'ida.d','c939ff8f8ef5443b5fa16ce1840cead8811a786a','ida.amini70@gmail.com',0,1,'c9debc3e4e23f7c6e03b4b05275d52b8450be2ac','ida:d','kherad','2012-08-23 09:59:31','default.png',2,-1,0,1,0,0,0,0),(727,'kaktus','23885048ea6e12d63cad9271d39ac428b31b5b76','pariya.b@gmail.com',1,1,'65e1aa0d388ba81a8cbe643822355fab9e3640fd','parz','university of Tehran','2012-09-22 17:06:42','default.png',2,-1,1,1,0,0,0,0),(728,'Amytis','61f0d360335e219bdf4a4e9b0918a6dee06fbc06','shaghayeghmardani@gmail.com',1,1,'a4bff0b07e8528ba605396b86ed57993ba39b4e8','ShAgHaYeGh M','University of Tehran','2013-03-16 11:53:04','80f665d12922be1690046b25806539647b473dcb.jpg',2,1,1,1,0,0,0,0),(774,'ahmadi.1','55731cc9083f04584ac4bb7d2303fb3410f6ee56','ahmadi.saba@gmail.com',1,1,'5d9043ccc5d5f76489aaabed2171f97a952e8bb1','LuckyLuke','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(729,'alaharirchi','216f9bfa3a247fa05da81d45a8bcc2490c9a6618','alaharirchi@yahoo.com',1,1,'eabfaeb12ff3d4e79a52196d964c4a0de60b165d','Ala Harirchi','Tehran University','2012-11-25 12:40:58','default.png',2,-1,1,1,0,0,0,0),(730,'anita.j','2c455939d842066bde89e4fd5635ae84f4df3506','a.lady6665@yahoo.com',1,1,'032442af595ec4608326a1605db44a65d0c41a55','Anita','Sajad','2012-12-04 07:49:06','default.png',2,-1,1,1,0,0,0,0),(731,'areffa','064db6a9af60d030e33024686e46961d428b4fc7','aref_1372@yahoo.com',1,1,'64964ce536b31ba983cc0180273d0a552b581cea','aref','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(732,'Milad','277968bfe837035017d327c0e8f96eb749995b14','milad.kian@gmail.com',1,0,'775cc02ce28072bed9b3df0465507acba3babc7f','Milad','tehran','2013-01-08 20:53:46','default.png',2,3,1,1,0,0,0,0),(733,'pejman.y','4f6157aa298e921770ec98294f2a5fd874b92623','pejman.y@live.com',1,1,'2a7f46ff02551894b680db91f3853ec481a3db3a','pejman','sajdad','2013-04-09 17:03:35','default.png',2,3,1,1,0,0,0,0),(734,'n.religions','48415102fe830d3890600da178201482ac0b0bbd','n.religions@gmail.com',1,1,'bc714677c44719d66d05a1cf70e277b3ecbb39ee','nima','UT','2012-05-21 06:22:55','default.png',2,-1,1,1,0,0,0,0),(735,'user.name','09852d40e460352185f53457b6b18b282826a169','user@info.com',0,1,'c773ed733ad9e1bd9875fc6ca3d35248f3e3b395','lilo','tehran','2011-12-14 15:48:32','default.png',2,-1,1,1,0,0,0,0),(736,'kambiz','1bdd63e472172082e4f97fcee21c383d068ddaff','mgh.kambiz@yahoo.com',0,1,'33800e751c9a7b7a503c7c1bca904a4d84a2d045','kambiz','amir kabir','2012-02-24 10:16:31','default.png',2,-1,1,1,0,0,0,0),(737,'nikign','408def5a46c04dd1e67db8e12d1812cb8a19cd7e','story_ngn@yahoo.com',1,1,'fa42402639baef5b3a0ec42feebb0ca44214a242','Niki','University of tehran','2012-05-23 03:47:45','default.png',2,-1,1,1,0,0,0,0),(739,'21371','616b9621a9d7dd42bdca0ef07d36d2e7c5bb05a7','v.eghbalifar@gmail.com',0,1,'49880b31315a8d29132d1cc8eb14b255156988fa','fershte','موسسه اموزش عالی سجاد مشهد','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(738,'beautiful','68cf7a2d38ee25cfdd874847e91b11c57e42c826','ehsaneftetahi@yahoo.com',0,1,'89dca58b69b7c1b7b7106bfdac48039f2bc22aaa','hi','sajjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(740,'2.Di','b6c1f12f280c53164306c734fd2da72fc0e594dd','hamid_manchester7@yahoo.com',1,1,'a54650865b65d334eb856eac515b84059c36ce0f','2.di','Milad Kian Mehr - Ali Karimi - Hamid Reza Talei Fard','2012-01-05 10:36:01','default.png',2,-1,1,1,0,0,0,0),(741,'dogma','3913a2d864c95aa33c4e8edccd7b412aa12e4d64','n.religions@gmail.com',1,1,'23233203d47d407b199d65311ed756d7adfdd2a7','dogma','nima dini - pouyan rezakhani - hooman hasandoost','2011-12-16 10:32:11','default.png',2,-1,1,1,0,0,0,0),(742,'...(se noghte)','eb22a37062ad420e0a9676c8369df29aa38b9071','zghaed@yahoo.com',0,1,'0a3155ebc6cffe0b38d3a62188ba78dde0529a28','...','Golnoosh Dehghanpoor,Zahra Ghaed,Ala Harirchi','2011-12-16 10:27:17','default.png',2,-1,1,1,0,0,0,0),(743,'ANAAAAAA','2c9ef95226879a2a56f99aca4d512c3532ad76e1','nahid.ataei@yahoo.com',0,1,'6a81c39a97c4d181e502faa2502f2cdcd3323b37','ANA','nahid-ataei.arezu-hatefi.atefeh-mohib','2012-01-05 10:16:21','default.png',2,-1,1,1,0,0,0,0),(744,'1888328','8955b84a02f472ad0671f734f6661ba03d46750a','peyman8842@yahoo.com',0,1,'74810ce2280ce31498afaa594e2f195658b8fece','dilon','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(745,'aniss','62c638f2303febdc60280357377457d6cbdce616','aniss.maghsoudlou@gmail.com',1,1,'c130aa91a1d8862f1077bfe10fe09a96b4f97eac','AFK','Aniss Maghsoudlou,Zahra Rezvani, Mahboobeh Khalili','2012-01-05 10:23:20','default.png',2,-1,1,1,0,0,0,0),(746,'gitinabard','876e70ce5e4df5f1a663cff946148a6017c39152','seeserke@yahoo.com',1,1,'a0413bb1606018794e28bf28b16717e14f2ad8c2','RSA','leila rashidy,niki gitinabard,atiyeh bayat','2011-12-16 09:33:27','default.png',2,-1,1,1,0,0,0,0),(747,'virus','c7de4af5866429420130f729c5da033bf7a08c72','golnariandarya@yahoo.com',1,1,'04f04ee0d3b5aaa62525c76562f5b1b1d8135cc7','ویروس','داریا گلناریان-ابوالفضل زرگر-مهدی مجیدفر','2011-12-16 10:30:20','default.png',2,-1,1,1,0,0,0,0),(748,'Jupiter','27bf9237391424c9e3c4b7f9b19a0ad85eda4b25','mohammad.nsr@gmail.com',0,1,'c7972eda3127d490383e826766291076de4e5204','::Jupiter::','Ashkan Banitalebi, Mohammad Naseri ,Ida Amini','2012-03-06 10:40:50','default.png',2,-1,1,1,0,0,0,0),(749,'188328','66a35e2f95b1feeae3ff838311bc27b9a74a42ca','peyman8842@yahoo.com',0,1,'7925b6c062f3708893e733a5eb30d16bea7e0b59','تیم ملی','پیمان شوقانی-محمد طاهری','2011-12-16 10:31:23','default.png',2,-1,1,1,0,0,0,0),(750,'moon','1cd1746e39c431f490634f06640438424c0719fd','mbabaie89@yahoo.com',1,1,'05e36d3152e221aca597d575d3df94a9b55ea2fc','la luna','Maryam Babaie/Arefe Yazdi/Hengameh Takshi','2011-12-16 08:25:58','default.png',2,-1,1,1,0,0,0,0),(751,'Khershaye Darandeye Vahshi','85304722700103b09f9b7a87df7b2e05ff325a7f','shaghayeghmardani@gmail.com',1,1,'6f6df651ef21184f904055f12b9e04a5031bc9a9','Khershaye Darandeye Vahshi','Elaheh Hasani, Shaghayegh Mardani, Nima mirzaei','2011-12-16 09:43:35','default.png',2,-1,1,1,0,0,0,0),(752,'basirat','2f6c0ac8450c0630f33be030d85d2681202cb474','oveis.ak@gmail.com',1,1,'f10a3a3bed10dde46d9b116441209dbf7ad9a54b','laststand','morteza farhang-oveis beheshti-iman nasiri','2012-01-05 09:31:27','default.png',2,-1,1,1,0,0,0,0),(753,'PBS+','d103497ce7a6d639556545b935066d4f95a1d358','bn.rafiee@yahoo.com',0,1,'00cdf5d4bd6dd7c55cbddbf2bbf37fb0caeab67b','PBS+','banafshe rafiee-sina saharkhiz-paria babaee','2012-01-05 10:28:43','default.png',2,-1,1,1,0,0,0,0),(754,'DoubleDotPi','82ac2c3764d03ec1c8d894f2306057b61d3b371b','meysam.r.ok@gmail.com',0,1,'d951a2d908c0ad8f4f69da7554708d245ca61138',':p','Shayan Sayyahi-Farshad Sahafzadeh-Meysam Feghhi','2012-01-05 10:34:51','default.png',2,-1,1,1,0,0,0,0),(760,'darTmoos','9222cc4997edcde04188b64e698440670d102d28','mahdianpeyman@gmail.com',0,1,'78c98cba15b7a080648c3bbf49edc35adc806a67','darTmoos','Peyman Mahdian-Ali Nouri-Bardia Zamanian','2012-01-05 10:16:54','default.png',2,-1,1,1,0,0,0,0),(755,'mohammad.nazari92','c5007be73a071a55e2b61ed5c1c67cdd1b6c3ae4','mohammad.nazari92@gmail.com',1,1,'7d6568a91e31a249436e98581e5297b5dc10753b','Epsilon','mohammad hosein abdoli - ali monavari - mohammad nazari','2012-01-05 10:41:49','default.png',2,-1,1,1,0,0,0,0),(756,'kjhkjhkjhkjh','93a4b8dbd8cb5b6fce584a4008ca7e50c1f63590','kjhhkj@kjhkjh.asd',0,1,'80114c41736e80b07506a02a9ce6432d6c5398a8','laskdjlaksjdlka','lksjdlkajsdl','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(757,'fereshteh','6e014da023593d497a87a1227295a8f9831bcd45','fereshteh_e91@yahoo.com',0,1,'b4eaf0ca4ecf3875a4d842be5c2a4e9e0310241e','fast','fazraneh khoshnevisan- saina sehatkar-fereshteh ebrahim nezhad','2011-12-16 09:25:49','default.png',2,-1,1,1,0,0,0,0),(758,'mohammad.h.abdoli','f8f9e1de879aa9fe909a1fdd39c6f827a209a58a','emad.a.92@gmail.com',1,1,'b03be9174ae18d03fae670dbd2342e5ed648e2ff','Epsilon','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(759,'a.monavari','5b09420b98dc0f8de4792a2648de248817a307d1','a.monavari70@gmail.com',1,1,'ad5fdf1ce782a94c2ab4f4ccea782f09aacf2500','Epsilon','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(761,'Farzad.Sh','88703f5e8745966a43710ad8354dfd8f5b5561ab','f.sh.92.iteng@gmail.com',1,0,'edfdcbf76eff3b7bbef59223283e0d48d18e337a','RaceN\'Ace','ECE School of UT','2013-01-13 22:51:18','default.png',2,1,1,0,0,0,0,0),(762,'abcd','18784a0d8802f13cafa10b2b33c7d129ec0d128f','mhraeiszade@yahoo.com',0,1,'96fb6538f87c0eb62b0e736570b47bd08c9a629b','mssmh','mohamad mahdi safari-mohamad hosein raeiszade -akbari-talebi','2012-03-08 21:00:46','default.png',2,-1,1,1,0,0,0,0),(763,'estedlal','5289c6b6781a296555202ca0494670a0fb0425d7','mh.masoudi69@gmail.com',1,1,'892b0a3b72185389535beea246e5cd3c43172196','maxy','mohammad kheyroddin-mohammad hossein masoudi-mohammad norouzi','2011-12-16 09:48:20','default.png',2,-1,1,1,0,0,0,0),(764,'asfar','5022c8024f91e6d64a387e3079ff1e8ff9bffb8b','alirezam2006@gmail.com',0,1,'4a1e08c1f515719804db5f884de95dc26e8aaae8','asfar','mirzargar-tavakolian-hossein alipour','2011-12-16 10:27:08','default.png',2,-1,1,1,0,0,0,0),(765,'amtal','8146a9f04964ec23073e3caed668599a3f2b9906','amhtalebi@gmail.com',0,0,'978dee416916326de8889bc712c68eca756b9798','amtal','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(766,'appex','c23d1600d0839418b8fd1cc61391ee679da19011','info@appex.ir',1,1,'a27b12c759df8c1f4b01b4a7a2138c510145991c','Appex','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(767,'mehranahmadian','83b51428c10e406cba838d51bb5765c90fc0afe7','ahmadian.me@gmail.com',1,1,'f69e126d58d574ab1d6601f8390fbb2e354b128e','MA','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(768,'sina','225cabd3ef88d3bc10239e98d09ddb0976e5036d','sinas1991@gmail.com',1,1,'f36554679d4168fe5b2b6fda24fce9152b864427','Sina','University of Tehran','2013-01-01 12:16:00','default.png',2,6,1,1,0,0,0,0),(769,'senik','770b42c049535dd537f8a02807e16d74a061b5cb','fm.faezeh.1991@gmail.com',1,1,'bbf7c7c72db2cc5faa61113ec2c8d5f6a03e48de','Senik','','2012-12-27 20:59:49','default.png',2,-1,0,1,0,0,0,0),(770,'javidmanesh','80aed8fd7b65d54274eb90dedf67751f1a0a7733','a.javidmanesh214@sadjad.ac.ir',1,1,'a71ea809384e492fb9d660633dc264d84be1a8b6','azadeh javidmanesh','sadjad university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(771,'mehrad','e7f906c034af3d922f4833efa6540d724ecb2447','nimboos_86@yahoo.com',0,1,'87a0347b793c1e0dd16e7db4b1e4b5e7e5573bef','mehrad','sajjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(772,'test','c1b37ec3cb7d6f1a165abf0c351814caabc7d5e5','testsetestset@yahoo.com',0,1,'7e4ae354606b1177db34b1d4302158666b97a324','T4','','2011-12-17 07:32:03','default.png',2,-1,1,1,0,0,0,0),(773,'KhorsandB','b17bc39c0f9fcd92ce7f742b11e6484a654d6278','elham_khorsandB@yahoo.com',1,1,'dc9a93375252a067f92efa94e2e8d9514ad974fb','elham','Sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(775,'REZANEKOEE','87e9ed285130612513a0fc9b7c7808231720d97d','rezanekoee1@yahoo.com',1,1,'a8cbd8c3055089ca3893cc5443068c95c7f430ed','REZA NEKOEE','BAHONAR KERMAN','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(776,'duman','8296dd41c5a0cd2438a1fbae205fa15719ef10ad','odman.7@gmail.com',0,1,'91c6b4e1a34642cc493f81eb7e4a1d63a9268d92','odman.7@gmail.com','','2011-12-19 17:30:04','default.png',2,-1,1,1,0,0,0,0),(777,'aliMohamadi','8490632fa307942e4d508a4c6d9ff22b605abca6','aliMohamadi@yahoo.com',0,1,'63a765cc2d45dfd74ec979f45c6ec4b79e5508be','ali','ut','2011-12-19 10:19:29','default.png',2,-1,1,1,0,0,0,0),(778,'sajad','23748b6d45a17951fc75d4f0c7d3ea5e1b85399b','sajad8heravi@gmail.com',0,1,'d1ce0b722bcda32e33a9a694fa1afeb82b6d0949','sajad','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(779,'naser-cr7','63dcde7124d251b0480dcd894451ae88c31e390d','www.nasserbahramfar@yahoo.com',0,1,'1625f5d9ab73f4e93f001269e0263f548fa65242','naser-cr7','sajad university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(780,'marshal','f5574d42632fe0121c7eb3f88695bc9e973bd17b','marshal_sman@yahoo.com',1,1,'2717a114b9e71724c6e4b1792c474d69b7cdfe2d','Marshal(ShitMarce)','Sadjad Higher Education Institute','2012-12-06 07:47:29','default.png',2,1,1,1,0,0,0,0),(781,'BirjandComputer','5e136930a04c17e3d4da13d8fa3689ddbd4dd7c4','birjandcomputer@yahoo.com',1,1,'f6071ffcae90f88dcea26b27bcc5ffa36a9a455d','M.A.M.A','Birjand University','2013-03-06 14:11:20','default.png',2,-1,1,1,0,0,0,0),(782,'JUSTfor FUN','c7954bc1bb7171a16138e4cbe19fe744254cbeb5','alireza.majidi@ymail.com',0,1,'6ebc0fae7e288ff18b650e3d7a11304d613c5a19','Just For Fun','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(783,'justforfun','0e2d40c2d2748e926ced4859ef2ab81014125911','alireza.majidi@ymail.com',0,1,'cbb093f5370594d652fe9c1bf5b9f3fe2c8f284a','JUSTforFUN','UT','2011-12-22 23:12:30','default.png',2,-1,1,1,0,0,0,0),(784,'mrd010','3c09bc4997d50e3d9d98667a9b414e87918ce737','mohammadakbari010@gmail.com',1,1,'1a280ada37db4cabbfa8c55996a944abf7a100ff','MRD010','Sadjad institute of technology','2011-12-22 18:43:56','default.png',2,-1,1,1,0,0,0,0),(785,'ahmad','97c02758271324156784fd252c96a12d2dd42be7','ahmadpirouzi@yahoo.com',0,1,'2e5e8ead382e9460328bfc6ba71005ba1353616f','ahmad','Iran','2011-12-22 16:52:18','default.png',2,-1,1,1,0,0,0,0),(786,'mehran.a','f1c34b40cd877e1490b2788f6279eeaf69cdcfee','ahmadian.me@gmail.com',1,1,'ecde73fc8c17c41aeb2cc3aea8167c1a9cd35a23','Mehran','','2012-05-10 17:26:19','default.png',2,-1,1,1,0,0,0,0),(787,'jaegerknight','62149f467a4fce2430d8d68383fbac14ab67d870','jaegerknight@yahoo.com',1,1,'22265b1862a290ebc118801752a77d6251721421','Mehran','','2012-11-22 09:37:27','default.png',2,-1,1,1,0,0,0,0),(788,'reza_student','0d7b44df0c000c867aa049c65937e2fa3d3d1e41','trash_bond_2004@yahoo.com',0,1,'d0d0150b96fcee5c6ed6a71655c7dfbba672bba1','reza','sadjad','2011-12-22 23:23:05','default.png',2,-1,1,1,0,0,0,0),(789,'mrhz','042dde625f16f606f65992eac1240b0bc158c878','m.r_hasanzadeh@yahoo.com',1,1,'96da477969a166c8c1fa188ce969a05245aaa9ce','reza','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(790,'mrhz12','a7775ea71c7d352ff48378146be2e2edc294f1f2','m.r_hasanzadeh@yahoo.com',1,1,'54be58fefa0c5a3ebabc0a1694c78a5ecf63f6ae','reza','sadjad','2011-12-22 23:30:54','default.png',2,-1,1,1,0,0,0,0),(791,'mb.motahari','0f0e9325770e2b77079a7f200cdafebddf0ea85d','mb.motahari@gmail.com',1,1,'1588dc999ccbd62ed2baeeb44bc8d7594672a8eb','MB','UT','2013-01-19 19:34:55','962426a9635b1e244e1422195088314bbccf8c59.jpg',2,-1,0,0,0,0,0,0),(792,'reza_h','c1a1d384b14de2c6130c708b1246f139617d1470','reza.h.a0029@gmail.com',0,1,'356b841e0c509ec632061c011b052ec428c84f7c','Reza_H','amirkabir University of Technology','2011-12-24 11:04:23','default.png',2,-1,1,1,0,0,0,0),(793,'sarina','2683751d9d08b38f0269306a6f72a776dea9f7cc','mariadarvin199@yahoo.com',1,1,'cd9653a7cb584690619012effee3274482336205','Tst','','2012-12-27 20:32:16','default.png',2,-1,0,1,0,0,0,0),(794,'iroodaz','448b5200ad33a308c5765e456409fa93cf1396e5','iroodaz@gmail.com',1,1,'2a58d1483379f5746921c326c0b6a336c918c826','Arbi','Shahid Beheshti University','2012-11-01 11:03:47','default.png',2,-1,1,1,0,0,0,0),(795,'moghim','d407eeb5b49ed47efd37b281019f961fe8b19eca','moghim.yfz@gmail.com',0,1,'bec53f6bd88706234b11dbd7b9f696d900d99b40','moghim','UT','2012-05-25 17:56:55','default.png',2,-1,1,1,0,0,0,0),(796,'joker','e96b53f91c706f7f80fb11930a0f3512d1a699c5','ghafurian.m@gmail.com',1,1,'b9362d1347bfac310c4d24a64cbb897b6b62c4a3','Joker','Ardavan pouryafar, Mohammad kheiroddin, Hamed rahmatollahi','2011-12-30 19:41:45','default.png',2,-1,1,1,0,0,0,0),(797,'team2','d2059fbd924ba6daba4bfbce685e15d30a4611ff','ghafurian.m@gmail.com',1,1,'40e1d5f4ea966169a0be1d513716f131de2a2bb3','zu','mohammad reza najafi , sahar rasuli poor , fatemeh malaki zandi','2011-12-30 10:46:32','default.png',2,-1,1,1,0,0,0,0),(798,'team3','9edef37b70bd4a70df1277e992ecb960b7dc86ba','ghafurian.m@gmail.com',1,1,'b4ac87f1d4031b67a87610e779470584afcf76d9','AFK !','Fatemeh Amirahmadi, Mahboobeh Khalili, Zahra Rezvani','2011-12-30 10:03:44','default.png',2,-1,1,1,0,0,0,0),(799,'team4','57dc76b8261ecbb492d79a8d7c08750d9c991369','ghafurian.m@gmail.com',1,1,'3086b9d05ba6d7a81685d6c68c88b4f6a641d9a0','team4','Matin Monavvarian ,Salman GhafarSamar ,Mohammad sedighi gilaani','2011-12-30 10:31:07','default.png',2,-1,1,1,0,0,0,0),(800,'team5','e10341360a775c4994f9755e32c677f1c66e575a','ghafurian.m@gmail.com',1,1,'8598685da5e52178b78330d94f8c43f25bbe330a','ama','Amir Mohammad Adibi, S.Majid Akrami, Mohammad Bagher Motahari Khansari','2011-12-30 10:39:43','default.png',2,-1,1,1,0,0,0,0),(801,'team6','7de9d1ff5ca8eba2ff6880673e13c98e49dc1010','ghafurian.m@gmail.com',1,1,'8d4be2302632a40dab4eab04e9a28d4c00b61205','team6','hossein raeiszadeh ,mohammad safari ,oveis beheshti ghadi','2011-12-30 10:37:04','default.png',2,-1,1,1,0,0,0,0),(802,'team7','ce26ebeeaf93420a05a5d01f80dfcfba5dd95c78','ghafurian.m@gmail.com',1,1,'ea224359a56c0d72ff813b691e392dc99465c6d2','FTL','sajjad noori ,','2011-12-30 10:44:17','default.png',2,-1,1,1,0,0,0,0),(803,'fast','d5b1975586ff581161d6f60e498f0634daa87310','ghafurian.m@gmail.com',1,1,'97383abf30f54b5d1ed524e414b6d09de79a78e9','Fast','Fereshteh Ebrahim nezhad,Elham Salehi,Farzad shafiee','2011-12-30 16:20:40','default.png',2,-1,1,1,0,0,0,0),(804,'team9','66291b9c32efb1b0964837d343a4d9c048bae3d6','ghafurian.m@gmail.com',1,1,'eb97f0371702fc1814be2230b341dace73dc43c8','ShaftAlooo','sina sahar khiz ,seyed alireza mirzargar ,ali amidi','2011-12-30 10:38:42','default.png',2,-1,1,1,0,0,0,0),(805,'team10','bde6d853f1465bcf75ccb7b84178b202f50e9e35','ghafurian.m@gmail.com',1,1,'96b45e30a5eecc3322b51488056b1a6e186d3576','these three','Ashkan Banitalebi,Mohammad Naseri,Shaghayegh Mardani','2012-03-01 20:30:15','default.png',2,-1,1,1,0,0,0,0),(806,'team11','ffe4327c49249163ca2b9a4736ba3bb4b4b39c70','ghafurian.m@gmail.com',1,1,'314b1c010ff70fafc088f79d1dff3b6586f5fe56','team11','zahra zarifian,zeinab akhavan,sara tajihk','2011-12-30 10:41:37','default.png',2,-1,1,1,0,0,0,0),(807,'team12','0b02ebf0eee9adb68f893c182e8ba045e88b61f6','ghafurian.m@gmail.com',1,1,'c971de6115882a8362e0eeb4383a2689cb9f6a3d','team12','mehrad farokhi,peiman shoghani,faeze moradi','2011-12-30 10:52:19','default.png',2,-1,1,1,0,0,0,0),(808,'npishdast','6a3eccca53a47abb5fb33a9cf800512ea38260e0','npishdast@hotmail.com',0,1,'4e5ffadcdec112882179e2165ca8588bab795ec7','npishdast','farhag','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(809,'pa123456','f916b1880b0dbaa314de6dcc57b5451aa59a02d5','payam100@hotmail.com',0,0,'eb079cbc987f8782c53b54d07e35b8a0746e346e','payam','ut','2012-05-25 17:31:58','default.png',2,-1,1,1,0,0,0,0),(810,'s.abdolmaleki','92eb5eef1867f5c3dff8b6fd0a8f8724c1250ecb','abdolmaleki.s@gmail.com',1,1,'513cbdddb8b365e411b1760ab7525ec88ec2c183','Sajjad Abdolmaleki','University Of Kurdistan','2012-12-18 13:09:53','default.png',2,3,1,1,0,0,0,0),(811,'Numb','848f435c12e1d4207c3d755401ea115d5ffa2595','amir@numb.ir',1,1,'49952c9aef055adbb37b9c5a89a9c555b7f882b4','Amir Numb','Rahnama highschool','0000-00-00 00:00:00','11bbbfd451f36e6b7b0c97b2c1c985ff1f11e4ab.jpg',2,-1,1,1,0,0,0,0),(812,'baffi','d63d5e1c73d219a816852dac0cf436bea7e75a87','amzmohammad@gamil.com',0,1,'4362d26893b2cfe22312294bc2dc9068029de43f','baffi','UI','2012-01-02 16:32:41','default.png',2,-1,1,1,0,0,0,0),(813,'rezatorabi','30cbcafc55bdab25a75358d5bdb65b3eee4cfc1d','reza.torabi2006@gmail.com',1,1,'242c41e5c58aa441b494cd8b870c4d37d67ec0e3','Reza','ECE of University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(814,'mgh.1388','057b2e524521bd70ec0c3b61e346e9526bdd458f','mgh.1195@gmail.com',1,1,'bfda26f8c70ffba71d2d9be616afd1b2e4531435','mgh','University of tehran','2013-01-17 21:02:00','default.png',2,-1,1,1,0,0,0,0),(815,'apple','4d148baa62825aae48e084dd9b490a46b5b981b1','m.salehi1990@gmail.com',1,1,'3a7c9763e283c26d8b2c482438dd7a5acc019a0a','MSN','UT','0000-00-00 00:00:00','2babff9b87c783bf2055f8d2941003cb8bca4828.jpg',2,-1,1,1,0,0,0,0),(816,'patmo','650eed03b2c6da8e3e2647f96a77e786044703a2','amidi.patmo@yahoo.com',0,1,'b1e8bd61983e67685c6115e5491af5af85170d09','patmo','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(817,'tarjan','921d8ab22bf828b7a37085c36e96f4cb5c18130f','golnariandarya@yahoo.com',1,1,'34fbd6157055da0edc39256568293e56b1e1dfa2','Tarjan','داریا گلناریان-ابوالفضل زرگر-مهدی مجیدفر','2012-01-05 09:59:49','default.png',2,-1,1,1,0,0,0,0),(818,'LaLuna','23abb5046bef4a0ad4d276fe36be4521ca24d9e1','arefe.yazdi@yahoo.com',0,1,'2205655a7bdb697ed4b82c8bf980f25a13f24322','LaLuna','Hengame takshi-Arefe yazdi','2012-01-05 10:09:22','default.png',2,-1,1,1,0,0,0,0),(819,'...senoghte','1fac9b3c230a83206e1d18acbbc4ad653c87b827','alaharirchi@gmail.com',0,1,'41cc7da0c05545cf6303a53fb4f809c501a01f85','... (se noghte)','UT!','2012-01-05 10:41:51','default.png',2,-1,1,1,0,0,0,0),(820,'Dogmas','76610bdbd5b349eafa3d4cb55beff19807ad9f64','n.religions@gmail.com',1,1,'f29ca52e3f1b6cf7956042fc2b1728edbd2aea9f','Dogma','niki giti nabard, nima dini, hooman hasandoost','2012-01-05 12:32:51','default.png',2,-1,1,1,0,0,0,0),(821,'Enigma','47298d09319827cb46a95f4c1351fdaab3ebc799','seeserke@yahoo.com',0,1,'7f763d33362269ae5da05dacbf24f0c44c82b483','Enigma','Enigma','2012-01-05 10:22:46','default.png',2,-1,1,1,0,0,0,0),(822,'Dartimoos','2ca8822e02e844f7d9e6a6f96afdc3b4ec79313f','mahdianpeyman@gmail.com',0,1,'2b7a555e6e281783477de16586ca05b2b679fa94','darTmoos','Peyman Mahdian-Bardia Zamanian','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(823,'AC-DC','1bb0e96c3712bab71acbd631b511a2af4ed1ca6b','xzmetalic@gmail.com',0,1,'68babdd8a32f0bfc9a8c798081cc6b416b46b940','AC-DC','tehran','2012-01-05 09:48:26','default.png',2,-1,1,1,0,0,0,0),(824,'payman','ab1cdc6eb9affe5e87eb6440ec7c071f1cb45c6d','peyman8842@yahoo.com',1,1,'7c84f1ccb0b221747ad06e01e6a35a9a871395ff','payman','tehran','2012-01-05 10:40:44','default.png',2,-1,1,1,0,0,0,0),(825,'rafi','9a16529fe4c42e5d799d8146fb17c36fa295cf2e','f.sh.92.iteng@gmail.com',0,1,'722bfedeb679497dc2f9872d74b6d89141673eec','rAFaEl','Ardalan Pouyabahar, Farzad Shafiee, Elham Salehi','2012-01-05 10:26:23','default.png',2,-1,1,1,0,0,0,0),(826,'fast2','8fc95c9ee114221215e5b69789665360d4b622ac','fereshteh_e91@yahoo.com',1,1,'7aa3cb81e9799c02ff1f270500969b6d0f6a24e2','fast','fereshteh ebrahim nezhad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(827,'habskeshidegan','bc377e82393bbd243a1c6014b61ccb8f49fcec59','mh.masoudi69@gmail.com',1,1,'8e403eeed39fc35b48062b323096ae250f02049e','habskeshidegan','tehran','2012-01-05 09:55:28','default.png',2,-1,1,1,0,0,0,0),(828,'nse1','65bb4e5b7d26fe65177d82790074de3687b0e6ac','elahe.hasani92@yahoo.com',1,1,'d8de37c19293d260f7e2108d358f550f38b1b6d0','khershaye darandeye vahshi','elahe shaghayegh nima','2012-01-05 10:24:06','default.png',2,-1,1,1,0,0,0,0),(829,'feri','029f927224ab6167d23c48c6a47a3182cd1d37e0','fereshteh_e91@yahoo.com',0,1,'818997f2204d94e5e5de4bc2151a15d087ab1597','fast','','2012-01-05 10:08:43','default.png',2,-1,1,1,0,0,0,0),(830,'storm','907b9cd209c3b0d4e3c12ea68319883cc4da6fb3','s_mohsen@ymail.com',0,1,'da58ac0c4b0f08068023f781184d910c6ca5450f','Storm','Tehran','2012-02-20 11:25:29','default.png',2,-1,1,1,0,0,0,0),(831,'ehsanh','45bb8b9094a0eee6ca3575d69ad82f561462e82b','houshmand_2007@yahoo.com',1,1,'f4ec702f5f975b62058865ddd5350d6c30978b33','Ehsan','USC','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(832,'MehrdadAP','ef1e6c490bb2950aaf2492e59338f04f26b306bc','Arabpour.m@Gmail.com',1,1,'73dcb55c6cc0fb8a82dd75b7fb4f5e6f365f20d1','MehrdadAP','SBU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(833,'zarezadeh','9785925ddfd1aa663c38a6ea8290c852e2eb80d6','m.zarezadeh@ut.ac.ir',1,1,'5e09945f6842132f678d84cb7c7eaf6205c10358','Meysam','ECE','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(834,'AmonTilado','ace5d184449dca01778d602419d150f5857a7ac9','amon.tilado@yahoo.com',0,1,'0fa0d5e2b77de2d0a9dc84675bf3fe6c29b2d7bc','AmonTilado','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(835,'Ali.Seyedi','4da3b8640a73ee649d8737c352cf3d06c1122b0c','salisayedi@yahoo.com',1,1,'030a4eeb06384ae9ac04125491543fddeb5cc189','Ali','University of Tehran','2013-05-03 19:20:29','74925153311dcef6815cc29f57af2127eb1049ca.jpg',2,-1,1,1,0,0,0,0),(836,'Navid.Zafari','a209190a23f4b06a48e68b8caf94fac870b5a1ab','navid_1370zafari@yahoo.com',1,1,'6be847a3034fd29ffc04612eff1e0cb5973604fd','Navid','Sadjad University of Mashhad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(837,'helmut','b68ee35e07d3f142cb644ea51e04fdfa3170562d','helmut@anzelm.net',1,1,'fc9becab44b2b0dd0e7c69694c605818dacd97f1','Helmut Anzelm','Uni Bonn','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(838,'Mojtaba','2bf3c96aa02898002a9a63dd902ea3833aef58de','sharifi.mojtabace@gmail.com',0,1,'d88694d0fa62eb93d356a83e47310cb2a21ccde3','Mojtaba','Kordestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(839,'Bad-Boy','b3bdbc14b549357cac8298123015c6d578968cd1','sharifi.mojtabace@gmail.com',1,1,'c4ca18fc48e2ef477d4d8eb31e381a31b658fa40','Bad-Boy','UOK','2012-01-10 10:54:57','default.png',2,-1,1,1,0,0,0,0),(840,'hoveiser','59e484cd63addbb87c49b070de973113d332413c','oveis.ak@gmail.com',1,1,'b15de806790f73608c927151fe111f7f5367b413','reich3','','2012-12-27 16:57:26','default.png',2,-1,1,1,0,0,0,0),(841,'homayoon','847960d13faf9bfe42a5c2aa9516dd8e869a4071','homayoonfarrahi@yahoo.com',1,1,'8565d39a6b8612f51ecc4d21335c965b263d6726','Homayoon','UT','2012-02-04 11:58:23','default.png',2,-1,1,1,0,0,0,0),(842,'s.abbaasi','55a79857469b903db678e9fb9965af6de568997d','s.abbaasi@yahoo.com',1,1,'f71f022304129c038661158284b5ee7bac76771f','Same Thunderbolt','Quchan Institute Of Technology','2013-06-13 18:20:32','bbb52905f1f7406fc4fcaf0bca7a6f8db5c07511.jpg',2,1,1,1,0,0,0,0),(843,'dr.w.breen','7db8287931943acc086aab9fddcc2dc64e8e7865','dr.w.breen@gmail.com',1,1,'1a92e47b688e73f1218983ba97c7222c32292e5e','HD','ECE_UT','2012-06-27 18:42:31','default.png',2,-1,1,1,0,0,0,0),(844,'shaakhman','8534749439ea480e10ae7e85b6fd0e531bd974c5','shaakhman@gmail.com',1,1,'8bca60f03b87539d2a9424695e96b1c72614b1b0','WHO?','UT','2013-03-25 21:12:25','fab35326348a3203cfb89bdd3756b2c1087bc161.jpg',2,-1,1,1,0,0,0,0),(845,'dash','ea7cd995bc90050f3edf11110b4e81d33dfcdd2b','dashdash@mailinator.com',0,1,'968dec23d67b278705b51b19cf7d180fc9168a25','dash','dash','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(846,'Simba','1bf8c04e1a186e33e9b650357f5c77ea6a899c29','niewazne@gmail.com',0,1,'0e655cb170a6baeee34b1aa3c359f594c14086a8','Simba','','2012-01-10 00:32:24','default.png',2,-1,1,1,0,0,0,0),(847,'8917021103','025d2f5298e5478e2a0720b93b8ff77e80087f46','abbasiniasar.hamidreza@gmail.com',1,1,'26811e5dec4f6acd8a2196df0838955be670e426','Hamid Reza Abbasi Niasar','University of Kurdistan','2012-12-20 20:59:40','19d92e22f0446427ca942567b09f0659ff038f92.jpg',2,-1,1,1,0,0,0,0),(848,'patmotarin','b08aae4d4ce5c07f81235d5cfc2893937f3ccc8c','aasaa@yahoo.com',0,1,'61ac5b75c8414bf502d634d5515ca374469c7920',':PP','UT','2012-01-15 15:59:16','default.png',2,-1,1,1,0,0,0,0),(849,'gigawatt','3f58e318039731c3f4f6ebe078b1d6c4ea1ee336','gravisoft@gmail.com',0,1,'7ecafe5bcdce256061612dd4024758ae26c9abc4','gigawatt','UCA','2012-01-16 21:47:25','default.png',2,-1,1,1,0,0,0,0),(850,'2hamed','05141ace7b60a4a84839c2d37b0e6e1715b6c94d','hamed.ma7@gmail.com',0,1,'fb4d9e374dcfc9e1628abdbdef06bb558b218560','حامد','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(851,'mellamokb','359a1d28a293f2a18dbb17a1b9bfc78536c93b65','kbachtold@gmail.com',0,1,'f932e9d9fe636c4c22cc7bf150b7bd04ce6df093','mellamokb','','2012-01-16 19:44:12','default.png',2,-1,1,1,0,0,0,0),(852,'sajnouri','592f9daadcb1830de7c5a6d9e8860747bf94aff8','sajnouri@yahoo.com',1,1,'d89b1c82959ee3f7283cdaade90ff6e679750d83','sajad','university of tehran','2012-12-30 16:43:46','default.png',2,-1,1,1,0,0,0,0),(853,'nabb','be9c4a32030aed5964be4f03f700c5158246157a','teh.nab@gmail.com',1,1,'8bcca8c2f29cff72adf18d4c7f97beb20ccc9cf2','πab','','2012-01-21 06:28:46','default.png',2,-1,0,1,0,0,0,0),(854,'storm_saeed','0165addf9229d401531a324b776ab9d9be6a440c','s-masoumi@live.com',1,1,'a83b68b603a2523cf83feff3294350b97a467e5c','storm_saeed','Roshd','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(855,'iman_hammer','1386d67476c1688ea24e863f70b19417cee135f0','imanrazavi.cm@gmail.com',0,1,'e96ab3ec7c56f68111ee39953eb2edc362c73b05','iman_hammer','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(856,'mohammad_mahdi_bigdeli','0301da83d6f7090ae4635b4000ba16a4f7dbd67f','mm.bigdeli@yahoo.com',0,1,'26226fe737a25e5bde7d75d6b40acd7da1ca5d49','mohammad_mahdi_bigdeli','birjand University','2012-03-06 20:51:11','default.png',2,-1,1,1,0,0,0,0),(857,'MortezaAbasi','80d81e12a48cf6e5dbc650644ce00ee6b676bc2b','mortezaabasi86@yahoo.com',0,1,'829e7ebff3864dfc4430194c30f9da738bcf2767','Morteza Abasi','Home','2012-01-24 20:59:14','default.png',2,-1,1,1,0,0,0,0),(858,'mojiacm','93b6b67964e26a650ee858ef218fb469ea619012','mojtaba.lnk@gmail.com',1,1,'be28c2d6d5f31e0a9d0bbb193c5d24811800c87d','Mojtaba Sharifi','University of Kurdistan','2012-05-20 17:40:57','f4c3e20843b6b84009883ef9fe20ddf917fd299e.jpg',2,-1,1,1,0,0,0,0),(903,'bhill','756bf6989b244ada15adb543695d7b6b5a0c9691','Disguised99@aol.com',1,1,'5b16bc0c33a6a1aa0b01081cbf2a4e7069731960','bhill','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(859,'rgf7112','c9c2a9f937e1f98629768ea890bf7184d884fa47','r.ghorbani.f@gmail.com',1,1,'e53ca9f3156c4ed7f1b17116e0888c4fd690274d','Trox','University of Tehran','2013-06-13 14:05:50','91e3ec8565f882f4d0183b49f4387414494c9615.jpg',2,1,1,0,0,0,0,0),(860,'deekline','3aa5b3281dbae2a0c3f40613300a771a738a6d8b','roma_2312@list.ru',0,1,'3b6c7f279dde168d98c641f14585cdc1698c53bf','ASchool','AUni','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(861,'deekline23','d0cd70265cc451f5e6aca04747696db4deeafaac','roma_2312@list.ru',0,1,'531c174a3c6a0ebfb3e0bc1746cb5975db0fd798','ASchool','AUni','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(862,'nima.tmac','72ecb6a76994eaba1bef1ce5ad98f3d489b36cfd','nima.tmac@yahoo.com',1,1,'e6178437a4b6f3e6e5d2d7c6226d7391ce4dfdc8','NoobZ','University of Tehran - ECE','2013-06-13 17:05:02','default.png',2,3,1,1,0,0,0,0),(863,'kalali','43a13216c28a2d743e05fb0889bae93bc467a01f','ak_1369@hotmail.com',0,1,'94b59a70100e2c6765a3f6c36c136569da012a12','a9091-88412148','sadjad university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(864,'akalali','ff9c96831c9f3c42570ab3aaf42cd998d57de6a4','ak_1369@hotmail.com',1,1,'d7e191d007111360250f7fdc2610460101160182','a9091-88412148','sadjad university','2012-02-03 23:28:16','default.png',2,-1,1,1,0,0,0,0),(865,'CyaJoker','c7181c054732eb645b2548ea8705938af277d5b7','cyajoker@ymail.com',1,1,'110762032cb3072a824a88ba878762191432ee9b','Cya Joker[ LuCiFeR ]','Payam Noor U of Urmia','2013-02-11 18:39:59','bd9ac8077099c5ed64ecc69e7f8098deee1ee3bb.jpg',2,1,1,1,0,0,0,0),(866,'Mehdigh','60ec5060826544f49735f0890b60106100381d81','mehdi@ghayoumi.com',1,1,'d8c2676bbd267ade6732f32299d6aa9142766e15','mehdi','Iran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(867,'Myeganeh','c82c9877d6099fed27965ae30eb7877ae44fcfdd','yeganeh@tartandp.com',1,1,'43cfb7617d866e52b932f4ab544b83b2c0973f31','Mehdiy','Iran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(868,'gharib','cb301641725a0a347c7e7278f3861a02272f5060','ashke.gharib@yahoo.com',0,1,'c5cea2bb123730f0b673a812ca35a754877738cb','GH','---','2012-03-06 16:39:14','default.png',2,-1,1,1,0,0,0,0),(869,'yc0576','6215eda5b7e649c1fae1e7560e5f4d8f1aa24d3e','yc0576@gmail.com',0,1,'2770d98d520a298ffd13e4cb78be0051e3b1d06e','litejimmy','','2012-02-06 11:23:11','default.png',2,-1,1,1,0,0,0,0),(870,'zuizui_123','7dc5c83d88ee39d8b81727a1db749af658dcbe81','thanhcanh_dn@yahoo.com.vn',1,1,'6c363d2d4a6f4bf002f708b21a17b688a22920f6','zuizui_123','LQD_dn','2012-02-06 12:10:43','default.png',2,-1,1,1,0,0,0,0),(871,'farzam','b1b5dfa1c30423181de163925b96502d2c18db86','f.ebrahimn@gmail.com',1,1,'5b9376ca7d531ff06c21a88e07d892c4f7f73fe7','Farzam','Helli3 Highschool','2012-03-08 12:23:07','default.png',2,-1,1,1,0,0,0,0),(872,'gaelookair','d34ced8e72807e414963fe13b325894173e7361b','gaelookair@gmail.com',1,1,'03777b21f72a87153ab17f67e7f7b15fd0bad95e','Renkai','ZJUT','2012-02-07 14:43:35','default.png',2,-1,1,1,0,0,0,0),(873,'AJTA32','16eaf4ae18f311a334be64aff1a8f92e2ff38db5','jtbucki@aol.com',0,1,'45c4e8e01a4e1857f79be89a083d2b933f5a8097','AJTA32','Clay','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(874,'pouya.payandeh','56fc68a3d96bdd0c2ab96b5b8c77c9fcd5a75351','pouya.payandeh@gmail.com',1,1,'e3d8c77092b26d4ac4575f264d6f7d7cd0fc63cf','Pouya Payandeh','Helli 3','2012-03-07 04:36:18','default.png',2,-1,1,1,0,0,0,0),(875,'ostadk1','ec2c4db46137c4593bf2085fa590f3648e0bc8d2','keivan.alizadeh@gmail.com',1,1,'b2d68408c67785143533fb710ad3761c4c89c868','ostadk1','Allame helli3 high school','2013-05-31 19:51:28','default.png',2,-1,1,1,0,0,0,0),(876,'irankarina','bd6640e5a530ed25bbb2f1dfd11a76005ebe93a5','fghameshlou@gmail.com',1,1,'bbd234eb54fc57c5ab3d4a3bbd97e1ccabb76cb9','fardin ghameshlou','Azad tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(877,'jooker.q','85e0926fc0627c304c2071c703058d83cd27174d','jooker.q@gmail.com',0,1,'8f056bb42e33559bcda4cbe52424690ceb2b2ca1','Reza','tiheq','2012-02-11 06:31:27','default.png',2,-1,1,1,0,0,0,0),(878,'yashar.dorostkar','3b4f4447b65e382d26a9942039fee0d3114c6a72','yashar_dorostkar@yahoo.com',1,1,'4e530072af84f49ff28f9d988f272b2b52486ce4','Yashar Dorostkar','Payam NOOr University of URMIA','2012-02-20 12:03:20','default.png',2,1,1,1,0,0,0,0),(879,'hsuchil','b67fb51d0a62031c43fbc14d9ae19a7afdfe46e8','me@hsuchil.com',0,1,'03e4b9662ecae352dcee30588244f2b813a9d67c','hsuchil','ITESM','2012-02-12 02:30:56','default.png',2,-1,1,1,0,0,0,0),(880,'b4hr4m','acb0d890caae7bfbc68ee7c5e8a20a59e8d316ee','alinia.b@gmail.com',1,1,'7e81c3cea9b05dc6d3032097a96a592ab3f704c9','Bahram','University of Tehran','2012-06-30 15:21:03','default.png',2,-1,1,1,0,0,0,0),(881,'golnoosh','b6c983838881b995020e92bea83bcbe7f093e1cf','g999999999d@yahoo.com',1,1,'43d90b609dff0dcd5ddcf271e6219b75967bb522','htcd','Tehran','2012-12-27 12:01:46','default.png',2,-1,1,1,0,0,0,0),(882,'dms67','0984e4a77f6568dcd2a8adb3b865a6f5f528d37f','d.mahmoudisari@gmail.com',1,1,'c8796ec38e82ef2c2f89eec5dbf0ef52a1135985','Royal Khatoon','','2012-03-15 20:26:50','default.png',2,-1,1,1,0,0,0,0),(883,'maganiss','07620cb9a598a1e13ae8c9c5a221b43a8c82f36e','aniss.maghsoudlou@gmail.com',1,1,'9297bda97c17d968790dc91c6df7a5a3fafdbce0','Aniss','ECE','2012-12-28 18:29:05','default.png',2,-1,1,1,0,0,0,0),(884,'a.yazdi','036f467e57535a112bc53622729ee666393bba33','arefe.yazdi@gmail.com',1,1,'532915f067d60b3b18ad72fec40e44e4863de3ec','Arefe Yazdi','University Of Tehran','2012-12-28 12:22:22','default.png',2,-1,1,1,0,0,0,0),(885,'nmirzaei','f2043ea04d2d10f583270d98ae0a8e297ef9ccb3','mirzaein@gmail.com',1,1,'a25f04c1766facd91cce982a760c52cdeb06d0d0','Nima','University of Tehran','2012-05-23 02:39:44','default.png',2,-1,1,1,0,0,0,0),(886,'mohibeyki','f9c75b23354e71432b6019cfb55ab88273385463','mohibeyki@gmail.com',1,1,'8909dc31291d047ebafd3f5da4a2fca3a7365d31','mohibeyki','UT','2013-06-13 13:51:47','1309f98ac6fcd2a188dfad5a5863f109d6560d75.jpg',2,3,1,1,0,0,0,0),(887,'mhraeis','7024076245788c2885bd923a9ad553df56254ccb','mhraeiszade@yahoo.com',1,1,'c28e892856fd14e24850b6c83003b02bacf5f9ee','mohammad Hosein','Tehran','2012-05-22 22:45:58','default.png',2,-1,1,1,0,0,0,0),(888,'Emad.m','fec9931d140ddbe74465ff4d4ec4c7bfd7cfd354','emad.mollaei@gmail.com',1,1,'cea983cd9845424ca87be6437922a6276e4889d6','Emadiator','UT','2013-04-14 15:27:36','48f4cb3d7f6e33a02490ab9244112e399fd814ae.jpg',2,-1,1,1,0,0,0,0),(889,'ali.karimi','b832bfec5fd64bda074f6511306d51c273fc6637','alikarimi751@yahoo.com',1,1,'e078b843538ccbd3cff18e3f0d697d54f418e61f','ali','ut','2012-05-21 03:15:50','default.png',2,-1,1,1,0,0,0,0),(890,'BANW','1177645e425746a846700e2ae4b3bf7bf7f9bd98','bn.rafiee@yahoo.com',1,1,'d213e970d5f516091a326b1df862d886f6598248','banafshe rafiee','tehran','2012-08-19 13:51:17','default.png',2,-1,1,1,0,0,0,0),(891,'H34D$H0T','9610db3f753f821c9701a39e85dcb77c8c883d92','drogonlord13@gmail.com',1,1,'c53d8f8bd32916c5a1c9ea6ebdd01139431cf649','is that all','university of tehran','2012-02-20 09:12:55','bb70e4822a6c024d173dbb97aac9c24351203fa9.jpg',2,-1,1,1,0,0,0,0),(892,'f.ebrahimnezhad','a3a76db72fe7064e2ecd7454fcdf424e9c76625c','fereshteh_e91@yahoo.com',1,0,'634b589c9b55615e8b28f858a7b3c09c2ab96f96','Fereshteh','','2012-08-26 16:11:24','default.png',2,-1,1,1,0,0,0,0),(893,'mh.abdoli','4476d59886197da8a1ee67eca211f548e1777d83','emad.a.92@gmail.com',1,1,'fc231e972eaaace61b95c7748c84997e4520a381','Emad','computer engineering','2012-10-01 03:31:59','default.png',2,-1,1,1,0,0,0,0),(894,'marjun','a6cd60ea4c1a8c1bdf5137d1f0c119d076ff23eb','marjan_aslsoleimani@yahoo.com',1,1,'02d9301b7509d2409d73db309492f541444afa96','Marjan Soleimani','UT','2012-05-21 00:34:22','default.png',2,-1,1,1,0,0,0,0),(895,'are.morta','ae4d8a3bfd1a29a1da492320fd93a77539bb01cf','are.morta@gmail.com',0,1,'27ba14b5982a9edae84ee1481302adc8f146bc99','are.morta','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(896,'s.majidpour','f62bcef301cdd305da9d00eb2b514d12db283ce8','soodeh68@yahoo.com',0,1,'3eb638400f1edc66762e65dde431c3dab60054b8','s m','tehran university','0000-00-00 00:00:00','default.png',2,3,0,1,0,0,0,0),(897,'mizdler','21d6cfb4132690d01a7518c8a6fffc82abe39f3d','mizdler@yahoo.com',1,1,'f150381e217ae0facf6a1feb4ed2473541b5aa7f','mohammad','Tehran University','2012-08-29 23:17:08','default.png',2,-1,0,1,0,0,0,0),(898,'masih72','c0ba07da3c79eded21cbc994faffe48e018254fe','m.afshin93@gmail.com',1,1,'caeb48fe944633af0fbac4cde9a057326515879d','masih afshin','Tehran University','2012-10-27 20:14:43','default.png',2,-1,1,1,0,0,0,0),(899,'xamas','62de8d0e8c3209bf2b4e607bcf1af525d3c91ba7','ma.dorosty@gmail.com',1,1,'cf4eb6d837818736f1668f16cb6960c7804215d6','Ali Dorosty','Tehran University','2013-06-13 13:35:24','default.png',2,-1,1,1,0,0,0,0),(900,'ban91','603e29adef624a3f3c3836ecaaaf9e7157c5fd0f','rashidy.leyla@yahoo.com',1,1,'6edc952348fc3fb98c977baac210ab60ce4ea9b4','Leila','Tehran','2012-05-23 21:51:44','default.png',2,-1,1,1,0,0,0,0),(901,'mesius','ebf8e68daa7e66fb3a57a797d51e3f32f1f5fa77','mesius.f@gmail.com',1,1,'70b9496ff209e03d402afcf59d0a56ccac0dcda6','mesius.f','ece/UT','2012-05-21 17:33:22','7a5b18b5c287d2cd4a598efd38733373c4da801a.jpg',2,-1,1,1,1,0,1,0),(902,'synix','a492ed950c66a2d7bf1e15467306a73f48a046a6','shayansayyahi@yahoo.com',1,1,'e93887fca38ec61299430944b1f848f82d90c5c3','Synix','UT','2012-05-22 03:07:22','default.png',2,-1,1,1,0,0,0,0),(904,'sadeghi.reza','f9f8b2a0a507504eae653424faf6a9bf68c3deab','rezasadeghikhas@gmail.com',1,1,'f7d0bce625913bd965bcc0d58dacfc75f0d00e03','Reza Sadeghi','Tehran','2012-09-19 08:34:29','default.png',2,1,0,1,0,0,0,0),(905,'salisayedi','e3cf6c8a2e34863e761935fbf5f22848e2b729a8','salisayedi@yahoo.com',1,1,'f2d257ddf5f2c3114dacf75905fd3caa60d81fed','Ali','University of Tehran','2012-02-20 20:01:06','default.png',2,-1,1,1,0,0,0,0),(906,'jggt','86a8a3df04d5026133cfdcf55ea37f91033266c6','fitintothecave@gmail.com',0,1,'16f125f668f5825862a632bd20e3045a18e254d8','jggt','','2012-02-18 14:56:32','default.png',2,-1,1,1,0,0,0,0),(907,'sabaamd','efebd0295d1cf1016899c3e8e8d1d532b06a68b5','ahmadi.saba@gmail.com',1,1,'77d509d46520235bd11a3d97fc4e27c07611615d','LuckyLuke','UT','2012-12-06 09:51:25','default.png',2,-1,1,1,0,0,0,0),(908,'Peyman.Vahidkhah','49d2e0a85819b098f394155619db4a7ec66420cf','Peyman.Vahidkhah@yahoo.com',1,1,'d27223f3e18e52620e5485cf41f3cb8b58f9df2d','PeymanVahidkhah','Tehran','2012-05-23 00:09:20','default.png',2,-1,1,1,0,0,0,0),(909,'mahdizadeh.s','9c868965813a50a9259e3cdfa12f3723816c6f7c','saleh139@yahoo.com',1,1,'787688527fd61f0d2cd556f649ae559723961a2c','Mohammad Saleh Mahdizadeh','ECE@UT','2013-06-13 18:26:03','default.png',2,1,0,1,0,0,0,0),(910,'peyman','4ded21210f27540e3830fa39fe44f13061787a1a','peymanzeynali@yahoo.com',1,1,'cad237ca332002143beac67a89ee919ef619c8e1','P_Zey','UT','2013-06-24 18:56:45','default.png',2,-1,1,1,0,0,0,0),(911,'sgsamar181','7846448188ea94852756a67c497599656aa6ab60','sgsamar181@yahoo.com',1,1,'4017227292a8f5e4e631be1e130c57335723e62f','testing','university of tehran','2012-10-26 11:11:05','default.png',2,-1,0,1,0,0,0,0),(912,'pomegranate1221','0b0299c428298d4a89958918842006fbea88efc6','askari_faeze_1221@ymail.com',1,1,'a3323eae1480c37890947e61b4b475ee44f4f319','pomegranate1221','University of Tehran','2012-09-29 01:26:26','default.png',2,-1,0,1,0,0,0,0),(913,'pahlevan','adcba665e4ef8914cdbb5d9f8b83bbe88630c260','mrymofid@yahoo.com',0,1,'e380b51549e2a00d0d26196f0367fd4432a1aa2e','Mohammad Reza Younesi','School of Electrical &amp; Computer engineering/ university of tehran','2012-02-19 17:45:06','default.png',2,-1,1,1,0,0,0,0),(914,'Une30','ba1fe6eb0074bb30c91d884b9a47e33c03ede720','younesi429@yahoo.com',1,1,'9ffb9ada735018ac429ef476917ec1a54595a464','Maryam','School of Electrical &amp; Computer engineering/ university of tehran','2012-10-04 08:03:24','default.png',2,-1,1,1,0,0,0,0),(915,'mohammad.mdoust','e3e7dfaaed99d904bedeba710afdd2683c3cdae8','mohammad.mdoust@gmail.com',1,1,'9e596960f6886d05a25ce78612805ecddba9e307','MDOUST','UT - ECE','2013-06-23 16:06:05','b33302bcfa2cfb68157401a1b70344ce5a815e0c.jpg',2,3,1,1,0,0,0,0),(916,'pejman','78e8bfb172a1f6507a7a07fd66667fa54ef24d20','pejman_invincible@yahoo.com',1,1,'0d8a806cd021c61741d06b0d52664b86f8ee070c','Pejman','University of Tehran','2013-04-17 15:30:39','de05557d1252504a219c9e8282d7b46c4a12520f.jpg',2,1,1,1,0,0,0,0),(917,'samiemostafavi','640dca572071072d8cb5c1080d38a5814e8f684a','samiemostafavi@yahoo.com',1,1,'13e46ff82a133143bb99e7e9f0af8f19cca144cd','Klaymen','Neverhood','2012-08-23 09:31:22','537cb4ac5e1da2f29cefea3f2b27892c29b9edec.jpg',2,-1,1,1,0,0,0,0),(918,'p.naghavi','7f2f9b34a72a8d500ad22a47e1628e32d588b441','p_naghavi@yahoo.com',0,1,'c967117f8ec2f12098aee88555b7b71c3f0a49b3','P.Naghavi','Tehran','2012-02-19 20:15:20','default.png',2,-1,1,1,0,0,0,0),(919,'mohsen','47a9a7c523a7f24dfcbfdcbf4ab056b79f94115f','sd.mohsen@yahoo.com',1,1,'f177ff71ade0ca45052698ace79eb32201e064ca','An0nYm0uS','Tehran','2013-06-13 18:37:26','default.png',2,3,0,0,0,0,0,0),(920,'amvaleh','aa497a9157276a97e0e3dfb828b7f5ec35c44af1','amvaleh@gmail.com',1,1,'7a68d1a73eb7ccd92c12d8be3f86adbd2ac20343','mehD Valeh','زندگی با اعمال شاقه','2012-10-26 20:18:02','0968376a1755e878551df37c4b4587268fe84aef.jpg',2,-1,1,1,0,0,0,0),(921,'alireza.fixer','23c0da6b497c11c36af23d33822cf464cafdea63','alireza.fixer@gmail.com',0,1,'5cd11e21dedf2f986d9bc548370a81b00513cf7d','alireza','مجتمع آموزش عالی فنی و مهندسی قوچان','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(922,'razeghi','da69c0c03eaa44ebc67952ba36a09ae601b05b40','razeghiyasman@yahoo.com',0,1,'dfa58b8f079b40d794d402dbf5f66f54fa1564ca','Yasaman Razaghi','tehran','2012-02-20 11:09:08','default.png',2,-1,1,1,0,0,0,0),(923,'memlucky','edee7fbc4b16798db3ef92692451d6c63b026d6d','borghei71@gmail.com',1,1,'9367d6a1ab56fc43c8ef579f88bdaf506a8ab8b0','memlucky','Tehran University','2013-04-17 15:14:54','d4777f960c8c85a47e20c5113bd304600f148b4c.jpg',2,-1,1,1,0,0,0,0),(924,'ehn.khosravi','c10c3c3a9c727f3f8e9e990fa6fa10163fdd8265','ehn.khosravi@gmail.com',1,1,'e8f0c30f229074eb123b1b954c95b22e80cbe2c2','Ehsan','University of Tehran','2013-06-12 07:36:56','default.png',2,-1,0,0,0,0,0,0),(925,'homayoonfarrahi','794e898187de792754711d66b229e98d5336bad2','homayoonfarrahi@yahoo.com',1,1,'3552403cb4558eb8b9a684f4dae3797ada92d4e5','Homayoon','UT','2012-07-26 08:00:39','default.png',2,-1,1,1,0,0,0,0),(926,'mhmmdrz_nu','ca5519a2eede680501c65ca04312534ad4bec817','mhmmdrz_nu@yahoo.com',0,1,'0055e9754c60523b525f4e94a2788ab0b5a21e97','mhmmdrz_nu','Tehran University','2012-02-20 17:07:57','default.png',2,-1,1,1,0,0,0,0),(927,'hosseinagha','edd088b46aebf18e610542f73c7d73ef41eac725','mskelishomi1372@yahoo.com',1,1,'6a309eabdeac35cd7e2f3a8c37ffb7f06a3020e8','HHHH','University of Tehran','2012-10-26 18:59:56','default.png',2,1,0,1,0,0,0,0),(928,'motallebi','3a915c402f0f9df75a4b2ddde8ef22354d8f42c5','mhmotallebi@yahoo.com',1,1,'ac8f67e45b5a858a1fe6f83ec71b7ce17c4e338a','Mohammad Hossein Motallebi','UT-Computer','2012-12-07 14:44:06','default.png',2,1,1,1,0,0,0,0),(929,'foad.saeidi','2432af4c1c629487ac50cf15651e32bc081d6fac','f_sn_2007@yahoo.com',1,1,'ca3040fe9bccac4769beb1587275b8710bd48e61','Foad','tehran','2012-12-27 10:24:57','default.png',2,-1,1,1,0,0,0,0),(930,'naderian','86e60fcf8c945f4d49729ed0989c0b236df01173','n.naderian71@yahoo.com',1,1,'e9193f1d0d8e1e674e6897dbbf9e41e0dcf2cba7','nilufar naderian','tehran','2013-04-17 14:01:28','default.png',2,-1,1,1,0,0,0,0),(931,'ali.m','67a942fa1c50b3e50e7a01d9964f59e5417398fb','mahdavian.ali5774@gmail.com',1,1,'96cd643781ccd6f22e775fd4281a365d1fc4b5e1','ali.m','Tehran University','2013-06-13 11:38:51','default.png',2,-1,1,1,0,0,0,0),(932,'manutd','2ed8c0fe339b78e28e2c57940b8ed530935e81ea','milad.ghasemi71@gmail.com',1,1,'2f76fc79f7bfa139c4b08b76ce5a8ef9117f2c4d','manutd','kordistan','2013-01-29 15:17:18','default.png',2,-1,1,1,0,0,0,0),(933,'wilson_xzx_wilson','8dc0fca9ebe75be9651989e54a7649cf51478d5e','uz.elnaz@yahoo.com',0,1,'617e02bf88accc215a085d9d4ee96e94bf8c7e5c','elnaz yousefzadeh','tehran','2012-02-19 10:03:55','default.png',2,-1,1,1,0,0,0,0),(934,'s.rasoly','3b02634ed66b283e0744801a7f3279326bc64341','saharrasolypoor@yahoo.com',1,0,'0719cb2d2c7564c2829df11d79838712c75e46b6','sahar rasuli','tehran','2012-11-02 01:55:22','e76a3716cd8cd73cf02574c0af338fbe0adfeca8.jpg',2,-1,0,1,0,0,0,0),(935,'farimahmz','43ecbea6c008ec2e6b0548dd3afea53dd6e45114','farimah.mz@gmail.com',1,0,'294f8ba9725088c551b37cbc3eb7fda4809e5330','farimah','UT','2012-02-19 10:47:45','default.png',2,-1,0,1,0,0,0,0),(936,'f.gharaei','77af40d813c5eb9829714187a59fe5966bbe9875','gharaeemanesh@gmail.com',0,1,'fa44c51386aed926aa2bba04b8ee7117c8f685c4','fatemeh gharaei','university of tehran','2012-08-03 09:13:01','default.png',2,-1,1,1,0,0,0,0),(937,'ashkan.sarlak','ea02c92b4eae4cffc49c76b71e9e0147d6027c54','ashkan6990@yahoo.com',0,1,'fd9bf6276c7ff0def826b7e3ff53a4e6b595ffb5','Ashkan Sarlak','University of Tehran','2012-03-12 11:51:32','default.png',2,-1,1,1,0,0,0,0),(938,'Ahmad.khazaie','e00f8eb389b9f66fbe26aa89f3504a29a4e961e7','Ahmad.khazaie85@gmail.com',1,1,'b2326e96334262a36508da1f522e59dd8077fa8d','HaJi','University of Tehran','2013-02-14 06:16:21','default.png',2,1,0,1,0,0,0,0),(939,'aref','24d9c0e5d57b5ab6a128983d8afb74acbb1a4084','aref_samadi@yahoo.com',1,1,'b7b440aa99a9519278a4bd949bdfada1d8ab2298','aref','University of Tehran ECE','2012-03-16 15:04:24','default.png',2,-1,1,1,0,0,0,0),(940,'b.behazin','a93e5a3a91fa4b5fddb1c4cf226778c6eaa3eb32','b.behazin@gmail.com',1,1,'bbb3b68b9d3dea93052314d111d2db539151727b','b.behazin','University of Tehran','2012-08-15 13:05:07','63c5e11bd1da41cdf9606f801e06ce67badd5b18.jpg',2,-1,1,1,0,0,0,0),(941,'fatemehf','46a7019b01869588ecb2c8515ed82ddba299bf72','fatemeh83fathi@yahoo.com',1,1,'b01b080d1a19283e8c23698a42575c17b86b4662','chooghoor','','2012-08-03 09:01:06','default.png',2,-1,0,1,0,0,0,0),(995,'yahrabi','f719b3a93d7b965cfecd90a675c63e508c9b2c2a','yasi.ahrabi@yahoo.com',1,1,'44fe71ef7a80bef0b679c762c52e9c164a0bcaad','Yasaman Ahrabi','Tehran University','2012-02-20 18:10:37','default.png',2,-1,1,1,0,0,0,0),(942,'mahsa.sh','3a186093191b7641eef436f0b014321dc44ba295','ms.shahshahani@gmail.com',1,1,'7ca98b412f8c67cb294699375fbbf1cfd0b90bda','Mahsa','UT','2013-04-17 14:58:27','default.png',2,-1,0,1,0,0,0,0),(943,'cartman','dae61af538c38faa1be3fa9b7c66ffeeabb77a26','e.cartman92@gmail.com',1,1,'92b4b1b3addfbb044984917577da5c0f8b8f87e7','eric cartman','Stanford','2012-09-28 09:25:06','223a2a055b4b97a962c6a130134d53243a264b02.jpg',2,-1,1,1,0,0,0,0),(944,'fghanadi','1d321f59634013f63c3526a10a550d3f017b8c19','fateme.ghanadi@yahoo.com',1,1,'7c8b8ced8422322285646a16e5ee62953fa42307','fatemeh ghanadi','Tehran','2013-06-13 19:03:43','default.png',2,-1,1,1,0,0,0,0),(945,'mozhde','89de59477d860edd8cf48a6758c7ae571a00f356','mzh.ariann@gmail.com',1,1,'5d1b1b379f89c8be79b3aa177f7c4c9a010dc7b9','khodesh','','2013-02-13 17:35:55','e318baf97471a54eb241b2c0467759bee87fbf5b.jpg',2,-1,1,1,0,0,0,0),(946,'mahdish8','10c07c778c9da75c1bc84e616055b1a6c54d1998','mahdisheikhzadeh8@gmail.com',1,1,'5671d4970b903e858e6a1e1caec73b4652871013','msh','ut','2013-06-13 21:23:51','default.png',2,1,1,1,0,0,0,0),(947,'snail','4b8a3470e7ca26c84a8a3126161edbbb83806677','ali.nosrati72@yahoo.com',1,0,'2fa8047469afff5fe80a9c5b135fd2670d714a06','snail','UT','2013-02-11 16:12:54','04937e834244f03851c395464eb78b0b6c9df074.jpg',2,-1,0,0,0,0,0,0),(948,'fateme_eskandari','e2e0a12219c954245bb2b3ed2ce6f74b015711c2','fateme1107@yahoo.com',0,1,'ba480446e93bb85f7a9e8b665907100e3223c465','fateme.e','tehran','2012-02-19 17:17:46','default.png',2,-1,1,1,0,0,0,0),(949,'sh.zarepoor','ea5d9411adcfec181a070a229a9371a0a33220b8','shabnam.engineer72@yahoo.com',0,1,'aa829fbdd2c19ba3cbef2e8479911877c70cae08','shabnam zarepoor','ut','2012-02-19 17:37:26','default.png',2,-1,1,1,0,0,0,0),(950,'maxy','b075481d1b850750357467a1ea20c7bb28a2c747','kheiroddinmaxy@gmail.com',1,1,'0f62d0d0dc67bdb8ecc1694ed1e6a0ea04cc28ac','maxy','tehran','2012-12-30 15:37:09','default.png',2,-1,0,1,0,0,0,0),(951,'hamed','5b6f386055c7fea32489aaa72636ca8a7494e735','hmd_20122012@yahoo.com',0,1,'6fd12cfcaac78028f9c51526c29c68e2bc9789bd','hmd','ut','2012-02-20 14:23:35','default.png',2,-1,1,1,0,0,0,0),(952,'jimani','5f697baf8bfe42971cff9cb03427faec8fe49378','jamshid_imani_1372@yahoo.com',1,1,'1855a7de868f9e107b4b2f589c02b9b2ab6d9536','Jamshid.I','university of tehran','2012-12-27 10:34:10','default.png',2,1,1,1,0,0,0,0),(953,'irania','f7186a9bface5c654a7e8e6a8988fb49b557b978','atefeh.ir72@yahoo.com',0,1,'d23ce955a635caa933581b77ef70565e426553e7','atefeh irani','ut','2012-02-19 17:48:52','default.png',2,-1,1,1,0,0,0,0),(954,'mtz.faraz','ba605539738628135bd61a87d792f566bb5f9b4a','morteza.farazmand@gmail.com',1,1,'f71fe834f585e0267d76eaa304ada56bbe34e7d0','Morteza','Tehran','2012-10-24 17:54:03','default.png',2,-1,1,1,0,0,0,0),(955,'Bellman Ford','8e72052b0bb5994a3ee42bf91cee18f9458c7f5d','are.morta@gmail.com',1,1,'c1deb367beedea854fa0ed9b38a3fdeb01c56cc5','Bell','','2012-02-27 15:47:37','default.png',2,-1,1,1,0,0,0,0),(956,'mehrdadabbasi','cf8b72584ba28f27a0db507eefc876bffd1b9bb7','owling1@gmail.com',0,1,'17b5070bc49b91a796ed581259a6b6b446cc5f29','Owling','University of Tehran','2012-08-06 16:26:53','default.png',2,-1,1,1,0,0,0,0),(957,'810190418','a5fa100e8c918be6e614de707787bb78e5f2ecc9','sepidehbod.93@gmail.com',1,1,'a1bb918296b68d22e49bab3c64bf6b7b83bc3252','s.bod','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(958,'s.bod','4a7e60f229cabdc9e00b430d4cce606c59e124ff','sepidehbod.93@gmail.com',1,1,'cf22a072aea243cc5ae6e5a8d6734bca2ae4553a','s.bod','tehran','2012-02-20 09:34:32','default.png',2,-1,1,1,0,0,0,0),(959,'amin.zeinali','1550069e05e048f030fba72bfec0064d06d04a42','mo.zeinali@gmail.com',1,1,'ed78bdf820811da0e203a2c60927e0867058a825','mohammad amin','Tehran University','2012-02-20 19:16:19','default.png',2,-1,1,1,0,0,0,0),(960,'elahe.h','ccbf840d544458bf1c96c49774544a18860dc821','elahe.hasani92@gmail.com',1,1,'eeb6c58a6dd5c5501ad8a09116772f105e9f4854','Elahe','UT','2012-05-23 03:57:47','default.png',2,-1,1,1,0,0,0,0),(961,'fshf','bd36d80e311e1335780ad0a4713dddd9f35a3c66','fateme.shahrabi_f@yahoo.com',1,0,'8a52629076db9b048976a9c2ed0ea2ba70a6655f','fshf','tehran','2013-04-17 18:02:24','default.png',2,3,1,1,0,0,0,0),(962,'n.yavari','0d9a1cd8d8a2862f5a9020f9d8099cb8fe184fae','nafiseh_yavari@yahoo.com',0,1,'72f5d0827be6ae8ce2f56c338273dada564e1c5d','n.yavari','tehran','2012-02-19 20:55:54','default.png',2,-1,1,1,0,0,0,0),(963,'csec','83bd664b2e95442f46580770f1ebec3fd85d1d14','h4m1d@live.com',1,1,'bdad5ddb6e2ed6f8f4b0de8cfec33b6d6b1ebb53','H__M','University of Tehran','2012-10-27 11:00:55','default.png',2,1,1,1,0,0,0,0),(964,'kamyar','a9ad430050310cc152e5f2446d1b6a1bc40c7273','fckamyar@yahoo.com',1,1,'3af620db34d7b7de3079bec1625883355592b31c','kamyar','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(965,'meisamtaher','e6a4127239216d8a590267c3f4b303fe08fa04f6','meisamtaher@yahoo.com',1,1,'504110ceee5104bdd5b74e0e181efa2ca4911d31','S4M','Tehran','2012-02-20 17:02:16','default.png',2,-1,1,1,0,0,0,0),(966,'zeinab.meftah','44a972c1c676312b9663560995a85d453e615b96','zeinab.meftah@gmail.com',1,1,'3051fffa1cf2fef507d7cd3fa34a803865733f1a','Zeinab Meftah','University of Tehran','2012-02-20 04:13:48','default.png',2,-1,1,1,0,0,0,0),(967,'rasoulian','a7d2ae3e7f9485b21f1e760707ac860da367b425','arasoulian@gmail.com',1,1,'0315222ac3a999aaedd1e6d7b3ab9fa57fc08dff','Ali Rasoulian','UAST','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(968,'apakniyat','94662a802bb669dc5e682c05972c7d49f8d0b296','palirezap@gmail.com',1,1,'0ffb81a1ba95340aab8807271e290bb56eb69320','iAlireza','Tehran','2012-10-27 15:36:25','default.png',2,1,1,1,0,0,0,0),(969,'mili','0f1ac09ade28be8dc685104d569759bf5b7a6250','mr.kazemi71@gmail.com',1,1,'2e08268944b659d2b6948e1bd950871a0dc5e159','mili','ut','2012-02-20 09:56:19','default.png',2,-1,1,1,0,0,0,0),(970,'nooshin zamiri','117395c6f88e32546a5ef2cf84102caaaa65e95c','z_riha@yahoo.com',1,1,'67021d239ad4b4dfa50972c0fedba3772e1b7695','nooshin zamiri','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(971,'mahsa.a','8010f4e30c1b8b6876b2537ffaba6535fc5c695f','mahsajooje@yahoo.com',1,1,'fe86208970d27000d0573929d5d5318c94578f24','&gt;:D&lt;','tehran','2012-09-02 18:16:01','default.png',2,1,0,0,0,0,0,0),(972,'mehrdadnasri','18c9b29843732a3dd434734c8e6eb589a77d2559','mehr4ever@yahoo.com',0,1,'67ae8dcf1da1021d44097f18688fb7572c30eaef','Mehr4Ever','UT','2012-02-20 08:29:52','default.png',2,-1,1,1,0,0,0,0),(973,'parisa','2b862d648466392028db10a2633741dfff962a80','parizad1188@gmail.com',0,1,'7b8c11de045d8d2c94122804ce51c006417941be','parisa hasanizadeh','tehran','2012-02-20 15:51:28','default.png',2,-1,1,1,0,0,0,0),(974,'maede.daemi','c1d18957c0bb59b708d46316a355d11ab6f7ea95','maede.daemi@gmail.com',1,1,'3de7bd04b66ccce362740c523e6b0aabad649f4d','maede.daemi','tehran','2012-10-27 19:14:38','default.png',2,-1,0,0,0,0,0,0),(975,'DG01','ad1025886c16bd9b344946228c4ccc98039a667a','omid.fereidoon@gmail.com',1,0,'d69a8042745939db694f7cbec5eabe9416c240e0','omidf','university of tehran','2013-03-17 19:37:27','default.png',2,3,1,1,0,0,0,0),(976,'delirashraf','15de581099f003cf828ffc2a0907253e90bb0fed','Gamma_d_z@msn.com',1,1,'034f465891f3be1e40eed02ea995156a1399ee0f','Sadra','ECE college of Tehran Univesity !','2013-04-13 20:16:36','1d78361514426864248548e4f788f4c17942a5c5.jpg',2,1,1,1,0,0,0,0),(977,'omidD1','54c4222e8f19a120aae0d86c04f04e725de58959','omid.fereidoon@gmail.com',1,0,'a716c4514b3c25b23e0eb717d2c49d82fc0bb579','omidD1','university of tehran','2013-05-03 09:21:59','default.png',2,-1,1,1,0,0,0,0),(978,'m.emad','5db10991316a949aa262a45e97038f5a442d590e','emad.mollaei@gmail.com',0,1,'c3d09158d853f21f49887834fac1793375c014d2','Emad Mollaei','UT','2012-02-20 09:49:01','default.png',2,-1,1,1,0,0,0,0),(979,'minoof','82018b63e53dceee2bcb257a9c25d3a10ca3a183','minoo_f73@yahoo.com',1,1,'e007bc4ae7b5d33ef773edbd9cc116ae368c60ad','Minoo','UT','2012-12-10 14:48:23','default.png',2,-1,1,1,0,0,0,0),(980,'hoomanm','e0cd739341052733ae508270f1e11c5e9be65a8c','hooman_mostafavi@yahoo.com',1,1,'c91c5f803466a9597ce63d50779ad4e641f1d4b3','hooman mostafavi','UT ECE','2012-09-19 17:11:22','default.png',2,-1,1,1,0,0,0,0),(981,'AminM','5b86bac4e8f298932308145c297ad1c2d2d2912e','amin.mazhari92@gmail.com',1,0,'4fabd3b6243b40b0af84d54f51ed0f4490fddab9','Amin Mazhari','UT','2012-10-27 14:34:55','default.png',2,-1,0,1,0,0,0,0),(982,'parsa7parsa','705a94570a061c4e548f8a2f31683bbb6368ac3d','parsa_sotoode_121@yahoo.com',0,1,'03ed19b1d7ad7ab5c401e8497004ea2d803f9802','parsa_sotoode_121@yahoo.com','school of engineering/university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(983,'parsa333','8e22132007bee160d04521cb3a37e83bae79bfce','maihaeph@emeil.ir',0,1,'fb244c8120d3c7499ca8d9f7f0775f9a81b0561b','parsia','ut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(984,'mani777','a00448ff00f037a8019c9dca0ea41416bbcf2752','maihaeph@emeil.ir',1,1,'89005cd3895b01977c823b3ead66dc16473cb67e','maihaeph@emeil.ir','ut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(985,'nikoo.gh2','9eae9d88873481517a9703ba520215413f73dbda','nikoo.ghourchian@gmail.com',1,1,'39ee349feeaa738c7dcd9f427369c6b733102a88','nikoo ghourchian','','2012-02-20 14:30:53','default.png',2,-1,1,1,0,0,0,0),(986,'parsa.sotoodeh','3d686dd2aebae9a240acfa79bab655d5b7f9f6dd','mani.sotoodeh@ut.ac.ir',1,1,'9a4790eee07ed78439f6998baaebadf8b6b07500','parsa.sotoodeh','school of engineering/ut','2012-02-20 13:55:25','default.png',2,-1,1,1,0,0,0,0),(987,'shiva.esfahanian','01956b1659ecdc3ce68a8045506c43dd6d620e22','shiva.esfahanian@gmail.com',1,1,'14b7bd7a5f58f1a9e851684067f0a32dc60b39ce','Shiva Esfahanian','UT','2012-09-29 00:27:52','default.png',2,-1,1,1,0,0,0,0),(988,'parisa810190427','3b6aab6d94f53e7436a474838e7a01ae167bf39c','parisa.alirezaee@yahoo.com',1,1,'3ef0078d27f4cfa92ad2a93a14f70dfa7f731710','Parisa Alirezaee','Tehran','2012-07-18 15:53:42','default.png',2,-1,1,1,0,0,0,0),(989,'parsa-sotoode','458441afcbf8f4014acdcdb16f0530decd7a8c41','ueawredo@emeil.ir',1,1,'33fd8165f99152f1c7d2fe84476d1ec669e8aa44','parsaparsi','ut','2012-02-20 20:27:32','default.png',2,-1,1,1,0,0,0,0),(990,'atiehnazari','c8ebad72cc2c6e634ce687ac7b3a441a01c0145a','atiehn6@gmail.com',1,1,'5444c083df50c44ae47788fc8415cd5f36fe4cb9','atieh nazari','tehran','2013-04-17 19:23:39','default.png',2,-1,1,1,0,0,0,0),(991,'morvasaati','8cdc35a248d3916de64ea3687130d193bd19a7e9','s_morva@yahoo.com',0,1,'91de5f6a3cdc12c3c8e8f0baac79824408abbc3d','morvasaati','TEHRAN','2012-02-20 14:36:44','default.png',2,-1,1,1,0,0,0,0),(992,'sahar shayan','1e0cb2b20914809ab320ed2df844d457dd16539a','sayesaye80@yahoo.com',0,1,'682f055be7ae8fc79bc85dd6b385affae87a2c00','sash','tehran','2012-02-20 19:43:49','default.png',2,-1,1,1,0,0,0,0),(993,'amirreza.one','e89f5414cf1fc742d5cab356e77ef882d6cd25d9','amirreza.one@gmail.com',0,1,'9827287411098b459aa5c6fec39140f4147a7fc6','Amirreza SH','UT','2012-02-20 14:38:51','default.png',2,-1,1,1,0,0,0,0),(994,'faeze.faghih','f3d65e426138b50a6897f49f3386fe6dea4cbb70','faeze.faghih@gmail.com',0,1,'4157bccd9efb8bb1bab943a0a72fce306b850410','faeze','univercity of tehran','2012-02-20 15:38:50','default.png',2,-1,1,1,0,0,0,0),(996,'8917021124','d1bd1a7e001d6316d5922bd19ddb73418ab52a34','asghari.omid71@gmail.com',1,1,'fca15cd48a1663c2ba5bd1963d128ecc96c9aa31','omid asghari','University of Kurdistan','2012-04-11 06:05:11','default.png',2,-1,1,1,0,0,0,0),(997,'h_taleghani','a66acd75c611f6703c1214c6398713ffafce7984','sh.taleghani@gmail.com',1,1,'df8dc218ca166be5b00cde8c8697d2ee846c466e','Hossein Taleghani','University of Tehran','2012-04-09 12:05:00','e8e84ec557d4209900907641a30db1b72dbf2d9f.jpg',2,-1,1,1,0,0,0,0),(998,'morteza farhang','75972b7712d3f6655ad6f1546385428d7aa762e6','mfarhang92@gmail.com',1,1,'0b58e449931cf09ad3b1e9c94b05a025b4bd60ce','mfa','MIT','2012-05-19 02:04:57','default.png',2,-1,1,1,0,0,0,0),(999,'MohsenMirzay','938bfa603616aae254e5c6bca1ebfcca2f0280a7','mirzay.mohsen@gmail.com',1,1,'050780d0311b92b0413418efd792b1599e13c472','MohsenMirzay','Kurdistan','0000-00-00 00:00:00','8d374823e4abe9a00ffa662a52c2e845bedb7136.jpg',2,-1,1,1,0,0,0,0),(1000,'iman','5ac1fdc6011e0fb81f8b21887e4bce766736cd4e','iman.nassiri@gmail.com',1,1,'21ec8de2b458c703e25368a918ab853d85f4c233','i-MaN','UT','2012-11-21 09:19:43','default.png',2,-1,1,1,0,0,0,0),(1001,'sani','e585b1463cc0a6328c1197eb05be7eacabd66b44','saene71@yahoo.com',1,1,'d16301b9beb3dabbe23110003a457c972517eb8e','Saina','Tehran','2012-05-21 04:34:20','default.png',2,-1,1,1,0,0,0,0),(1002,'farzaneh1','020111f8164ff0fc8488f6c23f3e4730d9cbfcdd','farzaneh_93@yahoo.com',1,1,'f4a1268023ee2466e716bf0a978b90ab74696f79','Farzaneh','UT-IT','2012-05-20 19:10:57','default.png',2,-1,1,1,0,0,0,0),(1003,'K.Razavi','393925c54bb3ea1fca5e7c56614defbb4cb373b5','razavi1371@gmail.com',1,1,'bb2b7358d50473c3711b98e2fe2e32d50f033643','K.Razavi','University of Tehran','2013-02-22 09:47:34','51101833d44386a6dc49e7c8936f482622ec05ce.jpg',2,3,1,1,0,0,0,0),(1014,'arezoo.h','2b6becca3e3f728a3535e71e2e03daffee9cac46','arezoo.heidary@hotmail.com',0,1,'8f3a83f8c93c442f599539088877d85edb347b33','arezoo','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1004,'mahfooz salehi','e66918ec2cce81f9e3c4adce05193ab72c5cbaee','salehi.mahfooz@gmail.com',1,1,'32f496572b65a24713a1a83fba1a3b7e0019038a','mahfooz','uok','2012-03-11 11:23:42','default.png',2,-1,1,1,0,0,0,0),(1005,'rahimee','53f87c74c5e5fa862b6b3232a6c099c3a5d1754e','yasaman.rahimee@gmail.com',1,1,'f8e7fe44729aa6ea2c2d14ad50a6391796cb422c','yasaman','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1006,'kewell1211','4bf26fd0cd39441f1fbe448a7f74cd075d63e34f','kewell1211@yahoo.cn',1,1,'51cafbe28f6940755d5440ea1676ddde795483af','kewell','guangzhou univeristy','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1007,'mohammadi.zana','8cf2f5a29fac5256aba052cb2503481eff99fadd','mohammadi.zana@gmail.com',1,1,'fcdb52cef76e9fb8836b5fbcec28e8c3577122e9','zana','kurdistan','2012-12-31 13:50:01','default.png',2,-1,1,1,0,0,0,0),(1008,'mohsen.zakeri','0c143c423e0b9a184a22cf04b6e72bb319904d83','mohsen_zakeree@yahoo.com',1,1,'b78ddb2dc7e51b6df39278741010ed765b635f4b','Mohsen','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1009,'nafi3','25557ecf5928efbbfc061590484c6e75e807e24d','khatereh_smsn@yahoo.com',0,1,'fd4ed338a3c1f9997216328539c1dff92df2fe06','nafi3','Tehran','2012-03-02 14:11:07','default.png',2,-1,1,1,0,0,0,0),(1010,'ashkan','3de18058c70bef71329398067a5881ed3b69d38b','ashkan_taleghani@yahoo.com',0,1,'f867b5e040b8678eaaa4d0929d48cad6a5db0fa2','ashkan','tehran','2012-03-25 15:10:54','default.png',2,-1,1,1,0,0,0,0),(1011,'ituok','29300b16698730fe8a7847b40f209f9dcdb1ec56','mirzay.mohsen@gmail.com',1,1,'710819d98aad337bf0be3467392423eadf283f69','it','uok','2012-04-29 10:36:41','9cbe0b23a8d352398d6e2aedd3598928fc31ed2e.jpg',2,-1,1,1,0,0,0,0),(1012,'elham soleymani','0a85638578b95d321d6cfe18265485206f89735a','elham.soleymani71@gmail.com',1,1,'9d01877e579690665f080d9929b3e06803d3f959','elham solemani','kordestan','2012-03-04 12:57:56','default.png',2,-1,1,1,0,0,0,0),(1013,'fgharaei','eff6d967cdd0a9b0689156cc5f3b69d9b81d571b','gharaeemanesh@gmail.com',1,1,'5cd9d0ce306c9e5b47d458a4a9de3dbfaa2b7cd1','fatemeh gharaei','university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1015,'mosiiiiii','80687d4a85927e15c63df2b365ea5e367312e8fe','vahid.mostofi@live.com',0,1,'8a6092b0f494f5c3cf58986c032b48424ebd640a','mosiiiiii','tehran university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1016,'vahid_mostofi','605046d4fcd6a3d7e56e0ed27782589ccfb4975e','vahid.mostofi@live.com',0,1,'9173b9b99a6f0bf59d1cece1d10deba3c3a1f83c','mosiiiiii','tehran university','2012-03-02 07:01:45','default.png',2,-1,1,1,0,0,0,0),(1017,'no.one','6cf84860619d71e388f3e9d7fb34633457507661','parsa.juventus@gmail.com',1,1,'08c2a21527e6f32d71c25fffc8a5b8b020a28ec4','Abbas Akbari_Parsa','University of Kurdistan','2012-12-22 20:42:38','898495324912b2970f52a97641d550dbc99e4589.jpg',2,1,1,1,0,0,0,0),(1018,'fz.masoudian','39f8bec3e780dd3e5b9a67f95e41f5f4227f0eba','fz.masoudian@gmail.com',1,1,'0e008d1f2a1e9cbcba261a5e82bec739e07ee704','faeze masoudian','tehran','2012-02-28 20:16:00','default.png',2,-1,1,1,0,0,0,0),(1019,'RinoOo','83d7463220cb6deaf368fc7050498b38b99c76b8','simin1785@googlemail.com',1,0,'c393c6fb833211231f69b54a282e7ef14f29043b','RinoOo','UT/Math','2013-04-20 13:44:33','6befa5be590663786aa24deba2c96a7e7f9c61d3.jpg',2,1,0,1,0,0,0,0),(1020,'Ali_Arghavan','a49295ebabab0e911d7628b010ae9c2c3d0419a8','mahdi1372.goli@gmail.com',0,1,'ef0abb45b4610254abe35cd40df01a63d23cf9b0','Birjand University - Team 1','Birjand University','2012-03-25 20:28:28','default.png',2,-1,1,1,0,0,0,0),(1021,'fzgharaei','8eb3e868cb3ea4c04bdc1fc925bca4da236b8538','gharaeemanesh@gmail.com',1,1,'08515a7f3de2b4c83667cf194878147296dfc05c','fatemeh zahra','university of tehran','2012-08-13 13:41:10','default.png',2,-1,1,1,0,0,0,0),(1051,'tinesh','798edd1e141824dbac398cd7d22604c4a6476873','tinman188@gmail.com',0,1,'0adc62308ebb6c807bf4339293c9ef9bf0b99605','Tinesh','Sri Venkateswara College Of Engineering','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1022,'acKCT','531e58087c6bc4390dfc5520ac40794cf7f01bfa','413817085@qq.com',1,1,'9cc9b18fbdf018a4004a090029294f7a87ee0750','xiaokai','Zhjnc Normal College','2012-03-03 08:53:57','default.png',2,-1,1,1,0,0,0,0),(1023,'Amissen','a62d4b68c47e50a70dd0186e36da29478a1ce3df','moosavi.amirhossein@gmail.com',0,1,'a2bea0dd19c346d02f3a992d7c4f1d357625e67b','Birjand University - Amissen','Birjand University','2012-03-07 10:36:08','default.png',2,1,1,1,0,0,0,0),(1024,'akbar','31039bc50b19871a360451515479d3be277947d6','bitaraf_son@yahoo.com',1,1,'1c7c96a1471ddba33ccb99005eb0304f251b429b','akbar','sajjad','2012-11-21 08:48:20','71a592ae15e82f170b2f6692f939b2e4b0271955.jpg',2,-1,1,1,0,0,0,0),(1025,'khosravi','87b9b4a230cc4983ae33a70ae3b367a60695f05c','hadi7tir@yahoo.com',1,1,'52c2a0d5056224d5d5367d1b4f5e367251dd0803','khosravi','sadjad','2012-10-14 12:00:28','default.png',2,-1,1,1,0,0,0,0),(1026,'lclan','e230ee57edc9da9600db8b6cfbe60dae58766bb4','sb710031@gmail.com',1,1,'9f26e986680d9c946d932f87c44070c9869e4b12','小藍','NCTU','2012-03-05 07:42:45','default.png',2,-1,1,1,0,0,0,0),(1027,'zaheer.h70','f6eb6d798a10fec03a5da16ddb12f5758d2a3c28','zaheer.h70@gmail.com',0,1,'21e149f6a861213333338db27810320b71bbfc87','zaheer hashemi nasab','kurdestan university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1028,'hldv','1bd3bb0462c2300f50914e709ca9aa9678eea34d','hldvco@gmail.com',1,1,'6ac3df542aa0beeb0f4b29973fbc694d8cd4fc66','hldv','University of Birjand','2012-03-06 13:17:43','c509d2bcf165922c3fb77cfb91ae9ba1609cc6d8.jpg',2,-1,1,1,0,0,0,0),(1029,'majidfathi69','23e3b741a67f5e16badaa1794befd7138e000e28','majidfathi69@gmail.com',1,1,'8880099d664b2b7f6023e68dd41cdb29529a63f1','majidfathi69','University of Birjand','2012-04-03 14:00:01','default.png',2,-1,1,1,0,0,0,0),(1030,'ali.jafari','001d97deecfac359a048f5f27e9bce48164dd9a5','ali.jafari@yahoo.com',1,1,'9c87eaf07c50efc3d9bb9aa058a16adb4ede5cf7','Ali Gholamjafari','Tehran University','2012-06-26 18:08:02','default.png',2,-1,1,1,0,0,0,0),(1031,'benjaminosmani','058230aba7e34cdc8662199906cdb9b5b99c14e0','osmani.benjamin@gmail.com',1,1,'55ef1403121b77f75a1fde3b9d3c6bed700f8bb0','Benjamin','University Of Birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1032,'hoseng','b1d766b5f659ed48c52cbd85cfe03e6e689b9362','hshahsahebi@hotmail.com',1,1,'e8ff27ad69f221d70c91420ee6fc3832bb8fc7c1','hossein','The University of Birjand','2012-03-11 18:00:50','default.png',2,-1,1,1,0,0,0,0),(1033,'Brainstormers','77ebc16024d76d37434f3b37b9f32c65636c1e3c','bu.brainstormers@gmail.com',0,1,'46064b7a289f413501cb6544b33404ef1aa90423','Brainstormers','Birjand University','2012-03-07 10:56:41','default.png',2,-1,1,1,0,0,0,0),(1034,'reza10kh','ece7f604e7dc2866ef5d0cda1c9977fb0323dfd3','reza.kholusy@yahoo.com',1,1,'35d347a327634cc6c3dd18bdad1d46c934a9250f','Reza','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1035,'1pouya','b7b877fdec5ea760892fdbe3981abb9c146ab8f2','me@1pouya.com',1,1,'f184e9141fb1d4c9ecb285cda7b4403db97f29eb','Vento3600','Razi University','2012-05-07 09:46:20','fe2c76ee897b7cda4e14b48bb3bc6459009eb999.jpg',2,-1,1,1,0,0,0,0),(1036,'Mersad','92dd922de2a2b3c3403da685eb38c0ae0f8cf7f4','husseinshirvani@gmail.com',1,1,'8a34a518398e03562dc29ae4512aaf07b6132a33','Mersad','Birjand University','2012-03-25 09:26:15','default.png',2,-1,1,1,0,0,0,0),(1037,'leolin','566fcdc3c533c375b7f86f89dd4f174337eb3696','787659058@qq.com',1,1,'547acbcf9db79658ebf086c7b1d25de3ee7d9d76','leolin','scnu','2012-03-06 04:01:23','default.png',2,-1,1,1,0,0,0,0),(1038,'Sepid','0a7fd3e4d1f9a2aa2b4ddc79abcf010bd0505cba','sepid014@gmail.com',1,1,'7a3b64b632a7041e92881bb9267124793487e47a','Sepid','aut','2012-12-05 18:05:06','default.png',2,-1,1,1,0,0,0,0),(1039,'maziar','59d21e29089d2e5b9bd36a1e17cd75e4bb6b2ff8','maziarpashaie8717050101@gmail.com',1,1,'9a2e1608d7372c4a952435cf4201c46f802bbb3c','maziar','university of kurdistan','2012-03-06 18:52:35','default.png',2,-1,1,1,0,0,0,0),(1040,'hamid hoseini','3f3b46744d4e56cca0a9130b4f2ece1242901bfa','hamid.hoseini70@gmail.com',0,1,'2adb40274c89942b85957be62f5738ff94b533db','hamid','uok','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1041,'yash92','0e7c934c3bab7d04a4d1793d1f1aa29922e0d073','aidin71rs@gmail.com',1,1,'4d1e85e7afbe717bed1a03ce69642adf5ec2c3d4','Yashar92','Kurdistan university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1042,'act-acm','11e6bbeaeb540fc7db346ed76b362660fb6e7a00','mahdi1372.goli@gmail.com',0,1,'6f8721afe36d3a67f857818895a72dc89a21d875','Team_9 of birjand university','university of birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1043,'Muhammed','ac07cbff7a2b56d73cede8a475dbc641dab3ef51','muhammed.alavi@yahoo.com',0,1,'dae5a608c9fddd519bb849ac9609a56fdcaf35d4','Muhammed','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1044,'golabi','3859d36f1642fed5197dceaa420ca7b0a75af3b0','zahediemail@gmail.com',0,1,'ac69aa17f256584da86b6285a5b80e6ccbba315e','e30','shahid bahonar kerman','2012-06-01 05:01:46','f183693da7b869274a0a4541408adcc3ae34147f.jpg',2,-1,0,1,0,0,0,0),(1045,'mrmq','a7c602220b42791e972302d1f97b82787ad5674b','mohamadreza_mq@yahoo.com',0,1,'37a890a31d180a3d7fac4dfb9b76bf234bd7912a','mohamadreza','sadjad','2012-03-10 09:39:52','default.png',2,-1,1,1,0,0,0,0),(1046,'senator','1776f06bbb95b84231d09cbde9fcf1afd1614ab2','am.tavakoli1992@gmail.com',1,1,'79f08c53449f3ae751ddad5a16de9d552b89fcd6','senator(ghazmars)','sadjad','2012-12-08 11:53:47','3992c273e96f10ccbb241553c9c1230813920a20.jpg',2,-1,1,1,0,0,0,0),(1047,'saminsafa','fd4807f62708466c5a377f54fc9a1dd82bacecb2','saminsafa@yahoo.com',0,1,'a12825030b4b72eb378706cb502de6b302c38949','saminsafa@yahoo.com','sadjad un','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1048,'mjbadiei','828a45ca7513bfc91ce97740915524852eac93a1','m.j.badiee@gmail.com',1,1,'2af1b42070638105c1f9770652ae41e39e37e1b7','mj','','2012-12-09 19:11:13','15a35d223b8b5d00ceab3971b011467052393321.jpg',2,1,1,1,0,0,0,0),(1049,'abbas','9e7aa89b9e8dc912f83f9b91890020c71440f35d','sah.parastoo@gmail.com',1,1,'56df676196fc474022eda7ed100f9276df1f9a6a','abbas','sadjad','2012-03-08 09:16:27','default.png',2,-1,1,1,0,0,0,0),(1050,'yareasemani','c3dbaef7b063ccebfcf80d1743dbf1b8e95e5b17','saeed_h369@yahoo.com',0,1,'c3c947333f1c445ed22c1e5ab6ae749bd5bcb9cb','saeed','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1052,'Behrooz','c91181d616d00fcb97afc0dbdbf8ea4f1cffbead','beh_om@yahoo.com',0,1,'b843427eef8bf35f77bcec640d12d42b6fc9169d','Behrooz','University of Tehran','2012-03-10 20:45:15','default.png',2,-1,1,1,0,0,0,0),(1053,'admin','12046431a63b2794d1f1d18623af82ad0c566fb7','amir.s@acm.org',1,1,'7cf106df30a1d2e87855fbf825edec3a1d5689cd','admin','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1054,'fzmasoudian','ff00da8ad0c0b79ae127849168cd6e230175dc8d','fz.masoudian@gmail.com',1,1,'f4fadb8fc557e44b62c0894f5523d5f219d5dbe3','faeze','tehran','2012-04-25 18:20:19','default.png',2,-1,1,1,0,0,0,0),(1100,'maziar2','2b6e17b72dbb57846adbdc536c925ba384631fdf','maziarpashaie8717050101@gmail.com',0,1,'563b16d9f3c49ee6e9fa44c42d59ab9f7a3ed254','maziar2','university of kurdistan','2012-03-20 09:01:39','default.png',2,-1,1,1,0,0,0,0),(1101,'freidoony','f33d187396282fe67952db3b7a9d6b5ec7d55a92','r.freidoony@gmail.com',0,1,'fcf34917a8fe1d850c19c38cb162c8b5ca6f2f3a','freidoony','kerman bahonar','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1102,'Efair','8e04e086d16191d305506bda43af501879816fe2','Ehsan1268@gmail.com',1,1,'d6029cdf5c0ce6420009b385c15189f5519c90b7','Ehsan Ehsani','MUST','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1103,'doc420836131','3746035e916ff95a7e3dceabd8d5e09b81807078','420836131@qq.com',0,1,'9e21feac64bb90f7e25dde99889c78733107a4b4','Doc','FDU University','2012-03-13 10:41:22','default.png',2,-1,1,1,0,0,0,0),(1104,'apple110','047a7fd889da1ebe010ca448fdcbce473e2256ce','toxindoom@yahoo.com',1,1,'de18cce06a785b4ecede1f15fb31b4138762ddc6','MS','UT','2012-03-14 21:13:33','default.png',2,-1,1,1,0,0,0,0),(1105,'mirzaei.mahdi','4311bfb395e1ec4ddb90aff05838c14bb48787f2','mirzaei.mahdi@gmail.com',1,1,'31443a44173a85a651de528ef70b1741dbf2d9ba','mahdi','quchan','2013-05-21 19:02:37','default.png',2,-1,1,1,0,0,0,0),(1106,'aaaaaaa','64591b21dff988bb7ac174e3000833a111652e24','mehrdad.rap81@gmail.com',0,1,'3246456cbda99a06903fd188b719871b4e48b77e','sara','tabriz','2012-03-26 19:55:30','default.png',2,-1,1,1,0,0,0,0),(1107,'sspa','9230b2936524d893168eac63fa97a25e2f64c4cb','1397677607@qq.com',0,1,'57d2ce016dfff15a3c29dc97458d17c028c023a9','sspa','dlut','2012-03-18 05:20:32','default.png',2,-1,1,1,0,0,0,0),(1108,'reza99','ee4d728e1ab1d8467d8cbaab561ed4de59cf0bf7','reza@gmail.com',0,1,'2c9429c7f1e287925d56d2507a8898a990092761','reza','ferdosi','2012-03-23 06:32:51','default.png',2,-1,1,1,0,0,0,0),(1109,'GadFly','e1316a482b7122dd686ce5e61de9805d21ae4654','hamedr27@yahoo.com',0,1,'7a07266709a7a9482baf487dcf42abdf9bc66f84','hamed','tehran university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1110,'mohammad','31d17c610f18420c38f7534f0f1c85b350fbac48','alireza@gmail.com',0,1,'f24946995159c8ab90db3b45142e2b2f3c86cb78','ali','University of Tehran','2012-03-20 00:49:29','default.png',2,-1,1,1,0,0,0,0),(1111,'m_gh408','5f91390b1adc2dc4525cb96abf67f31dc448e551','mgh408@yahoo.com',1,1,'34b0e56e13ab9aaae42d4339dc9206f9359caed7','somebodysomewhere','tju','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1112,'SeMeKh','785538f3e20cf34f216af1eb860087c0d6998ec8','kholdi.mehran@gmail.com',1,1,'c3461a9eb8983f3a8233394c50abf76791e84f59','SeMeKh','Sharif University of Technology','2012-09-14 21:25:49','default.png',2,1,0,1,0,0,0,0),(1113,'fortest','181b2dcacaefacc32a5269b490572e71c9593fa6','ceuok.ir@gmail.com',0,1,'88538f8a1d6813d8585c6ed3788c45c4c31d3d0c','fortest','none','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1114,'homaei','98f6a99fc571e2fabd8e8fe594a1c811c2ce9080','homaee@gmail.com',1,1,'641402715ecd10e9aa52648acb5fa7163d8eea60','Ehsan,Homaei','UAST','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1115,'huicpc0913','b0294c30aa5fdb2ff00cfba31b75c307b82218aa','2262816477@qq.com',1,1,'613fb409d6bb23b959e6ae8c878e07c83c26e220','huicpc0913','HNU','2012-03-30 15:22:14','default.png',2,-1,1,1,0,0,0,0),(1116,'soltanian89','0d41b9a7b9ec3cd838f83cc0af75f83f32c65fbe','soltanian89@gmail.com',1,1,'a8e7cc6770b9fd67becc5cceff93046fa6428b98','soltanian','tabriz','2012-05-12 18:48:32','default.png',2,-1,1,1,0,0,0,0),(1117,'act1','a84ed81f5bcc58cf501b456fd68a95aafde8e788','masood.seyrafi@gmail.com',0,1,'eaa1cafa8986811223c0e789ea0e6979193d777c','act1','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1118,'ehsan','cd7716e578e18431b92a1e3d72338483232725bf','ehn.khosravi@gmail.com',1,1,'9105acad905298003deeac521b0bef1650fc5a52','ekhekh','tehran','2012-05-06 22:27:07','default.png',2,-1,1,1,0,0,0,0),(1119,'cjw01111026','a1287260bb910d72758f4887eb77af9acfcb9ec8','cjw01111026@yahoo.com.cn',1,1,'4600442999d0966df7c3e761ad0de3753afd67b1','shirley','zstu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1120,'shahdza','c546c3410f5bcc5b4952b158585ff23b44c89098','250411887@qq.com',1,1,'c5a4fab45ba29d8e182865d2536cd1f97c012cc6','夏天的风','HDU','2012-04-02 14:52:16','default.png',2,-1,1,1,0,0,0,0),(1121,'stczhc','27f7bf3034ee98a0f2201e74c7dc765519cf9da5','stczhc@126.com',1,1,'aca0883730459c520b4f9d3edd18d32fb16b754a','stczhc','ZZUN','2012-04-03 03:15:06','default.png',2,-1,1,1,0,0,0,0),(1122,'m-d75','807cc682147827d5881002dfa2db10c977042ffa','mohammaddara75@yahoo.com',1,1,'f3a7add79067ff1c37ddbba1771c645c5d4dad30','mdhackera','sampad','2012-04-03 17:00:02','default.png',2,-1,1,1,0,0,0,0),(1123,'abdolrafe','38cb5905361d9736752fb8a23c123c331a755f84','Abdolrafe.Aazami@yahoo.com',0,1,'604e53bdb4ef341b83d8986ab0ef0fbe37143f0b','Abdolrafe','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1124,'zakhavan','a057dc904f63ced57e96cabae454de121ce48a69','blackgirl_888@yahoo.com',0,1,'f43d1ebb7e9d7d5d12a6f9bc5b5b63c3ce9c9be8','zeinab','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1125,'Mnazmara','ec0c157066f880c0fa192eacbcc7cebd56548edc','Milad.nazmara@gmail.com',0,1,'9aa93c2a0b09e2f4a2bbeb128179fbfd7621216b','Milad','Sadjad','2012-04-07 07:57:58','default.png',2,-1,1,1,0,0,0,0),(1126,'AmirSabouri','c0bb833b3199f6116f3bc9a5f4adeb5365f40ab5','amir.sabouri@gmail.com',1,1,'1f0151b6162a535085b3953958beae1db7a10cde','amir','Sajad','2012-04-07 08:00:38','default.png',2,-1,1,1,0,0,0,0),(1127,'aminrd','8efad2ef1c8784e589bdc6ec6fbe2d96abe9486d','amin_rad_1371@yahoo.com',1,1,'688597ecc344f4968edd9d7ce01c8ad4f922cf31','Amin','Sharif U.T.','2013-05-30 07:56:06','534da330433c547815924af87ab811b15d325782.jpg',2,1,1,1,0,0,0,0),(1128,'masgari','e8f87281b06abbaaf261a3116a61af9155be34d2','merlion380@gmail.com',1,1,'d46a453436695d732295b9022a26379cc4a7f5ae','Android 4','Sharif University Of Technology','2013-03-09 16:32:35','3a1fb0f4834153030d934ab6b3bb01826568baac.jpg',2,-1,1,1,0,0,0,0),(1129,'123456','2ac6b531cd70f9257341d50da3ef6d8a24f5dabb','123456@qq.cn',0,1,'b7aac92e3ba5bf5d523c83b6c95b4945c783d205','123456','123456','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1130,'987654321','d5277d6fb960e4fa29c50c7324301079ffe37d59','robahian@gmail.com',1,1,'2c27da70dcab99d48acde63776e7009c83f35f17',':D:P',':P:D','2012-10-23 08:07:06','default.png',2,-1,1,1,0,0,0,0),(1131,'Yular','2bb4f0feb27c9478f440b559378559bc01868e02','1062969706@qq.com',1,1,'bc122b25f2677c5f13831c47a762da91b4c8b5b7','XCCCC','SCAU','2012-04-13 15:49:33','default.png',2,-1,1,1,0,0,0,0),(1132,'fal11','cdca7aa8f3ed810b2c9da6f47ca0483a20af8408','fahime.azamlotfi@gmail.com',1,1,'4e93db7551fea26910fecf6657d5b8441ef9232a','fal1','quchan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1133,'sese','2e010a6113aa4a5bde97140b9e4ae69843fbc809','mirinda_sb@yahoo.com',1,1,'7da27c0cb315727f71b7fb6e3bdeb41fa42b7e7b','Setareh','Tehran','2013-04-04 10:07:51','default.png',2,-1,0,1,0,0,0,0),(1134,'8912037','22eba36dd6e4884a9e42d5d8d621b8d3588ab75e','hr_oy@yahoo.com',1,1,'ff6b234496cf0f75cdcedde84682eab557e5ea57','arefe rezayi','abrar university','2012-04-13 16:16:30','default.png',2,-1,1,1,0,0,0,0),(1135,'m.jalilian','1a0836d9e4d02c624ae2e25076e8f884f8aa7c4a','m.jalilian@iran.ir',1,1,'9edd0dcaffae329409d8dd2aaef1f44bcf68a794','MRAO','UOK','2012-05-02 12:33:28','default.png',2,-1,1,1,0,0,0,0),(1136,'khalifa','04828142ad689464fa44b7a04e5139909814667e','saadon.kh@gmail.com',0,1,'565aa1947e8020b1c755dbf9c6921ec622cf0b27','khalifa','university of kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1137,'saadon25','53e94121e7b47e15ab80f3c6b271fb4558667ca3','saadon.kh@gmail.com',0,1,'7e770e6c812264480da99113088c3bae1bbceee2','saadon','university of kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1138,'Sir.Gozal','1d6634e98e6af5e9f31c5a18dbcda1d768992fd0','saeedabedi72@gmail.com',1,1,'08480a695eafb7934a1b66540958156535a7380c','Sir_Gozal','Sharif','2012-12-27 07:52:51','default.png',2,-1,1,1,0,0,0,0),(1139,'SirGozal','a6d6368faee4a8499a6e19d9f5879c00e487fa0c','saeedabedi72@gmail.com',0,1,'57b11ac286a3a07267b8749bd00ca56635a40d6e','Sir_Gozal','Sharif','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1140,'m.jalilian.it','b1e1ff6a6668d8698957cbcb3f179c11397b1e0b','moghadasi.romina@yahoo.com',0,1,'cfe47b0661857dab87b3ee38e09c126afb7a5c85','masood','UOK','2012-04-24 05:19:19','default.png',2,-1,1,1,0,0,0,0),(1141,'Jamshid Mozafari','b94ecca02d886539ceffb5dd1782046434b60d68','Jamshid.Mozafari@hotmail.com',0,1,'cb287bea0f34e3ac77bd0d838c4d0a23d9f79414','Jamshid','Kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1142,'Jamshid','7f2a6fc82fa210c2a11fb5aa5cb87daed84d8cf1','jamshid.mozafari@hotmail.com',1,1,'3269481f26c9e59c5813b89cf7c5a641b3b37795','Jamshid','Kurdistan','2013-05-05 07:34:18','default.png',2,-1,1,1,0,0,0,0),(1143,'Niasar','9cf3c0073bd88ec9b87ae0420fece1350ac16a7b','soltani.hasti@live.com',0,1,'5ad13226274faaff4c5e88e889da5586dfe8c5c8','Hasti','University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1144,'meghda.khosravi','2991cc41168f287ea74905c280cd250f6b04a6a1','m.khosraviy2000@gmail.com',1,1,'e20d566e13ebb99ef3f6fd8d984aa25369314502','meghdad.khosravi','uneversity of kurdestan','2012-05-01 04:48:23','default.png',2,-1,1,1,0,0,0,0),(1145,'s.khalifa','c030211ada10bad0b5b9c07abcc87133990f2e44','saadon.kh@gmail.com',1,1,'e58d47c6fc93c7a58764e3a1121748e1c9cfab6d','saadon','university of kurdistan','2013-02-26 14:16:23','default.png',2,-1,1,1,0,0,0,0),(1146,'Hamed1','bd437a43b0e31eba43505efe27db5dba780157a1','hmd.amanpour@yahoo.com',1,1,'1bebe5586c6522f3ded4f5847bb0b8b7b4334bc8','Hamed','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1147,'jicote','39b3480d55762fe1b547abaced2ec4d484ea6e69','odavalos@up.edu.mx',1,1,'6aae292ca1298cd80d05f9a3f1dcb5ea28e3e0bd','Jicote Aguamielero','NONE','2012-04-22 22:37:50','default.png',2,-1,1,1,0,0,0,0),(1148,'Taher Javanmiri','b90c90611501b5e8d56bdd3054b890f9713d3855','omid.omidi200@yahoo.com',1,1,'8848faacfbadeadf06ea819a0f500dbb022d45bd','Taher','Kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1149,'taherjavanmiri','6f26c6f92cf5551ec468656af04f8e81e6975aad','omid.omidi200@yahoo.com',1,1,'b203f9ee8c7636c8bef71859d6ed9e1232945d95','taher','kurdestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1150,'mohammad obaidi','caeffe26d13092db6c3e9821509a67814f73405f','mohammad.obaidi1992@gmail.com',1,1,'2344e76c5dc70a8e8570c3af239e92b297320f4b','mohammad obaidi','kurdestan','2012-04-23 07:12:43','default.png',2,-1,1,1,0,0,0,0),(1151,'Taher Javanmiri2','2205c16d93d078eb0f62f837fa72a89ee8a5654f','shtaher.javanmiri2@gmail.com',1,1,'f336c456562b66775a25b5dbf4643b425e1dd9d2','taher','kurdestan','2012-04-23 10:52:52','default.png',2,-1,1,1,0,0,0,0),(1152,'kamyarh','449a0413becc6cf317619fbd3e208be402eeaaa2','kamyar.heidari1992@gmail.com',1,1,'171594d804885e732d3ab6b2f4fc6255129af978','kamyar heidari','kurdestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1153,'evandrix','1e00208b485102be5f522627ec37596fcfcaca24','evandrix@gmail.com',1,1,'8b007281b023b2db33d26d8710404ef8c8a3ae26','evandrix','IC','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1154,'hassan@sanandaj','01d325d87184aa7f8ee1d8884bc6bc2c0b1edadc','hassan.felegari@gmail.com',1,1,'85a2d98791caa60bb95634031cc4502803678be8','hassan felegari','University of Kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1155,'ssu2','25b43a12b611a7b3bc41fb721567223fc8c886a5','e-maxx@inbox.ru',1,1,'58f82f6d473dc5d0f81ce9c2d6889484a8415867','ssu2','-','2012-04-26 12:03:50','default.png',2,-1,1,1,0,0,0,0),(1156,'warchief','e876365cb92bbbbf57860fea3fff7ddda42a063d','aaaaaaaaaaaaa@aaaassssdddfffvvv.aaaaaa',0,1,'df8e3c6fcd325379a7341b043f60a3fd64f6136b','warchief','','2012-05-28 19:32:35','default.png',2,-1,0,1,0,0,0,0),(1157,'mostafa1991','2b0a3f2dee46aa57dea1e03739c917f15c599077','h.topdog@yahoo.com',1,1,'c95f4d773cd4c6c1db42e0edf3cb4bf845c05dde','jackleg','IT/sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1158,'momo','a201133ca02598d9b68342b16141bb5c8fe995ef','mirzay.mohsen@gmail.com',1,1,'bf61de0b603efda04e7ea1f9a9b33b1e08168fe3','MoMo','Kurdistan','2012-04-29 10:23:31','c0e857ce86fd87592f269bfc9670df56aace694c.jpg',2,-1,1,1,0,0,0,0),(1159,'elham soleymani71','3f6741de713ae55d169521a0545fb7f09c5d9b7a','elham.soleymani71@gmail.com',0,1,'7105be2d28a405862f9e651892829b32372ced4a','elham','kordstan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1160,'soleymani','bf68d7b9872c7716ff21efe9b145193941fa134a','elham.soleymani71@gmail.com',1,1,'e2bd1d447dbee120824dc7f4414ab13334f4bc16','eslo','kordstan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1161,'erfan','3ebfc343183365dce791490d4e37a3357d7d1e32','erfandriver@gmail.com',0,1,'13e028ab7d3e771972fa21db1e9297357fe320d8','ErfanRahmani','university of kordestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1162,'3426','187c57d1895af4908067b4916a11d651edf97856','bahar.mehrabi@gmail.com',1,1,'9ffc0d0357b333920fd5f6644ba51e6c9ade3bf6','bahar mehrabi','tehran uni','0000-00-00 00:00:00','17bb0252b4ed3131c0045fb24b45495fdc13cf10.jpg',2,-1,1,1,0,0,0,0),(1163,'aliv268','901061bd2ecd981f4d58ab9e9e7e988ddebbf8a2','ali.v268@gmail.com',1,1,'0ee04c819c69f595de3c9c8f2507bb06c48fd26b','aliv268','sadjad','2012-12-20 13:37:02','default.png',2,1,1,1,0,0,0,0),(1164,'King Of IT','44121956005d6b2ff3439f6759dab5343013f0f7','zamzam_f12@yahoo.com',0,1,'d7f6a01c608b34847cc3dd0f96e99935f961d0ee','mohammad','Kordestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1165,'pouya06','3499e6ff295c2b6cb6e7c71a11f71c5a0adc89e3','pouyadarabi@yahoo.com',1,1,'8aa6fde127975734c629e2c1c78e9191fecd2956','pouya','Ustmb','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1166,'sama','9667af9d84cef5a0dae05ef835c130f3cf07f6f0','samane.jamshidi90@yahoo.com',1,1,'d942c74367594c19f0ce8b11f7b24f6c6f3dffce','mehdi','dabirstan','2012-05-10 22:17:41','default.png',2,-1,1,1,0,0,0,0),(1167,'mansoor302','832dae39ffc5a88c577fac6a382cfa78ebe19e8c','mansoor302@gmail.com',1,1,'4fe12456b4842b81bc189cf6491c91f81c94f05a','mansoor302','but','2012-05-10 22:19:49','default.png',2,-1,1,1,0,0,0,0),(1168,'matrix','c575064df2c999deafd317f7eefa780d6b128d44','akgandali2010@yahoo.com',1,0,'59264d6776628c53fe255a6b32bc7bd3fdb67268','matrix','Allame Helli High School','2012-12-05 15:23:55','default.png',2,1,0,1,0,0,0,0),(1169,'tengtonghann','43f025e4ea5626d9fb32ab9f73f8f6695eef688e','tengtonghann@gmail.com',0,1,'8f6cac89e68f09525e2cd5dc9c31a6e1e188a9df','Teng Tonghann','Mahasarakham','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1170,'hasanhallaj','fc17b72c32d96a99b709bebb8546473bd10e0859','hasanhallaj@yahoo.com',1,1,'2a0d1162fea09fdcaa266d8f06fca1e6636567c3','hasan','birjand','2012-05-13 04:26:36','default.png',2,-1,1,1,0,0,0,0),(1171,'llc_7400','6ff4dafc03a7d7b6815e4cab8ebcca679837d235','cs10bllc@163.com',1,1,'447a6257364db0d2fd8a1e6210ce7278d06bbea1','llc_7400','sc','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1172,'cct404','7f1a0a71dbb1f77ed57cba8eabf5d26a88b13334','forever1234@foxmail.com',1,1,'7ebc13125ab6428aa38533932c8b4cb391f05964','404404040','scnu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1173,'ali mahzounieh','4405d7577d5c3349ed5161f13c2c64ffa776f09b','mahzoon3@gmail.com',1,1,'66ec73ce9f42f832745184e4e1e6024dd5e4b794','ali mahzounieh','university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1174,'momoyom','5d0d0dbfb67875a0d6dd1be86d20279d4e5257b8','mehdi_mehri70@yahoo.com',1,1,'b987c7b8c1923e30d5fb48d6374c4aee34507562','momoyom','dsb','2013-04-18 22:10:17','default.png',2,-1,1,1,0,0,0,0),(1175,'altinay jorjani','3e302c5f3c8f82e8112f6b2b459e3660cf5cd554','altinayjorjani@yahoo.com',1,1,'f10944c152c584d3ee393d29200ef1886938c7c3','altinay','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1176,'ferinefast','ab2afd59702efdd9d863da5e561f9d86c796e210','gg.amir.gg@gmail.com',1,1,'d825eaabdb262d9e096534fff7b2509c3a3389e8','ferinefast','MIT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1177,'r_arias2','4000dd868bd34b8570f8ab47c7cca894c0d2c6c2','rodrigo.arias.rojas@gmail.com',1,1,'e5f22d4d96e9a8097c6669eb8d0953016e9181d1','rarias','Univerity','2012-05-21 16:39:55','default.png',2,-1,1,1,0,0,0,0),(1178,'nekata01','a54e281135da2c239dbe82c48cc043b6424c7298','anahitagah@yahoo.com',1,1,'cbec07716d75e4dee7188b577156e1a6d7ff28ff','j.mehdipour','','2013-01-27 15:08:12','default.png',2,1,0,1,0,0,0,0),(1179,'yekpouya','bcae8073f51e9910ee95adf94492307e2f4a9b3a','yekpouya@gmail.com',1,1,'c5e690e8676a3e4957bd0bd22af4ce6d4661a8dc','Name Me yekPouya','Razi University','2012-05-24 07:27:24','33f126718c070a3735282d4080ef69a04bfa09fb.jpg',2,1,1,1,0,0,0,0),(1180,'patch:D','ea72e0b5f859a1df91c57df3a4eeba6b02772c0c','m.khalili_81@yahoo.com',0,1,'a61666d20cf486e3d75818f8f90257e65107040a','patch:D','','2012-05-25 17:58:31','default.png',2,-1,1,1,0,0,0,0),(1181,'LloydBlv','5512a9859d1325b0de725beaf7e1598a601ca4e2','ye99@yahoo.com',1,1,'a679a45b922baf80452ff6bcde6ef691cfeb9eb1','$C0RP!ON','UT','2012-05-25 17:12:51','default.png',2,-1,1,1,0,0,0,0),(1182,'faz2012','ac16a26c78a2c25620f2cb8101c3712dd357cc45','atefehmohib@yahoo.com',0,1,'c406d8e4531e87679f88b67efd936346a79f3e9e','faz2012','tehran','2012-05-25 17:37:56','default.png',2,-1,1,1,0,0,0,0),(1183,'treeace','22e147776604c943d85b429cf5e20a7e483b063c','mfthepop@yahoo.com',1,1,'6fd708f09eba3d8e7701972fa28ce5a3ae11fdd6','TRE ACE','THERAN','2012-12-29 11:58:05','default.png',2,-1,1,1,0,0,0,0),(1184,'mhsa','f7152dab9aec018f2fc7d17b615dca8fe6a74165','maaaaaa@yahoo.com',0,1,'c2573ca0615fab43ef8e4f579a7731f70c26a79b','mhsa','','2012-05-25 14:09:48','default.png',2,-1,1,1,0,0,0,0),(1185,'fmoo','b24c07be5bf27df5e3bf68008516219b49509d4d','m_sarina_70@yahoo.com',0,1,'0839c09d62467ba8edff22ca2f2831a904f27023','fmoo','ut','2012-05-25 17:40:14','default.png',2,-1,1,1,0,0,0,0),(1186,'alan','fb1db3777b49fbdb274d50407aee6752da79df20','alan21m@yahoo.com',1,1,'55b8f2fea59a4fc2547e5665bbda3d24efad4ebc','alan','university of tehran','2012-11-11 22:57:12','default.png',2,-1,1,1,0,0,0,0),(1187,'fubar','1121a6ad8cbbc8c926b895a6d2d1bc4cf01f3abc','mmonavvarian@gmail.com',0,1,'12cd12ada6c8d322ee01a1250d5a5a0a92b4e5c5','Fubar','ut','2012-05-25 17:50:16','default.png',2,-1,1,1,0,0,0,0),(1188,'Bloody','c7eb32845c4e7bdda1ec431dc7d92652eac49504','AMADIBI@GMAIL.COM',0,1,'ecf5430d50279c1edc61f3fdb3b7aa46735e7183','Joker','UT','2012-05-25 17:16:29','default.png',2,-1,1,1,0,0,0,0),(1189,'pfive','10380357287838a28a3d1d956c9f21a563432d49','mohammad.cess@gmail.com',0,1,'f71d93cba551c1d56bc1826dcdb270f50c984f3b','&quot;5 + 1&quot;','tehran','2012-05-25 17:35:23','default.png',2,-1,1,1,0,0,0,0),(1190,'mbmoh','3e648250c7dd06201aac56433e49539adaa324b0','mb.motahari@gmail.com',0,1,'a4e6b224ef2a68e808c1c5550866e3af5ebcb1fd','MBmoh','UT','2012-05-25 17:58:22','default.png',2,-1,1,1,0,0,0,0),(1191,'hojjat','445198f4eab77d6d6e6fa18a5e63ba06c332c142','hojjatzamani@ut.ac.ir',1,1,'425540b38e8691b2ed4ec8027d417358a8c443c3','Saleh','university of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1192,'Daredevil','738244e3f2dae8399acae9655a31e9d1e81b2132','y.daredevil@yahoo.com',1,1,'58221cc58a49d24a24881a3478ae7f0f37a04f6f','Daredevil','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1193,'Godfather','7c0c31b89ca33e2e013a3909635e847fd0240c7e','hamedr27@yahoo.com',0,1,'4901edfb105db12cb1dedb6eda512064c9d0df14','hamed','tehran university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1194,'mhsankar','20cf4a913b3ef539011dc149c599c4757aaf1363','mohammadhadi.sankar@gmail.com',1,1,'0baa90c74d134347ae9ec325177b4083e7ac090e','hadi','Islamic Azad University of Mashhad','2012-05-26 04:14:34','default.png',2,-1,1,1,0,0,0,0),(1195,'esxzawq','9521f69c705596090637eba84856f9391594aac7','Ehsanrocket7@yahoo.com',1,1,'6b01ff64341645f736b5d4b41d34971c845e15df','Ehsan','sadjad','2013-06-02 08:41:14','default.png',2,-1,1,1,0,0,0,0),(1196,'Wirus14','3f0451186c35ac304eaeca517f12c5d71713a294','k1.kiwi@yahoo.com',1,1,'3cc0648dc9af7265fdb285424a02da2a457e91b2','Wirus14','','2012-05-27 06:55:09','default.png',2,-1,1,1,0,0,0,0),(1197,'070101070260','52c6f622dcfdaf6da64740efa07fe6d618b9167a','fanzhengchen234@sina.com',1,1,'e3dbb1f7386ead7e8d284fb6b21ab401f83899d2','Mark','zstu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1198,'hnajafvand','5ecc42e3a4c5eeccfc80c47aa00a67fdb9dbaae7','h.najafvand@ut.ac.ir',1,1,'62870471636f5da62c868494b0a2c1517f3c4b0f','Hamid Na','University of Tehran','2012-08-23 21:46:06','default.png',2,-1,1,1,0,0,0,0),(1199,'jh000n','9d96571285d5ae29e5556b549eb9b62b15b7de45','jbjimenez@utp.edu.co',1,1,'8bbc4a9520968c906dbbbaee193e1403ba789ca0','jh000n','UTP','2012-06-02 04:44:54','default.png',2,-1,1,1,0,0,0,0),(1200,'rkrains2','d1d21a9e9b2a0b4fb7d2e5e3914fe14eab3af6e4','reza.kahani@gmail.com',1,1,'998853373810a502f12d99a7eabb20894b28081b','reza.k','Quchan Institute Of Technology','2013-02-26 14:14:28','a34e17941220b1358969a0bc8751652229117e03.jpg',2,1,1,1,0,0,0,0),(1201,'mansoor.nazari','966df0c2e493e3c895afcd500744f24293b022f5','mansoor302@yahoo.com',1,1,'95e3bdcbec33cbdcd3efd9475f31b692cbfc455a','mansoor','Birjand University of technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1202,'team','457d01cf40ce2c74960d7aad75dd232a6e7587fc','salambluesky@yahoo.com',1,1,'dd08e9f10f9f073a361b8cd27a02b7ae63eb3ecd','Konjkavha','Shahed University','2012-08-16 09:53:16','default.png',2,-1,0,1,0,0,0,0),(1203,'kennethsnow','e75bc2d2238ff915b9df835371ebd19038ee6e84','madokamylove@gmail.com',1,1,'b9e48e1dea9a6569794a9b800ecde965080761c9','kennethsnow','UESTC','2012-06-12 02:50:39','default.png',2,-1,1,1,0,0,0,0),(1204,'shabnam','4ab95e8aa2e0b09af74b4962b614376bcd97353f','sh_gholamshahi@yahoo.com',1,1,'be8812626a7335bfa804dcdeef5d766e314b9e24','shabnam','Alzahra University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1205,'deadhead','98243fe6f39f3e4470b0f475b100dec2bd565a74','m_21g@yahoo.com',1,1,'5694228de6a366225b2c1a5495a32e393bc70137','deadhead','deadhead','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1206,'fafase','bca0f2608167ff31e0ca44f9a986ad57c36d829a','lucas.cosson@metropolia.fi',1,1,'bb1cfa4450cf24ae1684a382e789cdf3900d651a','lucas','metropolia amk Helsinki, FInland','2012-06-19 10:08:01','default.png',2,-1,1,1,0,0,0,0),(1207,'m.bazghandi','d7c07bac22c3732b19af135e7db37df203c8c5fa','mahmood_bazghandi@yahoo.com',1,1,'ea338274cdd4eb98700987fb026b075de86f9625','Mahmood','Quchan Institute of Engineering','2012-06-22 20:02:55','default.png',2,-1,1,1,0,0,0,0),(1208,'UMA89','188397fa3d0cf63289b198d747d66226166ebeb3','hamedsaboor@yahoo.com',1,1,'fe06622e43692b797f9ad5d69dda32160beed68a','UMA89','UMA','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1209,'cool0','32184a9adc2a8afc75fa18f3c4c843c4b497af05','rxdelta4@gmail.com',1,0,'00fcbcf80b5046163dfb31aa7379f7000e09034f','cool0','(@_@)','2013-01-02 23:38:23','default.png',2,3,1,0,0,0,0,0),(1210,'farzanekhoie','dec8371d06841d7b837c00fbb01d205e8d820d72','farzanekhioe@gmail.com',0,1,'96c06e75d34d1204b4ccdc3561431f83d02784ce','farzane','semnan','2012-07-03 09:03:37','default.png',2,-1,1,1,0,0,0,0),(1211,'Nima','6f2be2cd841d5d31fa5d3523619a2447b5ca3bd6','bayan.nima@gmail.com',1,1,'1d0c39c7014615c6699592d9c5a9990b9cf3721f','Nima','-','2013-01-08 19:21:19','default.png',2,3,1,1,0,0,0,0),(1212,'ImbYou','6d633aa9613aa9a4b736e7edc551662079debd74','S.P.Shodeinde@gmail.com',0,0,'a79ecff38213ef0bed67187622de1edb3226bbdd','ImbYou','North Carolina A&amp;T State University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1213,'bijan7','0831675d3548256ac1071bad38985dccd0a6ad65','bijans7@yahoo.com',1,1,'640ee027b49cc29ee6a3805d50d292998da8305b','A c e','','2012-07-04 08:42:29','default.png',2,-1,1,1,0,0,0,0),(1214,'shahin','e012728c2d01f3f291c72380923fc5ad3e45dc5a','alikarami19891368@gmail.com',1,1,'839786d634041adef42f6d193ca64b33327c405f','shahin','semnan university','2012-07-04 03:23:42','47e7ab489ce0b095d7fcfc5535188bfe6878a811.jpg',2,-1,1,1,0,0,0,0),(1215,'98943mek','d5ebd2c5d755f5b4e19e341b8204c54cabab1ab6','mek_1803@hotmail.com',1,1,'36562c23bb1b4b9a6d9284c32c81ba109a0270b9','ProjectZero','Unknown','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1216,'Mah.Kh','4c674f3ee65f4d43c90ba89bf1ffb6fc432e5143','m.khalili_81@yahoo.com',1,1,'3f7cd1cbad978e7c1f935a28214a57d1b424fe26','Mah.Kh','','2012-12-30 19:05:50','default.png',2,-1,1,1,0,0,0,0),(1217,'Chloe','87c2e0cefa37833040bf349bdf3148ae329fd736','annegavalda@yahoo.com',1,1,'13fd58bae747732d8d08f8efdc9cb8ceb2e2ae78','Chloe','UT','2012-08-24 07:35:17','default.png',2,-1,0,1,0,0,0,0),(1218,'amon_tilado','d18d779687c27ad2fb2ecd7f7ef9d7c605521c44','amontilado56@gmail.com',0,1,'d406c810c225e5e476ba77c1b9d3f0db4dc7050b','AmonTilado','Iran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1219,'melkiades','8839a25e431c3aeb5eb8a1509b6c247778035ee9','mo.zeinali@gmail.com',1,1,'3c355c3bb5c7b9c65e86e87f39c373251ddf5a73','Melkiades','Tehran','2012-07-08 06:22:19','default.png',2,-1,1,1,0,0,0,0),(1220,'faraz.taheri','7c058417fd193a74bcc1a80189a17cef94be6cd7','faraz.taheri@gmail.com',1,1,'2f6587bd6b1a45e809310a7335653a98c7d92558','McFaraz','Helli 1','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1221,'Witalia','1bd9163b9916aceea465ef45756ab89b850220f9','kojvitalij@ukr.net',1,1,'fa29c6ae873033db504e1f5dfecea72b946943fc','Vitaliy Kozhukhivskiy','Kyiv National University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1222,'majid','b72122bd39ebcb2ab464ddbab41174011cb47023','majid.badkoubeh@yahoo.com',0,1,'fec8fa5ac9658d3022e390a1a933d1c7dbe828c3','majid','Qom','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1223,'morva.saati','fcc07886d2457cfd0e3fd65a549926ed69a533b2','s_morva@yahoo.com',1,1,'9273a8d85e31f828efbd0bfe55b1e8133985726d','morva.saati','university of tehran','2012-10-27 16:16:27','default.png',2,-1,1,1,0,0,0,0),(1234,'en_software','ad80ac11d85ceea4a533adbca69e052f3eb1913d','en_software@yahoo.com',1,1,'09ac6c60de44c6e5a799b80101cf51c56ec4fe08','Rasol','UMZ','2012-08-05 06:58:32','default.png',2,-1,1,1,0,0,0,0),(1224,'elham','4038d19a92a353930ca948a5fb81ba791919bbd7','el.z.salehi@gmail.com',0,1,'f015c9dbc35def273a081a1646a5e07d6187eb3e','elham92','university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1225,'vpcom','9b9627bf962f3a435a7986b2b83421343188e8ee','vpcom@yahoo.com',1,1,'2b85cd570ab067ed83b56a565b6f39ae4d3c4fcb','VPCOM','JSU','0000-00-00 00:00:00','f898db13f9d06ee16f2a72ac30f9fd972ea8b1ce.jpg',2,-1,1,1,0,0,0,0),(1226,'cosmoslx','4ba754c186f05a9479446974f3fa1221d5c29fb1','cosmoslx@163.com',1,1,'eb76f4a51fe0b99c21f6bc9e6b47e1286b2a1e00','cosmoslx','sysu','2012-07-19 09:40:26','default.png',2,-1,1,1,0,0,0,0),(1227,'eghbali','61ddda9bdc6fefd35bc7f76e1f71bf59001291e2','niloufareghbali@gmail.com',1,1,'0fc96a47a515ecc7a74b2d46d30a78c775cfbbc2','Eghbali','T','2012-12-02 12:23:49','default.png',2,-1,1,1,0,0,0,0),(1228,'fujy','0b0b5fde1e712de682b1894cff5d5ae13432a982','engmohsalah@gmail.com',1,1,'bb5ecfa389e8af76ab7432fe69f5918cbfb24803','fujy','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1229,'kia.and','e31b8a046ed8531c7c99e795ced99f1e879be19d','a.kiana@rocketmail.com',1,1,'6a284810b9194c98395fcbff681faa91da43294e','Kia.and','','2012-07-24 15:45:46','default.png',2,-1,1,1,0,0,0,0),(1230,'sh.esfahanian','ba9f94eb03b3e30ae669b05aa93b8aa73d7f34f3','shiva.esfahanian@gmail.com',1,1,'054dfcbb64622682b9ad980fcf7fa9426f0ba267','shiva','tehran university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1231,'Sergey Ivanov','378afa755a771455b579de87285056cf29b12d8b','voivoid@mail.ru',1,1,'4c726106ed82456aeaa56a97f1aa3406a7975b27','Voivoid','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1232,'yasi','47327ea23c8dafa3df8c019fc266fa8669eaa8a7','yasaman.rahimee@gmail.com',1,1,'5f2532a8112de506fae72f4ad6ff21adb3c99937','yasi','tehran','2012-10-27 21:05:30','default.png',2,-1,0,1,0,0,0,0),(1233,'mk244','2caaf20e5a3560ba2f057924396c7fe3650907f6','mk244@yahoo.com',1,1,'2d4516098c604e241569301cd60f92cb55805a09','mk244','A-team','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1235,'a2_h4ck3r','a5dde9e5c2cb7f00fcc508fc1cc6b80cc6db138b','amiropop@yahoo.com',1,1,'9cc72fda38bbe438f20bf68982337cf0cfb2328f','a2_h4ck3r','university of birjand','0000-00-00 00:00:00','5bcee7d65b9670b8bbc8134e1d8e1982823d4c52.jpg',2,-1,1,1,0,0,0,0),(1236,'dummyguycoder','54c2037cd2bceca60c6e208cbc74eb9f19dc8d36','dummyguycoder@gmail.com',1,1,'534d0b8344da8a48f6f51f016e48fcdf131eb8c2','dummyguycoder','abcd','2012-07-27 13:48:43','default.png',2,-1,1,1,0,0,0,0),(1237,'epcpu','aed39b09eb45c60a6b5f0cd709a3d2188b0910d4','mnheydari@yahoo.com',1,1,'da6d92a06233b311bbf4d4b74de67d514f088702','epcpu','mazandaran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1238,'nikoo.gh','6ec6cc4c7cd0dd46e18b66753e820e1185b0bb8a','gh_niku@yahoo.com',1,1,'81b1611d792031d56c7a786dd79e4a9e267a2125','nikoo.gh','tehran','2012-10-27 15:20:30','default.png',2,-1,1,1,0,0,0,0),(1239,'M05tafa','b4916a79e71f0246b8805724f4a8f961285951b1','dehghanzade.mostafa1@gmail.com',1,0,'bf2a22f70cab9213dad615618411700c28732f5d','mostafa','','2012-12-28 17:35:58','default.png',2,1,1,1,0,0,0,0),(1240,'zahrajafari','d2efd6912c0a6de04136be03337b0f79c68b61e7','zahrajafari22@gmail.com',1,1,'75325801aca9748019cea8ab9ca7b743754dcc74','jeff','University of Tehran','2012-08-11 05:08:38','default.png',2,-1,1,1,0,0,0,0),(1241,'mazaher','554aa07a08145619ae98ac75bbf447fcf41e25e2','mbazari70@gmail.com',1,1,'e5c9ac4c879acb90ff390f5c03fdc2d54f3533f2','mazaher','Mazandaran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1242,'Zaboli','68b1dcb15606ad4998cc59ff6ce137d9ca120be0','hasanzaboli7@gmail.com',1,1,'e22b4492f8a6085961248b11681ab1e222846890','Zaboli','Shahed University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1243,'islamdiaa','02b87c6d56d05b19eae027fbb5c43536479be70b','eslam412@hotmail.com',1,1,'02b51bfd780b5a02cdf48400d76d0e6b7311ceed','islamdiaa','AUC','2012-07-31 20:11:10','default.png',2,-1,1,1,0,0,0,0),(1244,'topc0d3r','9eb8815607f3b960cbdcc1534bbef1c3b8eb1fb1','hasanzaboli7@gmail.com',1,0,'19b4c8aabf1129a753ed967d71d3291d1e3666f9','topcoder','T','2012-10-18 06:44:14','default.png',2,-1,0,0,0,0,0,0),(1245,'afzal','4d968f0d50b30b44a3ba2e05df0de0cb90f73c41','afs.afzal@gmail.com',1,1,'9298c1061bfed0d0626208220263f0932b0d47be','Afzal','Sharif University of Technology','2012-08-03 09:48:15','default.png',2,-1,1,1,0,0,0,0),(1246,'dxshokri','92aa594d5c795aa3c6f76b96b1468025b1da1ebb','dxshokri@yahoo.com',1,1,'2ac942e07b1400c4dfebb71a374dc9f8dd8d2c11','dxshokri','university of Tehran','2012-08-16 18:18:36','7eecfda9b61d2b0f9d758e7e613a4ba6e991f0a1.jpg',2,-1,1,1,0,0,0,0),(1247,'Kamlesh','4faadddc07f53bf13187da7b7c99b6a31cf40daf','vishwakarma.kamlesh@yahoo.com',0,1,'43ea61dd91844fc37613bd4ffc84e0bec1b58db9','Kamlesh','Mumbai University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1248,'endeavor','00f9e9ad95d3c65a5791ed526f9d77b107c384d3','a.h.goli@gmail.com',1,1,'8b65a9c8f87c460488d87b3eb0f7a4979b89c100','endeavor','','2012-08-19 13:23:32','default.png',2,-1,0,1,0,0,0,0),(1249,'hd.dehghan','ff9678339f5a32d8760b3f9515e2e14f83b97324','hd.dehghan@gmail.com',1,1,'62547c30a5f9373e5d5938c9a23fe1e5b034e69d','hossein dehghan','Shahrood','2012-08-12 14:20:09','default.png',2,-1,1,1,0,0,0,0),(1250,'sajede','271e22854134bd5ec0b0b25c319c7121ca2989be','sajede.shokri@gmail.com',1,1,'710809e4310faf8e1777330e30bb9dd0ecddc6c6','mechtwn','tehran','2012-08-14 13:18:29','default.png',2,-1,1,1,0,0,0,0),(1251,'wahab','1c776fd090c81a746e4a0deb194458ecd176643a','wahab@writeme.com',1,1,'3c7ad611e68fa0290bf6d93eb7c86246e1aba378','Mohamed Abd El-Wahab','Cairo University','2012-08-14 06:43:03','default.png',2,-1,1,1,0,0,0,0),(1252,'dooghi','af69b6fb9fc722eabdf6584646cea7381220bc75','argolzadeh@yahoo.com',0,1,'428fc9ea9fd6639f2f45b5668508b663d2c057fa','Dooghi','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1253,'mehrdad','90703816b5920f87fd15d7b01e9c6de14ff39997','mehrdad.baxtiari@gmail.com',1,1,'78a5043817b10dc2ef78de4602a82cef528de3e8','Mehrdad','University Of Tehran','2013-05-03 15:48:37','bcea02435a873af0ea82336f5db63672baefacaf.jpg',2,1,1,0,0,0,0,0),(1254,'mrmontazeri','abe6b758399deed406fea7e2eebc2abd81a75b83','monta2009@gmail.com',1,1,'876eb365fcaa88de8131032f8787a93b2eb30e9d','آقا مونا','Sharif University of Technology','2013-03-28 13:18:10','default.png',2,1,1,1,0,0,0,0),(1255,'skhoshdast','d6d659940622b44c16d63f89ccfe350e94bb1349','skhoshdast909@yahoo.com',1,1,'db87165347141b83c2f707ec1730a3bf608033ba','skhoshdast','Allame Helli','2013-04-01 19:51:34','338d040964b4f1dabae5eef2b3530fd04aaeeeb2.jpg',2,-1,1,1,0,0,0,0),(1256,'KhoC','bcb2becab092a0be121b70bfc1c1a98e35b9401b','mahdi0khosravi@gmail.com',1,1,'86b1a06415110e9472b4a7aa48492116c3f8821b','KhoC','پشت کنکوری!','2012-08-26 15:42:34','2c2677e42886dce51586f9c9b8312b30d6d8b58b.jpg',2,1,0,1,0,0,0,0),(1257,'Debuggers','768f03ab9a0ec5ba0f562bd74b55d5536441f937','hasanzaboli7@gmail.com',0,1,'84a9b481167b6649af10f27de32505d77a1b2180','Debuggers','','2012-08-16 08:48:16','default.png',2,-1,1,1,0,0,0,0),(1258,'kuala','ba1152a27a975a68794969a55162ccfcf69f5606','gharaeeemanesh@gmail.com',0,1,'0dd06d99b3a1f4922a3035774c23e18dfa8f8eb7','Koalas','university of tehran','2012-08-16 10:13:12','default.png',2,-1,1,1,0,0,0,0),(1259,'karnik','729579fb4d31fcf12edb1296e9f8731d7ab39f23','s_mohsen@ymail.com',0,1,'5a2a5a36b5148b487962cba14f381c0a92219304','karnik system shargh','Tehran','2012-08-16 10:47:13','default.png',2,-1,1,1,0,0,0,0),(1260,'a129909','08481aba43cdb4ccf55e2b38dfdf61a90bb99d25','129909@gmail.com',1,1,'1d220e8fcc9539c12bbe7320e96b3621586b670e','_____','Tehran','2012-08-16 10:44:14','default.png',2,-1,1,1,0,0,0,0),(1261,'zeinab','47e6baac1f27dff4d817a43cf92748215d741f39','zeinab.talbi@yahoo.com',1,1,'90d74e98f8fdd3bb47dbd2b05ab36f8154a09782','talebi','high school alzahra','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1262,'mitez67','b06826f3d79edf3e5a41b65d075a61e6c220cd95','mehdizafari_2006@yahoo.com',1,1,'d5763948f3d95afa1db5d3bac5d9288a9ba9cbeb','MITEZ','Urmia PNU','2012-08-17 12:20:04','f1b299c44ac1355d390fa2575e05c3364518ff94.jpg',2,-1,1,1,0,0,0,0),(1263,'tusharkumar91','f6a080908ffd2a1ed778598fda1b030dc23346a7','tusharkumar91@gmail.com',1,1,'3d21016464a4f9995ae676f956d19d53e117f27d','tusharkumar91','NONE','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1264,'pegah:d','37aaab2982ba07477ccd496f7401cb0dead3d9de','p.a976@yahoo.com',1,1,'b4036a73c1826c390876babec5b29e47bc106c51','pegah.a','Farzanegan highSchool','2012-08-18 07:27:35','default.png',2,-1,0,1,0,0,0,0),(1265,'0xali','b9761782c07e01ac6c5b9f18c698cfacb0698faf','aj.shirvani@gmail.com',1,1,'fed0352364c86acd5fb51aadc893511df6bc45fb','alishir','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1266,'mehdi','7135d236c88b796537a4da4f856d6c7590a36f56','mehdimoradi_da@yahoo.com',1,1,'36c1d1b1e3e945afb72b3176e5af9c05b8ad522b','mayT','','2012-11-24 15:56:53','default.png',2,-1,1,1,0,0,0,0),(1267,'pranavcode','fc1fd418123ba0a2c83e4afc71b2c019d441462c','pranavcode@gmail.com',1,1,'b12037e916efdf2d78d5482a84989892612c7c1e','pranav','wce, sangli','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1268,'anmanm','8398062d723cb10c0d1364437aa3e7e7eae95e5b','aryaz.egh@gmail.com',1,1,'44910326545bcdba833c690f8404220915bc96ee','U of Tehran - ANMANM','UT','2012-12-02 23:18:44','default.png',2,1,0,1,0,0,0,0),(1269,'mafia','f2f956315c8e1d1ff4aabd4e48ce42b48a4d3f95','mizdler@yahoo.com',1,1,'b19cbb8fa11291f121c7600a0f92a513cb4f47b2','Team 9','','2012-12-27 11:29:10','default.png',2,-1,0,1,0,0,0,0),(1270,'anonymous','9ca654fb82cad81f1a4dfc2f397ad8fdcd775ac9','anonymous@yahoo.com',0,1,'59956420aeeda0c755a25befd764db44c87e5cf5','anonymous','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1274,'mayank.punetha','d92fffb2babb61cd6a7afc1eeb1f0dba7ce205aa','coder.mayank.punetha@gmail.com',1,1,'f39cd1d6115a3b950ac77c015bbf636bdddab228','CHUTIYA','ABV-IIITM','0000-00-00 00:00:00','default.png',2,1,0,1,0,0,0,0),(1273,'sCarCe','58efc55527ba7611fd2232d0bc610c50ed0e3a74','cexploit@yahoo.com',1,1,'7ac96b82cbff12cb715777a9223972a37ba33c2b','sCarCe','sCarCe','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1275,'B.Mary','ce9d319c7e4a42b55a53cdfd35a2041880bba10b','mbabaie89@yahoo.com',1,0,'2eb3eda0e2a2ad22efc08a035bb70fa6b610fe77','B.Mary','UT','2012-10-23 15:05:52','01c629781e56f4fdf9b17abf95817b9671f5fa5f.jpg',2,3,0,0,0,0,0,0),(1286,'shadi','28fbaea81db4892832d604079d27fe6877b5097e','shadi_shad92@yahoo.com',0,1,'780041b607e0c4ace2c9725cc600fa95fca7ba76','sh_sh','mohaghegh','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1277,'behrooz46','1bbd3fb251c440b98519096106b850bde9bc7de8','behrooz.rabiee@gmail.com',1,1,'61f16fa13c7c2be19f13ff93f0da74a079ca2f33','Behrooz','Sharif University of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1278,'Negfir','01f0db1ad4efd6579f9f569d6138e6a13911572b','negfir@yahoo.com',1,1,'8c042eebc2f23a6c09a6b92085191dbe1c41434f','Negfir','Sampad (NODET)','0000-00-00 00:00:00','d73d212474d1e34d51266f945316934ca7d12060.jpg',2,1,0,1,0,0,0,0),(1279,'mmm...','5f7cf141cb185e0fb4d21ff893c953ffe9bb0d11','nagging_m@yahoo.com',1,1,'c50087cb6619693b512a19f269a3c9acffa99d58','shookoolat','tehran','2012-08-30 14:47:06','default.png',2,1,1,1,0,0,0,0),(1280,'SinaZK','8bbb80fd6a4a31a42fa0db53469ddd21ea8e8e60','sinazandkarimi@gmail.com',1,1,'f23a51ea7564b25ac5ddfce2caeb55c4d5e5fd97','CzaK','Allame Helli','2012-08-27 10:14:31','61ddfdc648882d6696266c77f3a320929a04098b.jpg',2,1,1,1,0,0,0,0),(1281,'chaichon','32e24eaa521a2be5b7289af69c76b4f68c809acc','b_chaichon@hotmail.com',1,1,'fada18e73955d9ef542ce9dbbd4e92e92492dab3','chaichon','Ubon Ratchathani Rajabhat University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1282,'mar04','8902fd19ffd880ff6194b03e92106c0db3538491','mariusz.libera@gmail.com',1,1,'7d54a08db6027940211a76c7aae17b168f9d51dd','mar04','UWr','2012-08-28 20:52:55','default.png',2,0,0,1,0,0,0,0),(1283,'pedraam.sjj75@yahoo.com','c0f1b83e6d8981115903d9b1ad93144637bfdd8e','pedraam.sjj75@yahoo.com',0,1,'ca972b2f552428a57fd2a1d9b8ba4f6f1c21a94d','pedraam','AZ','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1284,'xzjsky','4af413e91739069686bc79faf787c916d0418970','asklzxn2@gmail.com',1,1,'57342abbaf0c9a275aaa5b8709c56ea0725de927','Zhengjie Xu','Shaoxing No.1 HighSchool','2012-09-02 13:29:51','default.png',2,1,1,1,0,0,0,0),(1285,'aht44','7c867a8dff7443d5c92dca0cd382879be6a7e5ec','amirhoseintghv@gmail.com',1,1,'96af4d695bae7658768048359c5b41fd0dc5982b','amir','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1287,'S.Pegasus','067917b3c8e3aef05c2e397e19e1601a46eae57c','soheil.malicious@yahoo.com',1,1,'de8ca91b23789588b5e2d4ae1ef10889806039e3','Pegasus','Allame Helli 2','2012-09-16 15:44:05','default.png',2,-1,1,1,0,0,0,0),(1288,'RezaAshtiani','7d7a5b7c97008820dd6a41ea1aa332fec390fff9','reza.h.a0029@gmail.com',1,1,'b96b11b0a371fdaa9a471fe3ccd229ecae270b8f','Reza_H','Amirkabir University of Technology','2012-12-11 14:50:58','872d816df0dfa90b710d90df89b14a299a319074.jpg',2,0,1,1,0,0,0,0),(1289,'NoobPlease','21faf30bcfd85ed0fd1cdc955a92ba82cb4a077c','farzad.shbfn@gmail.com',1,1,'90661b3e058544a29df74f41368460edc780a9c0','SBU - Noob Please','Shahid Beheshti','2012-12-13 09:46:13','default.png',2,1,1,1,0,0,0,0),(1290,'lash','3e2b9f857ab0e7f06adc8d25b51bb596b820b53b','lashis@yahoo.com',0,1,'2be8f43eb2dd644956ac011db89938695d6c0fdd','2 Lashis of UT','Tehran','2012-09-06 10:12:31','default.png',2,-1,0,1,0,0,0,0),(1291,'Chormangz','0365e3c95ad83df5148e387aebfeefae46717197','Arabpour.m@gmail.com',1,0,'2ff1f4e881d8091a1061bac9e632c7683e29e532','SBU - Chormangz','Shahid Beheshti University','2012-12-18 13:37:54','default.png',2,1,1,1,0,0,0,0),(1292,'annihilation','df46f8fd94f8299227aaaa1546c2e19a58dccb08','m.mousaei@gmail.com',1,1,'6b9ef68d3c2d230b3e82f989bf5092f60201be99','SBU - annihilation','SBU','2012-09-06 08:39:11','default.png',2,-1,1,1,0,0,0,0),(1294,'partialeclipse','a84f5b44a932fb0172a0b9ea33ff66b0e3b34f2a','mohammadrdeh@gmail.com',1,1,'31cf18b3785e695f7a7157d407d55a33283c0e4e','AUT: Partial Eclipse','AUT','2012-09-28 15:48:09','default.png',2,1,1,1,0,0,0,0),(1295,'ghoorbaghe','53ecbc2579cb9523238ad5f9caf9d8f81a047fbe','ali_fiujnomali@yahoo.com',1,1,'a599c8fc5aa315ff74c3201763ba205bcc015369','ghoorbaghe','Amirkabir University of Technology','2012-10-04 06:38:29','default.png',2,-1,0,1,0,0,0,0),(1296,'sajad.sh','fc689934c3627caa73e543ce04ec2412855193b9','mr.sajjadshahsavari@gmail.com',1,1,'c0d5ff7134d0960aa785619b4f9001b3c3534e37','Sa Shavari','AUT','2012-12-07 20:05:28','700e433df28a2e50dce9d50d7612966c9dcebb80.jpg',2,1,1,1,0,0,0,0),(1297,'sajadooo','22abd58d83c040e71bf253c90b49293651d26357','mr.sajjadshahsavari@gmail.com',0,1,'54bfafa863af52687d78c2ceb95eb07804cbafef','Sa Shavari','AUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1298,'n4k0master','81da0d1bb554da1329529baf45e88e52181070f6','nesuadark@gmail.com',1,1,'83f074b736a17d7368bf87cc91a24a033f30ed2f','Catl Sing','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1299,'firouzyan','1d6c892daaae476609ec050ee8017cc3aa5f34bd','firouzyan@gmail.com',1,1,'eb706805d1d79d10f6510bdfcf1d7f1cac32ff18','Amir H.','KNTU','2012-09-08 23:08:44','default.png',2,0,1,0,0,0,0,0),(1300,'duacm','679df93e50e0d14730ca22f2586fa7fb6b4617e2','mah19000@yahoo.com',1,0,'1b7330d54820161908cfefecda412efaa3ff809e','Damghan U','Damghan','2012-09-09 14:41:31','default.png',2,-1,1,1,0,0,0,0),(1301,'tarun550','b4827eae03197726a1e9d090adda35330c40d5f2','djtarun550@gmail.com',1,1,'d65e92ccc4182891da5620310b9ff30ed6416a03','Tarun Gehaut','NSIT, New Delhi','2012-09-09 15:07:47','default.png',2,-1,1,1,0,0,0,0),(1302,'JavaCoders','4fef5f68224d1a95bc78e2cfb901725d5c93fafe','m.sabouri92@gmail.com',1,1,'b8fb74aca8cf477f856ea7a359232eecf512b381','University of Tehran )%R}VR?:','University of Tehran','2012-12-06 09:34:35','93a252a3f4d67736e7f12761fcee47bfe26e0644.jpg',2,3,0,1,0,0,0,0),(1310,'zoo.h','a3afb28d42704cf5d3bdf3ab0c1504af97c10684','aminunisbu@gmail.com',1,0,'75955f2a10df820749457d16fa1181428dd216ea','zoo.h','SBU','2012-12-15 19:32:02','default.png',2,-1,1,1,0,0,0,0),(1314,'nyelonong','901f3dc10df98da2c0d385818ad826d7e1b8ef98','zaki.afrani@gmail.com',1,0,'5367d807a1694f43ee63e361c62ea79c66de5bc3','Zaki','Universitas Sriwijaya','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1303,'boom','ec7bc3521491cddec1e964c0bb391df07e33c33f','pooya.vahidi0@gmail.com',1,0,'ac961bb9003e43d2c84f31e70295f98bebca5eab','BOOM','FUM','2012-12-18 12:04:35','default.png',2,1,1,1,0,0,0,0),(1311,'pooo','1eba190755ece1b6849f6f948960891821859ceb','pooya.ostovar@gmail.com',0,0,'589bf66b4c4f4e252d563e64e550369a6ac6aba0','pooo','amirkabir','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1323,'niousha','611c9985a6134d947bc3bcbdab828e912a405001','niousha.a1993@yahoo.com',1,0,'eab5da0a62f110eac1b6a81298935cbb136ef889','niousha','shahid beheshti university','2012-12-16 16:39:20','default.png',2,-1,1,1,0,0,0,0),(1304,'Blackwizard','9a1a4fe53bb64a3d2596defbee86fd089085020e','mohammadreza.rahmani89@gmail.com',1,0,'7fdd993661e44660fd2d57af3c460eb08d60ea7a','Blackwizard','Islamic Azad University of Parand','2012-12-05 14:17:22','9eec6549300bb736c06fbf289b23299ec63f5ac6.jpg',2,1,1,1,0,0,0,0),(1305,'Mehran.R','d9f79e4fe3b5e9218519ba7f9b186a0b0dce191c','mehran.rigi@gmail.com',1,0,'29f4e3a9e78e2c1d0eaaf9fba0de76911930f1cd','Mehran_USB','University of Sistan and Baluchestan of I.R.I','2012-12-06 06:22:46','940357b4feb943a14232632ce41b44245dd52854.jpg',2,1,1,1,0,0,0,0),(1306,'katerpillar','75c89d8b4647dbe03d3e1572716bdfb5583a6989','jalili.masoud@gmail.com',1,0,'236a58113ddf791a0937a40dd3395c111487c890','Masoud','IUST','2012-12-15 13:29:41','default.png',2,1,1,1,0,0,0,0),(1307,'Grb.co7','fdaa63d01360f09ebfb0c5a970b0addc5d11b2c5','grb.co7@yahoo.com',0,0,'7791f4a3a5aa04e92203c05780d2e3a2f70fee3b','Husky','Ferdowsi university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1308,'Husky','d30554bc27b1e10e871a8fd471858cca0bb486d6','grb_co7@yahoo.com',1,0,'765796c3ce6d3724fd8490ed50a3de875b25638d','Husky','Ferdowsi University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1309,'shamir14','525aa70f091b6802fe0ab8988d3198266514956f','lordamir14@gmail.com',1,0,'af0472d3293090966bc8288a8f48065aa3fa97e7','shamir14','Shahid Behesti University','2012-09-20 05:52:54','default.png',2,-1,1,1,0,0,0,0),(1312,'m.ansari','e2502aa5b0ec0dca667ecc1ba649b1bbffb8dc2b','mr.mohsenansari@gmail.com',1,0,'919492b77ab93ecb037dd6f1af1c37ac23087e4f','mohsen','aut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1313,'ayla','dd6e95a458212ae7e28b75190e4c048688cfbf6a','mahlaesmaeily@yahoo.com',1,0,'9d351f8937d609602c8e89b07d184331d6e2c0a8','ayla','university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1315,'beginner1010','18fa3f5d85f43fe2495e6ea0673f730baaf68cd0','vahid.sanei@gmail.com',1,0,'8189c226fb52fbdbafd979c3f3fe3a49fa459952','Azad University of Garmsar','Islamic Azad University of Garmsar','2012-12-06 07:38:31','default.png',2,1,1,1,0,0,0,0),(1316,'behnaz.mardanzadeh','da429374eed62590abbee2003f34334478b5011d','behnaz.mardanzadeh@gmail.com',1,0,'8d6b75d508dfb1fa70d7152e1cd0d14629b5ce62','Behnaz &amp; Mardanzadeh','Islamic Azad University of Parand','0000-00-00 00:00:00','5794a0c0bffb5728be31b1cd06e6b9c3f031a3d7.jpg',2,-1,1,1,0,0,0,0),(1317,'Amirreza.SH','26d20b7171288b3e635f1629883782e35b4d853c','amirreza.one@gmail.com',1,0,'e11f15a8d5e844ee1c795611f96a5543274190c2','A. M. R.','tehran','2012-09-17 12:19:26','default.png',2,-1,1,1,0,0,0,0),(1318,'shmudo','2080231b1cb566a4275c4a94f501135da98de76f','dschmucki@gmail.com',1,0,'b58978a2cc829e72fcfb2083e07b731f3862de50','shmudo','?','2012-09-16 14:17:56','default.png',2,3,1,0,0,0,0,0),(1319,'mandy13','49a6102912dc383deb4bc4cc6f6d691cc1338b9b','mndrshnd90@gmail.com',1,0,'368dfa144cbba676fe6db737f45a2fd5166634a7','Mandar','VIT, Pune','2012-09-27 09:54:36','default.png',2,-1,1,1,0,0,0,0),(1320,'cjoa','7a6b3efeaa7c74f605762d892da28ddd972daa27','cjoa@yahoo.com',0,0,'30da65d5d12fc2099c2fece29aa3a1c348767b90','Carlos Joa','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1321,'multi','8009ef7b01a46121abb017b397bc191ef79928e3','mohammad.mdoust@yahoo.com',1,0,'4643f1153163e41dfe521ee09254e9b91e2d11db','multi','UT','2012-11-30 09:34:19','default.png',2,-1,1,1,0,0,0,0),(1322,'Bikaar','add10a4d19f1a43602b89590c1bfe19e1d193a4d','nemidam@yopmail.com',1,0,'b32ab06e63b56f55a6c33339aa8d61b28dcbfa76','Bikaar','University of Loplop','2012-09-21 13:11:12','default.png',2,1,1,0,0,0,0,0),(1328,'sfzgzs','d4bce365e00040f445c1f94bcdecb88f5f452301','ghasemi.fateme33@gmail.com',1,0,'17757415115848e50566681a4584247806b24c11','دو نقطه دی','','2013-03-16 09:11:58','default.png',2,3,1,1,0,0,0,0),(1324,'Zahra.e','e7496074e56919b150b9909b7e975e2cc3948f92','eskandarizahra93@yahoo.com',0,0,'cf414fd7af8bd86434d1c312451af1caf252a410','Zahra_e','Shahid Behesti University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1325,'3cret','98e6682f80039d5d9e8921657e33b7f6107d6d4b','morvamorva873@yahoo.com',1,0,'5a6e768d83f1506a130a5e8ad1f6f3407468dcfa',':| NO ASAB |:','Tehran','2012-10-25 08:47:41','default.png',2,-1,0,1,0,0,0,0),(1326,'armin','85a61ebd284064bc76dcfab3b154e16b21c34336','arminbashizade@yahoo.com',1,0,'73878a918530ba666c5867abf1f82741171fff3b','AUT-Armin','AUT','2012-12-07 15:11:21','default.png',2,-1,1,1,0,0,0,0),(1327,'i.akbari','ef8a0c33b2bb6c9743ca9d491ee8a2248db159e5','imaakb@gmail.com',1,0,'a6e9525e93e5483282a5ff95eca1705e41d29dd0','iman','SBU','2012-09-20 07:33:44','default.png',2,-1,1,1,0,0,0,0),(1329,'armita','dd83319dd9408f5b393521d2154d744e7579a4e7','armita@sabetiashraf.com',1,0,'19fb7cc3d310623673c1860803743989562e87e1','armita','Sharif','2012-09-22 17:21:34','default.png',2,-1,1,1,0,0,0,0),(1330,'JFCowboy','2dfa0d76ff334aa813a96302a9fa97897e0cd064','cowboy9209@gmail.com',1,0,'2a93c180ba09b65b1d7c2618102d222bffb03a41','JFCowboy','Nacional','2012-09-23 02:55:03','default.png',2,-1,1,1,0,0,0,0),(1331,'deadman22','877cebf3dc0c79bc4af6b25c9f9562b8e5884313','rajaagarwal42@gmail.com',1,0,'89703a0f0c208e7eaab09c7cac7dc4f38c47f851','raja','IIIT Allahabad','2012-09-23 19:48:50','default.png',2,-1,1,1,0,0,0,0),(1332,'ShayanMirjafari','f96d80d129cf57a612255e3535e653bcd37a0fc0','sh.mirjafari.mj@gmail.com',1,0,'d8beb226e5bd5b3f6bd8b9bbfc297e41a1be9ab1','shayan-mj','sharif','2012-09-24 05:53:00','default.png',2,-1,1,1,0,0,0,0),(1333,'ardehadi','66c17efccf3c67787a19016db28b53035b09e681','ardehali.h@gmail.com',1,0,'7dc706270b089482dd8b5836ebdf307bc3fab7c9','M Hadi M Ardehali','Tehran University','2012-11-01 00:07:02','default.png',2,1,1,1,0,0,0,0),(1334,'maryam.samiei','0e34840718faa8a07fb62b88c99b8ee9d993a543','maryamsamiei71@yahoo.com',1,0,'e0f1e7f0321ef5fbfbe54592b652155f6bc3a406','maryam samiei','tehrn','2012-09-29 07:03:32','default.png',2,-1,1,1,0,0,0,0),(1335,'parisa.beygi','54562e4d9dd8c4b5e697c5b6269cb30a0e26fd2d','prsbeygi@gmail.com',1,0,'366e67b7c17e127536b8ddfad0b25daa2068f29e','Parisa','tehran','2012-10-27 07:40:47','default.png',2,-1,1,1,0,0,0,0),(1336,'rezas26','c9a880afff542bc4daaa2b4ace6daf76b697cac0','rezas26@yahoo.com',1,0,'38c8bf477f607d33e48baed8780ae63f3f1d5ad1','Reza','University of Tehran','2012-10-27 10:01:05','default.png',2,-1,1,1,0,0,0,0),(1337,'rafati.iman','50e09da5bde464e5eba112a0101a2f9d229c058f','rafati.iman@gmail.com',1,0,'869fdda618978cc4dd224b6b24e6e9623305455c','IMAN','faculty of engineering','2012-10-27 09:11:28','default.png',2,-1,1,1,0,0,0,0),(1338,'pasha','9b654b7038b63556b9b2e734160b522c41b6f791','mhmmdrz_nu@yahoo.com',1,0,'568849412c41f8a32a5dbd4f807bd18758c4971b','mhmmdrz_nu','UT','2012-10-27 15:59:00','default.png',2,-1,1,1,0,0,0,0),(1339,'akramimajid','e0f1c83fa2009a96ee6864a3025b0463a7c7a5b1','akramimajid@yahoo.com',1,0,'ef99a4513f9806c73fb5af03b912876231788050','SMajid','University of Tehran','2012-10-26 17:52:07','default.png',2,-1,0,1,0,0,0,0),(1340,'ni44','7699dc265dde48dbdfb543f8ab49673ce5793f2d','mo.zeinali@gmail.com',1,0,'4a8553c7f1712e357b7d702f89f7a559197e7cfb','ni44','tehran','2012-10-26 16:08:38','default.png',2,-1,1,1,0,0,0,0),(1341,'sinakhodadad','208347953390a922d3997145fa0596a0daafc60c','sinamd443@gmail.com',1,0,'b729eb3d84b0d2a663aa056b641c010b5b73a82c','Sina.KH','University of Tehran','2013-03-16 08:37:36','default.png',2,-1,1,1,0,0,0,0),(1342,'810190496','e6e7ea313919d5ddc10cc82727f903f9dee8276c','zamiri.nooshin@yahoo.com',1,0,'db732931ee650b480f4f59bf2f6048608a2514aa','nooshin zamiri','university of tehran','2012-10-27 18:24:45','default.png',2,-1,1,1,0,0,0,0),(1343,'m.safarvand','e735cc26afefb69abdee75a2ee46759f24552235','masoud_safarvand@yahoo.com',1,0,'61a1b345abe28adf6d74cd4a8857cc7f613bd0c2','Masoud','University Of Tehran','2012-10-27 20:18:23','default.png',2,-1,1,1,0,0,0,0),(1344,'810190578','7f07a03559656f8499b28e23106f0261f1adafdc','amir.h_taheri@yahoo.com',1,0,'8639dd9de795f41b5460eb51448399777cef9dac','amir h taheri','ut','2012-09-28 15:25:34','default.png',2,-1,1,1,0,0,0,0),(1345,'forouzandeh','868d0d88dc1acf88e6963692bac26d52ec868956','989358000000@irancell.ir',1,0,'1346121c9a72412b8a480f1de2bbd9851ef4500f','forouzandeh','','2012-10-30 10:51:31','default.png',2,-1,0,1,0,0,0,0),(1346,'EBLiS','91fbbd7fb2701b2761a95cd3317055110ccfd3e4','5610@yahoo.co.uk',1,0,'8633ea05ad6a9fbb03b978a7c821363e53808d11','EBLiS','UT','2013-06-13 19:26:25','default.png',2,-1,1,1,0,0,0,0),(1347,'EBLiZ','d6833fa98b898accdd1afeaf6bc8aefc22f3d867','5610@yahoo.co.uk',0,0,'e2e31a27eb2314d867cf8aca3bd45a53d0b338e5','EBLiS','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1348,'r00t','d0725f7f43d884c0aae0d01678a7df257cf89055','5610@yahoo.co.uk',1,0,'f6275ab723a7411544c007cf20eb40b4f45443c7','r00t','Pwned Grand University','2013-04-10 13:33:21','default.png',2,-1,0,1,0,0,0,0),(1349,'miladhesari','759140d94dfd0ee916dbbfd4fff2dbce38bf679c','miladhesari@yahoo.com',1,0,'876250e5d78e71ca1c19a29b7e3e9a85f71c72fa','Milad Eyvazi','AUT','2012-09-30 12:02:35','8a491e31198e5adc426ec5a5884165d9fcfdd627.jpg',2,1,1,1,0,0,0,0),(1350,'n.moh','4d1ff10e47036a3d799dfeec5a367ee609de8ed5','mystar20100@yahoo.com',1,0,'3181a57c0a640b23ffc688f66483329f6b6e3963','n.moh','Tehran','2012-09-29 02:39:38','default.png',2,-1,0,1,0,0,0,0),(1351,'xjia','101f780ca859a83c66472a63c493aacec67b166b','me@xiao-jia.com',1,0,'ea666572a8868ae1aa11b3f244a8d75fe6f2e680','Xiao Jia','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1352,'h.gharibi','ba22a586734fd4114dfc6dd007903651515862c4','h.gharibi@ut.ac.ir',1,0,'ee77eb35fb49be6ae5841c8d9519492aac5c0631','Hadi','Tehran','2012-12-12 17:23:26','default.png',2,-1,1,1,0,0,0,0),(1353,'abstractme','475b7029b748873e8ae935ea5c0e672fefa7346e','gh.zendedel@gmail.com',0,0,'35d8ac4815854dce1c632144675510b1ac61b964','ghazale amel zendedel','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1354,'RaminZ71','acbe9ddf3d097bbace6e2ea8c5c9fb87f501b50a','ramin_1371_2002@yahoo.com',1,0,'6208903c9577ad939945b3ca485ec3212aa2e7f6','Ra.Z','','2012-09-26 17:07:47','default.png',2,-1,1,1,0,0,0,0),(1355,'bero.1370','ac5cb1efdb449cb581a7156f0366a22865e0d40e','bero_1370@yahoo.com',1,0,'892743a7ba8c94bd4d9fae75b58a5f93efd9234f','bero','ferdowsi','2012-09-26 18:16:37','default.png',2,-1,1,1,0,0,0,0),(1356,'mystery','e4af8d07c7cab8a3eb2a80d2a81d7681db62f98f','mmotig@yahoo.com',1,0,'fba9673c92a0d1647a3ecda88edf2fcd7fba304a','Mojtaba Maleky Jawad','University Of Tehran','2012-10-27 17:59:16','default.png',2,-1,1,1,0,0,0,0),(1357,'emkeb','cbd4c19d141a0a811142b5022077447cf0fe2344','emadkebriaei@yahoo.com',1,0,'daced9fa6780ba47376885e973ef94f7a58e6129','emad','ferdowsi university of mashhad','2012-09-26 18:43:13','default.png',2,-1,1,1,0,0,0,0),(1358,'pooryasm','499a4d928c9357c97f428da8d780426edd4e8c44','poorya200x@gmail.com',1,0,'7b65c765c9dd242cc587871f2a849e300b19b49b','poorya s.m.','ferdowsi','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1359,'hrh0001','58e96c05c970ab92d10ca40890f91ad165786b7b','hamid_r_hanafi@yahoo.com',1,0,'6722649b63d61d6d5e4cd98468fa3a21c57000f8','HRH0001','FUM','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1360,'FarbodY','8512904018ac98738add4240bc76cf502ec44f35','yadegarianfarbod@yahoo.com',1,0,'00b8ae5ef23a3e5b9345ef913802cde4015354ab','FarbodY','Allameh Helli','2012-12-05 18:55:59','default.png',2,1,1,1,0,0,0,0),(1361,'pari','10be86b3e9b1a542892488907d02e4e96583c9b5','parizad1188@gmail.com',1,0,'511adba875fd58952a60504ce4f3116c9dd4a371','walnut','university of tehran','2012-10-27 18:17:30','default.png',2,-1,1,1,0,0,0,0),(1362,'ShayanH','6a9a5ec0830cb4ce4e48336b893316afa4d4dee7','shayan.hosseiny@yahoo.com',1,0,'4b06d34bd1247141c718f5c705bbe551a5bd2dcd','ShayanH','Allameh Helli High School','2012-12-05 17:04:43','default.png',2,1,1,1,0,0,0,0),(1363,'MasoudCS','b807eaa3815ab5b2282b74e7821a1dbf5858aceb','masoud1459@gmail.com',1,0,'f2985cec6f34d01e0a6078acffb6af94ba939f3c','MasoudCS','Amirkabir University of Technology','2012-09-27 07:36:42','default.png',2,-1,1,1,0,0,0,0),(1364,'saeedn','000eb0a1642832c67597c6098f620c7bccbf7e7b','nejati@gmail.com',1,0,'9fb8eae5bc1f4b91213dbb28d675097f0e0a0722','SaeedN','','2012-12-14 00:59:51','default.png',2,-1,0,1,0,0,0,0),(1365,'mona','0d7a2c762df462aefdffea6128825c128996f53c','mona_eftekhari@yahoo.com',1,0,'1d4c8a3221e4f81315d55e568f04b842513885a1','mona','Tehran','2012-09-29 10:38:18','default.png',2,-1,1,1,0,0,0,0),(1366,'Erfaniaa','306b58449ba02f6d3991d0a8978692de299015f1','erfaniaa@yahoo.com',0,0,'e54886643c35b75fa437b19bcc4b00c4617b05ab','Erfan Alimohammadi','Allame Helli high school','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1367,'katana92','610d1abdf1b3664e988d05717dd0dda0e4157fa6','katana_1392@yahoo.com',1,0,'104862e7e10f4d002b0a5758ff72b57ad6cf52b5','katana 92','Zanjan University','2012-09-27 20:18:15','default.png',2,-1,1,1,0,0,0,0),(1569,'pegahhassan','208d6c1fecfabbd3f7d269a0752339093e326309','hasan.felegari@yahoo.com',1,0,'755f5d303b9edb6c61640f75cc4676c80abd0128','hasan felegari','kordestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1368,'s.shayan','c46e60e4fa5e53c07a42034d66f3bbc0616b6303','sayesaye80@yahoo.com',1,0,'6bbbd1e1ba8947c8c726d57c9c6ec713463472b5','s.shayan','tehran','2012-09-29 10:03:36','default.png',2,-1,1,1,0,0,0,0),(1370,'rezaya','e29567459d9f2f2eabe96d8cbcf7f8b555448852','alienssina@yahoo.com',1,0,'0911fc2cf504c896b8ac8e33099c1f129d4b19c3','SinaAciDDD','Tehran','2012-09-29 13:54:33','default.png',2,-1,0,1,0,0,0,0),(1369,'mashahsavand','bf12ece75ec5416f3297923814209865f042cc57','m_as656@yahoo.com',1,0,'cbde54127f197b35727bec2c28ebed365d3cf008','mashahsava','University Of Tehran','2012-10-31 15:39:19','default.png',2,-1,1,1,0,0,0,0),(1371,'wcwswswws','65999babf8d2ad07f4058179d9102f569ffe6faa','wcwswswws@126.com',1,0,'d01e102870cb3b35d9a1e4efd917cbb0eaf3bdd7','cjy1','tju','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1372,'f.asemi','049116b814687e10758e0adc7f8fd8fb1cd84f8d','fa15sepi@yahoo.co.uk',1,0,'4a9b1ba4bce98c1f3b7951a9ed2cd2b55e6f01a7','fatemeh asemi','tehran','2012-10-27 20:06:41','default.png',2,-1,1,1,0,0,0,0),(1373,'sarahadian','9915207d97d7c8974ca56168b75e7e2d1268d9d5','sara.h262@yahoo.com',1,0,'4749f48a9e1e5a44b51676be204f60af8d08ee28','sara hadian','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1374,'m.azadeh','c81e5cf20ba15edae063abb859ab02df5ddcdc53','mohammadzdh@yahoo.com',1,0,'37f46ec1b1cc3a0ce475742d11685386e3b4d541','the MPM','','2013-01-01 05:31:29','873dd7fb9188c26397274cf9c44d117d90a592de.jpg',2,-1,0,1,0,0,0,0),(1375,'jahanaraco','c08cc555decc866d7220e8a9690345b45a516cc9','jahanaracoyazd@gmail.com',1,0,'2397ae5e0532960e36fabb8477cd0e6de19c7aa9','JahanaraCo','Shahid Sadoughi','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(1376,'BarBari','3ea3cc476d2c464da3e96e5d68ef4953c369f00d','coybit@gmail.com',1,0,'b4e53832417b86204b52d5f35cdc0af5b60eabb8','BarBarI','World','2012-12-05 18:22:36','default.png',2,1,1,1,0,0,0,0),(1377,'zohrehshahrabi','f2548efe2bdd3758c89d8904b8868b3307ce2d48','shahrabizohreh@yahoo.com',0,0,'18330b6ee8051a3a3a3681494fb564f2c4a23d0b','zohreh shahrabi','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1378,'mkosa','619fa8d4c3a877863f7da5d5e5986db07cbcc43a','mark.kosa@gmail.com',1,0,'535c7afed8c8eb866eedc286d2d7d0ad16a8f8f3','Kósa Márk','University of Debrecen','2012-10-06 04:38:45','default.png',2,-1,0,1,0,0,0,0),(1379,'amirhoseink94','207ae06ad2089dee66b56cb070c1c7cda2d00f8e','amirhoseink94@gmail.com',1,0,'276e408a473fb4f8fc144e699d3e7a945c9b6b3b','Amirhosein','university of tehran','2013-06-05 11:45:55','default.png',2,-1,1,1,0,0,0,0),(1401,'mirzargar','0703ad7aafe236391fef6336fe5a366751977d25','alirezam2006@gmail.com',1,0,'dbd127bdc3a3dd84a4c66d6b87e7960a827e82a1','alireza_m','tehran','2012-12-28 09:28:40','default.png',2,-1,1,1,0,0,0,0),(1380,'fata','9ca73826b6b6231f1d377c3ee5d361dca3572711','fata.lavasani@gmail.com',1,0,'1b5aae6666984db63e3d9ba20e3aac03ad8b2c76','fata','shahid beheshti','2012-10-06 15:52:15','default.png',2,-1,0,1,0,0,0,0),(1381,'amhtal','2be5af7d531d3113c9389091d228e361975a7dd9','amhtalebi@gmail.com',1,0,'6bc1494aafbae992b551599707ffb221e228d9d4','amhtal','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1382,'jayant','27312c10d69fcce44adf37be7787d009c7600266','jayantjpr@gmail.com',1,0,'326c726b2600864f4a34acf54b9f9aa3cff68ef0','Jayant Gupta','IIT Guwahati','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(1383,'akhavan','6b813866fc5ce877bc862f0702ec971230a1b8f8','akhavan_zeinab@yahoo.com',1,0,'7fd7950b2226c317b5155e3f4ec7bd408507cd33','ZAFE','tehran','2012-12-30 20:17:43','default.png',2,-1,1,1,0,0,0,0),(1384,'sara.h','e17286ca53b7c83d3f6a16aebababd1cc4778bf2','sara_hadian@ymail.com',0,0,'a8fdcb278214180fd7ac577b4b29990521a14168','sarahadian','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1385,'Mohammad.Erfan','bb085e17888b65451ba4a27fa65254df5ab580a9','erfan.molaei@gmail.com',1,0,'c077addab9bdf750a1309aa6015afbcd3facfdb7','Vicious','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1386,'z.rezvani','d94a1f90950e4c99209839633bc4a9c471f16ad3','zrezvani@rocketmail.com',1,0,'2fcf6962896eee48571b63832ccda02af52f5ea9','z.rezvani','UT','2012-12-28 13:39:40','default.png',2,-1,1,1,0,0,0,0),(1387,'aradmokhtari','814f329edfd56d61af68295c9e24289904477214','arad.mokhtari@gmail.com',1,0,'3273859f3152370a0922fa7f4af911b33947e014','DJ Arad','University of Tehran','2012-10-26 11:01:46','default.png',2,1,0,1,0,0,0,0),(1388,'AreZoo','376fdcc0990553f5ea17a03e3756e35e5cae3a6e','arezu_hatefigh@yahoo.com',1,0,'eb038e0ba50c28dd8cda3d7cef620c78202e5d7e','AreZoo','UT','2012-12-29 19:06:07','default.png',2,-1,1,1,0,0,0,0),(1389,'melkiades2','b46b9bcfaa9f770cd60b58a8379a5542e7e18c1d','mohammadaminzeinali5@gmail.com',1,0,'d3db91fe3b78790027be114b194fbca591caccba','melkiades','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1390,'mhzarei','6da827baae567d0aa86958a6fc32e7dcbe84421f','mhzarei@chmail.ir',1,0,'bbe41bf1e5d3969cbf6318b92aca5dece9dc2933','M.H.Zarei','UT','2012-12-30 23:19:27','default.png',2,-1,1,1,0,0,0,0),(1391,'shirin','d5c6a02a3f1728558248ca232f32d8c2222d3c84','kalantary_shirin@yahoo.com',1,0,'c6d63c8fbe281021af459e8282e8f46e3ec3e908','shirin','UT','2012-12-29 07:59:06','default.png',2,-1,1,1,0,0,0,0),(1392,'mmsz1992','7b711b74513e65df1bfb26a5ad17dd5c4f284748','mmsz1992@gmail.com',1,0,'36bf6cfca00ab9dd9ddb5467b661d8c8c5c09a02','VVIP','tehran','2013-01-21 10:49:03','default.png',2,-1,1,1,0,0,0,0),(1393,'Cih2001','fa0b5d2596990c746e476869eb6a9a05e02e0114','hamid2001_cih@yahoo.com',1,0,'2513a41f2e38c8ab45aef3268446681da1ff63cb','Cih2001','University of Tehran','2012-10-21 16:50:38','a6377d6ff62d433a97cddf9ceb7fa2f2559477a9.jpg',2,1,1,1,0,0,0,0),(1394,'zerophan','a3817e70041deb2eddedf70840081432f0b97ca8','zerophan14@gmail.com',1,0,'290d82749d76faf2bc1e89c60e81e9149b3ca5e1','zero','','2012-10-10 05:12:21','default.png',2,-1,1,1,0,0,0,0),(1395,'hindol','fe7a9a25a4d2c88c0271051f13885e9f9a85ca70','hindol.adhya@gmail.com',1,0,'3e899ec1adcdd79482ecbaf87790e0913bbdfa4e','Hindol','IIT Guwahati','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1396,'gharb','46bcd94800653ff7bd95ac200681fd46256fbe16','hmd.gharb@gmail.com',1,0,'2ed55f47a735d74522f4f9909a9a7c98cbb0bed0','temporary','thehran','2012-10-23 20:30:11','default.png',2,-1,1,1,0,0,0,0),(1397,'Soltani','c30a344c92b411bca7be62f2bd8b2449cb43060a','soltani.azaruniv@yahoo.com',1,0,'db511a7e39d75ab538b0b8c4156e71cc41feff5e','Teacher','Shahid Madani Azarbaijan','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(1398,'zahraghaed','1cd766aa8ea6bffa97fdc2c0b3d021edd7a2783c','zghaed@yahoo.com',1,0,'5e8727dd9f452ea7b7007baa7746febf96a1deec','Zahra Ghaed','University Of Tehran','2012-11-25 17:05:16','default.png',2,3,1,0,0,0,0,0),(1399,'msdn','e4e61b4a0ea04d0b3408ed8e9d47b7dc5a9b545f','msdn2013@gmail.com',1,0,'e63e2d6049090ca4f38dc122d76e10f4e03552ab','mohammad sadegh dehghan niri','sadoooghi','2012-10-10 09:44:48','default.png',2,-1,1,1,0,0,0,0),(1400,'e.salehi','9fcbde60821774318c2c2bfced9feb093befef77','el.z.salehi@gmail.com',1,0,'1bba6f8fb30958318476c0b272ec15d966904069','elham','UT','2013-01-23 16:31:20','default.png',2,-1,1,1,0,0,0,0),(1402,'leon','2329520bd0f487054dcddda116fbf90138637809','seeserke@yahoo.com',1,0,'933edd722ff5a9ed07ef130d6135f1ac2be3dba5','Leon','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1403,'s.mehran.tavakolian','59664ce7e0ef57029f5746ac88276f74e53992f1','moghim.yfz@gmail.com',1,0,'a31c7b7550a1347bc4a5599991cf46e359ccf76a','resident','UT','2013-01-04 11:00:45','default.png',2,-1,1,1,0,0,0,0),(1404,'mattmnv','f5c17ceafd9de0266ca8eb066cb770f7f5e1ff95','mmonavvarian@gmail.com',1,0,'0475e97df3fbdffc1693484be1954e76dd9f8abd','mattmnv','University of Tehran','2012-10-23 12:55:58','default.png',2,-1,1,1,0,0,0,0),(1405,'imankhani','cfd5cd055d4cb11d81bb9f6c5280cbf4e678cfb4','imankhanijazani@gmail.com',1,0,'2775d7f6606a674b6e13540ccb45574a88e2787d','Iman','university of Tehran','2012-10-10 19:48:30','default.png',2,-1,1,1,0,0,0,0),(1406,'R7S2H','46ffacb2fc4e90e1483ab51ba816040a63f4a54b','re.shahmohamadi@gmail.com',1,0,'51fc6959547f8999aac5951ef3dd1288cda74655','R7S2H','','2012-11-02 16:34:27','default.png',2,-1,1,1,0,0,0,0),(1407,'Mojtaba.M','3f67e4dc701473b729c40d50c0b4e055a35e0e2b','mojtaba_mousavi_manesh@yahoo.com',1,0,'71617619095308d5e70e102ec652f4b9fd51552b','Mojtaba','Science And Culture','2012-10-11 08:45:05','default.png',2,-1,1,1,0,0,0,0),(1408,'m.yazdani','563cc8c9e609889aca967b94be60213100cf751f','mjaa.yzai@yahoo.com',1,0,'ca97cfb20fd8fc13a1090469811a551ae7e5f311','kormanj','university of tehran','2012-12-30 18:33:31','default.png',2,-1,1,1,0,0,0,0),(1409,'Hengam','e3223f0fedb7bc4e114d2d9ffaa5fef58498143d','hengam.t@gmail.com',1,0,'047a5d476656ef723f14f9b7ec3b16a96bac985c','Hengam T','Tehran','2012-12-31 12:55:27','default.png',2,-1,1,1,0,0,0,0),(1410,'ama88428','83e6fe3869743a6648399b4326f45d61a18dccb3','amadibi@gmail.com',1,0,'3eacdcbcbe0873645abb21d5c938a1b228a4be4a','ama88428','','2012-12-30 20:59:45','default.png',2,-1,1,1,0,0,0,0),(1411,'p.shoghani','d40a6480f426cbd87e541ef3288dd6a01ca848ef','peyman8842@yahoo.com',1,0,'372ad2f33d0e3d46de11596f2f50e3ab834be8ac','Dilon','University Of Tehran','2013-01-02 11:59:24','default.png',2,-1,1,1,0,0,0,0),(1412,'DAA91','2ec7f2b3bcd41c084deaa1d68283b361b20b1031','mbabaie89@yahoo.com',1,0,'b35e125d52b5f8df477c76a0d99415f833169f52','B.M :P','UT','2012-12-30 13:13:32','8353ae8d3e7854411b6042809b2fa4e24ba5746a.jpg',2,3,0,0,0,0,0,0),(1413,'majidfar','98780f71c845f31f786e19a6ec0baae7a1b6b3d3','mahdi.majidfar@gmail.com',1,0,'6205f83e18b03a45e1f3d8cd63c800bafd1a85ef','DadDy COooll','UT','2012-12-27 01:22:10','default.png',2,-1,1,1,0,0,0,0),(1414,'ardavan','6b9da3071e01ae278bc6ea611d9bc883050a6418','a.pouryafar@yahoo.com',1,0,'e53c9c8244821a5f55429dd95b9d7805845b2465','ardavan','UT','2012-11-26 20:25:07','default.png',2,-1,1,1,0,0,0,0),(1415,'Kha5Te','f5846b77650163c00e49b495079a17da5bc1106c','moatwork1011@gmail.com',1,0,'597f7f4b5a30eca98c14b0739ccd6ebc7a77dec9','Kha5Te','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1416,'Yavaryrf','aead9999c147c8e1c295f9f2ccf704972a32275f','YavarY.RF@gmail.com',1,0,'f85b706b3f5e2e6f01bd416f825b09945d2ea429','Yavary','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1417,'SJ9V','c12c6a8b3ba9fd27dc099b71278c175276f8c786','YavarY.RF@gmail.com',1,0,'b87133d8016f93b05fe4d322173f9f4112d62729','SJ9V','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1418,'a.zargar','3a31fa4c0a3faa1e0fd412a2523f708d886be352','0.zargar.0@gmail.com',1,0,'a5d7b12f5c9429602b3aa256298ea84b823d7233','abuzar','tehran','2013-01-17 08:31:46','default.png',2,-1,1,1,0,0,0,0),(1419,'soroshsabz','4971478d7d45626d2305ea4f22b66197b2bef035','soorosh_abi@hotmail.com',1,0,'f432314223bcba8d4014535454e15a0e7ed5b769','sorosh','UT','2012-11-25 23:41:44','default.png',2,1,1,1,0,0,0,0),(1651,'M.Derbas','a0f7b7e605305f14cb416478c2a955368a4ef9e1','M.Derbas2011@gmail.com',0,0,'dc0fb5dac0929a995e9cc977a58cae261733399c','Mohammad Derbas','Hashemite University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1420,'fatemeh89','338a3ad0d4157fb9eda6f985f57b604e3a6c0b9a','amirahmadifatemeh83@yahoo.com',1,0,'d7ab1b526b112abe0cc5e708d816414a8a1c2e5f','fatemeh','tehran','2012-12-28 11:25:06','default.png',2,-1,1,1,0,0,0,0),(1421,'JokerH','880bf2909b184917a6430d9aacb4958403be423b','hamedraad419@yahoo.com',1,0,'8e83c545f9fda282b0c928d3ac112def512985fe','hamed','tehran','2012-12-31 21:53:39','default.png',2,-1,1,1,0,0,0,0),(1422,'mhm1369','a157d8e8c4e40c8a834bc0520ea8f692c09e4ae8','mh.masoudi69@gmail.com',1,0,'bcd6cef8357e306ebbf508e69cf0e12d226dc558','MHM1','Tehran University','2012-12-28 19:34:02','default.png',2,-1,1,1,0,0,0,0),(1423,'rasool.gh','83eee7c4cc5e48e7ec8a70eb8b4f8d32a27dac03','rasoool1994@gmail.com',1,0,'2cfa479f177d7184f806e0eb750d251dd8d14a1d','Rasool','Sajad University Of Mashhad','2012-12-09 13:14:45','default.png',2,1,1,1,0,0,0,0),(1424,'hatef','211bfa17cfcdeb0fdf7ddf973a81fc2db5b3281b','hatef.bahari@yahoo.com',1,0,'7ba5d487dfe9ffe1ee40ef0de4ee955803a018b1','CHoOnfang','sadjad university','2012-12-16 19:15:55','default.png',2,1,1,1,0,0,0,0),(1425,'anahita','86449bfc46c9dfa13043524898cc16398528946a','anahita_amiri_1990@yahoo.com',1,0,'3bb94f296700a11e890414f47bdbe7a75f69c796','anahita','sadjad','2012-12-17 09:54:31','default.png',2,-1,1,1,0,0,0,0),(1426,'Mahya','d37b279ab1ad0260e5866f275c743d02bae075a6','mahya_sadeghi70@yahoo.com',1,0,'5213bc8a0ad351a0354753a7bebdf7ca81dbea71','Mahya','Sadjad University Of Mashad','2013-01-23 09:31:59','default.png',2,-1,1,1,0,0,0,0),(1427,'ramin','d48e42d717d5f2e5a190059ddb269b092f5047e0','ramin_odin13@yahoo.com',1,0,'5d6ad6873fbe22ac0601fe64d23eb1c79dffd9e9','ramin_odin13@yahoo.com','sadjad','2012-10-14 11:34:39','default.png',2,1,1,1,0,0,0,0),(1428,'am614','8fbbe1b8e966811299b5ecd1b93d5faa957275d2','alishadloo@ymail.com',1,0,'ca3907cb8eea7aea69eb21da8f8ec01b24029695','Ali Sh','Sadjad Institute of Technology','2012-12-11 07:40:43','3233aff1c0b88bbd5e68baee74d47ffa906be341.jpg',2,1,1,1,0,0,0,0),(1429,'farhadkhadang','476887312101c1af8df81f24ab6f4a0d59c8559a','farhadqadang@gmail.com',1,0,'0250f7cab0e8e22b8008ebaf98abd856c4492e40','alzimer','Sadjad','0000-00-00 00:00:00','default.png',2,3,0,1,0,0,0,0),(1509,'khaniki','5b3eb2e2959defa9a6013124e4ad2fe8420a46ab','e.khaniki@gmail.com',1,0,'5fe16b8c53a09796aaf27be33e5871b3843b25d2','khaniki','sharif university','2012-10-28 17:55:36','default.png',2,-1,1,1,0,0,0,0),(1430,'shaho','ace1f367958af6a2b3ffcf4e312869a0450b0404','shaho.2000@gmail.com',1,0,'23ba7539b2637b0539dbf674b367b8ea68dacb69','Shaho','UOK','2013-04-22 11:23:46','14ef77c623b2a3fde968c44749647569e734d1e4.jpg',2,3,1,1,0,0,0,0),(1431,'AT3F','60d59c86d4014307f1ab58ce813fcc2b2bcc6f45','atefeh_zaker@yahoo.com',1,0,'cec47787d1002f94816b5f2d1f6f9d4f5167664b','AT3F','','2012-10-17 09:24:52','default.png',2,1,1,1,0,0,0,0),(1432,'mhsekhavat','9a41503ecc5ccdc52b873ec73792abec77218edd','sekhavat17@gmail.com',1,0,'306d91aae28d80aa55e5d12d17dd172f47a333ee','MHPKH','SUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1433,'mission','4195b4aeba54e06141d212af34b431c25e051162','houshmand_2007@yahoo.com',1,0,'d30127cc0829f0c7a18e58214f0634e591b8f2c2','Mission Impossible','University of science &amp; culture','2012-12-06 05:28:16','default.png',2,1,1,1,0,0,0,0),(1434,'nazanin','b131aaa1a2bb39131ed6f21938c7618442a03072','nazanin_sungirl@yahoo.com',1,0,'571c06d16d432ce0edd76856fd648e60ac111da0','nazanin','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1435,'mahmood.m','2d0b427d330142f19c4424118660367d9df98bd5','mahmoodtn2@yahoo.com',1,0,'662b780efa35633ff882eb0f2dd0760db915f104','mahmood','Sajad','2012-11-21 09:11:10','default.png',2,-1,1,1,0,0,0,0),(1436,'TSS2000','3252fbe254bb8c09667a9c90ff41031e005edcf1','tbarmaki@yahoo.com',1,0,'463453f59ee73319daa53ac88d18903f9a07fac3','TSS2000','sadjad','2013-01-22 20:51:11','default.png',2,-1,1,1,0,0,0,0),(1437,'nojum70','a9b6bfc400aeb7bc97b346125d8223f61ba33315','nojum70@gmail.com',1,0,'0da6edf16861af8dd7105adf8bbe838cc376ee46','Morteza Ha','Sadjad','2012-11-01 10:00:16','default.png',2,1,1,1,0,0,0,0),(1438,'jannatmakan','3632b32cafd28d6be2097d5132bf270384e4883a','mohammadmhs13@gmail.com',1,0,'73f3a9e0c78423aa1fe670967e4467e706a92a2a','mohammad','sajjad','2012-12-17 12:15:42','default.png',2,-1,1,1,0,0,0,0),(1439,'mojtabaarab','7b4d74e755d58aa7dbe9828766af298b648eefbb','baseri.programming@gmail.com',1,0,'96958563b1ff54ca5f02fb38f8f4b88dbe7d4aba','mojtaba','sajjad','2012-11-22 09:30:11','default.png',2,-1,0,1,0,0,0,0),(1440,'negin','45613caf8512c83ba21fcb1e768eef470e9fed6f','nazanin_sungirl@yahoo.com',1,0,'436a49cb7d6102f5859947651e44590b56cbe615','negin','sadjad','2012-12-02 11:23:44','default.png',2,-1,1,1,0,0,0,0),(1441,'altinayjorjani','3c5bfdd888da8d3d498f4640734a8c76f67584a2','altinayjorjani@yahoo.com',1,0,'e3028426164f871de06a0a843ee4e1026c4262a8','altinajorjani','sadjad','2012-11-06 11:23:17','default.png',2,-1,1,1,0,0,0,0),(1442,'am.tavakoli','c2ad534748749b45816bf8c956e172f1881be15b','amir.tavakoli1992@yahoo.com',0,0,'1dfafa82846eadec49a209bcf02178e928bee84e','devpass','sadjad','0000-00-00 00:00:00','default.png',2,1,1,0,0,0,0,0),(1443,'m.hoseini','890cf5f245501e988b16091d0c07723f5976bc4e','pajuhesh_s258@yahoo.com',1,0,'830103a95fbccd5ec324f45da65ebdad7b8614e5','s.m.hosseini','sadjad','2012-11-20 16:50:35','default.png',2,1,1,0,0,0,0,0),(1444,'fataneh','2d294bca33d9de2eb173ff275bcb1d82d14572b8','fataneh.mohamadiyan@yahoo.com',1,0,'ad468e6f242cbdb37ab4002fe809a86e22bb6a6c','fataneh','sadjad','2012-12-26 08:25:19','default.png',2,-1,1,1,0,0,0,0),(1445,'elikab','607837a2dbffdd462b2fc29744f771fdb645c4a5','elika.bozorgi@gmail.com',0,0,'57e358a7e6e9a5a93d237da16bb858865394a08e','elikab','azad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1446,'MHF20','bbaafdaf1896f36f705bf12c910de94d11497ca9','mhf2013@yahoo.com',1,0,'742f7f8b2e8ef8a987a447474af5fb2a2bc35bc4','MHF20','','2012-11-22 16:07:48','default.png',2,-1,1,1,0,0,0,0),(1447,'mohsenmgr','36ceb1c0c5f45ec5bef396975781b3216bf45fd3','mohsenmgr@gmail.com',1,0,'423caef7654501f5220d8928bbba51b396552b93','Mosen','Sadjad','2012-11-18 09:30:11','default.png',2,1,1,1,0,0,0,0),(1448,'behshad01','1e82b91065c2d3b9e6a12b634134a8385e38a61a','b.mousavi@mail.sbu.ac.ir',0,0,'9ec7ae11fa373aebf6e9bcd63ee6e1e75394c1ad','behshad','Shahid Beheshti University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1449,'stagrovin','1e458bb6e2b40e8920afc233d98e3f678d0dcf11','stagrovin@gmail.com',1,0,'6aa81307630ce3f8c47c3d1656c5b469d699ca87','stagrovin','Calle University','2012-10-19 12:51:33','default.png',2,6,0,1,0,0,0,0),(1450,'niranjanMaisnam','3b231696cd0173ef68694d29079414e0d3086e11','maisnam.ns@gmail.com',1,0,'63c40cef8fca07567ad1d74fd6fe3700b7fa94ce','NIRANJAN SINGH','Anantapur Engineering College','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1451,'Vicious','8b63c745a2a8b0dae394e2d9fbaedbd3264b32c3','fallen_villain@yahoo.com',1,0,'a83c62c2d379899600e95e26f1d1e66d56f8b880','n00bK!ll3r','UT','2012-12-28 18:21:08','default.png',2,-1,1,1,0,0,0,0),(1452,'computerengineers','aa791a3dc155c1fb84c3c08c5b971935bba39339','galaxi.light@yahoo.com',1,0,'e1c5aeff1133886924a66700fb8f7f7dcb4471eb','computerengineers','mohaghegh','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1453,'qaqalili23','c666d9fe28ce69c04d00720702a1f9f4aa4417f7','qaqalili23@yahoo.com',1,0,'ca2449449bf7ef69f700a2a308f8739e8957b841','benben','shahid bhshti','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1454,'yasharkhan','0e041287dbc2433201779211a74f90762bc7b67d','yashar_dorostkar@yahoo.com',1,0,'07ef441275c4ddf411daf579dae442360ca8416a','LaSt War of LuCiFeR-YasharKhan','Payam Noor Urmia','2013-01-25 18:20:59','4ca14902b613386991adbf1463b1920a50c7c367.jpg',2,1,1,1,0,0,0,0),(1455,'mj.mh','1817b99eaca4461c71f68e4f8098bcb8d79d6206','mjj_mh@yahoo.com',1,0,'23e06f21dc71268fc350b624d810b67a1101a052','mohammad javad','sadjad','2012-11-14 13:34:47','default.png',2,-1,1,1,0,0,0,0),(1456,'dannylkzn','a7e6498ea1387a1b1611ca229a78923780fd74eb','topdogg_tnt@yahoo.com',1,0,'7d8954d3e01feedbc283a01bc98f84a4dc9b3cf5','Topdogg','Sadjad','2012-10-28 10:12:10','default.png',2,-1,1,1,0,0,0,0),(1457,'luna','71447f0e445502a7e3a1f9483b24040bf1ee35b7','naaninnazemzade@yahoo.com',0,0,'fe08d4b05098290ad175b91382c38ec2f9695d08','nazanin','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1458,'moonfang','c52d457e10134f4425f9dd6731b3dc26ec28c89e','nazaninnazemzade@yahoo.com',1,0,'0fd1dc2761054dc4d351cbc922d5f7bfbe61f2d7','nazanin','sadjad','2012-10-21 09:40:46','default.png',2,-1,1,1,0,0,0,0),(1459,'iman.amiri','c3a2642bedc482a64aa8fb42c01526beebd78d8f','iman.amiri281070@yahoo.com',1,0,'8a1ff8573f9bb7be26a21acb0d5c943d04b3f548','iman amiri','sadjad','2012-11-18 12:35:17','default.png',2,-1,1,1,0,0,0,0),(1460,'reza.nazi','088360b1405b56c2665800e586fd7cab6291e4fa','reza.nazi@ymail.com',1,0,'6a6375803c164d831e93d2ba4ed98a381f65e469','0_o ------&gt; o_0','sadjad','2012-11-18 12:34:23','default.png',2,-1,1,1,0,0,0,0),(1461,'na3rdg','da57c227de819285afc897d3d66bd75ce5ba522d','na3r.1991@yahoo.com',1,0,'2c94d6ef6d20ce577220098210c2a39ea7bbe5b3','na3r','sadjad','2012-10-21 12:06:57','default.png',2,-1,1,1,0,0,0,0),(1462,'farhang','9e70885eeb699648b87232ee316bd31d5b44529a','waezi.h@gmail.com',1,0,'0731217400a619a748a7c2044d4285e27546f514','hamid','sadjad','2013-03-20 06:58:31','default.png',2,-1,1,1,0,0,0,0),(1463,'hashemi','7027f647c9f16936e245b738e03f789a5de239c0','zakiyehashemi@yahoo.com',1,0,'6a53c36e2841f08cc154e27b655b7a6e29109164','zakiye','sadjad','2012-12-24 11:39:44','default.png',2,-1,1,1,0,0,0,0),(1464,'hosseinzade','0d7a9e06e45da1ebce6b9fc3d9bd9223add1f68a','sara.hs69@yahoo.com',1,0,'ae140ff338826ff9dc81663536ad2ffc13eb58ee','sara','sadjad','2012-10-28 11:40:41','default.png',2,-1,1,1,0,0,0,0),(1465,'momen','e276b9bdc34c077654d20bba9b04ae76f3fe67eb','saramomen882@gmail.com',0,0,'685b53447b8adc298791899017ad6cf0137cf13f','aaaa','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1466,'sami','cf89259241d0af7b82700655f783a05b5845bb1d','s.jahani89@yahoo.com',0,0,'76f358ed5b7c1c3f111972bb3f00a57f33d8e710','ssss','Sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1467,'afsharnia','d690bacbc8725ba905170ad86177bfd4324609a3','saafsharnia@yahoo.com',1,0,'9aa568a0dd1c46890565dabd014e4f73eb5d0dea','saaf','sajad','2013-01-23 08:55:34','default.png',2,-1,1,1,0,0,0,0),(1468,'nadalizadehparinaz','0ff1d2a10aa78e8e84dce6711f0754fc5c8c38ba','nadalizadehparinaz@yahoo.com',1,0,'0a9bd4a9639376cb10efe2fd66c82363aad53a3b','nadalizadeh','tehran','2012-10-27 19:55:07','default.png',2,-1,1,1,0,0,0,0),(1469,'momenzadeh','70b2c8863b513049b0b50b090fb15410f71b4915','saramomen882@gmail.com',0,0,'f3d9c0121450e0b88759f680c47c34f95089a491','sara','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1470,'momenzade','4d8ee7dccb3d90ad062165853a5051cc9329e8ce','momensara@ymail.com',1,0,'80c696a4280beee62e667c32e74cae77cbfcb5a9','sara','sadjad','2012-10-21 16:22:48','default.png',2,-1,1,1,0,0,0,0),(1471,'momen1','a30a717571011d1661fdd29849a3d05404d0d209','momensara@ymail.com',1,0,'f38d8c59755e5ea464372f1fe2e9015756be4a43','tahere','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1472,'kheirol','5c6c386e77f63243ed783b1c2b7b3cb1521094d3','kheiroddinmaxy@yahool.com',0,0,'0a82664124a59450a5858d4cbd437ede3de58b8f','kheirol','tehran','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1473,'zahra.hashemian','a2fb4a41e5db5093747305989e2821dc840563cc','zahra_hashemain@ymail.com',0,0,'b6bff8d289d905b1f75bc445fcf8ed40243ddfbc','zahra hashemian','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1474,'farnaz','a87386bf92b5f22f06d70f140f299d5de3b647e5','farnaz72daneshvar@yahoo.com',1,0,'219b029381c7f66f8cea8f2153efa014931e3d17','farfar','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1475,'R.shojaeipour','7f0e88a667f51895240009b773d5d10c8e704f97','mr.green1001@gmail.com',1,0,'ef948d58deb3d1f41ef03f2f582d44ad20ac54a5','R.shojaeipour','sadjad','2012-11-18 08:45:46','default.png',2,-1,0,1,0,0,0,0),(1476,'1992nila','f5daa6a190d8905739898c9373002864c69da5c1','1992nila@gmail.com',1,0,'daa756f57bcecba7b2cb7567c23ab44ed2001513','nila','-','2012-10-23 19:20:38','default.png',2,-1,1,1,0,0,0,0),(1477,'rezafarboud','71adbdc7ca8525bc6464e2c86433ea8ed0c71fc9','testbehrooz@yahoo.com',1,0,'760f8d7f2ce4e5687a53dce275e7d9e16603e070','rezafarboud','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1478,'bs3216','48869ef5fe5102e7f48dbc1e96560632bfaf271a','sahnaseredini@gmail.com',1,0,'0d0992511e7e57811e900c1aa83ab91cd3c4df93','bs3216','University of Kurdistan','2013-05-02 13:55:55','7586ae59a107261743789aae72fdcb434b21ec58.jpg',2,3,0,1,0,0,0,0),(1479,'rundll32','9b852f8fec1d227de5901f740126737412b253de','novpost@seznam.cz',1,0,'ca35852baad32535859e97afa691cfd9982862d6','rundll32','CVUT FIT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1480,'paliz','fd644eff5271c1a289bd68fb075687933091b3c8','rezapaliz1@yahoo.com',1,0,'cd0bdde1ed02cab2c4c1a2f015a36e817da5ae00','reza','sadjad','2012-12-28 12:39:49','default.png',2,-1,1,1,0,0,0,0),(1481,'BlackCoder','b0988839ed630fc31b13d41b3c90949f1d01dfa3','lovelymoon9120@yahoo.com',1,0,'51f4caf21c59707ddc5b19747d89f8b809385fe9','BlackCoder','sadjad university of mashhad','2012-12-31 18:19:45','default.png',2,1,1,1,0,0,0,0),(1482,'Meraj','2aab6d498ee61110362b0e66ffa6c228923958e6','meraj.vossler@yahoo.com',1,0,'ae15192f43a854a33bbe71016f3d4b73f205486d','Son of Sparda','Sadjad University of Mashhad','2012-11-15 15:42:34','default.png',2,1,1,1,0,0,0,0),(1483,'waezi','d490487cb1198198ebfe57f04963d6cb91bb0af9','waezi.h@gmail.com',1,0,'e409ea5b2c74fcaa201394ddda83e39e22084b7d','hamid','sadjad','2012-11-01 09:29:04','b8ecdab9fc294e3323bc7458dfab232e7cc937a9.jpg',2,-1,1,1,0,0,0,0),(1484,'mohsen1373','175254822604a39feb1098319583d2a156137dca','mohsen.gh73@gmail.com',1,0,'211141971b2c86bfe8e16814681e0ffe52ae8e44','Moh$en','Sadjad','2013-03-30 21:33:09','824c9e95ef7e561fb75a2689f4a639d90ce72627.jpg',2,1,1,1,0,0,0,0),(1485,'roodnil2','f37aefac01f244be8aad2643faf9077ba862c885','hamedgramzi@gmail.com',1,0,'b59482c126f66b265e98883f377e242a52aca38d','hamed','fum','2012-10-27 12:13:36','default.png',2,-1,1,1,0,0,0,0),(1486,'farnad','412aac346a9caa1144a99fb41dc5c4117acf31f8','anarchy_qween@yahoo.com',1,0,'2858dcde84ed4a31378c163c026a890ceec31439','farnad','khayam','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1487,'kooshesh','20898de9afe435fe141f40e369332fe104fbc352','little_sparrow_11@yahoo.com',1,0,'c4ebed074ab8dc66537a1e9db26c6a1872259a9a','kooshesh','sharif','2012-12-28 12:20:20','default.png',2,-1,1,1,0,0,0,0),(1488,'arash.it','f443c2ab950dae4a387715db96f1c12721e48e99','arashparva72@gmail.com',1,0,'e17ff0d64abb691b571e906afe805ae7b04a8968','arash.nit','university of kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1489,'mohsen0ix','fe621b947b0cbdc587b62923ed49e10c3af3e975','mohsen0ix@gmail.com',1,0,'86bd140aaf008eb9fff155de6e87147d9aacee5a','mohsen','SHAHID NEHESHTI UNIVERCITY','2012-10-27 17:10:13','default.png',2,-1,1,1,0,0,0,0),(1490,'XxRONALDOxX','fa6528963122bed52634fba7ba6f79cba7b5b6ce','xx1372xx@yahoo.com',1,0,'60d7ed4d918478ea84a971bc20003c2f8526b2e8','*RONALDO*','Sadjad','2013-02-11 07:02:48','default.png',2,1,1,0,0,0,0,0),(1491,'h.sara','e0c0c38ebba407f13a8cb75ce409db8a828472a8','sarahadian44@yahoo.com',1,0,'cfceeb50929f84e1ff982fa128496b0f9329ecb8','sarahadian','tehran','2012-10-27 20:21:33','default.png',2,-1,1,1,0,0,0,0),(1492,'hoda.hushyar','ad3271ce72453959680e1054c03ef59cc62c51c7','hoda.hushyar@yahoo.com',1,0,'5ecb4acd6ef12fe693e0b1c8a846c236234007a8','hushyar','sajad','2012-10-28 09:30:17','default.png',2,-1,1,1,0,0,0,0),(1493,'hamide.ghiabi','70c541f5e2dc554d5e85d76b45866a3dd2973ac9','h_ghiabi@yahoo.com',1,0,'fab681642cbdde899106542249326d7ee84e6689','Ghiabi','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1494,'mahsaebrahimi','f2291d66ed0f4f6ebd305b9f74635cfb1d8ec7bf','mahsa_ebrahimiit@yahoo.com',1,0,'a4dbdf70681f76d901b356d8cfeaf7a53d22d70c','mahsa','sajad','2012-10-28 09:22:59','default.png',2,-1,1,1,0,0,0,0),(1495,'f.bakhtiari','755fa8aeeef328bb26b7bd48dbe626b6f2e70583','freshtebakhtiari@yahoo.com',1,0,'fbaa6f2e5637638aacb1c08e78fb1e90d45d552b','freshte','sajad','2012-10-28 09:37:27','default.png',2,-1,1,1,0,0,0,0),(1496,'samirapatuii','43f080e3c2501bd3d1312b97c1b93fc6f12ee1e1','eli.s1991@yahoo.com',0,0,'13c1b482adc3dcad94adeaf469ad8a66ed7b3d14','samira','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1497,'zohre','4bd0a22c0827da94af1cdbc2162436931681d523','sanaz9586@yahoo.com',1,0,'de0f6eec751dab701afded94b42f9872ca8802a6','sadjad','daneshgah sadjad','2012-10-28 10:03:05','default.png',2,-1,1,1,0,0,0,0),(1498,'h.shojaei','8b368150f6035f29833768bb0365cf1661ab7b44','hassan_shojaei38@yahoo.com',1,0,'098859e2b238b4afff0c271bb20a602c66679a30','h.shojaei','','2012-11-15 12:21:27','default.png',2,-1,1,1,0,0,0,0),(1499,'hamideghiabi','48e7cbd20a8cce32b0a3623635d9e81518cf1d56','h_ghiabi@yahoo.com',1,0,'690f20730ec85ea2f750e64434c3b56bf2aa4843','ghiabi','sajad','2012-10-28 10:23:20','default.png',2,-1,1,1,0,0,0,0),(1500,'Ghostrider','4e675281d4746d9a6c09ab813ea752325f3725e1','just_4_fun_n1@yahoo.com',1,0,'702ca5c1a2eb87fd1c19ecb9fe0af6034213e1fa','Ghost','Ferdousi','2012-11-03 09:33:06','default.png',2,-1,1,1,0,0,0,0),(1501,'elii','2fad60948c9485c6e0486376038347430eb2d7c1','elaheh.sadr@yahoo.com',0,0,'f1af7adf6b9ef632e1e1de76f9a2527d2036b2ea','elii','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1502,'noroozi','e07d3132ed926b9c3a1ec61b0e079669a6424ecf','noroozi_s68@yahoo.com',1,0,'25e1d5a0259517aff3ce3ec0de4753181b1237fb','noroozi','sadjad','2012-10-28 12:04:52','default.png',2,-1,1,1,0,0,0,0),(1503,'mostafaroshandel','b2dd16116041b861acd26f9854e10d2c5225445b','roshandel_723@yahoo.com',1,0,'050d8c88bec72ce10c44e857c56a470b4964876b','mostafa','sadjad','2012-12-02 17:30:18','default.png',2,1,1,1,0,0,0,0),(1504,'arash','a77ee2aeb4f63f064f898e1d982dc31e267e486f','arashzahraei@gmail.com',1,0,'3c477283543b5188f8412b36adc988be6e7491d4','arash','sadjad institue of higher edgucation','2012-12-02 11:52:38','default.png',2,-1,1,1,0,0,0,0),(1505,'saro.kaseb','52c2b368e9838783d50716f59d1c95aacf8fbfea','saro.kaseb@gmail.com',1,0,'9c65071a56f381e2f81a7a50813ea693e60806a2','saro','University of Kurdistan','0000-00-00 00:00:00','default.png',2,-1,0,0,0,0,0,0),(1506,'masood.z','8fa91a06f7ac351aaa263f4b4ad863dbe3bf4014','masood.zeinoghli@gmail.com',1,0,'c57afe1407fa65a838778d5e37380eff91e992e2','masood','sadjad','2012-10-28 11:22:36','default.png',2,-1,1,1,0,0,0,0),(1507,'khodemuni','44286415d97796e6e81e991fea14c23264befa4e','aminaghajany@gmail.com',1,0,'0fecb82ea20b9da3683c65e6ca01775b54ccc268','kh0d3muni','qom university of tech','0000-00-00 00:00:00','90617107d0a933dc0e5bd816fd96d89eb4715450.jpg',2,3,0,1,0,0,0,0),(1508,'rreeyy','fe068ab35e488f61cb0cac8e79f38710626d2868','rrproduction2@yahoo.com',1,0,'a2894187fff2e415f2235d408f314ee213cd99ef','RasOul','Sadjad','2012-12-29 15:27:19','default.png',2,1,0,1,0,0,0,0),(1562,'testtest','7f130e412d27a3ba0b33383945bccf4f419093eb','testtest@yahoo.com',0,0,'d41051754e0d469bbdb014535f92c16768b2a96f','testtest','testtest','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1510,'mohamadreza','84a000f16f80f71e532aec504c9e15f57ebf126d','mohamadreza_mq@yahoo.com',1,0,'673b9c8fb41378ba15217e3b8a1d1806e6ece548','mohamadreza','sadjad','2012-11-26 10:42:57','default.png',2,-1,1,1,0,0,0,0),(1511,'JBPr','d72b91c35244acbf96b744423d97ce5cfe41e9d6','JavadBorhani@yahoo.com',1,0,'7926b8b52d410e2fc41a5e5875c45b7139a3ed5d','Javad','Shamsipour technical faculty','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1512,'shnbv','ca80043b97e48874658406c3a55c2bc23f250391','sh_nbv@yahoo.com',0,0,'657f55cd7cceb480c567b146455f6dd83e71dbec','shahab','shahid beheshti','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1513,'Aminfadaee','054b455d5a8b8cc5ac6ffbf8ba91a32e1c1e04c0','aminfadaee16@yahoo.com',1,0,'10fe33e92f2fb5d8624a3e931c6b9d0c415df0fe','Amin','Sadjad','2012-10-30 09:02:03','default.png',2,1,1,1,0,0,0,0),(1514,'amin.a','7d8bd579b277c96374880c4ee6b217daa408f1e5','amin_ahmadi89@yahoo.com',1,0,'3df89e47b923bb1dc1c70460c594c0da5bf4d975','amin','sadjad','2012-11-14 10:01:46','default.png',2,-1,1,1,0,0,0,0),(1515,'DanialJahed','d8a5a7f212cce629902392469d58a46f563ecaee','danial.jahed@gmail.com',1,0,'ab9c947e0b5a1f9af0b0fe59867ec7da1dcf9004','DaNi','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1516,'8917050125','9f495c73aaf9b6d384889503da8856beb1a03a73','zahir.noorie@gmail.com',1,0,'0c13512da6af823504470b7b66fe1bfc3da5d9b1','zano','uok','2012-11-01 17:12:10','default.png',2,-1,1,1,0,0,0,0),(1517,'881333146','7a1ca50d6f83c0c3756759589d1e8054b5a3b11c','satar.sufi@gmail.com',1,0,'9b32ac2f938be05acdb5884dd184a9b6a99bca71','spsp','uok','2012-11-07 15:04:03','default.png',2,-1,1,1,0,0,0,0),(1528,'silentB','b313488b64aef4db29a0ee569d76f06623aaacfa','mehran.a_1993@yahoo.com',1,0,'80629e26fe00ce085703d2f650bc1b5ad0f60fde','Silent BOY','Sadjad univercity of mashad','0000-00-00 00:00:00','ae4a1abf6ff7bce0788d5dbd097a97d6932a0645.jpg',2,1,0,1,0,0,0,0),(1518,'lsc20051426','40fc4ee884423290b993683aec61c3266f0e622a','lsc20051426@163.com',1,0,'0da5b5f38539e79438f6434297c61aea37f3934c','lsc20051426','','2012-11-01 08:57:42','default.png',2,-1,1,1,0,0,0,0),(1519,'raei','cabbcf223d5a577e767f5e496bf487d689f9b9d7','jar4125@gmail.com',1,0,'a1fb1d2766900f9ddc1ec16df10b23530fd34143','javad','sadjad','2012-11-22 10:41:48','default.png',2,-1,0,1,0,0,0,0),(1520,'shivarajabi','7908d06206a72f31245c15be9be032a69682bee5','shvrajabi@yahoo.com',1,0,'48bf110f38c4fdd2025d12250d719bc23de43121','shiva','sadjad','2012-11-01 11:02:24','default.png',2,-1,1,1,0,0,0,0),(1521,'baharehgolmohammadi','cf9c7354da935695944741cda51ae987fd5e1efc','bahareh_golmohammadi@yahoo.com',0,0,'f0f7932ca234e84c7d2dc198fcf4d50981492578','bahareh golmohammadi','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1522,'KongfuMaster','53979434b2f3ee5cbcf659212c269c543930a993','amir.tavakoli1992@yahoo.com',1,0,'cbed3620ef7e7bdb221da30b9741260f4fc7c447','amir','sadjad','2012-11-01 10:22:04','default.png',2,-1,1,1,0,0,0,0),(1523,'matador','f5d3034626c8cee1fc03b318febfd61de75b53da','hamedmoqiseh@gmail.com',1,0,'ca2f4489f16b8b234f7cae04c92e26bca0fa6e80','matador','inja','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1524,'sliversoft','ba2178e7b1927de431d7bb6b4e60cdba8a151f47','sliversoft@yahoo.com',1,0,'02eadeec197639d3cdb2d07e9d4296e3c73813f2','Majidm','Torbate Heydariyeh Higher Education Complex','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(1525,'NimaHK','afddf273b6c9baefe6877a9eddfdd13c3cc2a78e','Nima.khodadad1@yahoo.com',1,0,'fcf17c636f04a64d61b418f65cf310ba916d23fd','Nima.HK','yazd university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1526,'adslcx','ab84be604193aa325fa8b6124e3a4340a1505877','adslcx@gmail.com',1,0,'98b5baad9f45fa1e1cf3ea19f3436baff54fac09','calxi','UCB','2012-11-04 08:05:47','default.png',2,-1,1,1,0,0,0,0),(1527,'Shaskesh','2da789f8ca5376fba0bb34ada64074de7d1eed5a','marshal_sman@yahoo.com',1,0,'d0b11f72a0b9cb2eaa8118213b81c353cd187dba','Shaskesh','Sadjad University Of Mashhad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1529,'setareh','5d914538108fcaf564c7dd60cc9570da42076e32','setarehforoutan@gmail.com',0,0,'6cdd30c9ce2c4ef6c516945e8a88f5d896dae30c','setarehf','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1530,'masoud88','14e1899948092bfae10d50c457f808fcd73af31a','masoud_salar1370@yahoo.com',1,0,'89f80aa899b55e56497f9bb295423df208ff2632','masoud','sadjad','2013-02-01 16:18:37','default.png',2,-1,1,1,0,0,0,0),(1531,'marandi','fbc795ab651ff32f09cf75050639c38412e1823a','rm.digitallife@gmail.com',1,0,'1ec9d7975799a44e2dabaaf74a2cdd074421b501','Reza Marandi','Islamic Azad University/Mashhad','0000-00-00 00:00:00','default.png',2,7,0,1,0,0,0,0),(1532,'midnightwish','b4be613107914331e3ad28ed92de40c11f5b32af','ali.hosseini.2987399@gmail.com',1,0,'ee0c4595d2cff0d82e7c9729070e5940291b16d8','ali hosseini','sajad','2012-11-07 10:04:09','default.png',2,-1,1,1,0,0,0,0),(1533,'golnaz','9574e402b49d2ffbf9fa2eeb54e94311e42fa008','jo0jo0_glz@yahoo.com',0,0,'501378ccf590b8bf77936cbd4efe27545d5ddc3b','golnaz','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1534,'Shadi.u3fi','25a60d1e040d209756f4f1a85a0cc4ac0ffaffd8','sh_yousefi.u3fi@yahoo.com',1,0,'c410e0685128c579c42b800bc342a4d60e3f5f43','Shadi','Sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1535,'Parinaz.prz','1d22d35283bc7741701a3720806bf17e8f0b2fc3','pourreza.parinaz@gmail.com',1,0,'76b8dc67adf49dd41e372bfbdac5296ca72349b5','Parinaz Prz','Sadjad','2012-12-19 11:59:03','default.png',2,-1,1,1,0,0,0,0),(1536,'hamide','005649e2be8cf084bf2c9b32a66e8ee852cb993d','alon_girl2000@yahoo.com',1,0,'2d47f2bf57fff5c64a0354c232850c7b9bf8086e','hamide','sadjad','2012-12-12 11:50:01','default.png',2,-1,1,1,0,0,0,0),(1537,'justin','a87b22fe66ffbe85c33dee1a9d20295c2f13e2d6','justin_love1988@yahoo.com',1,0,'3f3800b1f1aa5c502a5c593a310722277a149796','justin','sadjad','2012-11-14 20:03:22','default.png',2,-1,1,1,0,0,0,0),(1538,'alone','ad4f9dbe3602e460b2e0128822c4388ceb57dd65','mohammad.mahdi.bigdeli@yahoo.com',0,0,'b423053083d081f332b23d2e37046e9f1419d923','alone','birjand','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1539,'h.ghasemzade','784423ca77c1f14b57b62026b40e3657cfbb83a1','karen_hide2000@yahoo.com',1,0,'b1c26b41d949dbd7f9a812b3e49b4cb2590617ac','h.ghasemzade','sadjad','2012-12-13 10:18:52','default.png',2,-1,1,1,0,0,0,0),(1540,'e.khorsand','a0bd69040fbd338682b71aead28d4bb6c75dda7a','khorsand.elham@gmail.com',1,0,'658dc3e2335be81bf8f36c1904d9cf42f485c9b7','e.khorsand','sadjad','2012-11-15 10:12:46','default.png',2,-1,0,1,0,0,0,0),(1541,'e.khandan','56e71771d4dcce4375017683c8903c782ec199fc','e.khandan@yahoo.com',0,0,'d585ca6491af3a70f866071cbc7f214f786f692a','e.khandan','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1542,'mahdieh','e04878ec11c4e0979cf0819ce52635d973f86daa','m.mohajeri71@gmail.com',1,0,'fa23f7aa3c4a5cce20906d9069ed5a0ab259ea5e','raha','sadjad','2012-12-23 09:13:11','default.png',2,-1,1,1,0,0,0,0),(1543,'atefe','f15380762428f8bf9a210ec9104dc39028eb5699','atefe.1372.mashhadi@gmail.com',1,0,'e6ee7aab83b4f2e2247f6fd3438901ccb6b8b516','baran','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1544,'mhdmhd','d6af5e1b42469d99244dad2c7637aa93e10a3b3c','mhdmhdpor@gmail.com',1,0,'41fc9d101e82fd373c30eafdd2d6ccaf5782e292','mehdi','uromia/pnu','2012-12-07 12:44:26','default.png',2,1,1,1,0,0,0,0),(1545,'naserfuni','4c2343e199e9111747cea2c7f0a2dc476b1ce525','naserfuni@ymail.com',1,0,'4039392b7f39174141a22ac9b3a95060005d36c2','naserfuni','ferdowsi','2012-11-22 19:58:52','default.png',2,-1,1,1,0,0,0,0),(1546,'segmentationf','0cccc1b903f3aa3b8291d81fd8ace06b72401013','segmentationf@yahoo.com',1,0,'01278664758c9e213c8004a1073a90e2598c157e','U of Tehran Segmentation fault','UT','2012-12-06 15:19:13','default.png',2,-1,1,1,0,0,0,0),(1547,'mahsa70','2811bdbea9f7eba448ee4d7be7bddf7185d5fd85','yagmur1991@yahoo.com',1,0,'e6f6e1cb77378e9e2c7aef2b351cd7b246dd7511','mahsa','azad','2012-11-10 09:15:09','default.png',2,-1,0,1,0,0,0,0),(1548,'obaidi','ca9511a1c67d6e4d1ab33bc9ef10423e0e43c846','mohammad.obaidi1992@gmail.com',1,0,'5c1600d8588265ac94d0bbd7a519137ce2be6466','mohammad obaidi','university of kurdistan','2013-05-27 19:12:09','db1a62424966552ce8d84e8ff3437e096d51abb8.jpg',2,3,1,1,0,0,0,0),(1549,'zahrasafa','e673441fe27b5ad4a467643ce48c05ecaa414bce','zahrasafa95@gmail.com',1,0,'273da67eedc1769c9d41e23d44f377f339a526ea','seee','','2013-01-01 12:14:28','default.png',2,1,0,0,0,0,0,0),(1550,'kalhoor','07a178cdf61d0883c8adfcb5f4d04f50201b418a','kalhoor.1371@gmail.com',1,0,'c9757ae1af5633277c0c60e613229d246e065b10','kalhoor','university','2012-12-15 12:09:43','default.png',2,-1,1,1,0,0,0,0),(1551,'MOZHDEH','48ccbe627d870d933820f6310c0e0a3de466f490','M_FARDI2011@YAHOO.COM',1,0,'3c27a441acf332f3652dcef13780e5b947bdb914','MOZHDEH','','2012-12-15 11:10:28','default.png',2,-1,1,1,0,0,0,0),(1552,'meghdad','b99a47b3a0330413ac14bb1cb2c33de81404857a','m.khosraviy2000@gmail.com',1,0,'02881239707a40ce0a0e1fec7f1b309203127c56','meghdad','university of kurdistan','2013-05-27 19:21:17','default.png',2,3,1,1,0,0,0,0),(1553,'kami','d6c940c6a87d1abbb76f72035c363a9f097ac6cd','kamyar.heidari1992@gmail.com',1,0,'c7d2e0a08b8cb726c0716e1e1530ed98a545b08b','kamyar','uok','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1554,'navid','f9e8187ad93dcdddefb786d0ff765f6596bd0ec5','navid.ebrahimi2000@gmail.com',1,0,'3dc9cf74db5bc12c9a720bf747bd2c7d1d1066c7','A navid','uok','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1555,'nishchay2192','678b89c44d500903ad0ba94cac9649e6030abf3d','nishchay@iitj.ac.in',1,0,'88859d331ca575cd8c3fd7311928398d82d9a51d','Nishchay Kala','IIT Jodhpur','2012-12-13 09:15:43','default.png',2,-1,1,1,0,0,0,0),(1556,'heshmati','cd7edbccbf0d75a225adc720ebc41d58e5b3a536','parisaheshmati85@yahoo.com',1,0,'8aab5112488cbd46792766c29aed9893b5d3c131','test','','2012-12-26 09:58:50','default.png',2,-1,1,1,0,0,0,0),(1557,'elenor','9b40d180c7bd5be882e10fae4c05e50da2c8751b','elmariachiii@yahoo.com',1,0,'968d1a12b8f0bba8e5b90e272596ac2a1cceb4d2','Elenor','Sadjad','2012-11-11 09:21:26','default.png',2,-1,1,1,0,0,0,0),(1558,'hghiabi','b74acb2c9a986bbc9c4a6b581915c4a3bbf83372','h_ghiabi@yahoo.com',0,0,'97b1b8cf1664d27c904b0a4270ffa6efeca0c4dc','H_GH','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1559,'sajj','bd7e99260e1b7703fdf89c606b391333a1e29248','s.jahani89@yahoo.com',0,0,'8418832ce58f27a11db25b17ed5163ebe6930377','sajj','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1560,'dinhkhanh','c8b5e576060552396784635b908b21689bdc5007','khanhdd85@gmail.com',1,0,'14a4013285223973753c8e04fc8468ad1c5799c0','dinh khanh','isae','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1561,'naser','9ee5961f958f998ec1f7a6b716848d7b9b766ae7','nb.empyreal@yahoo.com',1,0,'59533b623979ba15c5823cf2190dcddc9dfc9aa0','naser','sadjad mashhad','2012-12-10 10:10:05','default.png',2,-1,1,1,0,0,0,0),(1563,'aliceataee','7f635b6d8e0e0f754c0c8612deec8258aab3d0ef','alice_ataee@yahoo.com',1,0,'1c21257600013d42ad07c94af683af2858be91bd','ataee','sadjad','2012-12-10 07:48:19','default.png',2,-1,1,1,0,0,0,0),(1564,'behzad','8fcce9d5bec18e868d344551da97eb4dd60b8a76','behzad.mousavi@ymail.com',1,0,'4b718ddcc6a6daa271efbf3698ff2d119ab33703','behzad','sadjad','2012-12-03 07:54:29','default.png',2,-1,1,1,0,0,0,0),(1565,'arefakh','f60ee3b454c31d8f12b32a3e5778a17648cd8e3f','jirjirakshab93@yahoo.com',1,0,'b6e6f85aae29199ed19c04b6887b563a31970d48','aref','sadjad','2012-12-19 10:10:31','5e5b59a2ea4b5cc449ce51352e54e64272fc644e.jpg',2,1,1,1,0,0,0,0),(1566,'sepide','b333999e2c3c471f27fd4f51c2340b6496956b3f','sepid.elyasi@yahoo.com',1,0,'1bca550f63fb6a9edf0e98bd490d2e30bf159acd','sepide','sadjad.it','2012-12-24 10:12:29','default.png',2,-1,1,1,0,0,0,0),(1567,'afsaneh.elham','e76735a8a2a6e28dccb808ac39e6616ade2abb3c','e.zekavati1992@yahoo.com',1,0,'bd350dcd0fb3e75ffe4b5b95d8d8962710edd2d3','afsaneh','sadjad','2012-12-24 12:02:18','default.png',2,-1,1,1,0,0,0,0),(1568,'kadure','a300d20e4bc8057ce20be6ef71b96f2ff933c53f','amzmohammad@gmail.com',1,0,'721b0d79f13d37a8bf99fa92ebbdb6ac4858d391','kadure','University of Isfahan','2012-11-12 14:58:49','default.png',2,-1,1,1,0,0,0,0),(1570,'layeghfathypor','4e9cfd2d07fc9d022fc04a2eacd5caaeb56e14d2','l.fatheypor2000@gmail.com',0,0,'17f9964de105d0eb16cc774afd0e2a3dde2b158d','layegh fathypor','kordestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1571,'y71228','b24279ac2c687ac9a0f566bfe3d9347594110813','yasaman.ghandehari@gmail.com',1,0,'6ddb1bc73dedb3d6e7a65710dda763a5ae0ea84a','y71228','sadjad','2013-01-23 08:20:45','default.png',2,-1,1,1,0,0,0,0),(1572,'napoli','2884f6197c8b3c7f52ebc1e078a9abff608a3c27','mahmood.gholipour@gmail.com',1,0,'8497063c3c40cd59166a253b8a3962fc9f52307c','mahmood gh','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1573,'zanjirian','4c7a30895a093b521428e51e2895e8745c08cfcd','ms_zanjirian@yahoo.com',1,0,'14fa726d02099233bb67ab4583c4f8dc4af19036','E B I','MIT','0000-00-00 00:00:00','b445d043e5fcd5e931e1084c026f1641ad72f0d4.jpg',2,1,1,0,0,0,0,0),(1574,'mkdesign','bae271beb34c1819cee34ff353ad632c6f56d51d','mehrad.kavian@gmail.com',1,0,'b008272e9e8c921adb4c34d05394e5972f250520','mehrad','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1575,'nesamani','72f2a4b5b79e63785e7b300d97701942ed355c64','nesamani025@gmail.com',1,0,'4ae9a6f2c12a8f9d79cd8a13c90d060f2d8f7d4e','Nesamani','Karpagam University','2012-11-17 06:11:04','7e49586b3fedb427a1109b44e6414b3a88de83e9.jpg',2,1,1,1,0,0,0,0),(1576,'sajadkarim','e80b6197305a543f08807bc4d8120ecc02d85907','sajadkarim@ymail.com',1,0,'fdee893ff2232b1d28670770f29123e2d34f8e41','sajad','sajad','2013-03-03 18:42:04','099fb2a53407eec25c9242e16229652899126d83.jpg',2,1,1,1,0,0,0,0),(1577,'silvergroup','e6239bcbcb5ae86af0bf0f09f71de725615982d9','silverman2012@gmail.com',1,0,'9b20c3738a3afc5ab55b1b6ce1e14d6804ddd169','SilverGroup','Sadjad Uni','2012-12-20 11:17:46','e6acfbcc33c3de5f01b3986f49c1225e809f6a7b.jpg',2,1,1,1,0,0,0,0),(1578,'tedy','60356d6658344dfad02a58779c9b075d79f2acc5','hdh_pr@yahoo.com',1,0,'08987c6215034e7f65582c7258948a796561c989','tedy','sadjad','2013-02-04 20:06:03','default.png',2,-1,0,1,0,0,0,0),(1579,'gh.h110','a9c8dd7e5df82d73a37b193f2a7bb3314dc7ab9d','ahmadgh3000@yahoo.com',1,0,'87023ffd940688e93bff6b7cec77bdb8cd220336','gh-h','sadjad','2012-11-28 10:19:35','default.png',2,-1,1,1,0,0,0,0),(1580,'sepanta1990','c4afb3432d68dae5f2805a21d6f74a8982b86352','sepanta.m1990@yahoo.com',1,0,'3bff9ddef5e96e5aedc70fbb0dbf86b5a13c041a','sepanta1990','sharif','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1581,'salman','9b3a28fa768ff591fc2970fe53f33e20841cab2b','salman_salman714@yahoo.com',1,0,'a94e335bdbce5bb67712ea04f94843e5f17c58ba','salman','sadjad','2012-11-14 09:43:22','default.png',2,-1,1,1,0,0,0,0),(1582,'amir.h','0ff7500a5d9acbf04ed64197f845296e03373670','amir6855928@gmail.com',1,0,'c6022cc76915c3c85d2c2e81599e65c0ed6661c5','AmiR','Sadjad','2012-11-14 09:53:49','default.png',2,-1,1,1,0,0,0,0),(1583,'ELFFISH','5d9c5c71f54370d668a15b42b8b2b17494417d8d','maryam.iran99@ymail.com',1,0,'068a2de42a67f85b2a6673fc2260a37cb577ad79','Mary Elf Fish','sadjad','2012-12-14 06:21:47','7e8fbe165ca4d12abcf65074341eec4377a496f4.jpg',2,1,1,1,0,0,0,0),(1584,'kosar','a82730bc131eb914871a1726483e73de51f93799','k.yazdani1373@yahoo.com',1,0,'6cdb8d248b25adea638c5639dc2cc964250abbe7','kosar','Sadjad Uni','2013-03-14 10:08:42','default.png',2,-1,1,1,0,0,0,0),(1585,'mahta','c9a9c5755d1e6b2d4a747bdaa463779c4bd2d5cf','a_mahta_73@yahoo.com',1,0,'e5dece0f66278ff90516a9711a79d294defd61af','mahta','sadjad','2012-12-12 11:43:26','default.png',2,-1,1,1,0,0,0,0),(1586,'marzie','be275847e47c19299aaa33e6e2ebe4a281c469af','saeidi_marzie@yahoo.com',1,0,'5b80ec96115b6cf7b5393aa9a4d1f175f772b15d','marzie','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1587,'shima','a3d958464dafc6665f26f91d5574d061e77b64be','sh.khorrami.k@gmail.com',1,0,'a2972a07145f921d6bc008f394be89cdeef4f3a1','shima','sadjad','2012-11-28 12:14:58','default.png',2,1,0,1,0,0,0,0),(1588,'behnaz','4439e2ee333e29dc87380b0d7c9430425a40fb8a','bahare.akhlaghi@yahoo.com',1,0,'5ed44fe2110e073ff72ede551f404fdc503e5a5a','behnaz','sadjad','2012-12-12 11:55:38','default.png',2,-1,1,1,0,0,0,0),(1589,'marziye','27493c59ba3639f5e8fa9d641560abd26b949af2','mohammadnia8000@yahoo.com',1,0,'31d10b1ab903161db541c2cd71ae8b349232bfe1','marziye','SADJAD','2013-06-23 08:12:43','default.png',2,-1,1,1,0,0,0,0),(1590,'Davood','d798f75ec7e0291cbfd18a998150cb682a8be8b7','Davood_2016@Hotmail.com',1,0,'96ea667d9b8065a8987107e3f97ac60fcbe758bd','Davood','Sadjad University','2012-11-21 09:38:43','d90f5f25f18591e7d9ef0c6ea053b60e412bc6bd.jpg',2,1,1,1,0,0,0,0),(1591,'far.far.away.n','c3da682ed8ae0e77d27b6551f803bd391760ce8b','far_far_away_n@yahoo.com',1,0,'77c691a8c7985eb28592a90b7c3360d38d94e744','navid','sajad','2013-02-03 00:31:27','default.png',2,-1,1,1,0,0,0,0),(1592,'faeze','30adf18a41ef877c0ab2466c364fd609f3d4b5a2','faezeee31@yahoo.com',1,0,'d5b0a0efe272cf8bdd8776669df5c87a9cc13e4f','faeze','sajad','2012-12-12 13:42:19','default.png',2,-1,1,1,0,0,0,0),(1593,'mehrdad25','b22fab01d09f52754ea7c19b935d317dc9ee1e82','mohammad.mahdavi13@yahoo.com',1,0,'a93444d539ed0ac28cab0970639e296948006614','mehrdad','sajad','2012-11-21 13:58:41','default.png',2,-1,1,1,0,0,0,0),(1594,'amir.he','c10a5101a112bbec7d3757fc40071a7fc019173d','amir6855928@gmail.com',1,0,'0be2200ab1682b089ce5030e265ac6c8a321efe1','amir','Sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1595,'mamadosein72','9ea3acb251e8d832ea3deaceb7d4523c92001019','moha2006@gmail.com',1,0,'97dba2943571b7b1eadd45952095f55974cbf024','mamadosein72','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1596,'vahideh','02a9787c9afea21078650f67b4a51ebae079cbdf','vahideh.alinouri@gmail.com',1,0,'10bc3599a0e9e72d76768ba46ce466500e0de822','vahideh','qom','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1597,'e.khandan90','351f0658d7111908b61f2e2bb56298842f917a09','e.khandan90@yahoo.com',1,0,'5f19d7cd1cc82c32e168e7bc9908577067dc3a74','e.khandan','sadjad','2012-12-13 10:00:43','default.png',2,-1,1,1,0,0,0,0),(1598,'hosseinhasan','fc2ae16cc7aa8882d0c243926883e99186799b5f','hosseinchehrazar@yahoo.com',1,0,'7efc96916b4fbc42992cb43d0f5cd65830031364','HOSSEIN','SADJAD','2012-12-13 11:07:19','default.png',2,1,1,1,0,0,0,0),(1599,'M.M.Z','293080ef11aefdd9cf0bbc82d4827e95a16d4741','stogoon@gmail.com',1,0,'09f2dc5eca99041ce534693f4cddf89177e1f5ce','M.M.Z','university of Tehran','2013-05-02 08:46:09','default.png',2,1,1,0,0,0,0,0),(1600,'fereshte','b7eb864bd90652bb6efae91e0e588dba11d30698','fereshtetolui@yahoo.com',1,0,'cb6fcfb63aa94a9fae7e991180ed57b386f2c79b','sabra','sajjad','2012-12-15 12:01:13','default.png',2,-1,1,1,0,0,0,0),(1601,'stranger','fd7c95d0ac4b7fd6aaabc5cd6b4800ba9a6537a6','stranger.ar@gmail.com',1,0,'fea2b02f36f13ba00e172f4df429b6702e0f7d08','arash','sadjad','2012-11-17 11:54:23','default.png',2,-1,1,1,0,0,0,0),(1602,'xybxyb','3a267216db31234d10494ec29b2059642b15c9be','xyb@xyb.name',1,0,'dc28d6e6d46ebaa9f75a3b308fe538a30b380111','xybxyb','N/A','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1603,'ldrgh','77832b4332bc901efb47fd11763576e4813e8884','ld.samira@yahoo.com',1,0,'ee57f8032a400f70c42c230b37e6b3ef5c76cd75','ldrgh','sadjad','2012-12-09 13:29:12','default.png',2,-1,1,1,0,0,0,0),(1604,'lithium','ce903d3fc8a5c30adce0e4b52a8ab9e93ca396ed','zahraheydari71@ymail.com',0,0,'c1069c72234d2e580fe12c47ddabd56a40579efc','lithium','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1605,'amir.hz','8818429134367079e141bb2abb2a3c1ad7192f15','amir_bahal_2012@rocketmail.com',1,0,'8ab710f736caf35e8460cf4a27fc50e716cae2c8','amir_HZ','sajad','2012-12-02 13:35:42','default.png',2,-1,1,1,0,0,0,0),(1606,'sunny','fbdddf1e2041b76d1ff02a5ae185383bd1284dc5','maryam_na70@yahoo.com',0,0,'dba959aaa6ef7a1be25a0fefbfba6d4d9a80a7dc','maryam','azad university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1648,'Prime','a8a337ecda528a8669dd0f07ef2ce0b852c620ba','sinafetrat@gmail.com',1,0,'cffffb8126e29e619b33a44133b08cbda2ffe982','Prime','Elm o Fann University of Urmia','2012-12-13 09:19:34','default.png',2,1,1,1,0,0,0,0),(1607,'pianoboy','c942a299bcb8690fe37d5de2e8e809181d6d1da4','nmavara@gmail.com',1,0,'9b929b982f1ad7d4b4e9080e8f05f36d52a26fee','pianoboy','sadjad','2012-11-19 08:29:21','default.png',2,-1,1,1,0,0,0,0),(1608,'star','32ae266e8708e151ea7bb01a847f247df68d9827','star.mashreghy@gmail.com',1,0,'f2465e4937b9f51d4ed5a207020d90a2917fb34e','star','sajad','2012-12-10 09:47:48','default.png',2,-1,1,1,0,0,0,0),(1609,'group1','0060cb7a02193094901104f7ef9557932bfc4be4','madah1369@gmail.com',1,0,'682fb63647a64147e8c50ce45fae7c999b5f01e5','sj&amp;fg','sajad','2012-11-19 07:35:26','default.png',2,-1,1,1,0,0,0,0),(1610,'aria','2d9bb41376c648e9ea5ba624c46184779db12776','mararia_20_20@yahoo.com',1,0,'9ff0b9eb153df2b50c972ad843fbe094386f3f13','aria','sadjad','2012-12-24 10:02:40','default.png',2,-1,1,1,0,0,0,0),(1611,'nafiseh','c135e6d95fb258b0ba1fbb2cb01ddccb2b35ce25','sh.rezayee@gmail.com',1,0,'66b7d06cc8cc2765a509c976ee8bf74773f70fe5','rezaye','sajjad','2012-11-19 10:27:54','default.png',2,-1,1,1,0,0,0,0),(1612,'aminhy','39d34246282f56c7cf351cc1b22a492c732fd1d0','a.honarmandi1989@gmail.com',1,0,'166b6bc2c89b5ab42091a2a958acfcbf2af577dc','amin','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1613,'hajian','5f940af35da148b0462953d90c7fdc9078685bd8','saminhajian@yahoo.com',1,0,'d680b76fa5877904b11f47385399e2ae0f45fc3f','hajian','sadjad','2012-12-30 05:58:21','default.png',2,-1,0,1,0,0,0,0),(1614,'fateme','ea9b3052db5a6eeda98ea52a4148f35815b630b5','il0hj@yahoo.com',0,0,'8ef79bb53163392f071d25dd15ec1ede922ccb59','fateme','sadjad','2012-12-31 18:13:08','6969e5dac577599b557444e8d85fceb48d37d06e.jpg',2,-1,0,1,0,0,0,0),(1615,'mahmod','bf50d3b686c8be26aa52e7452040776ccacbaa46','mahmodataee@yahoo.com',1,0,'61a7bcbdf92407b1cce66e21135b6b635f903e6a','mahmod','sadjad','2012-12-03 07:28:15','default.png',2,1,1,1,0,0,0,0),(1616,'rail','07e97a8fb194ee1228e11084e8ac2330564a9c0d','rail.maniya@gmail.com',1,0,'09a039c919cc1c9109c6879b10cf968342dcaa17','rail','sadjad','2012-11-19 17:24:39','default.png',2,-1,1,1,0,0,0,0),(1617,'spongemehdi','a2f082a24a81bbb8666300155988c734cff9a90f','spongemehdi@yahoo.com',1,0,'518dbb629ec43f2ba6cd1f151e490fb7671d8933','mehh','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1618,'omidmaheri','c86f2ea59c266f4e17253bf4e51d025609cb91dd','omid.maheri@yahoo.com',1,0,'cc6f6141f331ced23e3da969bec5116d19f8b5ed','omidmaheri','sadjad','2012-11-26 12:23:10','default.png',2,-1,0,1,0,0,0,0),(1619,'Mahya3','dd26b9cab5a969f5ec85d3fe8527760c12c2c006','saeednejadm@yahoo.com',1,0,'5aea86a0390b7e4a7330265369c8cf138257c346','NMSJ','','2013-05-17 07:54:44','default.png',2,3,0,0,0,0,0,0),(1620,'NILL','e37ef11621b83cdb015d77f63bab20c7deaa3f57','hamideh137111@yahoo.com',1,0,'48e1128c6463a971e909cd71c6ed723b107fc4fd','NILL','sadjad','2012-11-21 17:48:25','default.png',2,1,1,1,0,0,0,0),(1621,'90412178','ca2fca3a4b62bbab0f4e04a9163ee8b0563696d5','hatwhite_2010@yahoo.com',1,0,'df02a9fa3f945c8684cb0d9178517cab82a55aca','Mehran','sajjad','2012-11-21 09:01:35','default.png',2,-1,1,1,0,0,0,0),(1622,'sadjad007','59f89a49ad2692eb81a2034a84553d1abd9314eb','sadjad007@gmail.com',1,0,'d299e6fe105dca3ff38b48f68920b68136e4342f','sajjad','sadjad university','2012-11-21 09:53:53','default.png',2,-1,1,1,0,0,0,0),(1623,'mortezaeian','33e753897bb60fe160ebb63aeb1400adb4911cba','mahsa_7293@yahoo.com',1,0,'50ef1cde599829f5a1464579acbceb096ec49d44','106m2','sadjad','2012-12-19 10:03:55','default.png',2,-1,1,1,0,0,0,0),(1624,'migmig','15162d5b021d3e596c22a61d2cad3c1f5659d095','majid_ghorbani@yahoo.com',0,0,'ea6d64718569d7f68dfefc62ca479286c01756a6','Mig Mig','','2013-03-03 19:53:49','7b04a71760ec405206bee96a4b9ce549df2f9a44.jpg',2,-1,0,1,0,0,0,0),(1625,'sajjadc6','1fe06f36d2a849c907d62315973c94ebaf2bbfca','liliknight@yahoo.com',1,0,'9c6c014f7720edc0262a0ce59158e34b72ddd906','Sajjad','Sajjad Uni','2012-12-19 09:37:34','default.png',2,-1,1,1,0,0,0,0),(1626,'mmhomaee1214','1de6c7374d944d0333b75d4922728cd363bc4710','mmhomaee1214@yahoo.com',1,0,'3834eadc1be46c655161339f3cfaf93b8cff6da9','MMHomaee','sadjad','2012-11-21 10:04:46','default.png',2,-1,1,1,0,0,0,0),(1627,'reza2013','9bbac24721890f960f0281f22c634473c4751867','reo2013@yahoo.com',1,0,'e7130931c2ee064b4b43cf4a1b2d89fd8f997975','Roraai','sajad','2012-11-21 10:10:51','default.png',2,-1,1,1,0,0,0,0),(1628,'09187833470','dadf0a2d086f6563af992639d5fd2efcb09f4193','asghari.omid71@gmail.com',1,0,'671faac87d09602434880cefd981687798bcf775','omid asghari','kourdistan university','2013-02-24 05:13:45','default.png',2,3,1,0,0,0,0,0),(1629,'SajadS','35ce51623645d31bcc48a0e6961f52e825302711','salehi.sajad@yahoo.com',1,0,'214f1b47c5e363672b67c7e7f4dc4a57ecb5fd9e','Sajad','Kurdestan','2013-05-07 10:10:57','default.png',2,1,1,1,0,0,0,0),(1630,'aftab','b9e38272bc9656cf94382fe7995531bc6ada3605','golnaz.moayedi@yahoo.com',1,0,'dfc8aa3d68fce10ec821e01448441542bb8e2ea8','aftab','sadjad','2012-11-28 11:52:05','default.png',2,-1,1,1,0,0,0,0),(1631,'arvin.emad','89c8ae5003456a16092334cf3ab73db9ca1426f6','emadakefi@gmail.com',1,0,'c7d26fae682459622409db9d78b137eec5de3f5c','Arvin.s &amp; Emad.a','sadjad','2013-02-06 20:56:39','5f071a8e743c897ad4c3469ae200e39e8ed0690f.jpg',2,1,1,1,0,0,0,0),(1632,'aminfadaee16','cb252c9213acc85f428e85df4b78c7145049ca94','aminfadaee16@yahoo.com',1,0,'15ea3b2034af916524e049f695f42e8e79a52c41','Amin','Sadjad','2012-12-09 11:06:17','default.png',2,-1,1,1,0,0,0,0),(1633,'hzadeh','b257ff2c671cf8e7e0e10c23fbf52736ce97e191','farnoud.f@gmail.com',1,0,'90e6d88790175ca27b43a62200ed8208f9bd7ad5','hzadeh','ac','2012-12-12 13:52:42','default.png',2,1,0,0,0,0,0,0),(1637,'YoOSeF','61173d5b4bd5ddb39aeed73a8f5f74d6635bab5f','yoosef.hatefi@yahoo.com',1,0,'4acfb88a27d6b1aeecb947119c8773c4b7760517','YoOSeF','Sadjad','2012-12-03 11:57:41','default.png',2,-1,0,1,0,0,0,0),(1634,'cp24','be1157553da123c0a4d6501be49e58fbc9cfefe2','cp19881218@live.cn',1,0,'36bed99681f080c683c36907911163ceeec9b4bc','cp24','university of shanghai for science and technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1635,'s.jahani','776fabbaa887bdd34d024098354370372f0e6a9b','s.jahani89@yahoo.com',1,0,'8439b6a79b0f572293961fbc6396d33e61e7de86','s.jahani','sadjad','2012-11-21 17:54:11','default.png',2,-1,1,1,0,0,0,0),(1636,'esmaeel22','697c4ef60a61cc87666657a2d5cdf1faa066a64c','sniper_esi@hotmail.com',1,0,'adeddf42c9d4a0f245bbc9ca59c2b11fc2428b33','tedy','sadjad','2012-12-02 16:32:24','default.png',2,-1,1,1,0,0,0,0),(1638,'ajavidmanesh','25acd130dc52ed88881db98d27f8cb91deb16a38','ajavidmanesh@yahoo.com',1,0,'327bea7babe5ab08590bf368201768f22ffa4c0a','ajavidmanesh','sadjad','2012-12-20 12:27:22','default.png',2,-1,1,1,0,0,0,0),(1639,'acmmf','1e4afcc17994b8d1e6c213ac3d7cd19a297e1557','mahjabint@yahoo.com',1,0,'7232fe1aeb069497a2155b427feefbb60a3eb2fe','acmmf','sadjad','2012-12-06 11:37:09','default.png',2,-1,1,1,0,0,0,0),(1640,'examiner','753e2679daa27d2ae2d890274e4556d0669065e7','jack.examiner@gmail.com',1,0,'091dee34d2e7818186636bc4c70aef825ae6e29e','Nod32','S.U.T','2013-03-12 12:50:21','default.png',2,-1,0,1,0,0,0,0),(1641,'Paria','6849ffc9ff9a760fbdb192c544b2f455f0a92fc2','hamideh137111@yahoo.com',1,0,'7da02da8a5150cb3eebdb41a7c32ce8fe4ae2a34','NILL','sadjad','2012-12-27 09:47:36','default.png',2,-1,1,1,0,0,0,0),(1642,'SinaFetrat','a137a98b33a3e34b1a68700f9394da189b484712','sinafetrat@gmail.com',1,0,'3d524a09e0a21f81ed7a8602e2aec608eca9f916','Sina','UCSR','2012-11-25 20:51:33','default.png',2,-1,1,1,0,0,0,0),(1654,'Karawana','c9c61a56373e50017cd6685558b6f5b2a0227c51','babak_mafi73@yahoo.com',1,0,'2c6b92b595c0ebb1488febb0306ac5a1a22daad4','babak','sadjad','2012-12-24 07:48:25','default.png',2,-1,1,1,0,0,0,0),(1643,'meamme','bfa8e0e14d7e757e8e7548d16003a01f05e3fecb','sardar.knight@yahoo.com',1,0,'e94cf5d002b27a3eb5596e698ec2d083f318eb91','Amin','Sadjad','2012-11-22 18:32:01','default.png',2,-1,1,1,0,0,0,0),(1644,'emad','db86cc4ab3fc225be7f266f9e864fcf75fb746bc','emad.akefi@yahoo.com',1,0,'ba404978a3c9defbc932d37a70166bafde55a702','emad akefi','sadjad','2013-02-20 10:20:18','bb129ee571a34653721d6e24d6f6b6f4469534ae.jpg',2,1,0,1,0,0,0,0),(1645,'barish','74b10ef95f89b9a5d92c895dfb62c5f7520297d0','farnood.hoseinnezhadi@gmail.com',1,0,'36b9a82d54af3e7c05326a24e6c2e0a96961de45','Barish (UCST)','UCST(Elm o Fann University of Urmia)','2012-12-14 21:22:12','8d9f2a20a01c6c205cac423908375c8222607cb5.jpg',2,1,1,1,0,0,0,0),(1646,'Hengam71','d1e4e3f21a140c175bb1589c8aa29c50c61386f9','hengam_t_z@yahoo.com',1,0,'1a8a249bb0408bdfe5e95f1501983527e2d19bcd','Hengam','','2012-11-22 21:56:59','default.png',2,-1,1,1,0,0,0,0),(1647,'diar','2dda662120adfe08a956fa7eb20245f48b5b6b65','diar.rahmani@yahoo.com',1,0,'0b1e1f3addb57251f8f47e0a9e146fa8bf97ed47','diar','farhang','2012-12-31 13:48:22','default.png',2,-1,1,1,0,0,0,0),(1649,'fake','52e1aca4bbdd7724c39b7813418d8e21eb8e4dd4','0.myfiles.0@gmail.com',1,0,'8fd33b06947cc0b1c65dacd0def88bedaeae8c4b','fake','uva','2012-12-28 17:44:42','default.png',2,-1,1,1,0,0,0,0),(1650,'trickerx13','8fb4d45f882022ab142d53e90beab37092d43c2f','trickerx13@gmail.com',1,0,'a7043dd056e3bd5cfe12c6253abb00572aee4f71','TrIcKeRx13','urmia pnu','2013-03-22 18:14:56','default.png',2,1,1,1,0,0,0,0),(1652,'xiyoh','076a64bd62d27bd1e257c96939a58de12a6bb148','ub3r.metalpark@hotmail.com',1,0,'aaaca200c81e045482b39a8315653e5ed9c0f899','xiyoh','Universidad Diego Portales','2012-11-25 17:51:47','default.png',2,-1,1,1,0,0,0,0),(1653,'Interupt','09dbd452918a9e6c18a7a72d2a39ac14763bd931','sinafetrat@gmail.com',1,0,'591cfd171dcf4d7d5a34048f7de19e12b6e7a5c4','Interupt','UCST (Elm o Fann University of Urmia)','2012-12-30 16:30:05','default.png',2,1,1,0,0,0,0,0),(1655,'hesamqanbarzade','e85fe16b73ebda76224d1bd14c3c7edeb4702c15','hesam_naderi2001@yahoo.com',1,0,'fd136a49501619118d9eec831f2b137590c7a268','mohsen','sajad','2012-12-24 07:54:17','default.png',2,-1,0,1,0,0,0,0),(1656,'hesamqanbarzadeh','fe347e1a07a4acc48648406bffb2943219f9a2ff','hesam_shangool@yahoo.com',1,0,'e489cd64db104ad0c322bc4bda3796ac45f88d2b','mohsen','sajad','2012-12-03 07:24:28','default.png',2,-1,1,1,0,0,0,0),(1657,'mehrdadn','2033e5271c7bf443f6b0192f86b71cb842f84ada','mehrdad.nemati@gmail.com',1,0,'c369a4b29fa90af16915de82e5ee587e73d69908','mehrdad','sajad','2012-11-26 09:25:04','default.png',2,-1,1,1,0,0,0,0),(1658,'ehsani','a459619bafaf1baaa87313bc089e6f0ef86a9660','anis.ehsani@yahoo.com',1,0,'465efbd4357b0f256218808727b1859fe6aad4e7','ehsani','sadjad','2012-12-03 10:07:18','default.png',2,-1,1,1,0,0,0,0),(1659,'afsaneh','1693f291b4512b5cc18cdb4855f9f9e4d20801a1','afsaneh.abaszadeh@yahoo.com',0,0,'425f9a3571316372faa8b0ca68337a6bf6249d12','abaszadeh','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1660,'keshtegar','558354ce9bd5041e0cfdec8e5d0895c73fc87014','zakieh.keshtegar@yahoo.com',0,0,'9800b79033876d0e0d89dff9237d2662d748eb62','soosan','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1661,'sosankeshtegar','09a59d8f250f812b64c66d98baa4723a9c452bf6','sosankeshtegar@yahoo.com',1,0,'d2727d7c7fc9baf65cac66d7358d7f3053555ae3','sosankeshtegar','sadjad','2012-12-10 12:11:37','default.png',2,-1,1,1,0,0,0,0),(1662,'mhdmhdpour','8d675a28c70a8776e0f488f29a5ac57bd1ed89cd','mhdmhdpor@gmail.com',1,0,'ef6b4f3777902989b4afe5d506a38afcd3875ff2','Mehdi','pnu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1663,'orumjavad','125d84bcdd56434fbc3d2b46ac64f8a982855860','javad.hassanzadeh@ymail.com',1,0,'30824a1802bd32ae8d1fb875076701b358106f2e','Orum_Javad','UCST(Elm o Fann University of Urmia)','2013-04-05 18:28:25','dc80f678f7ef73ce9245d49c7a7f4344445c4ad6.jpg',2,1,1,1,0,0,0,0),(1664,'poldasht','40fe39ef94ed5efeccbcae1e75b292e82f061829','me.register@outlook.com',1,0,'fbd2990b535da64525cf883b36326cb825d11665','Poldasht','SCHE','2012-11-27 13:07:51','default.png',2,-1,1,1,0,0,0,0),(1665,'saraa','0f9e9cc970a5cd4120430cdf2b86fdf56a1c6a4e','saraj.no@gmail.com',0,0,'90aadeba931a41d3726c6dc3f22fda3189bf35c9','smh1','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1666,'javadnouri','0d2fc581328efb3af02a73f35fd0e2b61aad4856','j.nouri91@gmail.com',1,0,'120fb037348f3cf5a3cfbcdb76c4feb1a1e7830c','Taha','Quchan Institute of Engineering &amp; Technology','2012-12-24 14:11:04','f2e1b23bb10a496f40e5403a0f0b99236a2cffed.jpg',2,1,1,1,0,0,0,0),(1667,'exception','f294c2b5a6b6ad4101ffb2478a6cfcc28fdd6916','naeenijavad@yahoo.com',1,0,'5d127c41205e38e60094aa42842a77c46fc6ba87','Exception','Quchan Institute of Engineering and Technology','2012-12-23 10:27:45','default.png',2,1,1,1,0,0,0,0),(1668,'313.72','9c04542fd7dccba0798413b26e61c6a3fb864980','saraj.no@gmail.com',1,0,'900889f116c8b22f13551fc1cc797c969b214c87','313_72','University Of Tehran','2012-11-29 11:22:29','default.png',2,-1,1,1,0,0,0,0),(1669,'reo2013','89dcfe7440da3ad1dee4e2cbf124b741a692c0f6','www.reo2013@yahoo.com',0,0,'0855122194159168458e839d5284267fcadcf7d5','reza','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1670,'behnamac','b2e85588788217acfad5b82c7664c7d059ed6a62','behnam.sep@gmail.com',1,0,'eff4739abe41f22204838e7709f2ac516806b917','behnam','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1671,'rezaoraai','7841a96ee0af010395f1696b4ce7264932800940','rezaoraai1371@yahoo.com',1,0,'229eefd19119cecc4e096e1ea20892bf48d0f7cf','reza','sajad','2012-11-28 10:10:30','default.png',2,-1,0,1,0,0,0,0),(1672,'safie','ce97197fbf40ebd4e7943c5c7e65fb2122b0ce46','parastoo_2114@yahoo.com',0,0,'d84eaef5e82966b0cc7fe63fc5c2a2b6e3ee601a','golnaz','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1673,'goli','0f032ae797a5ce59d9a9f91d100ead699657954c','jo0jo0_glz@yahoo.com',0,0,'aac78871f74863e2a4ea7f08fa70f344a6600b68','goli','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1674,'safiesaburi','d2de362291b248e9059df778eb115ce8540bfc77','safie.saburi@yahoo.com',1,0,'86650af67e7cf9239f5095a6d3d3ee1ea82e66fe','safie s','sadjad','2012-11-28 12:03:39','default.png',2,-1,1,1,0,0,0,0),(1675,'DaNy','c1d9bc08f7b351c02937666ff37d818e9199fcbe','jahed.danial@gmail.com',1,0,'15721644f8bd89358f14f4c89cf7ec0d9182072d','DaNy','sajjad','2012-12-05 09:41:13','default.png',2,-1,1,1,0,0,0,0),(1676,'pop7983','88a3cc089cc5c5450b269516d89a7580451870c2','s77102600@yahoo.com.tw',0,0,'d845360a5b713b7a4f91ed97ad6e741f392b5565','Yang','NCHU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1677,'thesnowfrenzy','51bf7b303cf88ad60defbc598dbffedff4dd7301','thesnowfrenzy@gmail.com',1,0,'2edc112a05fdefd08c9dadf843ec21ff81966e54','French Toast Mafia','UT','2012-12-06 09:11:46','default.png',2,-1,1,0,0,0,0,0),(1678,'arm.iust','e947986ec19621b58f834844c5e60f2d7721db29','afshin.chichi@gmail.com',1,0,'477497f81ed5aadcd23e8a89957cc51dd85c440f','ARM_IUST','IUST','2012-11-29 13:29:49','default.png',2,-1,1,1,0,0,0,0),(1679,'moosavifar1993','9efcb027f093603a08a1949b9352671592094bb1','moosavifar1993@yahoo.com',0,0,'50839bf5dd65d18a9332d9ce2b0cc38b487baece','a-moosavi','tehran uuiversity','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1680,'pourya94','ca842f84f79919e779ca342f317aaa4bb8cc98fe','pourya94bz@yahoo.com',1,0,'62a07fbdc1740c96a2da62ccd2ac955ce8606b77','pourya94','shahid beheshti','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1681,'f.gohari','6873b681f665228c0a7596be2ed69c939d84431e','cermedopaa@yahoo.com',1,0,'ed4f760995f816aef3745ea13cab03107ca59e3c','*FaTeMe*','sadjad','2012-11-30 08:22:19','default.png',2,-1,1,1,0,0,0,0),(1682,'n.mahvelati','8e56343b810efe2e1072948349babd48df506123','mohammadnia3000@yahoo.com',0,0,'8adc694d59b830c466fea14183569a635d626f9f','n.mohamadi','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1683,'ali.abbasi','f101ad56573a73fcd4d5505e2dcfd0a0f4b16a42','ali.a007@yahoo.com',1,0,'591572cbf9829b617afd8b46c193955a1cb59f5b','Ali Abbasi','sheikh bahaei university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1684,'mohsen5063','26912c2f93ad17907cf297266bf0a86fe46867bb','mohsen_shafiei5063@yahoo.com',0,0,'fa9afe7742d978097670a28c40bcd55af9575740','mohsen shafiei','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1685,'unknown','b11bf188a51d37db1f5936f91e54be130bbfd750','atSign.acm@gmail.com',1,0,'13c4a92014213b13a19818ca77d3e2d013c311c3','ZERO','','2012-12-18 01:23:06','default.png',2,-1,0,1,0,0,0,0),(1686,'hoseyni','9b15761f0d7a213600330fbea393da371a99e771','z_hoseyni67@yahoo.com',0,0,'efa5fbced6cde8ac20fec65ab3e35c5aa553f0e2','hoseyni','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1687,'emadghavidel','f30035f54399848dabf0bea18f6174ae7c0aec0d','emad_ghavidel1990@yahoo.com',1,0,'7cf1d38d0ca2a6bfbd5ba2d6e7889213e18b22d7','emad.gh','sadjad','2012-12-01 12:23:15','default.png',2,-1,0,1,0,0,0,0),(1688,'hoseynabadi','7afe50e50853e0ce832146f32add9a6eaf1f805b','z.hoseyni67@gmail.com',1,0,'e201db1c35f0effb190f3c7d92ae1193c7ee3759','hoseynabadi','sadjad','2012-12-15 12:07:45','default.png',2,-1,1,1,0,0,0,0),(1689,'Ali.Rajabi','99125b7bd60857358cee9ee3f906e17de34c505a','Elnino_1390@yahoo.com',1,0,'28654c4680c0419015608a77c92407190ea101f4','El Niño','sajjad university','2012-12-03 17:34:37','default.png',2,-1,1,1,0,0,0,0),(1690,'behinddwalls','832df95a140512ef79b4ff5f86996a713e8de9ba','behinddwalls@gmail.com',0,0,'8a80d8a02c8ca22426337f6fac2f1379f9b79c35','Behind D Walls','NIT Raipur','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1691,'Arvant','cff60faafd6f0a76c1785ae879ddd30c15df12f9','arvant@mailfa.org',1,0,'3eae9ef3c526a851ea6d5a51faa00d66fcf6f092','Arvant','EDX','2012-12-16 08:25:12','0c46ad311a46d33bf9f42e25f045471085b8a049.jpg',2,6,1,1,0,0,0,0),(1692,'kian','a86ddfdbfc541d396f6125c374c6964760e30412','mirjalali@gmail.com',1,0,'553136a06796e610542b9585b56cfc6d6eb24f9f','Kian Mirjalali','Sharif Univ. of Tech.','0000-00-00 00:00:00','default.png',2,-1,0,0,0,0,0,0),(1693,'foolish','09f1dce671d008e0ca7320b9b3f99b5f9d4d9cd9','mousavi.uk@gmail.com',1,0,'e856f5dbdce4cb5026d7977e03a4510ef3af1844','Foolish Boys','Shahid Bahonar University','2012-12-06 09:24:48','default.png',2,-1,1,1,0,0,0,0),(1694,'SuccessHamineh','59f4265d2ae1b7c1684c0bfdd6fe25982a428873','morteza.keshtkaran@gmail.com',1,0,'e143bbef0b0572724bb5e27e7b1d63718c9f6ead','SuccessHamineh (Shiraz U)','Shiraz University','2012-12-06 09:33:47','default.png',2,1,1,0,0,0,0,0),(1695,'soroor','2b28816e69c4cb98143d0f92410d604d514cce2e','soroormalekmohamadi@yahoo.com',1,0,'f74f99b01c607400ca530f12f994ece25ec6ca29','Stak','Azad University of Mobarakeh','2013-03-26 17:24:05','default.png',2,-1,1,1,0,0,0,0),(1696,'nasehiyan','974373b0bd2752e698255b61b37c75f598079b57','nasehiyan@gmail.com',0,0,'7e7cc485a4f4bb50edee70194555678bc5b91b57','Haji','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1697,'uok01','77db04839918ef26937efbe036c865cd6fe5e6df','amanj.kh@gmail.com',1,0,'6ca80950b992457a89e5c77ca15ccdd124ef41e1','uok 92','University of Kurdistan','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1698,'uok1','d9a6c5f618631bd62c83c57ef132d063a75e6db2','amanj.kh@gmail.com',1,0,'40cb5ad705a81590ce4460b92edec70fbe95a1f5','uok 92','University of Kurdistan','2012-12-06 08:32:59','default.png',2,-1,0,1,0,0,0,0),(1699,'uok2','3943576b8d2b28b05c4c4e0973b9899cbed25f05','amanj.kh@gmail.com',1,0,'8c61febd82d22dc9182bdc3a503ec3a94d44b3e0','Call of Duty','University of Kurdistan','2012-12-06 08:40:09','default.png',2,-1,0,1,0,0,0,0),(1700,'uok3','27574ff2bded993fc65159b2c3de1fb79a01ff77','amanj.kh@gmail.com',1,0,'f16f2bd6c856bcf0a0340bfab096248255283cbf','MOMO','University of Kurdistan','2012-12-06 06:10:39','default.png',2,-1,0,1,0,0,0,0),(1701,'uok4','c49c1dc2e9213d6a0c757fa5bba85113383a0722','amanj.kh@gmail.com',1,0,'c419b439848d827f7d92ce91bbfce8a73716a83b','uok NIT','University of Kurdistan','2012-12-06 06:38:18','default.png',2,-1,0,1,0,0,0,0),(1702,'uok5','f49c42a977ffcadc2136bb15ffa29aa84d8f298a','amanj.kh@gmail.com',1,0,'aaa1fd1828c870abe6e40c7e8eced382b6d21672','O.Mesi','University of Kurdistan','2012-12-06 08:57:07','default.png',2,-1,0,1,0,0,0,0),(1703,'uok6','c70ae2768ce34f541a10f78d21aa0ae4f1153e5f','amanj.kh@gmail.com',1,0,'cae19b35cd0f4d3f99f29f02de24abf5212d2a70','OH MY GOD','University of Kurdistan','2012-12-06 06:28:21','default.png',2,-1,0,1,0,0,0,0),(1704,'uok7','5228b626363d2255b49dec64b6b7e1488dd2231a','amanj.kh@gmail.com',1,0,'093ce02f7fe998a9af8b99044371ca179665ba07','Voodoo','University of Kurdistan','2012-12-06 09:03:22','default.png',2,-1,0,1,0,0,0,0),(1705,'F2HBahonar','44b31b273ef95eec428218d4688d4cd9ee752262','s.esmaiilzade@gmail.com',0,0,'8bea13fb45d00c835fbd34717aa099a33a3e4b26','F2HB','Shahid Bahonar','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1706,'H2FB','ec925c0b659092ee5771b69dcbd9bc6ac1a17277','hamidx9@linuxmail.org',0,0,'c8387a062847f1c2d17726545dbbb5d6e1269d9c','H2Fba','Shahid Bahonar','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1707,'wintertriangle','9ea9f86c6da624897a41c719491ebef34fa8aa7e','aliseif1991@gmail.com',1,0,'ff78a26793cb9dc5477124bd2c4aceb5513b5cc7','Amirkabir UT - Winter Triangle','Amirkabir University of Technology','2012-12-18 23:13:25','default.png',2,1,0,1,0,0,0,0),(1708,'mathdep','6590edb72b0ec8c130f768d431dc283df0e42b3b','mohagheghi@vru.ac.ir',1,0,'0e1b54848db12a3554f8968798e5e88921859960','Both Cs&amp;Math','vali-e-asr','2012-12-16 14:42:29','default.png',2,3,1,1,0,0,0,0),(1709,'fatemeh','724b799ad9e013b69e6a3c4f672afe0e9e269785','hassani1388@yahoo.com',0,0,'798f2aaae520c7f05b21c6767ece89f853526d72','zeinab','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1710,'tctacm','0887696d2dea1d5003586f634806f8b67337de34','b.honarmand@gmail.com',1,0,'763abe075d445019e5d6352a8a5567c1b47b7da0','Lost Galaxy','دانشکده فنی تبریز','2012-12-21 08:20:41','default.png',2,-1,1,1,0,0,0,0),(1711,'iaushab','faa2ba01faadb7032a13d053319a2e1115db0904','mhsn.abri@gmail.com',1,0,'a3abc07c43f41db51eb1ce04461d20822d86c45d','while(true);','دانشگاه آزاد شبستر','2012-12-06 07:47:35','default.png',2,1,0,1,0,0,0,0),(1712,'zagrosnet','09f2e96b88e985513cce5327bbf6c30dc4b6755a','arman.rahimi@ymail.com',1,0,'ab0208f5855e195bebe3ceed82157b23947e8e9e','ZagrosNet','Ayatollah Borujerdi University','2012-12-06 08:06:46','default.png',2,-1,1,1,0,0,0,0),(1713,'yazdcs1','7dc08ad8de9dbb9f8da5714abd72062f03463136','goharshady@acm.org',1,0,'e4547aa944d36222083c1a103733507002397941','YazdCS1','Yazd University of Iran','2012-12-13 10:34:28','37e978b77fb14f0adc8db5deaf9e4b44e41efb56.jpg',2,1,0,1,0,0,0,0),(1714,'yazdcs2','7ca06070b68cc6c98a2d642d10aee70ba88504a8','goharshady@gmail.com',1,0,'748c2b9fff60a4c9fb4029ab86851f3cbf491bcf','YazdCS2','Yazd University of Iran','2012-12-13 10:39:11','default.png',2,-1,1,1,0,0,0,0),(1715,'anyjudgemaycry','51f7252b1ed435be2919eba8d420e4c30ffe9c66','baghbani.hamed@gmail.com',1,0,'4efb1ed8edd7cfa8e77420c6cfea5169e63e59f3','Any Judge May Cry','University of Isfahan','2012-12-15 12:53:32','default.png',2,3,1,0,0,0,0,0),(1716,'dhm96','3229291e02449b45c72d7bd6ddd3500e1981d600','dhm_blogger@yahoo.com',0,0,'1a0d843b105bd7ac7bb2c9c8603ac4181670eb53','Invariant','Sampad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1717,'IGSIGS','adfa31f3a60ecb580d61ff09aeaa149732fad7d7','taha_hamedani@yahoo.com',1,0,'2c5b22bae02cdd1b6dc98001298ba4fef83e946c','-IGS-','Ferdowsi University Of Mashhad','2012-12-18 10:36:07','f71a9ad95bba8ac0473d466b7ecdc1e17360b60f.jpg',2,1,1,1,0,0,0,0),(1718,'FUMteam10','7e8dada35c08f8f72396b81ee4474a4690a94daf','taha_hamedani@yahoo.com',0,0,'b5fb329e3805ef63678aab189300ac02f38eca9d','team10','Ferdowsi University Of Mashhad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1719,'Abbasifard','362951e41b71cf4f8d39c2d66045925c7e42f4ae','abbasifard@iust.ac.ir',1,0,'1873fce9dea0f715773c21ce1cddb0db566d73b9','MigMig','Adiban','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1720,'Ruhani','0fc2883291e3785277ed148e8b01e9e49ede3ffa','ruhani.buet.11@gmail.com',1,0,'3c731a2d655b19ea3c82910ff9f564836545ac7a','Ruhani Faiheem Rahman','Buet','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1721,'kardan','fe850bedd150da9f7cd1b3747a0aabcb512e1273','mohammad_kardan_1993@yahoo.com',1,0,'d7363053066174c371974763474372564fb67deb','Mohammad kardan','khayyam','2013-02-15 18:25:14','c3153262830d2e8f685c10d075689942417266b2.jpg',2,1,1,1,0,0,0,0),(1722,'javad1993','fdfcb72d1a4fafded11c7595b0ce99b427de86c0','ston_snake@yahoo.com',1,0,'9dcbd0c7dc448eafc95db5d800ac4e450ff99a35','ston_snake@yahoo.com','ferdowsi university of mashhad','2013-01-28 22:22:44','default.png',2,-1,1,1,0,0,0,0),(1723,'Nirvana','18f8153dca779d4725349ce874b36009f5ed92db','miladrz76@yahoo.com',1,0,'15b0d49b44799b430ec691f6dadd57eaf6876831','Nirvana','shahid soltani karaj','2012-12-06 07:49:48','default.png',2,-1,1,1,0,0,0,0),(1724,'mhsn','39c3a4c873f2310eb06df30d864d02c13cacfbb0','mhsn.abri@gmail.com',1,0,'60d9746952a8a5a3ec0e2582e66e69589a9e3954','M0H3N','Azad university of SHABESTAR','2012-12-06 08:14:59','default.png',2,1,1,1,0,0,0,0),(1725,'zabardast','be8f30a5e037173e606642874a42fb2232d50a52','rasoul.zabardast@gmail.com',1,0,'b65c3d7fec39fa3d9d571277675c29f69f53bad4','R.Zebardast','Arak Amirkabir Technical and Vocational College','2013-03-03 22:42:04','default.png',2,1,1,1,0,0,0,0),(1726,'kn2c.coders','76b4fb969e5b50260ba0de1e7abb2407d4f4e1b8','siavash.abdoli@gmail.com',1,0,'3a2410d7039aaac39e3082fe5fa07fc5e3b13a49','KN2C - Coders','K.N.toosi University of Technology','2012-12-15 10:58:15','default.png',2,-1,1,1,0,0,0,0),(1727,'mr.s.h.h','c123bf40c2ef6d0cf40fd4b5bcfde858e8330d03','mrsh1386@gmail.com',1,0,'7dcee4cce6bb3648fb2edcc8e6716b31c721e630','Rises','Qom University','2012-12-06 08:22:45','cb1444b9ec82dd2dd48f73013be94d1e554dab31.jpg',2,1,0,1,0,0,0,0),(1728,'BestTeam','1859f4c28fb787c0c8d1a1b3df89ea09aa5dcce2','ali.abdoshahi@gmail.com',1,0,'91054dacaea75af98c1374ac677796025d8ae518','ShahroodUniAON','shahrood university of technology','2012-12-06 09:33:34','default.png',2,3,1,1,0,0,0,0),(1729,'Zooh','b66e30ea14b81118da6e01ae115792ae853e3f2a','mohammadzadeh.sina@gmail.com',0,0,'24e049d82b651861fbc42e35bfaa6165cf067287','Zoo.h','Shahid Beheshti University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1730,'sheeps','cdafe4157b58e4295b861453519522d5e4e585f9','hasanpour.ch@gmail.com',1,0,'5e2aeab6ba0fa4ed617c5c95d26c76c117168bba','The Sheeps','Islamic Azad University - Bandar Abbas Branch','2012-12-06 07:48:05','default.png',2,-1,1,1,0,0,0,0),(1731,'acmparand','8d52d9d4dcb8f38d4def2d3379c821f0756cbbaa','mohammadreza_rahmani89@yahoo.com',1,0,'8cbc7eb09825dbfb5501f7b0f4ec80c3ab0ad9b2','Happy 3 Algorists','Islamic Azad University of Parand','2012-12-06 15:14:55','default.png',2,1,1,1,0,0,0,0),(1732,'samsam','e37df7eac335db8a3d3c0d2fd847c9b7f1dd8bd7','samsam_ninja@yahoo.com',1,0,'050bc5e73c226b220a46c4a7add4ddf94f7c023c','Dudes aloud','islamic azad university of mobarakeh','2013-01-11 09:27:36','19a81ee5d7b4492441a6df4bdee9dddd115316f3.jpg',2,1,1,1,0,0,0,0),(1733,'mrkm','ea9ed8a7e6bec2e29bcd824c06b0086ba42cd41e','mrkm54@yahoo.com',1,0,'5279e184047bd9abda9e011710b2deb4ac998640','mrkm','sajad','2012-12-24 07:46:03','default.png',2,-1,1,1,0,0,0,0),(1734,'majidghanei','803e285d016fdc2710a9a51477448452f83a81e5','majidalavimehr@yahoo.com',1,0,'f2cc75f7421b605cc6ece81b40cf3e35628b5f63','hashem','sajad','2012-12-24 07:58:33','default.png',2,-1,1,1,0,0,0,0),(1735,'shbu1','c7d4323bb46050f2bf1a3507f0b615b746f0ae76','dante_tmnt@yahoo.com',1,0,'6d6039c510dc3f019dffb14d491dabaee6e37857','SHBU1','sheikhbahaei univesity','2012-12-11 10:26:01','38136533b65ae16069b365b9f02a8de0b10566d8.jpg',2,-1,1,1,0,0,0,0),(1736,'madah','39eadde3df9430944e6dade7aa7ae1f60df18100','madah1369@gmail.com',1,0,'e1c93c570b4c86ff07999263e9cab4c5b187270b','group1','sajad','2012-12-10 09:25:12','default.png',2,-1,1,1,0,0,0,0),(1737,'shbu2','153492ac8ba94a2b3f53041f33773a3176e7027f','ilb_ara2599@yahoo.com',0,0,'b30f8484bf9fee89249c657182d2e565bce1da4f','SHBU2','sheikhbahaei univesity','0000-00-00 00:00:00','32b8407c7d1a8516526e5a96bd17f7068f7981f6.jpg',2,-1,1,1,0,0,0,0),(1738,'shbu3','a1398bba02bf6e493664a937995886bc1dc30e2a','kamran6930@yahoo.com',0,0,'966d66bf94958b67522ed125305a95959479290a','SHBU3','sheikhbahaei univesity','2012-12-06 08:28:41','3a1743cb739f06a1a69b2040d35fbc1f59bd719d.jpg',2,-1,0,1,0,0,0,0),(1739,'mahmoud.a','080ffea4561a5e92c3fc09c8f0539e28efe95e5a','mahmodataee@yahoo.com',1,0,'c977bb2fafcd94d4283209d40632c5c1d2ea8788','mahmoud','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1740,'shbu4','aeeccd173646a5471cc3187e83ce8957f54bf01a','shadiramezanigml@yahoo.com',1,0,'c785388adcf16de13720f1520ba64c31629baba8','SHBU4','sheikhbahaei univesity','2012-12-06 09:25:57','f67a401976632d93e43070a271a6d6d0a29f70bd.jpg',2,-1,1,1,0,0,0,0),(1741,'shbu5','4fbd62ceb20985ed577691b92a6d4d3f67a00f8f','nimah2o2@gmail.com',1,0,'765efbb9093614ea2ad8951c347ed4f7bf62c137','SHBU5','sheikhbahaei univesity','2012-12-06 09:34:26','66e62454854fdd6464309929a80f64037e10407e.jpg',2,-1,1,1,0,0,0,0),(1742,'samansoltani55','40a4101d4e2cd75d9b6071e5186b39d3ab12031d','samansoltani55@gmail.com',1,0,'11835546ac236720ae092bd03f66d05ca25d95bc','kut++','kut','2012-12-06 08:44:39','default.png',2,-1,1,1,0,0,0,0),(1743,'gurban','2210cb48360753f0c3be104518d1b4ad3c0ada89','gmt314@yahoo.com',1,0,'2da2fe71dd7712f1c8af7cb7884ebf5e60f73d0a','Ghaboos','Gonbad Kavous University','2012-12-06 08:41:25','default.png',2,-1,1,1,0,0,0,0),(1744,'ankurkumar','9a53574f8eba7f1776055b3634aa8ce1abbaa024','abhilekh04@yahoo.com',1,0,'af8b19f76bbd7d482bf5422ceb5e9c0b2b663bf3','ankurkumar','ait','2012-12-05 15:40:50','default.png',2,-1,1,1,0,0,0,0),(1745,'eagle','0edb7bbd1c8f6d1f5983ba63fa58335a989685a4','rezasadeghikhas@yahoo.com',1,0,'7074a9bb3930790e7d307cfb065a18209d84e366','eagle','tehran','2012-12-04 09:03:30','default.png',2,1,0,1,0,0,0,0),(1746,'mohtashami','b026cb7f2da55b78e594324589f574577841b6cf','hannistu@yahoo.com',1,0,'17a39b39e30df9d388765d57efa5f78a1c24a906','mohtashaminia','sajad','2012-12-20 12:04:37','default.png',2,-1,1,1,0,0,0,0),(1747,'elijun','05e2c62e2b9ac8f256677001632be38126e69072','zohre_s1369@yahoo.com',1,0,'ac4ee0b58686c931c0eea97c10e441fed610216f','zohre','sadjad','2012-12-03 09:44:38','default.png',2,-1,1,1,0,0,0,0),(1748,'ramint16','48f3dbc32ddfe5cd0864e23e1267be0f06d5615d','mohseni.ramin@gmail.com',0,0,'7f52bf791f37e2f1a026794f7dfbde7d48b72772','ShahroodUniRAS','shahroodut','2012-12-06 09:09:58','default.png',2,0,1,0,0,0,0,0),(1749,'shaghayegh.ma','3f0cf55e085b2d1cd980f6b97edd74b853dcfea7','shaghayegh.ma73@yahoo.com',1,0,'531b3c8418236a7d80dcb3b93ac1ed8c4d0f272c','ShahroodUniRAS','shahroodut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1750,'ali.nahri','8dc404e46b0d844ae5a30b850fb6cb2793dc985d','ali_nahri@ymail.com',0,0,'4dcbe4c61f5ad096f01fe8fbe293a30f05f17c33','ShahroodUniRAS','shahroodut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1751,'90422168','079ca06c5acd610ae2c1c9da9f268bd6fb4d668d','a_hoseini@yahoo.com',0,0,'7322ccb99681321bb0e1587a51f8160d45b6f116','sayeh','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1752,'safiye','1958512749938367e528d8a2483f25bdab1e73fc','safie.saburie@yahoo.com',0,0,'822c03a0caea5ec8ac6391f766c1a0514c663dd6','safiye','sajjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1753,'akram','f927a460ec96dff45de43e22659f09778a27c9cf','saburisafiye@yahoo.com',1,0,'f841f3a449b87b253850e62e63f6c7344ac8e07f','AKRAM','sajad','2012-12-03 12:13:08','default.png',2,-1,0,1,0,0,0,0),(1754,'hoseini','8570627916ceea721da1d4482f6e2073954850ab','a_hoseini90@yahoo.com',0,0,'3735ebad7fba2d96d8c109a575a0f4a454264f6b','sayeh','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1755,'Relax','3f3296aa74dc2fd03505fc4bc6796de8934724b1','m.yaghouti@yahoo.com',1,0,'e023ed00b13a7126ea695748429074374ff60aa0','Relax','Ferdowsi University Of Mashhad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1756,'shdi98','8a971951c93316cf142470bb771d629e27667c2f','hostage_devil@yahoo.com',1,0,'4790caa4f58dee8e2f7dc28f63624ac3c6105d1a','hamed','','2012-12-07 13:30:09','default.png',2,1,1,1,0,0,0,0),(1757,'mohammad465','86cf1ab9d995d5dfd48407abda69ad4ef559ac90','mohamad.71.465@gmail.com',1,0,'18caa48208a573e8edc08f5e676048e531e7b028','mohammad','khayyam','2012-12-10 11:10:41','default.png',2,-1,1,1,0,0,0,0),(1758,'atefe90','6644e6c09f5a8f2af35b1ea3e10c9f427dc998cc','omid.malek.1990@gmail.com',0,0,'6b9f5ad83eb816013020a09706eed59c0ebac669','atefeh','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1759,'vancha','abfd98fe8bc3e1ed6a21439151f9fb7428b784a3','davidtruover@gmail.com',1,0,'3532722c540b44ce80055778d949b746f2b4ab93','vCode','AUT-CS','2012-12-06 10:00:03','default.png',2,1,0,0,0,0,0,0),(1760,'Davoodamani','4cb85180df9a79243420f00d728f9f79c6c29940','amanikor@gmail.com',1,0,'f705b2afc7b4a336ceb9973dec7327b90a5ce09e','inACCessible','Golestan University Of Gorgan','2012-12-13 11:07:54','default.png',2,-1,1,1,0,0,0,0),(1761,'pdper','faa79fd8cd579529262b4844090e25f60199a3fd','abolfazli71@yahoo.com',1,0,'c7b97d9720c645b8ca66e8ce3c5e16c08446fb4c','Mahdi','Ferdowsi University Of Mashhad','2012-12-03 12:07:56','default.png',2,-1,1,1,0,0,0,0),(1762,'piloop','b3171ceb450959f5f39a12fef1f1557c1081cd40','piloopin@gmail.com',0,0,'f771c1266c75a8a3948fb54a0725950aa4e0e9bc','piloop','-','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1763,'bahalbased','39f1a8f98762131fc0e647b2a98cfa948fd19c19','bahal.based@gmail.com',0,0,'8fe46e126a583310245c15d4380587ee2349eadc','BaHalBased','Shiraz University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1764,'kia.celever','907f7a6e7ac98c7a4bf4a526cd0311da94631199','kia.celever@yahoo.com',1,0,'79b0ad3dbf1edf717538b0ac3acc1149a98a06c2','kia.celever','Allame Helli 3','2012-12-04 10:42:22','default.png',2,-1,1,1,0,0,0,0),(1765,'MilMil','751ece85d33d9d803aa953f257769eb8c9e3fe33','milad.rm7596@gmail.com',1,0,'0b5826b3bed59d10c96aa0064b745f534db5daef','MilMil','Allame Helli 3','2012-12-06 06:15:24','default.png',2,1,1,1,0,0,0,0),(1766,'amirthegod','5fc4d3695db5558b78738e34f37604cdec34a15d','amirhoseinizadjou@gmail.com',1,0,'435f769accd9b9153887050f6b293c6b4bdfd1e9','amirthegod','helli3','2012-12-06 06:53:57','default.png',2,-1,1,1,0,0,0,0),(1767,'rasoulr','6049934f8691258a8e73520cb94cc1d97277c014','rasoulrezaiyan@yahoo.com',1,0,'098357c2bf86a485bcc2564f2b652c1129f5d7d1','&lt;RASOUL_RZN&gt;','Sadjad','2012-12-10 09:41:06','default.png',2,1,1,1,0,0,0,0),(1768,'Reza.B','1c64e2dadd7b05341ad492f05968940b2e6f4429','reza_bozorgmanesh@yahoo.com',1,0,'045b3b1f1337d1732f2bb63ed49625faf8ffb5a1','Code_Jam','Ghiasodin_Jamshid_Kashani','2012-12-06 15:48:32','default.png',2,-1,1,1,0,0,0,0),(1769,'saghol','72774828604f1ae074d0ae6905494b41d9b1093c','mmm.2008.69@gmail.com',1,0,'22948b09405a61a89e1fa0da6a43518ba15d1de1','ShahroodUniMKM','shahroodUniversity','2012-12-06 15:15:48','default.png',2,-1,1,1,0,0,0,0),(1770,'bap7o','ff8db5e8b4175f7a688ce69893c686bf8c3ec527','behzadrezaie69@yahoo.com',1,0,'34f6d906f10c8adcd939a183cc9b06c524086d43','Bap7o','Shahrood University','2012-12-06 08:38:32','default.png',2,-1,1,1,0,0,0,0),(1771,'Shahrooz666','15ff89462893b25ae632f80f0937b183a74413df','shahrooz_fff@yahoo.com',0,0,'383f9c9e17ca07d138ed157365e34f68012b7660','ShahroodUniMBJ','Shahrood','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1772,'jbehrouzi','72f57cd23fa573914240aa8b9d8c9139b5c4ce23','j.behrouzipoor@yahoo.com',1,0,'5020fcbbbe8a015a2d01e1fd40f0bc3fb31c44fc','Anti-IT','harward university','2012-12-06 08:32:21','default.png',2,-1,0,1,0,0,0,0),(1773,'MAJ73','3d03c9c892716668d4efa1d71edf34c8184387cd','mr.maj73@yahoo.com',1,0,'b5da36fa385520026503241c31f9752d8098c0dd','ShahroodUniMBJ','Shahrood','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1774,'SeyedParsa','2a7fc92ec69781dd1f286f4870d22753360020d1','parsamirtaheri@yahoo.com',1,0,'066f4f7101899f517c294a5dfebc3460cbf6c897','SeyedParsa','Allame Helli3','2012-12-06 09:18:36','default.png',2,-1,1,1,0,0,0,0),(1775,'bitwise','1a98001c579e741e1e7ca4b4288eb599dbdb7b47','sir.arsenic@gmail.com',1,0,'303fc49107c7a02bdb24e9d005f4da06ed9a41e1','Bitwise','Fasa University','2012-12-06 06:49:56','default.png',2,-1,1,1,0,0,0,0),(1776,'aram.vb','c52426690f476a130f4e6dcd15d2559526e8739c','aram.vb1@gmail.com',1,0,'7c348edaffe3eb71dc0e1c0567001d2b1f69c5b8','Aram.Net','Ghiasodin_Jamshid_Kashani','2012-12-09 17:11:40','default.png',2,1,1,1,0,0,0,0),(1777,'kia465','96cdea3d9b78b1747e86ad168ff741f631ca932e','Kia465@yahoo.com',1,0,'3bbe0336129817901c9a5278471c39fb19e49ff6','Kia Ghadr','','2012-12-06 07:22:03','default.png',2,1,1,0,0,0,0,0),(1778,'Tarbiz1','879c7d2fb89b7e91d32d60d0155f5b1f7832bf19','sasan.salamzadeh@gmail.com',1,0,'ce413e47d1b88c749bb8c5f1d0a8e12d04d53f6e','Tabriz 1','Islamic Azad University of Tabriz','2012-12-06 09:33:28','a48a6f7793089871eaf0fcf211cbc4dbf939614d.jpg',2,1,1,1,0,0,0,0),(1779,'fatima','8837c8006327df8cda728333f9b4266ae9a5eb14','barani.fatima@gmail.com',1,0,'7a4502cde818f4a0b776caf747fc18dd3cb282e2','Bam_Math','Bam University','2012-12-06 07:11:40','default.png',2,-1,1,1,0,0,0,0),(1780,'manetal','744f86c29c8aea31fe667d878fdb8cc8813e7375','amir.hossein.shahriari@gmail.com',1,0,'c5be5e503809890df99fe8cfa46f95051df90992','man o ishun o bachamun','Shiraz University','2012-12-16 12:23:09','default.png',2,1,1,0,0,0,0,0),(1781,'hibye','11effea55234b55b7aa3fe445ca57729e9ed8318','hasanzaboli7@gmail.com',1,0,'4d9bf673f765c5dec64cee7b33ecc516d091e260','pat &amp; mat','','2012-12-06 09:14:41','3ddd70a35af2cec13cea35d0b5997deb23bb8e18.jpg',2,1,0,1,0,0,0,0),(1782,'ngh.ghorbani','d235c7da3aa400ddc4469bbdaa84dfc3b6df26da','ngh.ghorbani@yahoo.com',1,0,'7c6b964c34845ff50ecdd6d3a26ae1534534b7c1','ngh_ice','quchan','2012-12-04 11:49:53','default.png',2,-1,1,1,0,0,0,0),(1783,'Fandogh','43ef1157205c07bcb07d95e1776ea012a646e8ee','KayvanMazaheri@GMail.com',1,0,'02ea1ea46fcffe685d649d8cdf171f9fafaeb435','Fandogh','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1784,'Alireza.bh','9581d6323d883cf65edcef1a3837a28c03ad2182','bitaraf.alireza@gmail.com',1,0,'34e3528eb1d984f54c4b426493a21ac4b955e672','ft.azadi &amp; Alireza.bh','AmirKabir University','2012-12-06 09:49:55','default.png',2,1,1,1,0,0,0,0),(1785,'Mohammad.JRS','2281764b93f13ddfb204b56b08d9ac00c0f88c67','mohammad.jrs@gmail.com',1,0,'0b207e3b45ad9204d48b06930b549d0097890e9d','MJRS','Sharif University Of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1786,'bandits','c92068b238adae93b01fd8516ce6427c6248b7b5','acm.learning@gmail.com',1,0,'0856b6d1ab6525fb99023c7bcbcdc3ac6f1a47fd','B@nDiT$','IAU-Tehran South Branch','2012-12-13 11:37:29','default.png',2,-1,1,1,0,0,0,0),(1787,'Aidin','96b02cf3cd9a452ae42e7565e59cc178539703b5','aidin.gh73@gmail.com',1,0,'00a0dac74c5344cfeab75a84a639b0092913849d','Aidin','AUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1788,'hmffa','5e133b94a3a64d354b85c545d298f4fb9c10e2fe','hmffam@gmail.com',1,0,'15abee595b04dddd52253ebf0f39fab6e481b4a9','AminO','IAU Shabestar','2012-12-06 08:59:21','default.png',2,1,1,1,0,0,0,0),(1789,'again.agian','940b7da08925f07b9cf6b39bb61937eec51a3d64','armen.cem@gmail.com',1,0,'1ed36d53af78dae98f7e4f327379b28ffc5c0f00','MIGMIG','Adiban','2012-12-06 07:26:54','default.png',2,-1,1,1,0,0,0,0),(1790,'sh.al','4e6fb5b7729435fead2ff465a4c271d21597f762','sh.alizadeh.2006@gmail.com',1,0,'b3cb576637cac2fe25835572b6dcb55acc7635f3','one code','','2012-12-14 15:13:11','default.png',2,-1,1,1,0,0,0,0),(1791,'umceh91','82e0ac6e35e52f8685ea5aacad3e1efa995c8c98','moosavi.smd@gmail.com',1,0,'e3d9861ca0e8c4d0b48138de6d39ecfc42d951cb','umceh91','ferdowsi university of mashhad','2012-12-13 12:38:15','default.png',2,1,1,1,0,0,0,0),(1792,'AUT.Vampires','eaa366f43bc8592c478ff3f60ff593573663d1f8','masoud1459@gmail.com',1,0,'962be3c151d00e2b4f359c5872932d1e8269cc00','AUT Vampires','Amirkabir University of Technology','2012-12-10 14:11:06','default.png',2,-1,1,1,0,0,0,0),(1793,'kazemagho','7a4d73af78c4b5509d607cca7086f1d3a6f6dd9b','samehi.hojjati@gmail.com',0,0,'77d86f3067a1d29649c19e448396ec58b1250c15','agho','fasa','0000-00-00 00:00:00','default.png',2,3,1,0,0,0,0,0),(1794,'msafari','d2149a74fa3a8d993428ed6f7fcb6f8ded6b73d7','mohsen.6625@yahoo.com',1,0,'fae92e3f4a55ecf18c76a71cece6d23ca79bab32','Mohsen Safari','IAUP','2012-12-07 18:01:52','default.png',2,1,1,1,0,0,0,0),(1795,'alidoost','67f09d6e07af225347c8c98571d73c72aa699cd6','y.alidoost@gmail.com',1,0,'4bcdb772900cdf5b3d7cfc25985dd6d1a571287b','AhUrA','Hamedan University of Technology','2012-12-06 09:09:07','default.png',2,1,1,1,0,0,0,0),(1796,'pouyakhoshkhoo','160d7809de1c277e81b4215d7c33d7087da9bf2e','p_aria2006@yahoo.com',0,0,'4f6fb2464b830c2582f5ca2abf845becfca7567b','pouya khoshkhoo','university of yazd','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1797,'madfan','f16cce5a61e01bd97b857a7c76874c29db485b7f','rahmtin.rotabi@gmail.com',1,0,'a8bfa2400952ba6808c180b8a58c4f0a13a79fa0','HIFYM','Sharif University of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1798,'team.0ia','f979a5751ace990b8a8649fa44b101b5cfabe283','mahmoudi1199@gmail.com',1,0,'fed174fc1ecbc27e81b01c55a0ea1d11a7afb3e3','_0ia','Kashan University','2012-12-05 18:43:46','default.png',2,-1,1,1,0,0,0,0),(1799,'ehsan.taher','2357852af8819f92bd7760bf874038c670068638','s.ehsan.taher@gmail.com',1,0,'0f67e458a49831803d030c4ff99757043641b2e0','S.ehsan taher','qodusi','0000-00-00 00:00:00','default.png',2,7,1,1,0,0,0,0),(1800,'mahshahracm','3548a69180269c21d6be24d9c960d7aed22879fb','mahshahrcsa@gmail.com',0,0,'f43da1e09571365a7489f7a419ebd7dd7f8ab7c4','MahshahrACM','mahshahr azad university of iran','2012-12-06 07:57:30','default.png',2,-1,1,1,0,0,0,0),(1801,'M.zandy','7c2ed9811f3996e4a5e7b736fdf9741085637fb5','m.zandy@gmail.com',1,0,'949c4d9a3614e00e3470bda477b28a90d39358d7','DosShell','Shahid Bahonar University of Kerman','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1802,'ali172','59174aea280bda651aa35b4457ab1950cf880a44','ali.karegar116@gmail.com',1,0,'5fb77854056a792079a567585770dca8d891f1f8','ali karegar','Islamic Azad University of Shabestar','2012-12-06 16:23:12','default.png',2,-1,1,1,0,0,0,0),(1803,'ali.exception','7f8b600889bdd92056991b577c6ecf9ae6be6e7b','boronsi1990@gmail.com',1,0,'e51b330f4155d7bd9137df722a23cb7d97090041','ali-exception','qiet','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1804,'DeadLine','91a9535b3d29b3235d9d8aba4b481750942baae8','hbaghbani@gmail.com',1,0,'848fa5fa4365c63945c04089306042cc87c1c491','Any Judge May Cry','University of Isfahan','2012-12-06 06:02:00','default.png',2,-1,0,1,0,0,0,0),(1805,'Rookie','6e33c7e81f801ccde4a6520472ea09d7e144a70d','ahmadnouralizadeh@yahoo.com',1,0,'0b56ad38f268a389a42479a5f9f7230864637b36','Rookie','','2012-12-06 09:14:23','default.png',2,1,1,1,0,0,0,0),(1806,'ahmadi','0a64236ed6a27fcbf04aaf494f21c3dbb3ef4e22','m71.ahmadi@gmail.com',1,0,'82701ff89505e8f15b25c980866c583a11a813f5','limit','ss','2012-12-31 12:40:15','default.png',2,3,0,0,0,0,0,0),(1807,'3sum','b4acedf5d2de2a18b25ce9064ea5f7437be4f01d','sajad22@gmail.com',0,0,'35aad75803253c0c0ecab6701a35a12986134466','3sum','sharif university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1808,'gharchkhor','800d3e17e8db456888c23b14a6f73a5db95edb9c','nojan.pasha.aut@gmail.com',1,0,'4e73287b7473deb9eff2b747190e12a1e69977fb','New Gharch Khors','Amirkabir University of Technology','2012-12-06 09:28:53','default.png',2,-1,0,0,0,0,0,0),(1809,'ahura','20038dfc949d4ef5fc83cfe258e895870f906db0','ahura.shabgard@gmail.com',1,0,'f37541d36f17b8d49c86fc8aee9bf9eef3862283','Ahura','Sadjad','2012-12-05 10:09:32','default.png',2,-1,1,1,0,0,0,0),(1810,'username','70b6ff5bf925a0376ebc83599ba8bafea199f1bb','a_mahta_73@yahoo.com',0,0,'623a384a33c85aa3215ca9c91efe561cc34d167d','abad','khorasgan','2012-12-06 09:33:35','e117d653800a1b94231b38c93120c7850f50a4cf.jpg',2,1,1,0,0,0,0,0),(1811,'m.dara','67586e923ee34e7ef869d1673cb47e59b7ab054a','m.dara@mihanmail.ir',1,0,'b3c024b5b59f3497fe08a6397cd964d37920cfe4','m.dara','Hashemi-Nejad High School','2012-12-06 06:09:23','default.png',2,-1,1,1,0,0,0,0),(1812,'leymer','c8f22d25c3125e179a08aefa5f4e89c729352246','moh.malekzadeh@gmail.com',1,0,'c639d77d03b16ab547a4a9e304c07ba86ea4b3dc','leymer','persian gulf university','2012-12-06 07:37:43','default.png',2,-1,1,1,0,0,0,0),(1813,'RshNk','0e93c8c67ab1c67dc5ea79482ea68309f75f10eb','rk.mirzaee.m@gmail.com',1,0,'9c8449d92949ecde28cecafc1389f6a253367752','RshNk','amir kabir university of technology','2012-12-05 17:33:12','default.png',2,-1,1,1,0,0,0,0),(1814,'mahla','e3f4a33246892590f17dbc4d847ef6954cddae82','mahla.pourkhaje@yahoo.com',0,0,'20f7c1962cc6190b2de5de2ce1476164b083d79a','mahla','sadjad','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1815,'AliceA','557c1f9add854b3e1b6cc67835a22b510cea0332','aliceandromeda_09@yahoo.com',1,0,'10e4f9cf5b400bb07920253d3a832f76c1abcb6e','Alice_A','SSUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1816,'msh110','12b20f4240a2952214ebcf39f716357c31c7b2f6','mshprogrammer@gmail.com',1,0,'3cd741440df499e1c71bf20d65fb2b573135fa3e','test','test','2012-12-07 18:16:52','default.png',2,-1,0,1,0,0,0,0),(1817,'whitenoise','1fad8f4e553e71072e98ab907cd6be63e26a7b06','samehi.hojjati@gmail.com',1,0,'323d63abcfc2790671961c67213258a51325950b','white noise','fasa','2012-12-06 09:34:50','default.png',2,3,1,1,0,0,0,0),(1818,'ehsanoo','06a4f615cea49f3301308d9cc580cbb364e7beff','ehsanoo@me.com',1,0,'bfd0b7e4f17c1d1d6d1be650e7a00d9265b55be2','Ehsan','Pasargad University of Shiraz','2012-12-13 19:09:51','default.png',2,1,0,1,0,0,0,0),(1819,'Deadly','a9c88c6bff5b42bc103a969ca9726dcadb77226d','reza.h.a0029@gmail.com',1,0,'0922bd17c119526f1782194004a2f28ac48199d7','Deadly Army of AUT','Amirkabir University of Technology','2012-12-11 14:53:12','default.png',2,-1,0,0,0,0,0,0),(1820,'2.noghte.D','8882220e9149c5d7e6c695c28a5470dea4d8e55e','razavi1371@gmail.com',1,0,'002361282be6f9ef97bee120a2ed722dec883272','UT of Tehran 2 noghte D','University of Tehran','2012-12-06 09:25:33','default.png',2,3,0,1,0,0,0,0),(1829,'amirbala','41675090c6608f1354fda9279396ee69f7a8cca5','a.h.rahimi1993@gmail.com',1,0,'f6e4c858c569440aba30b2b5d28d7f863f4df1ff','Peyvandha','Islamic Azad University of Mashhad','2012-12-07 09:35:57','default.png',2,1,1,1,0,0,0,0),(1821,'node','e2606ec650c1d916c87ce06a0c0a725b1d9652cd','sherafati.sh@gmail.com',1,0,'c3d9abb3749dd79d459ef945615c403e52a9bb69','Node','fasa university','2013-02-17 20:12:15','default.png',2,3,0,0,0,0,0,0),(1925,'farzaddev','b8e99d82ad424a0ce7023bdbae940461ae36914d','farzaddev@gmail.com',1,0,'83bcf6952125babc6698be855d7c187ca991ed10','Farzad','USTMB','2012-12-20 16:37:52','default.png',2,1,1,1,0,0,0,0),(1822,'shasa','eaa333f1777e006829d92f7131a9bedc6a1e3ae3','shadi.saberi93@yahoo.com',0,0,'a0ceb65f773aff253237d97274f7ae47390f2b81','sha sa','sajjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1823,'Elkiscoming','90c50ff5075f6dbeecae074e4c89e63254dddf36','erfan.loghmani@gmail.com',0,0,'b988a82b07135c71f39b4201f35f2a39cac5ef3d','Elkiscoming','Allame Helli3 HS','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1824,'expired.decoder','5a1fd2464c5efbee16b4589d02855eec0cd7f252','expired.decoder@yahoo.com',1,0,'675fed3aeab04a67088a3ef27c590b6e39338720','Akatsuki','Imam Khomeini International Univ.','2012-12-06 09:10:18','default.png',2,-1,1,1,0,0,0,0),(1825,'dtus','9f6ec57f3613132b0cfa5c40729a34bc04a57055','mohammadhadi.sankar@gmail.com',1,0,'db43867dd42b403c41cd1ced4880aa80b30713a3','Don\'t take us serious','IAUM','2012-12-13 11:05:50','default.png',2,-1,1,1,0,0,0,0),(1826,'Footmen','15c6b1398a6ad15a8428b7507aeb10af30f0cdc6','saeed.yazdanian@gmail.com',1,0,'abe0f1ec89890eaf481470c6a49a4a343966fed4','Footmen','Sadjad Higher Education Institute','2012-12-06 07:12:56','default.png',2,-1,0,1,0,0,0,0),(1827,'helli3.mbn','7a0e9ee00d7366425975b683850c40a99f975a0d','helli3.mbn@gmail.com',1,0,'d4d5dfbe5d85df76555125cf35d228395c72cfe9','Helli3.MBN','Allame Helli 3','2012-12-06 08:11:49','default.png',2,1,1,1,0,0,0,0),(1828,'ireh.hr','9c50ce3a98d45fa271e463cfd1006b4792055c76','ireh.hr@gmail.com',1,0,'ddc006730c359af3e3505292771afc4dda806c70','Hamid Reza Ireh','Adiban','2012-12-05 17:38:55','default.png',2,3,1,1,0,0,0,0),(1830,'rezakakhki','509511926281d7a152de0389f1a6305ae1524003','rezakakhki@ymail.com',1,0,'aa4a21075020af2e846c2401c432804a2caa17ee','RK2371','Islamic Azad University Of Mashad','2012-12-05 15:50:11','default.png',2,-1,1,1,0,0,0,0),(1831,'Clover','fb4c13b1656bef8b93def436841615c4bb3bc516','Behnam.Sanaie@gmail.com',1,0,'2e8c5d557b2fc6add8fdc5f9f6f70bed96e3996e','Clover','Arak Amirkabir Technical and Vocational College','2012-12-18 20:47:10','default.png',2,-1,1,1,0,0,0,0),(1832,'FrenchToastMafia','be808739828dcbd338733af6d47e71203b3ae519','f_sn_2007@yahoo.com',1,0,'2eacffaa603ddca7335bb7e939b53de7b5656cdd','French Toast Mafia','University of Tehran','2012-12-05 15:33:40','default.png',2,-1,1,1,0,0,0,0),(1833,'uzarcf','11f3a6e0fb5c8a3fc45f854d50e2f4ba33f21bb3','uzarcf59@yahoo.com',1,0,'93576f962c672cb10247709b86e3705faf91ea01','mahdis','Sharif University of technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1834,'ashkanramedani','f9fcc48dbb50cb508605519018add36d95419aeb','ashkanramedani1370@gmail.com',1,0,'620f5cab70a1519810d4ed3f298c412a2542ef87','ashkan','iaum','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1835,'sobhan.cp','5b20dfc18baaf205096a81de32aa2c09da6191f4','sobhan.iaum@gmail.com',1,0,'1386be4e9f1f7a8031148cab32470ce249f23de9','Wait For it','IAUM','2012-12-13 10:58:02','default.png',2,-1,1,1,0,0,0,0),(1836,'moonin','2148b69f378ad7b44e1e364bdfdd9af51b9f734e','maryam.negahbani@gmail.com',1,0,'e84b0e9dd771d13bc1daa46ae5de46cf45c7971a','Devil May Code','University of Isfahan','2012-12-13 09:48:48','default.png',2,3,1,0,0,0,0,0),(1837,'ab.omid','5d558c278fa547f860f6275da20f2d8cacefd566','ab_omid13@yahoo.com',1,0,'e2e0cca265f82618c6ad3984c00c1b3c8ef61954','ananas','Shiraz university','2012-12-14 16:45:31','default.png',2,-1,1,1,0,0,0,0),(1838,'username1','4e927ab9057dfc2e5ac1cc2cef9da16a939552a7','abolhasani811@yahoo.com',1,0,'e2d2ca0d5ea3f9230be6fe621143700334d0af93','negin','khorasgan','2012-12-06 09:14:20','default.png',2,-1,1,1,0,0,0,0),(1839,'ahura24','a74698a9a44dedf58141a38c0b8a54aff7b0dba9','ahura_24@yahoo.com',1,0,'0fa7ee9810432066caa5d2341d961f6ba2079c38','AhUrA','Hamedan University of Technology','2012-12-17 15:33:50','default.png',2,1,1,1,0,0,0,0),(1840,'umcehw91','e21ec208cdc72bf5c395a998c0ccc168b37ae46c','moosavi.smd@gmail.com',1,0,'72b43c48e2e0b7ba9370c2868fadd2635c12b34d','umcehw91','ferdowsi university of mashhad','2012-12-06 07:46:11','default.png',2,-1,1,1,0,0,0,0),(1841,'moeinfatehi','20da0c9c1d30250dad3abe084d32a1859b53f82a','moein.fatehi@gmail.com',1,0,'7f4227b3d7310a1c8e75bdc2333a48e4d15437b4','hasht O yek','Shiraz University of technology','2012-12-06 09:32:52','default.png',2,-1,1,1,0,0,0,0),(1842,'sheldrake','2812cd5402d5f2dece1022297625a07ad88997c4','f73fatemi@gmail.com',1,0,'ea2cd10dab52c88e54aed78eff977577f1378b08','halazoon','Amirkabir University of Technology','2012-12-08 01:47:49','default.png',2,1,0,1,0,0,0,0),(1843,'foumani','34e58679b65d795755f64023d7081659d28a92d4','arashfoumani@gmail.com',1,0,'04111d3a3b4f9dc8b4a5b49a7e039e1c0ace0d68','Foumani++','University of Isfahan','2012-12-07 17:17:12','default.png',2,-1,1,1,0,0,0,0),(1844,'disconsolate','260e253f2d58406ebf09c23f47d2dc98bf51ff1a','hossein.shemshadi@gmail.com',1,0,'e8a5ac898a423e1df7b25121e92e07067fe5e2c6','Disconsolate','SUTech','2012-12-06 08:02:39','default.png',2,3,1,1,0,0,0,0),(1845,'fasauni89','82b8a27bde5e79d4121885681a8710753b0285b4','elahe_shafie89@yahoo.com',0,0,'d55053bddc8b92f6c622ea093de77d4861bd9c34','D_F_S','fasauni','0000-00-00 00:00:00','81f69af502dfba7c5cfb353114bd286aa8869a14.jpg',2,-1,1,1,0,0,0,0),(1846,'TheUntouchables','36d24959d4fa851c611824399561952fb656fbca','shaghayeghmardani@gmail.com',1,0,'ef3dbae413b48b4364b3b0a578dd0048971c0e25','The Untouchables','University of Tehran','2012-12-06 09:34:10','default.png',2,-1,1,1,0,0,0,0),(1847,'amir127','2dd30985d356357055e3276279d13a0acfe96126','amir.mottaghy@gmail.com',1,0,'940231081cfae9ae136edd524f4265585e8b08a7','amir','mobarake','2012-12-05 18:06:12','default.png',2,-1,1,1,0,0,0,0),(1848,'REnd','4a3413fa8ac6f6c741a3327a0fcdb60adec0fb0a','ardalanessi@gmail.com',1,0,'cce86a9be319ab97161a5cddc889c2c5f6cc8805','G01ManG01','Shiraz University','2012-12-06 09:34:19','default.png',2,-1,1,1,0,0,0,0),(1849,'FatalError','cc3b009d8eef962ccd72824d323eb7839aa57735','mosallanezhad.davood@yahoo.com',1,0,'42cf13b6f25d15bb668ac98d34e1a3a101f9adbd','Fatal_3rror','Shiraz University','2012-12-06 09:56:12','default.png',2,-1,1,1,0,0,0,0),(1850,'morteza3636','44614133d8beda297ea04eb8b680d3d4758b8d2e','morteza.jahdasa@gmail.com',1,0,'6dbf0ffd1840b6c69edb3880e23e6af2df6b00d2','363636','aaaaaaa','2012-12-17 20:33:58','default.png',2,-1,1,1,0,0,0,0),(1851,'kalkhaboon','2b11a931a85070c19b43acf0cce256c4737517f3','m.sadjad.fallah@gmail.com',1,0,'101266d3ba8264ffbbfcf3df104792dc87a694da','USC - KalKhaboon','University of Science &amp; Culture','2012-12-05 17:58:18','default.png',2,-1,1,1,0,0,0,0),(1852,'mehrdad3','7642f64d8efb1fc942a456c7f5187c47ee141574','M8R-jg4291@mailinator.com',1,0,'74b510bbc2a175e0d66e0ff2367a72e909a89d69','SUT - foreverMehrdad','Sharif University of Technology','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(1853,'ramin.k','c3e7d8b4330351d486c51f8874796c996026851f','ramin.k92@gmail.com',1,0,'acc7ac937405bb2b3fb95139286f2e6ef1225df9',':O :P','','2012-12-06 07:21:09','default.png',2,-1,1,1,0,0,0,0),(1854,'MItop10','fe5dacaec2bf846b7ef7862e3d3a77e28009a0e6','houshmand2007@gmail.com',1,0,'9d771ecacf1904dde00490848ce35f4634e908ab','USC- Mission Impossible: Top10','University of Science and Culture','2012-12-17 12:48:05','default.png',2,-1,1,1,0,0,0,0),(1855,'navids','26cefc3b20e36a336ea13407dd084be4088ea3c4','navids@rocketmail.com',1,0,'a221c44b13319b9e2df9a7eaa364fb0c7cc15832','Algorist','PIAU','0000-00-00 00:00:00','default.png',2,1,1,0,0,0,0,0),(1856,'mrkz1991','0e7baa582ac1eef082e3837238233db5285abe30','mrkz1991@gmail.com',1,0,'85c019e240921a56694e603e42543b3563e008da','G01ManG01','Shiraz University','2012-12-06 09:27:13','default.png',2,1,1,1,0,0,0,0),(1857,'moh.nick','f0d3795cb13eb3fc4449f91c9847263fc02325dd','mohammadnickmoh@gmail.com',1,0,'98b94c74be1a8d74e363462fa8a5603e1c7b6e90','GolManGol','Shiraz University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1858,'kadro','c9ee9fa8748d036e6f17ca2c0eab91f40a50aeef','sadegh.sadrzadeh@live.com',1,0,'ed0acd543ae44398c4e42b053462e15d03b8c403','KaDr0Gh0MaYe The Legend','University of Isfahan','2012-12-06 09:13:41','default.png',2,-1,1,1,0,0,0,0),(1859,'rezaebrh','1f88918d3d0926d3b48bd6ac7be33858cd2d3ef5','rezaebrh@gmail.com',1,0,'1dc3530aea941ef9f44d86cc684e34dea0f22467','Reza','AllameHelli3','2012-12-06 08:37:00','default.png',2,1,1,1,0,0,0,0),(1860,'88tia','9ef8d2c7301d563b36ecdc2f7d58ec153cbd681a','spa_debel@yahoo.com',1,0,'cba0fc06ce0617ec043c2266568ee0be73618e33','USC - 88tia','University of Science &amp; Culture','2012-12-06 09:23:33','default.png',2,-1,1,1,0,0,0,0),(1861,'HellScre4m','c2c7a02bcbeaa984adb93a6b9834dfb0abeffb94','dangersd@gmail.com',1,0,'9c6076f249ec642767100adb6a7620004b45cf0b','HellScre4m','University of Isfahan','2012-12-06 05:51:57','default.png',2,-1,1,1,0,0,0,0),(1862,'sadeghrk','b38b31a2e94980a1846d13b9533b2dbe11e4262a','sadegh_rk@yahoo.com',1,0,'f400cf13bdb3f31fda58b334ff0c8d07e2510293','Stochastic(freelance)','high-school','2013-05-30 10:54:04','default.png',2,-1,1,1,0,0,0,0),(1863,'Konjed','fc6ff9f64da3688e4f9e286711641f7a9a89dcd1','coy.bit@gmail.com',1,0,'0a2e9f60a7ffa348f6e878921645f841b1cbf637','Konjed','Shahid Beheshti University','2012-12-06 09:25:13','default.png',2,1,1,1,0,0,0,0),(1864,'Gentles','e9a19d8214cc2b6c6b230e4800c48a342f4ad8f2','Amirmahdi.ahmadi@gmail.com',1,0,'b82823c1ded57c3f5b7cd20eff809c35a689b0c1','Gentles','Sharif University of technology','2012-12-06 06:01:55','default.png',2,-1,1,1,0,0,0,0),(1865,'hamp.cpas','98e8f2bac7b60155f1a7dc04ec46bbe3aa612eb2','hamp.cpas@gmail.com',1,0,'fd252a6cca1af8e5a42ebaff9f43b3a9fe3d4fb2','Mohammad','Gonbad Kavoos','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1866,'ashkan.k','83ffe42b311b0933208ab57ed75a15b3696b62f7','moein.fatehi@yahoo.com',1,0,'1565a8aa43b4a7f4957728fd8e6eb36c67af475a','NiAfArA','Shiraz university of technology','2012-12-06 09:29:53','default.png',2,-1,1,1,0,0,0,0),(1867,'du123','de63522fc6dd627a9cdf046949adc820d32e1a7e','acm.du.ac@gmail.com',1,0,'51638ea89e59d197d31d703247466d869ee4acb2','DU - Sense of Victory','Damghan University','2012-12-06 09:04:50','default.png',2,-1,1,1,0,0,0,0),(1868,'shaghayegh.mazinani','c48c81f5bc6f92f03343f8884b9ed92db12a45f1','shaghayegh.ma73@yahoo.com',0,0,'03887738da3c61c7451ebb264dd8e50a19d8ef8e','sharif NERD\'S','shahroodut','2012-12-06 09:28:42','default.png',2,-1,1,1,0,0,0,0),(1869,'aam000','7b69221015a6262dcda09e971f856f9bbe7f7314','ahmadftv7@gmail.com',1,0,'35326ce9b63d00883850f50f4cc277a08914b91c','0*0*0','Isfahan','2012-12-06 07:27:13','default.png',2,-1,1,1,0,0,0,0),(1870,'r.e.z.a','059825dd581760f8ed61e996bc75a9f2b3d790df','sobhan014@yahoo.com',1,0,'b878c2ca314918caac48da02845b12e3959a52c2','Sobhan014','Hello','2012-12-21 14:10:37','0c672ac515869c0f169c467d87fe78e9003bc988.jpg',2,-1,0,1,0,0,0,0),(1871,'teamazad1','22b0af4bc15c5e8824b8da790d113b9179a5c7e0','teamazad1@gww.ir',1,0,'9cf449c38780fad9aa9d11881c2cadb3031cbc30','azad1','Data Merchant','2012-12-06 14:24:38','default.png',2,-1,1,1,0,0,0,0),(1872,'legendarythinkers','acb1632684b565b5b5f4c5a97911c95c66eec5a2','abtinshahkarami@ut.ac.ir',1,0,'c9748d51ede23b7c451ab5e31d0fc45758b1c18a','Lengedary Thinkers','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1873,'lastTry','0ca0f3feaa0b99b01629657ce764631aac571a7a','ma.tayefi@gmail.com',1,0,'d769f4d6dbad07b656fb988ef9f8ae3191e4ce61','lastTry','Esfahan University','2012-12-06 09:06:04','default.png',2,-1,1,1,0,0,0,0),(1874,'eilia','a86c6eccf90235c8aa3701710b079da8f456be55','dae.mobasher70@gmail.com',0,0,'96f005691f8bb4a0dfef5f16406dbde3e1c23362','eilia','university of Isfahan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1875,'teamazad2','f386d33043b416fe3d427d461ec151a6a7f5a19b','vahid@gww.ir',1,0,'2469e2a36083f0316482fe78c4c80189a4e00338','azad2','Data Merchant','2012-12-06 08:42:56','default.png',2,-1,1,1,0,0,0,0),(1876,'ourteam','9037caf5cf51563c56b2ed5780349cb190781353','gh.zendedel@gmail.com',0,0,'5aa918a3eba6726eb2592ef480fd26332b3fd252','ourteam','','2012-12-06 09:48:09','default.png',2,-1,1,1,0,0,0,0),(1877,'teamazad3','6bc55e2d8151c4013241115b89d6eb2f0bff2b88','arvin@gww.ir',1,0,'276ec0bfe9bf1a5fc01a68e3366cc66f0bcb9992','azad3','Data Merchant','2012-12-06 07:30:02','default.png',2,-1,1,1,0,0,0,0),(1878,'Tabriz2','da154644ff11d1db1105a8495fdf8b23f77bbfa8','reza.shahghassemi@gmail.com',0,0,'deb48c987fc58ccb7b3d0889c0b0693dbf64f9e5','Tabriz 2','Islamic azad university of tabriz','2012-12-06 07:14:52','default.png',2,-1,1,1,0,0,0,0),(1879,'backTrack','df9dd3ab36afc0cec2b50f90fbc36e376471ac83','mostafa.zamani88@gmail.com',1,0,'4e5e2664203566a00c381e825940685a5f95973a','backTrack','IUST','2012-12-07 14:38:21','default.png',2,-1,1,1,0,0,0,0),(1880,'razi.sadeq','b34da80399d74628bcc0534f160fa0ebf93ba8d9','razi.sadeq@gmail.com',1,0,'d93684236199b30c03999c45e5367bee1fea36a6','sadeq','pasargad','2012-12-06 06:14:38','default.png',2,-1,1,1,0,0,0,0),(1881,'teamazad4','9e29aff463e99b1172be652a7f7d0b406f286812','reza@gww.ir',1,0,'7f1eb1b25dd7d582fa1860ee21b49110ac3c053c','azad4','Data Merchant','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1882,'Nova','34ec50d08a691fb8d8eecb380329e5833a9dea43','ghazaleh.p@gmail.com',0,0,'ebae3866e02688b91b0f4cc1fc51b814636814a5','Nova','University of Tehran','2012-12-06 08:41:03','default.png',2,-1,1,1,0,0,0,0),(1883,'safahan','2e4890f678beb6a1658deb74d441d5bf88afb283','shobeir.alizadeh@yahoo.com',1,0,'bd243765662375ed86588c147375bab95cfcf5ef','safahan1','safahan','2012-12-06 20:03:01','default.png',2,-1,1,1,0,0,0,0),(1884,'justjjgh','a6cd36d4f0877a743c938fd1046fa1e27cdaa9a8','minooee.mohammad@yahoo.com',1,0,'a61e410488d4e3e305d4d1de94f6e0a359ed7323','just jjgh','sadjad','2012-12-06 09:19:19','default.png',2,-1,1,1,0,0,0,0),(1885,'safahan2','5dcfdaf130f6fa1b800d06026cad03ac2aa81514','shobeir.alizadeh@yahoo.com',0,0,'ba14638aa52208947f25bd7f465f183fb81aaff4','ma123','safahan','2012-12-06 09:22:26','default.png',2,-1,1,1,0,0,0,0),(1886,'mojtaba.FUM','c7190adaf725df1a4164e780d1652a3ef586c2f9','mo.ni095@yahoo.com',0,0,'93a4846371e3066b23ee0598934cc44c368511c0','Fum_WithoutPC','ferdowsi university of mashhad','2012-12-06 13:38:47','default.png',2,-1,1,1,0,0,0,0),(1887,'safahan3','35b5fa59037f18f4039dcdf1a53b2ee0f58ed0ae','shobeir.alizadeh@yahoo.com',0,0,'217f7b89ae7335b0deb6d628649a9824cf5f14ee','wall','safahan','2012-12-06 08:00:01','default.png',2,-1,1,1,0,0,0,0),(1912,'samsam111','46062e9ae60ce1bc85b9089c53c8025ef5ca23c8','samsam_pro@ymail.com',1,0,'c7c880fd79667ab66f84a3116d9483d24ed72a9d','Samsam','islamic azad university of mobarakeh','2013-01-10 23:22:28','8a179421c47a9301fbb7bc35e81840bdeb75ba48.jpg',2,1,1,1,0,0,0,0),(1888,'ferdosi','fd1a40af9e7a1ec235ffb1e8eafc59798a806454','sedigheh_vahidi@yahoo.com',1,0,'3d0bcdae48cd3ece434236f3c85ced590b82c8cf','virtual','Qom university','2012-12-13 08:56:36','default.png',2,-1,1,1,0,0,0,0),(1889,'niknam','cae6cba51c1655934c7ab1d2e193a7140dd1134b','hfaniknam@gmail.com',1,0,'10defab318b741a95f4136228b948c38884a8393','hossein','Gonbad Kavoos','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1890,'ali2011','a104d80a7be629d3d94c6bdb63b53289e37a7bb3','a_rahimi_2008@yahoo.com',1,0,'eefe9299507af117afe511798831ccc3bac7d576','Ketad','qom university','2012-12-06 08:17:15','default.png',2,-1,1,1,0,0,0,0),(1891,'hfhh','6713ebcdfb02ef3772b0e776af083a1bf8ce83de','haniey.abdolahi@gmail.com',1,0,'b71cce2180e0ab282ddb13d8b8e467d8a7ae9824','ShahroodUniHFH','Shahrood University','2012-12-06 07:39:55','default.png',2,-1,1,1,0,0,0,0),(1892,'mitra','25571e27e90affb162c75c0cabbe32853039517a','mitra.javid@ymail.com',1,0,'66f4c99206cac5393af4d539279f45a7a80986f7','mitra','sadjad','2012-12-27 12:06:11','default.png',2,-1,1,1,0,0,0,0),(1893,'ruhi','44cb94440dff52b1be6f29445c422f441f183170','rh_hosseini1992@yahoo.com',1,0,'73795eb769d425ded820f07ec2802d55b5c2f204','ruhi','sadjad','2012-12-20 11:16:08','default.png',2,-1,0,1,0,0,0,0),(1954,'garshasp','93ad5f2ce395d7c00291a38dc5d039b3ff06539a','shahaberahnama@gmail.com',1,0,'29627dc98436be55aa615aa2fbe702c38b46b23e','garshasp','vali-e-asr rafsanjan','2013-05-02 14:02:43','default.png',2,-1,1,1,0,0,0,0),(1894,'holypilot','cd1bb01efaa6e99de5844d2f4642625bb1e02492','hzabmu@gmail.com',1,0,'40e3ab1a80ccbb4ab52715633fd9ec74cca00ead','sam pilot','mu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1895,'Foroogh','80b4c351508a5b0f49c4eed46fc4f18c71562cfa','lio.deltora@yahoo.com',1,0,'8eef15a1312945d2161a502c116f7d9f04a98c0f','success','fasa university','2012-12-12 11:09:06','e351c893587d41478812717cedc9c9ee362a4377.jpg',2,3,1,1,0,0,0,0),(1896,'benglish','a0e88b3470cebf046e652216f3cca6c30014e8e7','behzadrezaie11@gmail.com',1,0,'9a02319dad5eee59f0fc1f576ea0d1f23611cf65','benglish','Shahrood University','2012-12-06 12:48:46','default.png',2,-1,1,1,0,0,0,0),(1897,'Scorpion','022a62ffcc0d0af7f5f68864f55369c5d590c281','Yaghoobi.Peyman@Gmail.CoM',1,0,'3475d7eeb5880b1c4ea5287f2bab24fb0f8ea393','Scorpion','Qiet','2012-12-20 17:21:41','ec90bee6997db1e4894c950425010b09c05a7548.jpg',2,1,1,1,0,0,0,0),(1898,'h.eboy2012','6604ea35726a798143f0dc70146bd1d21a2f89c3','h.eboy2012@gmail.com',1,0,'1bbb18bbc8d1ef1c0748028ea87327433c070b46','hoSsein','yazd university','2012-12-13 08:23:49','default.png',2,-1,1,1,0,0,0,0),(1899,'shayan.solid','d9d429edebdc4ec6fb23769fbb6ac7eb985b80ba','shayan.shsh@yahoo.com',1,0,'7c9ba09dd8901766c542798e30b7542dfce000b3','shayan sh','Islamic University Of Mashhad','2012-12-06 23:03:10','default.png',2,-1,1,1,0,0,0,0),(1900,'bousejin','47023c79fd7c8f6a5d741a06246b368fb92a1703','bousejin@gmail.com',1,0,'f58ade07dcb760af84f0243fac4e374b6608766a','Nima','Shahed University','2012-12-06 16:48:37','default.png',2,-1,1,1,0,0,0,0),(1901,'freaked.out','e1de6dba6f0dc652cd730cec22052ff61c0034ec','freaked_out1221@yahoo.com',1,0,'4e238ef7a36b9ec7a9d5795991f1418fc481b108','&lt;Holy Freak&gt;','&lt;Iran&gt;','2013-01-17 12:07:56','be5b7e4ebb9b909f718e092f48a480df318634e4.jpg',2,-1,1,1,0,0,0,0),(1902,'Fant0m','78399ec4cdfc63428cbfd96e3ea8b6ce502d3762','shekari.farshid@yahoo.com',1,0,'f132f1beca12a32cd4c1940156844bc1f0311e14','Fantom','Tabriz Institute Of Thechnology','2012-12-07 12:08:17','default.png',2,-1,1,1,0,0,0,0),(1903,'vahidwhite','69e98bfcbbbf2d62225ed2810f136efa19acc9f2','vahid.memari@gmail.com',1,0,'7539a60253bb1dcf06354f7180271ae7fdea351d','Neda','','2013-03-13 18:22:46','default.png',2,-1,0,0,0,0,0,0),(1904,'mettiblack72','2e12fe6e54644812dab1add70e946d24b2bbfae0','mettiblack72@yahoo.com',1,0,'8339b6e6b4ea0f4ca9a77e5e14c9bb93c79905a7','mohammadmehdi','ferdowsi','2012-12-21 18:50:51','default.png',2,-1,1,1,0,0,0,0),(1905,'mmehreganfar','54266d36aa6b01f0c906e1ed62d243ece1aa3855','m.mehreganfar@yahoo.com',1,0,'7aa11c9d4cdc8c0911e8edef0380fc290fd3981d','mohammad','fasa university','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(1906,'specific1369','7657fdb95329624a9c532a0cf43679c895d2c645','ashkan_z2012@yahoo.com',1,0,'0624ed1f017cedbc7c669177066d2cade4fba31e','specific69','jamshid kashany','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1907,'adel20','e147b14c628d2af483106be8ad0892c5762f196b','adel.mihan@gmail.com',0,0,'5be790ba5b00f9936b0deed1a287af0ca47c280a','Morteza Adelkhani','khayyam','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1908,'farahizahra','b70dee9abccb7a477f3fb86ee4ca6b20a070e2a2','farahizahra@yahoo.com',1,0,'1bb58a820f089292f002d946917d73139900e5ed','wronganswer','shariaty technical college','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1909,'abassian','cfd982e15e91926d5a6ff27356540fd56a08fcd6','abassian.f@gmail.com',1,0,'736a13d61d6dc752f6257cede1bb4e9cddd394fa','abassian','sadjad','2012-12-22 11:35:23','default.png',2,-1,1,1,0,0,0,0),(1910,'feryan','9f582153e2b8195035a68777302cf677dc4b2de8','mk.allthing@gmail.com',1,0,'07615c17c0b6ac47d6cfc423c28aea4229c22376','feryan','No school','2013-02-10 09:59:55','default.png',2,-1,1,1,0,0,0,0),(1911,'Dark','3452fcd4ca149cfa2e40f1e09465b2b5d3c2df36','masoud.it2012@gmail.com',0,0,'76184f33d706271d0eae5056bfcc22248aab917a','masoud','Kut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1913,'mech.math91','a45aca6ed8ea3d2b8564f5aec57e7ef60b820b5f','mech.math91@gmail.com',1,0,'165214ab0dc7305c5a745ea0c3f9a8dc030a6de8','Aarabi','University of Tehran','2013-01-01 22:36:53','default.png',2,-1,1,1,0,0,0,0),(1914,'Decoder','02c8576fdeebe71de50969bd016d0840b6d66e0b','mm.bigdeli@yahoo.com',1,0,'ef921b77b37febb002e496d8fdfc9cbb88876ad7','Birjand U - Decoders','Birjand University','2013-06-02 15:43:15','888c5f7f14d001b9a605f92a2a170aa97e89ea43.jpg',2,1,0,1,0,0,0,0),(1915,'bf4648','d4644bb8fab7685290bdfd148fb42ce6be76dd5a','benjamin.frazier@gmail.com',1,0,'e969af1c95cb87b537284c4d591e930c58839299','Benjamin','','2012-12-10 05:44:00','default.png',2,-1,1,1,0,0,0,0),(1916,'ZaHrA.PaRsA','e66e98d182876b98107daa59a5e287685e0d7070','z.parsa92@gmail.com',1,0,'8eb1730baa934ec40a84718e6ac9480fca8f13b3','Parsa','Sadjad','2012-12-27 07:35:35','aa32699b0b856d82ac535364e6244ba4511f4dca.jpg',2,-1,1,1,0,0,0,0),(1917,'tohid','fa5f42f390d8d4d67151e1faccf85a223e406102','tohid.k1993@yahoo.com',1,0,'ba183c473667d54f521401b71a8259228796e6a6','javakar','bonab university','2012-12-11 20:56:07','default.png',2,3,1,1,0,0,0,0),(1918,'ahmadian','bfde6c9be2f7d9dfa545d773a2b58205ed684e4c','ahmadian.mahla@yahoo.com',1,0,'d3ad5be4dc57d1c900b40081051f93adef0e6b8f','ahmadian','khayyam','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1919,'sodagar','fa42946598d7aeda03640d8c22fb44b9dd9d1099','crab_of_neighbour71@yahoo.com',1,0,'a90b6d47dc66599bb9132aa470b072214d3cf822','sodagar','khayyam','2012-12-10 10:40:32','default.png',2,-1,1,1,0,0,0,0),(1920,'7071','31a9c3d9975b9bad96667d5b384fda51bcd4eca0','ate.hoseini@yahoo.com',1,0,'cc6f9c1f26ed67aa5a3e6c6c75d4ae360dde7f50','sayeh','sajad','2012-12-10 12:14:34','default.png',2,-1,1,1,0,0,0,0),(1921,'faryad','1de825293d204d5f627c487d9585ee78c1aed2c7','n_nazparvar@yahoo.com',0,0,'0da1de81d3698fca36555603c9a97ece843e0f8f','faryad','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1922,'ghiasy','e29decff9c61a577ea0790451eb6d29526f2fc80','gh_ali1371@yahoo.com',1,0,'b94cdc4be6de9e0ee0a006f1af81d85aef9f97bd','ghiasy','khayyam','2012-12-10 12:16:32','default.png',2,-1,1,1,0,0,0,0),(1923,'emad.e','7ea4026211654da6f54b5031c06b60bccb12711e','eftetahi.emad@yahoo.com',1,0,'42673fbc2589f46d91250b42f364927ce69e7fd1','emad','sajjad','2012-12-25 04:48:44','default.png',2,-1,1,1,0,0,0,0),(1924,'raya','8cc26420c93020709af51a2832fecc37c73ae7f8','rad.raya@yahoo.com',0,0,'64d3dff0fd7e8ea969a4bb49f66974b1e2e52e9a','raya','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1926,'masihvaziri','f30687c95a4c7dd64fb97b799ad125bdeeec5e4f','masih2010m@yahoo.com',1,0,'7b5b9142dc3c2988496262adc4ca8bf406eae1c5','masih','ferdowsi uni of mashhad','2012-12-18 07:12:54','default.png',2,-1,1,1,0,0,0,0),(1927,'farnaz.fed','e82e0d00a2b25e1ebe2afb63fcc3a5225f9db06a','farnaz72daneshvar@yahoo.com',1,0,'45e064b369070b46c197bd9f9a767381824b852c','farnaz','tehran','2013-01-29 19:41:15','default.png',2,-1,1,1,0,0,0,0),(1928,'mete30','5334adb6c2df6f8a8120774278d68b2ed68294cf','mete.30.10@gmail.com',1,0,'1a4a86dfbb9bc1536d6cd46b70189fd1b612ea9d','MeTe-30','Amirkabir UT','2012-12-11 13:14:02','default.png',2,-1,1,1,0,0,0,0),(1929,'parshan','52349ede0884a3fd4a8e05c2b6db003c216e8c94','p_pakiman@yahoo.com',1,0,'00ac7b766f906e9b838883b3de7d5c12b6fd6365','Parshan','UT','2012-12-26 08:15:50','default.png',2,-1,1,1,0,0,0,0),(1930,'venoos','f11db0dde120993ae8fe6e87960d1f7b4cb86ab8','aezvenoos@ymail.com',1,0,'17167bd34fe324ba3b36e6ed9150653c2f576114','venoos','emam sadegh','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1931,'Hamid.Saberi','f73f3fe3c81733146d0fc88b10a5a7fc01c10a27','dante_tmnt@mailfa.com',1,0,'442ccd32d2c91e521330df2ec6f4ab006e5ece2f','Hamid.S','Sheikhbahaee Universtity','2013-03-07 09:11:58','default.png',2,-1,1,1,0,0,0,0),(1932,'Sirwan','e6d0a00bee21168b788c38489f1af3848e3cb876','Mr.Sirwan@yahoo.com',1,0,'454d7ab0bbd75b1c6b485f8e2a7fe326ab5d5886','Sirwan','UMPNU','2012-12-12 09:26:09','default.png',2,2,1,1,0,0,0,0),(1933,'3adegh','0b0746b473f998801637a74d9573a7c9c3e60b93','3adegh.ce@gmail.com',1,0,'4d52cc8601d790bccb22dfd5c09ebae730e75a2a','Mam3adegh','Sheikh bahaie','2012-12-12 11:59:07','default.png',2,-1,1,1,0,0,0,0),(1934,'behroozjoon','fdfcf25dc83b76a5740f95be7ec1a03cd1ea92d0','behrooz_key@ymail.com',1,0,'95d383bbef5d38924a8c514d01f1f92ccd87e675','behroozjoon','ferdowsi','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1935,'alireza93','09ffaddf331401ec8fdb6c0d6be39dfb9e38b4b7','temsah1993@gmail.com',1,0,'bfccb213374c818679210a0eb7e90b62296b4916','Alireza','FUM','2012-12-18 07:37:56','default.png',2,-1,1,1,0,0,0,0),(1936,'Elaheh','60403a6e3bbae5212885c11a63ab5677587afa00','efatemipour@yahoo.com',0,0,'c85beb545ff14fda1a08a2104271bde3d06f7eec','Elaheh','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1937,'asva','70bde4da8037e520109946d9ab8a19827419769f','amirsalarvahidiasgari@gmail.com',0,0,'f68bb9c439759b2216d40c802b60a7a8640f092e','salar vahidi','university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1938,'arf1391','5e2a3fd13d88e7c04f57a0697256bc1a3d84ee87','arf1385@gmail.com',1,0,'7f6211c8a070a7c1ea69fcb19b2501bd816f99b4','AR.Fereydouni','UT - CS','2013-05-16 20:05:39','default.png',2,3,0,1,0,0,0,0),(1939,'khafan123','23a50a9cb8000a928f5df2fa2e9d00aa90f99d1a','ssaeed2003@gmail.com',1,0,'7b891b4be9a705e4bbfa55492190b417ddfaf4a2','Saeed','','2012-12-13 07:57:08','default.png',2,-1,1,1,0,0,0,0),(1940,'liao1987','9f5f68798067144ef94c1e2afdd2a0346398b786','liao1987@gmail.com',1,0,'87ad68070d1c7023e2fb076f6693b17ec11923d8','ktliao','National Central university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1941,'samira','85e02cdeb9f75bff8a04216a83cfbeaf41e4833c','samiramohammadi73@gmail.com',0,0,'d9097bfc5d308c95ab5ada6fe73aca408ec02554','samira','Via','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1942,'richlair','2197fdfd7b14c71de40eba011bf44dce5c0d5b38','gouthamgenius96@gmail.com',1,0,'cfa484589ba2de2bc6f75d4ad34630a65d548a30','rich','cps','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1943,'pleiades','0077044c78709a62ab68b1a54512b77920614b62','yavary.rf@gmail.com',1,0,'73ad193f99bb4ed6387df8c9b77696a10b2ab9dd','SJ9VRF','University of Tehran','2013-05-17 14:55:21','default.png',2,3,1,0,0,0,0,0),(1944,'aam0000','884baf28c31b2ea64be7f489c0cb4b3a985f1f91','ahmadftv7@gmail.com',1,0,'7f89a04bdb180c6e2690e6558c8d95b6d194a42a','000*000','Isfahan','2012-12-13 09:48:19','default.png',2,-1,1,1,0,0,0,0),(1945,'dahanservis','2f5b28e3264b66394bb9a3b446cb27f3b29ef286','mathscholar@gmail.com',0,0,'668ad32f8b293bc21c1b23f0cc77d893181079af','dahanservis','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1946,'natanaeel','fddda3ffda6ff834b7428a5293749cdb6da0218f','mathscholar@yahoo.com',1,0,'c3e8cd48d8758f96637fda2a1db10bed97c28d60','natanaeel','','2012-12-13 08:33:11','default.png',2,-1,1,1,0,0,0,0),(1950,'notequal','ce05a62b86de1eb5dd75363d54a955edad044f6b','haddadhesam@gmail.com',0,0,'29ba367c61f82961843b2567c19b5cb2ae5401ba','1!=1','University Of Undergeround','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1947,'mojtabamehr','d3723054a34e2b7e57a4bf9809b1d4c220ab2490','yaser.kashialashti@yahoo.com',1,0,'d805bf3d888114d97398098a42999dc5298f7599','mohsen','akbari','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1948,'renjer','061d4f607cddb6eaac5c505c0d12bb7947b0e0b2','mahdi.renjer@gmail.com',1,0,'b718a10c0227a2d60abfb0e7567b0654416d34d0','Renjer','pnu zs','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1949,'aybaba','fe22b163e65b357ed534522228a1eed7ecf4b54f','hbaghbani@gmail.com',1,0,'f23721753a757e27110616edc97828bafe3dfda9','AyBaba','AyBaba','2012-12-13 10:17:01','default.png',2,-1,1,1,0,0,0,0),(1951,'marjanehosseini','f5a9ea2b64d8ea858a13104687bda509834334ef','marjanehosseini@yahoo.com',0,0,'10369f8c416fea4db69c7b5835ebd2d435efbe88','marjane hosseini','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1952,'sepehrs','4f719f2acfc586bc6377c866ba09bdeb1681cf82','yadegarzade.sepehr@gmail.com',1,0,'7bda0a94bfa64d4108cb41ec6354082a679d6559','sepehr','Tehran University School of Science','2012-12-13 22:23:42','default.png',2,-1,1,1,0,0,0,0),(1953,'A.Araghian','547edf7a4209cd4118356995d240dabc51f2d991','ali_araghian@yahoo.com',1,0,'5704cf5c16674afd609e1aa8c9e462349bb36b18','A.Araghian','university of Tehran','2013-04-22 18:15:45','458b154bf8bc1536d2ae55148eff94848cda234b.jpg',2,3,0,1,0,0,0,0),(1955,'HaMeeeD','44d2b634f2d4766e9b138624436f68ea016ec40e','hamed_holu@yahoo.com',0,0,'5cfe4d661b9517210e6068edb9a3b66b62394b3f','HaMeeeD','Pnu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1956,'mahdi7192','2cf05dd5a814a5d627d9e53fe381c09fb1e86b62','mahdi7192@gmail.com',0,0,'204271a9ca4e5b6f3a789d00fb6a454cb78136bd','Mahdi7192','Ferdowsi University of Mashhad','0000-00-00 00:00:00','default.png',2,1,1,0,0,0,0,0),(1957,'pooyacsx','283eed21fa95e768dcc6676620a4be889b5c30a0','pooya.bahale@yahoo.com',1,0,'26376b03ba259f2d9a2f4a77714286265812c99d','pooya','shbu','2012-12-24 10:51:21','default.png',2,1,1,1,0,0,0,0),(1958,'marshall','580352b8ff6a8df80e1adee8b3fe55ba550a0f21','ali.araghian@yahoo.com',1,0,'d11ea58b004680df2411d0abade95ccb37f44f01','リューク','','2013-06-10 20:20:25','95fb307410d027a461cb978737f3fdb36c873fae.jpg',2,3,0,0,0,0,0,0),(1959,'javad65','020b3c07f4dcdd2513c847e1df344df26df9504c','javad_r_85@yahoo.com',1,0,'bd4f7a54ca0eea25d53cf6656d65b22de2b44b85','AryaNet','Delijan PNU','2012-12-15 04:37:10','default.png',2,-1,1,1,0,0,0,0),(1960,'khordadi','b33045fba6c0030a569d80c0f4fe4c741c2c26b2','ali.teimoury@yahoo.com',1,0,'daf04a59757c0a349bfcbb01eb9fc184e3ad73de','haji','sajad','2013-02-25 13:45:09','default.png',2,-1,1,1,0,0,0,0),(1961,'razor','5d6f38efe2c798afa6fd15d648a347d43a587202','mohibeyki@yahoo.com',1,0,'df701a723d7fc6ea331f99f4ae55ef4bf3a817e6','Razor','UT','2012-12-15 14:51:20','default.png',2,-1,1,1,0,0,0,0),(1962,'hamidrez','5a947e82596142e3e24322dc8b264bd148ec038c','hamid_68_reyhany@yahoo.com',1,0,'960d17648a268ec3004e7f4b69101f190edc98a6','HamidRR','University of Tehran','2012-12-15 18:12:55','default.png',2,-1,1,1,0,0,0,0),(1970,'sandbad','79143aa2a3daac53a7c5dfb0fb9cc3961c7a8689','sandbad.ae90@gmail.com',1,0,'4f7607dc89398187701a203147264e65da4d21b0','Ali Ekramian','University of Birjand','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(1963,'sneyes','73fe15f78379044dc8fe21b879b78eaac271d4aa','bardia_73usa@yahoo.com',1,0,'a7f49f3948add4b07e76bf168295b1902b0e746c','Bardia','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1964,'BlackHeart','0bb3286015197fa503012bfbaa83842e153c9ffe','mohsen_shafiei5063@yahoo.com',1,0,'665137890327ed70d5a345d456a136acd76eae39','Black Heart','University of Tehran','2013-01-23 20:17:21','default.png',2,3,1,0,0,0,0,0),(1965,'arman','d6425a757b963c77bf142d8d66abe67e9bcfaacf','alaalfam@gmail.com',1,0,'3b560eb779846417ecac912286827bcb4b67e856','armanlaalfam','University of tehran','2013-03-12 15:25:32','default.png',2,3,1,1,0,0,0,0),(1966,'mohsenmokhtaree','57d72a58a906bafe6dd401a77206824b90bba5ae','mohsenmokhtaree@gmail.com',1,0,'076361c799a20eb50809235c99a433040cf5898d','mohsenmokhtaree','torbat','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1967,'activelord','220829aa9467c20124eaf25aa725501c447c1966','activelord@gmail.com',1,0,'cb76d93a0d176ce7b37b7b3797bf434b63d97912','White Crow','QUT','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(1968,'asadi.hasan','44bd50f84dca4f40f92d8ff744d8fca943ff4b9b','asadi.hasan@yahoo.com',1,0,'94a281b44db8410602384c163d5ae511ad4d28e0','HA_pro','Amirkabir Arak','2012-12-16 18:42:31','default.png',2,-1,1,1,0,0,0,0),(1969,'3gger','86e19c7e8e941da8ae11504b7436e340e8dc4332','shady_3gger19@yahoo.com',1,0,'5db3b87b8639311497a0a73558c01a5cd348d2ca','3gger','tehran university','2013-01-26 08:11:24','default.png',2,-1,1,1,0,0,0,0),(1971,'invulnerable','4d5542603285123983237cae4000e9659fcc3a34','motallebahmadzade@gmail.com',1,0,'db07d22f5750b4db82cc5a749d238d5ac9779f30','invulnerable','scholl','2012-12-24 17:25:56','default.png',2,-1,1,1,0,0,0,0),(1972,'dante','120eed0332bc6c8df890de0fcd91dc3dcf38530d','navidabbaspoor@gmail.com',1,0,'46784c2995337a576b5a8df7c45f926343145dc9','Naviid','PNU','2013-03-08 09:20:11','default.png',2,-1,1,1,0,0,0,0),(1973,'displayoff','12fb49e6fab4da4128ed3a0e9ec0d569e19d3cf8','jafar.khoshtabiat@gmail.com',1,0,'7f918551ebd2ab7f3859d11ca6e5465e1404bfd4','jafar_salar','sharif','2012-12-18 13:22:25','default.png',2,-1,1,1,0,0,0,0),(1974,'klax0n','af1a581e8d774e7ada3f8c8c1122187d08d53ae5','saeed.esfandi@gmail.com',1,0,'0529a93e74e09acb1585ad4e548bfc341a225b53','saeed','fasa','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1975,'ElahehF','e8638f8e3a056cc859710ab4d6a86ed3c760c3e4','efatemipour@yahoo.com',1,0,'45493f3010982f8979f8b16822958dcd88643f94','Elaheh Fatemipour','University of Tehran','2012-12-23 11:30:25','default.png',2,-1,1,1,0,0,0,0),(1976,'canopus','696589883fe8f2d17ea44141733d63b7519b6e35','ahmadisoheil69@gmail.com',1,0,'689b0fb1425f7eee75ed29d7eab083540960adc3','Canopus','birjand','2012-12-22 15:09:17','default.png',2,-1,1,1,0,0,0,0),(1977,'eyebanoo','662679f0b47126cf09b73c83e5e95f2bcedc0785','m.vahidkhoo@gmail.com',1,0,'e7a9f262846d36efec9693fcb38e589a282ab344','eyebanoo','uok','2012-12-19 15:25:09','54f07f7765b60d3d61f9e8edb0c7285c9c16529d.jpg',2,3,0,1,0,0,0,0),(1978,'Nadia','d58b3284969be308b0a4419688efedb573d18dd8','nadia_t72@yahoo.com',1,0,'3ab8020e0166f4d13e595bec3357c58106a512d4','Nadia','University of tehran','2012-12-29 09:41:46','default.png',2,-1,1,1,0,0,0,0),(1979,'Damoon','2721a5490a4c194ab9c16b553f98ce1fdb835de3','damoonrabie@gmail.com',1,0,'afab4869938ae2d93ab3d4e2ac6f25e040c71822','Damoon','UT','2012-12-23 18:57:16','default.png',2,-1,1,1,0,0,0,0),(1980,'sheida','4f3ce42fd62d0dd158ef80f54a248a7840f01774','sheida_r123@yahoo.com',1,0,'014629f768b19080562f339b93788fbdc4c50576','sheida','tehran','2012-12-21 13:28:32','default.png',2,-1,1,1,0,0,0,0),(1981,'ripkop','8d0cd86b37de5c06c7ac039e67caefe4a4c969e2','mm70ir3@gmail.com',1,0,'5528f5fa54c0f1ffb26f6f9e17e8ce6fbb7304d2','Milad','IUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1982,'openbook','4648173647bcfe9984c4a8ee1e2f37532c36d05a','windows_mp@yahoo.com',1,0,'b7a358034b750778bc274484e8520a433715f3b1','windows MP','SUSA','2012-12-21 14:50:27','default.png',2,0,1,1,0,0,0,0),(1983,'mehrta','28daf7e1a89aade3403d25645e941babe5ca7c84','mehrta.msh@gmail.com',1,0,'5df63bf19c051e388fc6553147b8b82c165562ce','mehrta','University of Tehran','2013-01-01 17:05:55','default.png',2,1,1,1,0,0,0,0),(1984,'marjane','b8694d5f7da8c647b0b3a48542025fbe6be28be1','marjanehosseini@yahoo.com',1,0,'82ac3cb12ab7ebd749e6a3da4e083a6004ff5fe6','marjanehosseini','University of Tehran','2013-01-05 07:14:20','default.png',2,3,1,1,0,0,0,0),(1985,'farzad','2611bb9a06fc2cabd62dc5ddf860baa241663ef1','farzaddev@gmail.com',1,0,'62d9b51cb4428ad5fea05acc05eec8d81d72752c','Cross','MUST','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1986,'Tara','8f8acca2cb4201bab7d53b28a4b29407bdb97cbe','hariri_uni@yahoo.com',1,0,'31da916cefbd6b18c82e6967f5f78f26f12571ac','Tara','University of Tehran','2013-01-04 04:25:29','default.png',2,-1,1,1,0,0,0,0),(1987,'ebrahimnezhad','a704d6de382e445ee89de0e60e15bb2ad1b70e5f','abassian.f@gmail.com',0,0,'4b6de3ccee51ff9c3b4623b40f5d8a248826f7bf','mahboobeh','sajad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1988,'zahraamini','9050c13ebe2fb1ca5d7ea0da98d0ecc13c0cf1ba','opal_dead@yahoo.com',1,0,'938947c95d04b1528adf15fd8ba6634767a7617c','Zara','tehran','2013-01-04 11:16:51','default.png',2,-1,1,1,0,0,0,0),(1989,'A.keshtkar','220d82a35b8adff852b9073eebfd708104bc6eaa','info.keshtkar@gmail.com',1,0,'1cd54d0590fc992cae4f4b6d34b1be22b80847a5','Hacker','Computer/University of Tehran','2012-12-22 15:41:13','default.png',2,-1,1,1,0,0,0,0),(1990,'amirahmadi','3f0c77c9c850ec658ad12092075671c366f81bb0','aamir299aahmadi@gmail.com',1,0,'e3f12324a692a7a3e50b047ff3eeca234fb177ce','artmis','tehran','2012-12-24 11:29:43','default.png',2,-1,1,1,0,0,0,0),(1991,'farnaz.ed','d1e03056c0b36956bcdd3adc81d833ce96973d62','farnaz72daneshvar@yahoo.com',1,0,'b231afb73058dc70c0524f6c69e0d2ff0c725d1f','farnaz.ed','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1992,'niusha','fb4fcb3e97e017e5d6a6be77362f7ee3ac251955','nmotevallian@yahoo.com',1,0,'90c7cf55a2294501acb870b2b389843b2297d2d4','niusha','','2012-12-25 10:05:40','default.png',2,-1,1,1,0,0,0,0),(1993,'nevermind','55ecbc0425a8f9469aa20ff19718c0d1fad186b7','i.m_better_than_you@yahoo.com',1,0,'4a967924d9c750cd72c982773c6ab2dd58359d07','nevermind','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1994,'nazi','dc38bc30ad2871cdae45fcb5874df325f90f430d','nazi.hasanzadeh@gmail.com',1,0,'4bcef2569af75593ae7709669a33ac9d2de2d500','n.hasanzadeh','sadjad','2012-12-27 07:34:47','default.png',2,-1,1,1,0,0,0,0),(1995,'javad','d2ebf673ac28bf440f3ead3fd837a9f3d11d43c4','m.j.izadi-sharecode@gmail.com',0,0,'d11eabbb7d7be47a1bd1ed17916ba3351d2c8a35','emjay','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1996,'DemoVersion','af38181c3f69573bdbec2ec1a29f1e2528535c71','haddadhesam@gmail.com',1,0,'60f0dbe08135a81a8b0942a0588f6a215f122d5a','Demo Version','GU.AC.IR And Guilan.AC.IR','2013-06-17 19:17:52','a2ff5f46f85523b32cee6126c719a32a7c47e0de.jpg',2,1,0,1,0,0,0,0),(1997,'eli123','95b933bbf993bbd8326994fc0cbc05d2ca354923','zohre_s1369@yahoo.com',0,0,'f24b526ea90ecd8edd6e6760c87a04cf976e601d','eli123','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(1998,'testme','a2fd23c208bffdbd05afd61fb62a657335e5f8cd','maron493@yahoo.com',1,0,'99f1537aad0ec5a542c65b6bcdbbedd3197f8873','test','','2012-12-24 14:42:45','default.png',2,-1,0,1,0,0,0,0),(1999,'tmomen','c8718263c4433aa337dc2363b81cae4ab739ac84','momen.sara@ymail.com',1,0,'2a94c2650d76b2df9b3e4eb80564dc60e0d5b5aa','momen','sadjad','2013-01-22 20:22:49','default.png',2,-1,1,1,0,0,0,0),(2000,'sudni','bce4fde2483ea2332aaadcb62afd88c230c5998c','sudni1900@yahoo.com',1,0,'f8078a98c8628427401b6789de2e9c8dee0b755e','m-ali','birjand','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2001,'vru9120','6847d663116848f616b0617d6e0b7cde9cb000c9','sadegh_rk@yahoo.com',1,0,'48fa9d4c22c5164304371afd20b99146c74cc291','vru 20','vru','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2002,'foroogh1371','07c6018c7dcee319742bfb59a686c49a769dc8e2','foroogh_s_mousavi@yahoo.com',1,0,'08ca099f31ab5bed7b317d3c7544a7567762db82','foroogh','fasa','2012-12-26 09:23:40','default.png',2,-1,1,1,0,0,0,0),(2003,'amormiorealmadrid','481b44b390dbcaad13734ff5228e19d897436e1d','amormio1rma@gmail.com',0,0,'23b4e19cbe36df50b2327d441e05d274afd8198f','H.RMA','uok','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2004,'vru9101','345be74392e212258df7ab6a11a20885217b2c99','htc351@yahoo.com',1,0,'749e49ac3603f61f71929d84bf946945daafb4b4','vru01','vru','2012-12-27 08:23:08','default.png',2,-1,1,1,0,0,0,0),(2005,'vru9102','7df1f1bea9fdf8b8c053b8f0aade938cae443ac0','htc351@yahoo.com',1,0,'aff1f40029651f7d2bf25a7efb32d4b69d219504','vru02','vru','2012-12-27 08:12:53','default.png',2,-1,1,1,0,0,0,0),(2006,'vru9103','342a7b5e681777c5cd97293e0ee7e0fa432076fc','htc351@yahoo.com',1,0,'75ea70fdf35ebe645187ebeed9018018eadabb2b','vru03','vru','2012-12-27 07:34:00','default.png',2,-1,1,1,0,0,0,0),(2007,'vru9104','021c16b6a4469f34945358eb24f9d1e1de9cc9dc','htc351@yahoo.com',1,0,'14895a4f23367a939d0ef3ca4be8c8a044f50b6b','vru04','vru','2012-12-27 08:18:42','default.png',2,-1,1,1,0,0,0,0),(2008,'vru9105','1ca1159ee049ebc92ddf24686942333939b72b74','htc351@yahoo.com',1,0,'d5dddcdbf4dc6bf5b15b754f34e7ae11e0a970a2','vru05','vru','2013-01-02 16:41:07','default.png',2,-1,1,1,0,0,0,0),(2009,'vru9106','8cd6a2b285d9f66955b2b36e5171b65830d36082','htc351@yahoo.com',1,0,'e1f99c52fa34f4a277a53bcf285e425f18bec993','vru06','vru','2012-12-27 08:30:07','default.png',2,-1,1,1,0,0,0,0),(2010,'chooghoor','f60c25e2794228b615b245d29cca904816d5af28','fatemeh83fathi@yahoo.com',1,0,'976ab5ec47ec073839e8348f2c467847ca23dfde','Chooghoor','University of Tehran','2013-06-12 15:18:53','default.png',2,3,0,0,0,0,0,0),(2011,'vru9107','0e0b26bc110b88ecd78c4db3fbc49aed4a0616fd','htc351@yahoo.com',1,0,'3490e91508c62591153c99aad9bddf2eeb236556','vru07','vru','2012-12-27 11:43:24','default.png',2,-1,1,1,0,0,0,0),(2012,'vru9108','c5cf939c43a7e2f1016e2d559afc8e038c918f4f','htc351@yahoo.com',1,0,'9075f375f0f355b1ad2085e1902735b58c6a8bfa','vru08','vru','2012-12-27 18:15:59','default.png',2,-1,1,1,0,0,0,0),(2013,'vru9109','3485f815a5464c4966de3c5e43df30fee877ad8c','htc351@yahoo.com',1,0,'c452ec2c972a89beb13ab0eba415f610342764b8','vru09','vru','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2014,'vru9110','ecbdacfd7eb12b5747d74e3500cf6bf9a61d7f8c','htc351@yahoo.com',1,0,'c2ad16b73043a055af7f6a1f78dec3c95330433c','vru10','vru','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2015,'vru9111','667886369865d7546287a2266cb6d2a80c0aa721','htc351@yahoo.com',1,0,'f91d9901488f7f1e8317799617181a4e941ad734','vru11','vru','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2016,'vru9112','1e1af8f7488d96d9aeb74a9129d4e5e09200acbe','htc351@yahoo.com',1,0,'d0a934d0b7fedcf68b5970f8bf8f5aa9ed757b91','vru12','vru','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2017,'vru9113','6daa7d8ef177d41b5b0e19ca4fa800eee24cb35d','htc351@yahoo.com',1,0,'65885f9a2128eb555a777a557c71a15200ab425c','vru13','vru','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2018,'vru9114','de445c7c209cf7d0933e65d9860c46083ff55288','htc351@yahoo.com',1,0,'a4b8075b52b05b7c692d12f2dffe4fc2c21a2f7c','vru14','vru','2012-12-27 06:54:35','default.png',2,-1,1,1,0,0,0,0),(2019,'vru9115','e8c5f6fc83b7d8cab7becd08d93ffed15ec976df','htc351@yahoo.com',0,0,'042bc9dd198107bee4b8b1fc08826bca12b04179','vru15','vru','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2020,'saman212','03edecae307c042cabaa04a325475139cd7edc36','saman212.facebook@yahoo.com',1,0,'1672b976c789c2b9b91f29aa3822b2f9e2fd135f','Saman 212','Khayyam University Of Mashhad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2021,'boshra','3531ba66af6f1621c124961eb16c22381c0e7bde','n.naderian71@yahoo.com',1,0,'cd0968d1933d0943fa40bd4935502a571037f743','boshra','tehran','2012-12-27 08:08:56','default.png',2,-1,1,1,0,0,0,0),(2022,'happy3friends','3ea7ecc70b39e4d6387b8d618bb3f6677a9132fe','meisamtaher@yahoo.com',1,0,'92e508e9f5a8ddc01a07a09e5dee23c2bfcc4a26','happy3friends','Tehran','2012-12-27 11:07:16','default.png',2,-1,1,1,0,0,0,0),(2023,'3bashar','5ef92ae859e1c13af01140f020a22adb5adbd4f3','h2asghari@gmail.com',1,0,'30667944873b5ff6bf48811ef880e1157bba02e5','alish','','2013-02-25 16:02:43','default.png',2,-1,0,1,0,0,0,0),(2045,'forTestList','ef5a3d9e96f6f6cabe68b8063181f59fcc1bf6a3','moh.motahari@gmail.com',1,0,'1ba33456d718015478917d4460d7870a824973ad','forTest','UT','2013-01-06 06:20:28','default.png',2,-1,1,1,0,0,0,0),(2024,'eNDm0Dule','227c223483cc8e52c003b017d70ca7b5293c4408','atiehn6@gmail.com',1,0,'9b34764d09232589e9b43dfe3fb5e397af069ed4','eNDm0Dule','UT','2012-12-27 09:29:50','default.png',2,-1,1,1,0,0,0,0),(2025,'agness','c5be64eb9e036685ef93c1e36db0e5c225fdb3ae','atefeh.ir72@yahoo.com',1,0,'432fddb3257a4e2abb05650142d5bc8f2585238a','agness','UT','2012-12-27 09:51:35','default.png',2,-1,1,1,0,0,0,0),(2026,'koalas','4b3b7e02576eb2a2ed9c9c3b84a748b7ec973833','gharaeemanesh@gmail.com',1,0,'42084348d2ddbc4e0943c9808df971e2a9682d3e','KoAlAs','university of tehran','2012-12-27 11:29:55','default.png',2,-1,1,1,0,0,0,0),(2027,'galaxy','9bf45546069fd8ed81d5ee9cda5fb3d4a605acbb','mahdisheikhzadeh8@gmail.com',1,0,'33019a45d8cf3a71032f705e240f97bbd444ee4f','galaxy','ut','2012-12-27 11:22:43','default.png',2,-1,1,1,0,0,0,0),(2028,'ghanari','bbed6681af4b6f219625e7054b622a40828eea7d','faeze.faghih@gmail.com',1,0,'0a6c36da360a99587398ce5f68f35c24b5a24ecc','ghanari','uni of teh','2012-12-27 09:25:51','default.png',2,-1,1,1,0,0,0,0),(2029,'SEVES','a2faad998a6995cda191d01364a9de453281f791','KAMYAR.DARVISHI@GMAIL.COM',1,0,'dab7ee71761023817b6e9eeef7eae86790617b85','SEVES','vru','0000-00-00 00:00:00','30457930f7683651a6a8eabd74e7e4746046f3f8.jpg',2,1,1,1,0,0,0,0),(2030,'vakili722','faafb7804db23a9016b7c532b3012523852d4a40','v.vakili73@gmail.com',1,0,'6d48556381e264bbfb749c06a523753647d8011c','Vahid Vakili','vali e asr','2012-12-28 06:37:44','default.png',2,1,1,1,0,0,0,0),(2032,'m.ebrahimnejhad','5036161d476dd760d7bad304607e641a556ae04c','m.ebrahimnejhad@yahoo.com',1,0,'95393cd373e26424cf1d672033f915ad4f91cdc9','mah&amp;a','sajad','2012-12-30 12:34:46','default.png',2,-1,1,1,0,0,0,0),(2031,'aftandilious','75c13efa6fb5dd8d5dcf4399a86de63860e7f419','ap.6219@gmail.com',1,0,'54d6c9c97ff67dfd6b70fbd7f81824133b38e16e','aftandilious','','2012-12-28 17:21:46','default.png',2,-1,1,1,0,0,0,0),(2033,'happysmile','2749ada5ac6f1603c47ba9a7d3537e9069e59703','modaresi_hojat@hotmail.com',1,0,'6613bab00d32609c7f1d7f3c2f060c33245258ec','happysmile','University of Tehran','2013-06-19 06:54:14','8df6f1c3f2462e73414b0f1c869799e685309278.jpg',2,1,1,0,0,0,0,0),(2034,'amir.bh','377b03900435c67295be7fdc3bb08db7533edbee','bitaraf.amir@gmail.com',1,0,'52814486f81d337caa324f0327add4e5d9bdda0f','Amir Bitaraf','Shahid Dastgheib 2 Shiraz','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2035,'roozevasl','204ee2b43be26e3b9d7556bd3022ff2b1ca80111','roozevasl.m@gmail.com',1,0,'bafb67cec4ffc4cecd1f239b65ec9829894703fb','mohamadreza','damghan uni','2012-12-30 21:10:05','default.png',2,-1,1,1,0,0,0,0),(2036,'M.Khademloo','a5b8d52889bb1aa1d1c8c51d4098defea544502b','sam87_kha@yahoo.com',1,0,'359bba363c7b40d0b765ba6eb885d65a1a3a3ad1','M.Khademloo','Tarbiat Modares University','2012-12-30 21:28:44','6ce9740a71215bd41ef82d094244c28b338432e5.jpg',2,1,1,1,0,0,0,0),(2037,'hans2he','2863aa91b4f3772afd53d861b403dbad39c63075','heweihans@acm.org',0,0,'f7bd0e8819b0d14f45b72a30e619c0967f421ee7','hans','Beijing Institute of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2038,'m413','5e4c233a538cd2185f28fe43f8f499b1872c75ef','gogooli13@yahoo.com',1,0,'9ba3007865db790e9c44662854835b83f2846276','m413','','2012-12-31 16:09:08','default.png',2,-1,1,1,0,0,0,0),(2039,'hadi.ghiasi','7dd8b9db01cd33981b471459c6ae07009add1560','hadi.ghiasii@gmail.com',1,0,'de376024d2f10df8bda5341973aeba2ea20cf0be','hadi ghiasi','tehran','2013-01-03 14:57:01','default.png',2,-1,1,1,0,0,0,0),(2040,'sajjadb','4f564826e3961b8f3b5b87dc9f6e5e7320c65ef7','mjizadi@gmail.com',0,0,'a1242b77a884dcf7b242edb11cf3c39324fecca5','Sajjad B','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2041,'ezzatkhaledi','4a9b657ffcb02e83767e6f3b6290cced1c1b742c','www.ezzat_khaledi@yahoo.com',0,0,'5ca399a3446a12fa6b80c33b997d354bad09e170','ezzat khaledi','urmia pnu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2042,'chrun','ab880b19df1201668378eff2b82b62ffe1d70013','smor.prg@gmail.com',1,0,'75ac086498750c3b28a68317b9e10c25af3e7ca6','ChRun',':)','2013-01-03 20:05:23','default.png',2,-1,1,1,0,0,0,0),(2043,'DariushPour','1be38456b0b9347580bb461161932a8edb1cc36d','dariushpoormostafa@yahoo.com',1,0,'e2056e8761816ec630652bae2e23a64b1c3c3f41','Dariush','Upnu','2013-01-04 18:11:01','default.png',2,1,1,1,0,0,0,0),(2044,'skytreader','5c51b8b38592ed02b5c801e5ab824bfe3d1343d6','chadestioco@gmail.com',1,0,'f1ef4ee869ad6078e6e136b2a9219cdb587e3925','Chad','University of the Philippines-Diliman','2013-02-20 01:49:44','default.png',2,3,1,1,0,0,0,0),(2046,'pedi6951','0110f38f886fc1a097128ffa14563f6cbd8ee94a','pirhansoratidelemanobordi@yahoo.com',0,0,'9c52e041d64af3da815c9feb79aee9d338e46b3f','pedi6951','payam noor','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2047,'codeshubh','ef1c6ffaf6ebe446a6daf3995b178fd24e9a9e06','gargshubham258@gmail.com',1,0,'789b552f1af3fa2baa095b3e03b41ef298ad625e','shubham','lnmiit','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2048,'m4hd1','705c140e0673b309fc2e21842146b50274d57229','m4hd1@me.com',1,0,'f0e518ee9c612ccb15671a688605612dd15260e4','M4hd1','','2013-01-16 14:19:21','default.png',2,-1,1,1,0,0,0,0),(2049,'lebron','9befae8ae31d59e1929c1936e21cfb840ff4cdef','alaalfam@gmail.com',0,0,'24ed636a94c94dcdbbf1fab0058334ddb215e357','lebron','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2050,'fathi','215f61f98b89c386fbff452cd421dfb9d693a870','f.fathi@ut.ac.ir',1,0,'00355f04541565762a9504ce7bf059e1cf8b2b21','farhad','ece / UT','0000-00-00 00:00:00','default.png',2,0,1,1,0,0,0,0),(2051,'milad.pormasoom','ab6ad95122e5e4d46c202640d1dd31af1a21940b','miladpormasoom@yahoo.com',1,0,'839b00ee1822b464232e14fa20639d38c1df5cec','dennis-ritchie','pnu.urom','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2052,'to0ofan.mshf','ddcff9cba67f6f1cab62d8bb78868a7a2f2b0a5a','toofan_mshf.1993@yahoo.com',1,0,'8faf551fc4dcc2dd7943e3b1ce0bcbce816c5424','mohaddese','university of qom','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2053,'sajjadramezani','35d340ca843860f27227c4d8279b8988784f40cc','sajjadramezani90@gmail.com',0,0,'3c7cb04a1e35b83e5411539d2923e28762e3978b','sajjad-cse','vali-asr university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2054,'thanhtien522','9d0b19c1b5788079a82da549c1eadd3b0bf7bb98','thanhtien522@gmail.com',1,0,'e7814999c68eff0c997c6f9724a0b054f09c9da6','Nguyễn Thanh Tiến','HCMC University of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2055,'predator0','9be18cde854751b64b98abdb868ff85e5c885cee','verma.vivek0786@gmail.com',1,0,'30fd13e2c46c108ca063850e342c210ad94f5a8b','predator0','BIT Mesra','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2056,'daneshjo90','9263e9de397a5d05344bcb5d9ace2c9efe51cf1f','saeed.daneshjo@gmail.com',0,0,'74a82dc89b02697122100b2bad09fe15a03c09f0','سعید قاسمی','دانشگاه آزاد چایپاره','0000-00-00 00:00:00','3ca06c031ccd285dca813abd5cd1fd2b7f65ff47.jpg',2,-1,1,1,0,0,0,0),(2057,'giba713','fe79bb4547799c65533b64cc3bfce5a8fb36bc45','aminsa13@yahoo.com',1,0,'095240dcbd7e450e466982fc245049257b7dddda','Giba','','2013-01-17 08:29:03','default.png',2,-1,1,1,0,0,0,0),(2058,'shiva','90dfd4ff237f65cf58ea083ef18c43558a337dd8','sh.shad26@yahoo.com',1,0,'e30bbab187e6c619c2464c9edf90fb8d887ffc60','shiva','pwut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2059,'xixit','e7ddde287475f8fd1d6ae1474af2eb81037c1cc0','amir.farzin@gmail.com',1,0,'8579a2edfcd2eaa72d34c1d0d3742d2ec425e5f6','Merlin','','2013-03-20 07:55:16','8adc7b3c83cf7abb09491e387dd27149eabc0a66.jpg',2,1,0,0,0,0,0,0),(2204,'hermiona','374971e6e1932cd73ecf474bf1901f90bfb3cf02','s.dad73@gmail.com',1,0,'9105e653c4815d328e81e854612b28376f7c2bc4','Saba','Tehren University','2013-03-27 12:36:39','default.png',2,-1,1,1,0,0,0,0),(2060,'bb60','77df59cb0a62e3eab324c9086e50992ec7f7c6d4','behzad_info@yahoo.com',1,0,'905c9659e5210d8824de8805297f56d4f2c4d442','Behzad','Sa','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2061,'anteniyus','588ff4fadba1ec9ef212c09dde5571d36a8786fc','anteniyus@gmail.com',1,0,'8ebc97d2566c3663dcc4883b618fc5a4dddea4ec','Reza','Teh Univ','2013-01-20 08:37:15','default.png',2,-1,1,1,0,0,0,0),(2062,'mozhgan','58256035e6d1f52f43b78f5a62061dbe4713dc1f','mozhi_mohajer@yahoo.com',1,0,'fddf84cbf6141e6d98862d513a84240229da2137','mohajer','sadjad university of mashhad','2013-01-23 21:00:32','default.png',2,-1,1,1,0,0,0,0),(2063,'mhmarefat','84967d58e33300aea603d812be9ddd0bfe1434ff','mh3marefat@yahoo.com',1,0,'cf10da74e49cf5e6e3a2c34a748bb8f9dbba5cdb','mhmarefat','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2064,'justinceishere','c2d9caee1690d074f35f0676e60024f2248ae085','badcoder4fun@gmail.com',0,0,'87c96c2b0b1a3c7a00d00abd14461b639ac79553','cartman','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2065,'yasserkhaksari','0475beb50a09ce5d46efcaba2ff32f0df44c082c','yasser_khaksari@yahoo.com',0,0,'564811bacb8a7d49a24097cc3af5ca94691b4290','yasser','meybod','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2066,'moatwork1011','59c3fc30bbcd75730099e5ab7ae83b02d6397eb5','moatwork1011@gmail.com',1,0,'ef2ec13d738101158e78f2b0a73dd2a42a01d488','mammad','University of Tehran','2013-01-24 18:13:40','default.png',2,1,1,1,0,0,0,0),(2067,'Bool','99e5c6ea3f5cc9403de32261f962e1115dc19222','mohsen_shafiei5063@yahoo.com',1,0,'3b20e73caac14bfcfa84075aed6444ac108ccaec','Bool','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2068,'linker','ca42d20bbdbf76591ace17183362424a3587d2fe','mgh_login@yahoo.com',1,0,'83ea1c4bb60b7733dee46b36bcc0d37c9f9c312d','Mahdi MGH','Sajad','2013-01-24 00:32:55','default.png',2,-1,1,1,0,0,0,0),(2069,'farimah','8b9f949161f79ca462944bc07719d128b1413eeb','farimah.mz@gmail.com',1,0,'2c46f861b1033d03f1d3159a2a63f95a3332856b','****','UT','2013-01-24 04:23:06','default.png',2,-1,0,1,0,0,0,0),(2070,'badcoder4fun','15956dcf0191115c0339679f1bbbeff8ce3085e1','badcoder4fun@gmail.com',1,0,'4ffb5913aa71ca134476d912393f2217682d7ed5','4Fun','none','2013-01-25 00:22:40','default.png',2,-1,1,1,0,0,0,0),(2071,'mrGRR','987a40f52ce3531b6de295d5a5161f32f020fa2d','sergi9rr9r@gmail.com',0,0,'84f9ec515e56347c3526674f957a09ef74a51f3a','Sergio Rodríguez Guasch','Universitat Politècnica de Catalunya','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2072,'nasser','865e63849da93f8f2c47bc6acba283961b95a030','zeraatkarn@yahoo.com',1,0,'37ffeef4085023c9fa11f8c883a37f1be01b5d28','Nasser','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2073,'jmohsen','4df757a23955529c2831caeddae5931bc9815337','jmohsenm@gmail.com',1,0,'e477d01a35ced84fe166c701e05d8009d08add87','xtraOrd','University of Tehran','2013-05-03 16:28:11','f62f664415c6bbe1491ebb0a05f7ff12db202391.jpg',2,1,1,1,0,0,0,0),(2074,'crazyprogrammer','766f23e52aca9a2ff3a90ec88256d63b5870b74c','crazyprogrammer.mahbub@outlook.com',0,0,'b2fdc3a1c6d2e2516709f522b2f5db5174bff89d','Md. Mahbub Alam','Chittagong University of Engineering &amp; Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2075,'Pouyanz','c1ef44a6a38dac921f483d7ba13cee9973a62618','prezakhani.pr@gmail.com',0,0,'a9e3883ba740239fb75ae8da53e5f59a4e0e680f','pOUyan','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2076,'a.fazel','f4095a7ee6ab7749df60544bbb1e64e8c88b6010','a.fazel68@gmail.com',0,0,'78f7df0cd56e19393b18120095faf6b466547a2f','Alireza Khan','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2077,'fal144','7cb446deed6c640f41e488aff7a05c755485014b','falfal144@yahoo.com',0,0,'c4631530a442e6073393e917d612a574950a16d3','FALL','fani mohandesi quchan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2078,'mr.makkawi','de2f68b5247151f0b54fa8518ce1e78c5b4fdb37','mr.makkawi@gmail.com',1,0,'0ab41050f716a13a45f16b9d9e71e9a3cbdbefb5','UUUU','UUU','2013-02-09 23:55:55','default.png',2,-1,0,1,0,0,0,0),(2079,'afamodarres','240323ce4ee4041e5e98a905c814c77dbc9b315f','afamodarres@gmail.com',1,0,'c3d14471a48d0ed79150cca44ce692c3203040af','babaye MH','Sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2080,'mojtaba.a','89ea1038b106ee6d76c7d73e899e6bcd1ad27039','mojtabaasadollahi@yahoo.com',1,0,'2b7e499429267563d6258217777515fc81f00836','Birjand U - Mojtaba','Birjand University','2013-03-03 09:53:12','default.png',2,1,1,1,0,0,0,0),(2081,'rezaamir','bf5435d9a5eead0ddb755205e180afc28d56f3a8','rezaamir2006@gmail.com',1,0,'0899c766f80a72b6c6826a020231e2bc3318335b','DADI','Tehran Uni.','2013-04-23 14:07:05','default.png',2,1,1,1,0,0,0,0),(2084,'Hosein','459cfd985aebf6e6e83b43989ebcaf853df97e4f','h2asghari@gmail.com',1,0,'1872f54440a28be6bc6b7dfa6706a0385dfd4210','Hosein','University of Tehran','2013-06-17 20:35:00','default.png',2,-1,1,1,0,0,0,0),(2082,'nayan','f07919628c327b25cebedeb2cb593cd38433854c','nimaa.hamidi@gmail.com',1,0,'e8f89a3fe23cdf70e3c9a2f9baf771187089d6b7','nayan','SUT','2013-02-15 14:00:07','default.png',2,-1,1,1,0,0,0,0),(2083,'shgzs','f2bec4f6f7dd7b45b3370297b3375b606fe7a0fe','shgzs@yahoo.com',1,0,'fe8dd8b97bfd32989883958fdb147b350e4d127a','shgzs','ut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2085,'siavash94','739c4d3c785cbe64972c302817b107de2212a494','siaxace@yahoo.com',1,0,'186b8c4619728724d65fe457828f0247f6de4d3b',':D__','University of Tehran','2013-05-01 09:32:25','default.png',2,-1,0,1,0,0,0,0),(2086,'zasheka','181878fd2376d76afd4fb6f5a84d405a337a1d7e','zshkarchi@gmail.com',1,0,'af6ff4acdb32aa0860182d3621cbe578537e0c81','S213','ECE','2013-05-03 08:05:21','default.png',2,-1,0,1,0,0,0,0),(2087,'vfarshad','8d500e9af062c9b411a426d100b7e45ec996f742','farshadfn@yahoo.com',1,0,'2b35456b74d0654ac27004e724b1b427fa2fd1ed','Valerie','University of Tehran','2013-03-25 07:41:29','default.png',2,-1,1,1,0,0,0,0),(2088,'layin','c72fe32fb7cbe7601aa6f9c8941cf951fd7ae0fd','javad_347@yahoo.com',1,0,'a259b0297e71eec1f02f5bd76b272e8c48c66f89','javad_layin','khayyam','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2089,'ilbesculpi','42a8f65f075c103044755bd38429af2414e6435e','ilbert.esculpi@gmail.com',1,0,'5f73a75bf4d372c59999f0514631449815716f25','ilbesculpi','UCAB','2013-02-16 22:16:04','22aa888518d2eb3b7bd4d5c9c1beb6c518a87027.jpg',2,3,1,1,0,0,0,0),(2090,'Nariman','4a69cd76b45ea985cd27b635cd33baffbc566189','n.esmaielyfard@gmail.com',1,0,'945aa0846b7cc4de1ef904f68623b13885d3c045','N@R!MAN','Guilan University','2013-06-08 12:29:17','37c04f6f866f236dce55ee2dd091da8819da53a0.jpg',2,1,1,1,0,0,0,0),(2091,'pouyan','8b6b93e42ed168245f41a59be44c82b2e442c015','pouyan_220@yahoo.com',1,0,'5112d4830931cb72a9daa3ea2dd8cb99e18714b2','pm.220','Tehran','2013-05-03 08:11:14','default.png',2,1,1,1,0,0,0,0),(2092,'Rikaard','55d31d38df56d24484c6d62a2f1a18de0c2d699f','rikaard.hosein@gmail.com',1,0,'fedbb6c178524f13abedfb9542d20137db66cada','Rikaard','University of the West Indies','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2093,'nasim.kh','e3ca5a87949f57aba143b31e01fafe73508eec1c','khaiyati_nasim@ymail.com',1,0,'a0a49f4e692eb997c348eed69465e124f1dc2301','nasim','urmia pnu','2013-02-18 00:25:47','default.png',2,1,1,1,0,0,0,0),(2094,'Baran','f1a46c6092c423d9febd09303fbf903471da9392','marjanehosseini@yahoo.com',1,0,'27a121893728020b9ea67a942c907861dedd1ea7','Baran','University of Tehran','2013-02-18 09:36:14','default.png',2,-1,1,1,0,0,0,0),(2095,'me5433d','aac411d1ae71d93a4515d32181254c2eff91ff9f','me.register@outlook.com',1,0,'c46c969390c8beba78ea0bb5384fad7b187cd448','me5433d','SCHE','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2096,'mamdamin','bfb0411c05cdc4318417ce17ae2d9a79df087ce8','amin.heydari32@yahoo.com',1,0,'c4dd59b8b351c22a40ac98f4cbc8ccd65026c53e','amin','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2097,'OnlyForTest','3fcbcf802c6a0d6f399be5d5670d15db742e3f11','msmmsf@yahoo.com',1,0,'54344414494a521a4c3acd5a4294685aecf1cdf9','Sadegh','none','2013-03-17 07:16:47','default.png',2,-1,1,1,0,0,0,0),(2098,'infidev','e3be9e43f0487e8b1b1438790882795eaa08b47e','409763135@qq.com',1,0,'7a7ce34ef5ce9ac130d77c73c282687970e4a661','infidev','sjtu','2013-02-19 15:13:47','default.png',2,-1,1,1,0,0,0,0),(2099,'Solluna','75b8827d7bd714a35e9048fd70ee4db89d9a539e','solluna@yahoo.cn',1,0,'5458871068980c7eee0d73322ccd28d8f722b0c4','Solluna','SJTU','2013-02-19 15:15:54','default.png',2,-1,1,1,0,0,0,0),(2100,'shoayb','8fec0be4ed84387fc6bdbfa6dd36158f19b29b3c','NAZARI.SHOAYB@GMAIL.COM',0,0,'653929ffa722006e5cea987f399e9542ac99bcdf','shoayb nazari','rajai','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2101,'KhashayarJan','80ba5914efd40ecd3ef16dbc5b5269500d589947','Khashayar.Sahebkar@gmail.com',1,0,'17afa1b652dfe7e9f0efee1d25ca84479598d783','Khashayar','Khayyam University of Mashhad','2013-02-20 14:26:55','default.png',2,-1,1,1,0,0,0,0),(2102,'saadon.kh','65edb163a94fc9fe5dbe4df32d150efd2110afec','saadon.kh@gmail.com',1,0,'1c3e8051e5f8994fe1819469842f453a3a0c95fd','GOLD','university of kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2103,'mohammad.b','5e013144c7747d7b6eaf019a2512068b92eebc56','muhammadalibagheri@gmail.com',1,0,'1a8cabf5a7033293b48219ee0a3c4bbfc5cf850c','Birjand U - Mohammad','Birjand University','2013-03-03 15:12:24','default.png',2,1,1,1,0,0,0,0),(2104,'narsis20','2c94ed771a8de1ea345a5381187112f31ae307a1','kz_md70@yahoo.com',0,0,'fda2a0ecbd9e27ea1a712bcce812b0ada1213dba','narsis','pgujam','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2105,'ashkangh','d9e66055d04f049f67fbbce0d45733cd2227c1c4','ashkan.ghavami55@gmail.com',0,0,'b6582a4e986d349751757d10bc5cfc6b6aad8334','ashkan','korestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2106,'kale.saeifar','d9104253f0ddc4a5b9c3856f5248b766e99aeb71','kale.saeifar90@gmail.com',1,0,'64a7040b16c2160c2057d947146936bc811cd301','saeifar','uok','2013-02-24 08:17:15','default.png',2,-1,1,1,0,0,0,0),(2107,'salvia','21e64aee9b19fab2f73f60233658b704795652b3','salvia.hf1994@YAHOO.COM',1,0,'5c138d81adb4b5f174d8da114b3032027383ffc4','Salvia','Sadjad University','2013-03-31 09:21:06','348dbe3281f7127eb37cb0d4ad18652f4cd3e0e6.jpg',2,1,0,1,0,0,0,0),(2108,'kh12','41c551cb052cebb0f0cf86ae7dd45afe1da83ecc','khorsandi.12@gmail.com',1,0,'3da55661d3c645e5e622b5cb49303cbb6ef00381','kh12','sadjad','2013-03-03 20:02:46','default.png',2,-1,0,0,0,0,0,0),(2109,'NewMigMig','7c90c19c88f7a60278d74ab500215df496bef44b','fatemeh_ghorbani72@yahoo.com',1,0,'379bf43680a410df7dce87d421bfe58a902a32f9','NewMigMig','sadjad','2013-03-10 20:52:19','default.png',2,-1,1,1,0,0,0,0),(2110,'laboox','5257e58f777e1a0f44d89ecdcdb0212974f7e754','sina.labbaf@gmail.com',1,0,'c6632500124bd246bb63baaa3da6fa5b9c5aba43','LABOOOOOX','University of Tehran','2013-05-03 12:54:11','default.png',2,6,1,1,0,0,0,0),(2111,'n4s3r','798e485162c8caa721bafb7fbd22fba5c14adba7','n4s3r.f@gmail.com',1,0,'af8d182fd7d66ab4ec9f3cc2d24bd8c46777ad4d','#include&lt;&gt;','#include&lt;&gt;','2013-03-26 17:14:37','default.png',2,1,0,0,0,0,0,0),(2112,'ukimbo','bc8a8cbd7f9f7ceccb94650d55174e47292953ab','kimberly.yu1@gmail.com',1,0,'3ece07ce1a34393f4f8b235642f4d8ee5a778f5f','Kimberly Yu','Mark Keppel High School','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2113,'vahidkh','e023b394208fa945a2b3f64f4676b0f1221f3d7c','vahidkh@yahoo.com',1,0,'ee2f8b4b5d916dae570fda967622a395accb0782','vahidkh','UAST','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2114,'arcolife','9514accf4f794271ac3044d88ec7def39af5a725','arcshams@gmail.com',1,0,'e80b0bc9baee0117a16d454259f9fe37ffc838bd','Archit','Amity University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2115,'5star','223657014066503ed1b044436c005cbfa6fc93a8','khorsandi.12@gmail.com',1,0,'b7bbd9af9ced166d32c496c58874b304009f3429','h.nik','','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(2126,'falirezaf','5df0f5b9c2c903c7b26dd742a04439a4d44f94d3','alirezafassih@yahoo.com',1,0,'7582cd52171ee9aaed2500ad565d69e9fc5a37c7','► ali reza ◄','guilan university','2013-05-07 19:50:48','5b921c260ad7ff4bd0b522ef74419918fec4ff4a.jpg',2,1,1,1,0,0,0,0),(2116,'kaihan','55fd310ed06fc1a018ca7854c8d3fdb44fbbf5ad','lkyhan@gmail.com',1,0,'d4a9f06546ca8ee749d8350fafbe1f316530d2b7','K-Han','University of Guilan','2013-03-26 22:39:23','5d2c93b343ff179db996781a62cac64b72b1b6f8.jpg',2,1,1,1,0,0,0,0),(2117,'vru000','d1351220e62b4e3b7d86e3a3fac4923612601076','zahra.90.basij@sabamail.com',1,0,'586d6118bf6f7dfd77731093c17a1912ee9344e3','samin','','2013-05-02 14:15:07','default.png',2,-1,1,1,0,0,0,0),(2118,'invulnerable2','9520766b8bdc4e857feadc3692e4c6a0e4cab10a','motallebahmadzade@gmail.com',1,0,'f0685dbd7ca78325ebe99032157e621f089bef68','contestant','acm','2013-05-02 13:59:01','default.png',2,-1,1,1,0,0,0,0),(2119,'termebooghi','61b16d94d7f1e2d6ee2dc1aa9263165ffdf6483a','mohrock@gmail.com',1,0,'a14d930f2b23af117b7035a450cd9721add6254b','mohamad','vali','2013-02-28 12:15:37','default.png',2,-1,1,1,0,0,0,0),(2120,'jimbo','41ac7fe6d4aadda3821115dd6a92b0f0703dedc6','jimbo_s90@ymail.com',1,0,'95c8ebc43c3965ddd464be56563c561dcf676266','jimbo','vru','2013-05-23 21:59:31','default.png',2,-1,1,1,0,0,0,0),(2121,'farshid','1c6a87b72e3893fe978593827ba47a0ec952cc92','farshid_andik@yahoo.com',1,0,'c29f5152011656cfba98b059b60d3a6cad81435b','cs90','vru','2013-02-28 14:01:38','default.png',2,-1,1,1,0,0,0,0),(2122,'heyyou','cc541157c9056794daae0fe1543e07c0a773feda','htc351@yahoo.com',1,0,'b19fed03e9d4beb6feec78c7f9cbdbed7e8d9a45','akhey','vru','2013-03-01 09:10:22','default.png',2,1,1,0,0,0,0,0),(2123,'12345','946226bbdd3731114750eda3f650fc27eda7f999','fariba.mahdizadeh@yahoo.com',0,0,'9def6061d84166ab50435ddd4c7f496ba38c908b','fariba','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2124,'wma2','938bf3b09ba4b6c7a95b8f527912a8d01b2d5c9b','abc@gmail.com',0,0,'c677f6d8452f751c3b96785cfb717e3a5e070353','wma2','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2125,'parvinpanahy','13c5110296aa6f9ad111b01423c1424b7de0e549','parvin.kh_h@yahoo.com',1,0,'86a6f9d5f5c4c6a7f08e96732c4831d88532f362','Birjand U - Parvin','Birjand University','2013-04-13 09:47:17','76cf7b507a0e4e4b7a378706786dfc4361fcb1ea.jpg',2,1,1,1,0,0,0,0),(2127,'azureowl','4f262b2910506b8f30895fe2e1d8256852331936','russell.santos@gmail.com',1,0,'e37f0d2274d7d82e3d0af2f6c092d0def81951d5','azureowl','Ateneo De Manila','2013-03-03 02:08:17','default.png',2,-1,1,1,0,0,0,0),(2128,'ma7rix','01abcab9fb0e71426704f8edce50054f5eb6db62','ztjames@gmail.com',1,0,'37a850ba080ce4c317064be3cf1ef9929841664d','ma7rix','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2129,'ehsan.mohammadi','63cb9707af8e3ae106d5f6be242166cc8dc9ef66','ehsan_mohammadi_1994@yahoo.com',1,0,'3955f600a2e38058e9f7ecbeeec146798a1f547f','Ehsan','Birjand university of technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2130,'nikukar','e9005a786f4fcbe04cb6ef3e7889e777354d16b1','hasan.nikukar@yahoo.com',0,0,'7af52598837f182e631b1496c4382c97f6786dda','nikukar','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2131,'nikukari','3b17980bd04ba98d1a82851027ee279bd5d1ff86','hnikukari@yahoo.com',0,0,'04691a50d6f76d2b68b8cf3628b8931d4e231e0a','hasan','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2132,'rezasky','a1b3e102e6d7d93c4232723ea0e6cbf4eef4661a','reza.ahadi94@yahoo.com',0,0,'399385861aef0670164a2ec6deff724e122dd441','rezasky','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2133,'EmiX','ca14ed922a03a55eb2d9ee8d6f1cb30f3f709848','emin25@ovi.com',0,0,'593c73c4b02f19076373754272d178d0f995eeff','Emin Mastizada','Istanbul Technical University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2134,'alojavad','46d7c512714b30dcd2d5a33c024e9d41e15897fc','alojavad@yahoo.com',1,0,'1f9fb6ef50d6588c944d029f443a71dbbb2c65ac','javad','birjand university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2135,'ad.sk','ff1f701f857d317ce9534624a9d2b8faa6e97b8a','ahmadtaheri20@yahoo.com',1,0,'d5c9f9fe28f74dc96e5da83ed08e87ae015e6398','ad.sk','guilan','2013-04-08 23:31:22','default.png',2,1,0,0,0,0,0,0),(2136,'mahan94','b156c1cd2d4734ece2ceea1c0ccba86bf42dec6a','mazizmohammady@yahoo.com',1,0,'e41f51eb83d5b750170148e684f6ff4edaebac82','mahan','University of Tehran','2013-06-13 06:37:39','default.png',2,1,0,1,0,0,0,0),(2137,'naddaf','e1d8dba595e89d60713c9ebab2e698021d379007','naddaf.moghadam@yahoo.com',0,0,'a35dcfbbd29f8b07d829522fc1a9f2175f8d864e','naddaf','birjand univversity','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2138,'sajad72','35a6ed11bdedd4c5b802dd0201da9d00da002435','sajad8heravi@gmail.com',1,0,'9ae004ae592208b7bcf738a78321e994ac7647f2','sajad72','sadjad','2013-03-05 12:06:47','default.png',2,-1,1,1,0,0,0,0),(2139,'golifahim','9b727a52516c0cfb24a259757ccc2a3c001dd682','golnaz.moayedi@yahoo.com',1,0,'018bf8c28275b28d983f448e20db552a72956168','goli fahim','sadjad','2013-03-05 11:54:04','default.png',2,-1,1,1,0,0,0,0),(2140,'RAHA','1f6125bc951c4ddb0486e27be948556cd33e87e6','mahbubehkh@ymail.com',1,0,'511318fd063fcd353becb75c416167ee754f0e78','mahla','sadjad','2013-03-05 11:55:49','default.png',2,-1,1,1,0,0,0,0),(2141,'zohre.rp','49c227c692f22d14b9664f1c9af23dcdb6574214','zohre_atm@yahoo.com',1,0,'1bb3cc18ad8085c1f90fe5b6a6097de732942bf9','zohre rp','sadjad university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2142,'birjand123','8bab1e127d14411f934aa32fb562286f297afee3','fariba.mahdizadeh@yahoo.com',1,0,'e694c27f8cd672c5ebfad7b1bcabe6c9c3e3e64f','birjand u_fahmideh','birjand','2013-03-05 15:34:39','default.png',2,1,1,0,0,0,0,0),(2143,'hosein.naddaf','2a2e7b38becb902f0fd4c139dcc0504c794723c3','www.naddaf.moghaddam@yahoo.com',0,0,'9b68d5b60f66864b34e5de9385df80ce3a85118a','www.naddaf.moghaddam@yahoo.com','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2144,'Farzin','7c9f5bacda36629f049dcdbbcb6a3bdaae725088','amir.farzin@yahoo.com',1,0,'5e249327802d73eb0ee5f65bd1b75d10bed656d4','Zabol Uni. Black','','2013-03-07 15:36:34','default.png',2,-1,1,1,0,0,0,0),(2145,'mahyar33','1a834868c8712d982ddcb4de02f2e5de4795ce18','mahyarpoodineh@yahoo.com',1,0,'1664c22c2daa61b2b65951dfdb632ab8ad6a786d','mahyar&amp;farhad','zabol','2013-03-05 16:09:26','default.png',2,1,1,0,0,0,0,0),(2146,'zaboluni.saed','70775d9bf999b88223681bf40a3510d28e55167e','dovody3662994@yahoo.com',0,0,'0a825f661a553c931273ea25d32dbb7032e13bfc','zaboluni.saed','zaboluni.saed','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2147,'Zaboluni.mk47','cb8209d584cc7dbc38251246816768f21d830ad5','keykhamehrdad@yahoo.com',1,0,'bda12a1aa3a17881e38cd098c7b2a4011a221129','Zabol Uni.mk0047','zaboluni','2013-03-05 15:41:54','default.png',2,-1,1,1,0,0,0,0),(2148,'bidad','270feecd34ec656e49746022dd29a95699a0ee60','bidadebrahim@yahoo.com',1,0,'5436c00d9ec19801c58f2ef339129e1e5c5dc8c4','zaboluni.bidad','zabol','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2149,'nafsh','8f2837cfb60a26954ec938a1ce6d73cd8f8c4e55','nafsh.hack@gmail.com',1,0,'f1613ac8304829cfb61c1ece8a63800eaab4ef3a','n00b','/proc/self/environ','2013-03-18 08:25:22','default.png',2,-1,0,1,0,0,0,0),(2150,'birjand.yaghoobi','862ca8b58a1fb760147b777dbdafadb61c59b0d7','elahe_afshar33@yahoo.com',1,0,'6c2e1967c6d3ff37ab15f62bcb4e0692cb033f95','birjand.yaghoobi','Birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2151,'ebrahim','e9044f7c5ec79ed397130de26ef5be56d4dde99c','bidadebrahim@yahoo.com',1,0,'619003ba65385a66fb6d145b03ca420129e8c8e7','zabol uni.bidad','zabol','2013-03-05 16:05:55','default.png',2,-1,1,1,0,0,0,0),(2152,'Zaboluni.m0047','c0cd0d8cd5de781b3e51fd728abb48592b376bc8','keykhamehrdad@yahoo.com',0,0,'d13115ba5391d598e864211cf580b2efdb66d4b9','mk47','zaboluni','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2153,'farhadp669','60fda76af42ee7891ad465034e7478e8049a70f5','farhadp669@yahoo.com',1,0,'dce2878b4127effdbf15a6578bb10210028e8f81','MAHYAR&amp;FARHAD','zabool','2013-03-05 16:06:39','default.png',2,-1,1,1,0,0,0,0),(2154,'sezarsina.joker','889fa07baf4c1354ae8119db31b053906f7b065d','sezar13@rocketmail.com',1,0,'05abae04b8112ab977534cbc3bb2599ea61c42ab','sezar','birjand university','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2155,'rasol123','772568b3f1755578f82ffbec8df6cc614802e490','computer_and62@yahoo.com',1,0,'fd089a89b64da48dd2a37b21604226880335580e','rasol','azad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2156,'hosein.nm','61dbb9f6ae3cc7fee444d0612053be375168c7c5','dastudahan@yahoo.com',1,0,'aeee3e899cb7c41589320177c7a34e2eb7509833','hosein NM','univesity of birjand','2013-03-10 12:45:38','default.png',2,-1,1,1,0,0,0,0),(2157,'Mb2472','4024a80d7a947e87e0e92e5ddee52ef8076fd917','mb2472@ymail.com',0,0,'59040ac496337ac19a95c1ab4ffa845a89e089db','Mohammad','B.U.T','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2158,'Mahdi2472','b5ae61ba2bf0c238c5c012b3ba3ba834767cdb6b','mb2472@ymail.com',0,0,'356e8f7af530699f72aea49c1525aa62859ac21b','Mahdi72','B.U.T','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2159,'mda32','5568cc8a4829b4bb2e78015d06e811c43e76a108','M.Alipoor.Pro@gmail.com',1,0,'fd00ca4b838ad45f968f7669b3ff1636cdee7817','darkshiren','Guilan university','2013-04-06 13:44:15','default.png',2,-1,1,1,0,0,0,0),(2160,'parisa90','1f8856374469d5b1eaa7d823e16247b0753573ee','samane.jamshidi90@yahoo.com',0,0,'bb9ec85f16c19d9c2f052e7585923ff959453824','parisa jamshidi','but','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2161,'mahdyaslami','78e2f842d0ae3b272a8a82d70f8d06e78515c273','mahdyaslami@yahoo.com',1,0,'667a032910204fa0c93bf6fbe40cee6cff368f95','Birjand U - Mahdy.A','Birjand','2013-03-06 19:22:17','default.png',2,-1,1,1,0,0,0,0),(2162,'Student1','e837e8230cbfed29fac3196c05daa3832e60106d','ehsanmansouri128@yahoo.com',1,0,'43e649886ac4ac50cbac8be768785ca05c8003db','Birjand U std','Birjand University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2163,'siaxace','137f39bb4153fd5cfe4e1873b5c0f27ad76a22b3','sia_ft@yahoo.com',1,0,'4362aec78fc8cd65b4a95bd31d5a955a9ef7cb04','Siaxace','University of Tehran','2013-06-07 13:37:48','2e3f21712df02d3c1ca5302b5adbb7f3ddc21dd0.jpg',2,1,1,1,0,0,0,0),(2164,'joojemashini','bc6a755e6d667b9f3aa74488ed802291298c3fc8','police_1600@yahoo.com',0,0,'01ad0895a3b833c641982948795621574ded4b28','hush','bagherabad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2165,'janatan','c989f64fb01a83cee6d0c19fa8934d1675ae1f39','nima.1601@yahoo.com',1,0,'60184be4ef619e43a8336db94ee2c7091f24b6f2','hush','bagherabad','2013-03-13 15:43:16','default.png',2,-1,1,1,0,0,0,0),(2166,'ehsanxx','c5426b23d3ef94705308246dd58e7a5af15ba3dd','ehsanmansouri128@gmail.com',1,0,'4ac2b8b2747d9d66e4a4ef846c89d1d0a997f3fa','xxsdf','x','2013-03-09 16:50:58','default.png',2,-1,1,1,0,0,0,0),(2167,'escapology','52d5fb15eee97ed90a4c780b99eff1f97fb80a7f','e.scapology@yahoo.com',1,0,'e5a9b9409ae872ebe2818d1a88fcc59f12e118f7','Sadaf','University of Guilan','2013-03-24 19:49:31','default.png',2,1,1,0,0,0,0,0),(2168,'saman','e8acc26746bb5d12fab45e053bb1d38064b64d20','samannasirihanis@gmail.com',1,0,'81b78a46833e76f01f115de9b1408bea2bfff53d','H@N1S','Univercity Of Kurdestan','2013-04-29 11:39:39','default.png',2,-1,1,1,0,0,0,0),(2169,'hemmati.c.e','ea3328615ec66ca914b8134a31d8e23741d9972f','hemmati.c.e@gmail.com',1,0,'e49c327af39f53ae8ffa32057f7d1ea0f2f6cc4d','Amin','BUS','2013-03-07 14:53:05','default.png',2,1,1,1,0,0,0,0),(2170,'birjandu.elahe','c12df79b6a09a09bc89f812567b6a4eb0490a510','elahe.alipour@chmail.ir',1,0,'ee257f9fb1f6d48f0e68a3cc632aaa7b6e2f8a31','elahe','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2171,'mahyar','af7943eed18efae8a6555e3a9a1ee86e0c291301','mahyar.abbasian@yahoo.com',1,0,'30221d5cbd1dd3efee293e6e44e97e4346059ecc','Mahyar','tehran','2013-05-03 05:30:46','default.png',2,-1,1,1,0,0,0,0),(2172,'hakam','204083a332d91418bd8544dee25b6c0568e56098','s.dad73@yahoo.com',1,0,'0cd66b8c5bf4801f6f44f31c9ae5ff43262f9671','hakam','tehran university','2013-03-08 08:54:47','default.png',2,-1,1,1,0,0,0,0),(2173,'m.chizari','cc8ff3297da6bc564d5638ebb235fef8df829aef','mahdi.chizari@gmail.com',1,0,'31b7b462cd07e4f7f7dea136b444c38dd76408ec','mahdi','Electrical Engineering / Tehran','2013-03-08 09:13:10','default.png',2,-1,1,1,0,0,0,0),(2175,'hasan.n','b2316c860974aab4ea050d7b78409fefe4aff010','hasan.nikukar@yahoo.com',0,0,'6396660eb76d0eb47a35e44341c49f1af4709e7e','hasan.n','birjand','0000-00-00 00:00:00','default.png',2,-1,0,0,0,0,0,0),(2211,'babakniroomand','be9e307816f7556a9e7f2fe7c8ad1d7ce91d1140','babak_niroomand@yahoo.com',1,0,'ecc2eebca5cb36ab09e1225cc4fa0aab5b1d0799','Babak Niroomand','University Of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2174,'amirhossein990','ccf1c96d7f478f1f56b14754fec73a5e37edb885','faghihiamirhossein990@yahoo.com',1,0,'24852577a31df00702244e229d99f0a015429767','AMIR','university of Tehran','2013-05-27 19:23:03','default.png',2,1,0,1,0,0,0,0),(2176,'amirali','0eab25a2ce6666f138c8a390432cc8d65813c60a','amirali121210@yahoo.com',0,0,'172c9fde97a8933c9dcbafbbfdd6fa2f47beff8c','amir','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2177,'a.amir','7d6f960613d2ba02777b253519d7b745fad356c8','amirali21210@yahoo.com',1,0,'43e8b4a2da68a2b5084ef0625a6bec273c2d337c','a.amir','birjand','2013-03-08 15:29:57','default.png',2,-1,1,1,0,0,0,0),(2178,'Ehsan93','e878b3dd151eeb48c787115c4d1716862f68dbf9','ehsan1993ehsan@yahoo.com',1,0,'86ca432cde0b492a7af61668d00f2c696df6e076','Ehsan','University of Tehran','2013-05-02 15:29:39','default.png',2,-1,1,1,0,0,0,0),(2179,'hamedovic5405','5a89bacec6ada32aa594209b5a76366651109d57','hamedovic5405@gmail.com',1,0,'6cecb3afe45667a121d8dbaa1f664292664da65d','Real_gunner','birjand university of technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2180,'rezaplusplus','2c2975332a69b4a1060bef921bce53c0c51d9232','gameemag.leader@gmail.com',1,0,'69bc548f1a644fa8daa3ca3de37116704b8f8243','Reza++','Sadjad university of higher education','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2197,'gvivekcbe','cf47ab6729c98ba3b5e85bfad6766e54083c82da','gvivekcbe@yahoo.com',1,0,'df916d0673896212514daf87b303f21111e4015c','Vivek','UMich','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2181,'mhisham','178eff3942943ecad3fc69a9e2c3dabe77fdaeaf','hisham@mhisham.net',1,0,'76ede29eb9d49ff047f2b90079047d9aaa7902af','Mhisham','7amada','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2182,'mohsen71','56e04436f845bfedb1e35aedc9cd0ac91c9c1f34','mohsen71.guilan@yahoo.com',1,0,'7832a191df3e0fafda8480dc00d1e993802cdaf1','mohsen71','guilan university','2013-04-20 13:43:58','8e61c5d6f8fa26855b06a6b05af5020018080420.jpg',2,1,0,0,0,0,0,0),(2183,'naddaf.moghaddam','81d6770e353621598a79ce158caab7a485e391f9','dastudahan@yahoo.com',0,0,'78d01b686ba60e7750c7ad91577db116a6175308','naddaf.moghaddam','university of birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2184,'daiereh','c1a6c0999c65257461b95fb29ab3838f2834bdb4','n4s3r.f@gmail.com',1,0,'fd60cc3e2f76c95038879fe669e35ee7ebd4edfb','N@53R','University Of Guilan','2013-05-07 22:19:46','d8c56b3c3f2ef7486bb55cd3a51389b3c75ff6a7.jpg',2,1,0,1,0,0,0,0),(2185,'birjandfaezeh','010376d914d50bf4f53fd5a68db044f0500d7252','faezehnasrabadi@yahoo.com',1,0,'0430eb0ae53385690b7f0f798b507da31d6ba8eb','Birjand U - Faezeh','','2013-03-12 10:59:27','default.png',2,-1,1,1,0,0,0,0),(2186,'birjand.sh.yaghoobi','2e988573ff4b5334759a0a385c5096a748fe94fd','sharife.yaghubi@yahoo.com',1,0,'1692dfe942e156f138643af7a6e0a351c78cd187','birjand.sh.yaghoobi','Birjand','2013-03-12 15:47:39','default.png',2,1,1,1,0,0,0,0),(2187,'123456789','eeab2e2cd2dc3a68cad0d0f4b9199e671b88b801','jjjjjjjjjjjjjjjjjjjjjjjj@kkkkkkkkkkkkkkkkk.com',0,0,'f7707a33352f695c8988dd5eba781ff57e7b0a64','123456789','mmmmmmm','2013-03-11 06:53:41','default.png',2,-1,0,1,0,0,0,0),(2188,'Omid.safari','1f4e4f26398c1430661c5223558c6ef5f53d8493','omid.safari20@gmail.com',1,0,'93a4885de508816a7e95a92f81c72228a5bca1fe','Omid','kurdestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2189,'AmirAli.z','99955475bf71d478c02bc55e7a6df1b07b2571a8','AmirAli.zeinalbeig@gmail.com',1,0,'a18f6d61ac17b440ab3e6ed5347f7059e5d794df','AmirAli','kurdestan','2013-05-13 08:18:31','default.png',2,-1,1,1,0,0,0,0),(2190,'Mehdi.s','64ce9e6c7e4e87f2893cadfb3a5331b64e87ea19','savadihosseini.mehdi@gmail.com',1,0,'c90dbf44787dc3cb3354e8c53a3756a42e35869d','Mehdi','Kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2191,'mdh.heydari','af97eda7f5952ce5ede71703f5694c39dd2f2a32','mdh.heydari@gmail.com',1,0,'3540aa8c1e41a60948851db683c72da54b7253b6','The Time Breaker!','Amirkabir University of Technology','2013-03-28 01:16:34','06b91c614684709bec9733de7627c3afe8427961.jpg',2,0,1,1,0,0,0,0),(2192,'Sor0u5h','21e06a63b5d5165bf80aa9640ad772e9985926e1','soroush.shahhoseini@gmail.com',1,0,'5312cddb70ea3f1d758e30d9842c83b22c554933','Sor0u5h','Amirkabir University of Technology','2013-03-20 13:57:19','default.png',2,-1,1,1,0,0,0,0),(2193,'mohamadmilad','3433ec043262b5a84af148039e8d691454c1d97d','mohamadmilad@gmail.com',1,0,'036a6d3d6dd3b6ccb66d7284ca2e6af3615019c0','Mohamad Milad Ameri','amirkabir university of technology','2013-03-13 22:12:18','7b54ba3af898ba191ed69a1d544b85784465d9f6.jpg',2,-1,1,1,0,0,0,0),(2194,'sedighe','77265d0726eb7732081faa3d247229bd451dc691','sedighe_sameti@yahoo.com',1,0,'502a67ab66a261412fa758a501069d408efebb08','SEDIGHE','SAJAD','2013-03-14 10:49:04','default.png',2,-1,1,1,0,0,0,0),(2195,'mojtaba357','0750d193f00d6485874f4bb0e07f5e4412a0ba78','mojtaba.khooryani@yahoo.com',1,0,'6b3d944cced9a7a268d015f96619919cd04a4123','m.khooryani','shahrood university of technology','2013-05-29 06:43:39','c36ebd83be8800850cc8d81a5634d89c78859a9d.jpg',2,-1,1,1,0,0,0,0),(2196,'bashir','e600dd2f87bfba1ef6f752760c450a31cfb7775b','salehibashir@yahoo.com',1,0,'3644f77fd55df94997b20f076fc6b7e2b4ef186c','Bashir','birjand univesity of technology','2013-03-16 13:02:28','default.png',2,-1,1,1,0,0,0,0),(2198,'ovifax','eed783858038b12f7c1d443841a7cd06e6779f3e','ovifax@gmail.com',1,0,'cb509a9c9dd8d6adb9295b3daffd8a4b7f15c465','parsa shbn','University of Tehran','2013-05-14 17:10:35','default.png',2,1,1,0,0,0,0,0),(2199,'arslanteginghazi','0313f7d2c5b4dbf8f9eec04d974f1c0dc1624d19','arslan.haghrah@yahoo.com',0,0,'fda3c7cf2aed0cf490e852bdf13bc864123c68bc','arslan tegin ghazi',':-?','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2200,'ildengiz','aaaa38a04169c5bde1e19a0e8f5f5b0b9a78b254','arslanteginghazi@gmail.com',1,0,'5cf564756b6adf158d734398d2936d1f4fd3c7b2','ildengiz','tabriz','2013-03-19 18:39:09','default.png',2,1,0,1,0,0,0,0),(2201,'doxt3r','d205de755bd75dd6dfe59c833c4161bffa666a03','alexzund3r@yahoo.com',1,0,'1a6b43b692fad25c6eb6360bdc280e516bfbab38','Alexandr','Tomsk State University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2202,'amirhosen1992','abca27594de55782f90eefc1ff6d371e16da5763','a.rezaeetabar@yahoo.com',1,0,'3db54141a27ed2f01d2d7f1f07b90c56f3c13008','AHRT','university of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2203,'ehsanalemzadeh','342f948dc24eb838f726c38bb7d214c87db5a5ad','ehsanalemzadeh@yahoo.com',1,0,'b0bd4e872401980502db39e311e7dd79f9796491','Ehsan','University of Tehran','2013-03-20 09:36:19','default.png',2,-1,0,1,0,0,0,0),(2205,'programmer','dd99f4d17ed85b9447c5a86ff619e2100ba845f1','ghhhjklksss@yahoo.com',0,0,'bd17d008ef4933cb3aab00cf0e9a12e04c9b21a8','programmer','','2013-03-21 09:26:15','default.png',2,-1,0,1,0,0,0,0),(2206,'Kasra','ad981d415c0f93c9a1584cb2a0c38b664b734993','kasrasafari@gmail.com',1,0,'bf496ae4d070c47614ab7f91c8fceb2b6cafa76c','Kasra','University of Tehran','2013-05-02 05:09:28','default.png',2,-1,1,1,0,0,0,0),(2207,'Hesam','a3b8d3296c0ce706a9bf95ccc764d26b09fab2d0','H_Ashkevari@yahoo.com',1,0,'3fc05b59fdf24eb585ceb16d57b7a562b48732f3','Hesam','NowgolanEBaghEZendegi!','2013-06-22 20:21:35','default.png',2,-1,1,1,0,0,0,0),(2208,'Paniz','b8e5f9c047cfb0a98562e9b796ea46b3d96faf3c','fanpan1111@yahoo.com',1,0,'dffe9f9143de171ae08ba95b45bce73381d6bdd5','Paniz','Tehran','2013-03-26 09:55:01','default.png',2,-1,1,1,0,0,0,0),(2209,'lzyerste','034ce07a12f78fd9bc84c87a57ffee9ba9b1e629','lzyerste@gmail.com',1,0,'899185980d75460b728cf8c5160564a8732a5991','lzyerste','ZJU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2210,'gueytsing','554423a2364ab693ceb06ff66b538e21e5953524','gueytsing@gmail.com',1,0,'b4d16771d41b9cc1fec544491b298934cb92c6ee','gueytsing','Fzu','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2212,'parisa91','60100be501402f110e940bf66d9af4f10aa8548f','p16_f3@yahoo.com',1,0,'e0d99525f8ef5f6499dd12adfef8a925c1433579','parisa','','2013-05-03 17:19:31','default.png',2,-1,1,1,0,0,0,0),(2213,'liti','2967782c69deba1608a196df78d44cf569596193','bahjatia@gmail.com',1,0,'238233fb4f0a9a54756b51400b47b8168315ac5c','LiTi','AllameHelli','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2214,'fahimeh','c846c9b65be0c07c2226f52d57c6b1a9fdd2f25c','fafa.rajabi@gmail.com',1,0,'0d564596bca8700f0c36d1252d8123a5391a2e3c','fafa','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2215,'purtoogh','8259db36d88d25812fc5e9760925ab07cdbd6cbe','purtoogh@yahoo.com',1,0,'773fd91987677e39b0d80e86d37764cdf2dea63d','M0stafa','','2013-04-23 11:33:44','default.png',2,-1,1,1,0,0,0,0),(2216,'hyuga','a1c7c6c72ba2b8063feeab45887f6bd8374f7359','vikasraunak@outlook.com',1,0,'288d984a58529eccd22bf509499a091d521fd0c4','Vikas','CSE','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2217,'ashkanK','34e674d01bf3081231c72d49d1d1621a8b286237','ashkanXOXOXO@gmail.com',1,0,'609e66709e8a36a753147138e746cd5c57037358','ashkanK','University of Tehran , ECE Department','2013-05-01 18:55:44','97c24058c0dd3c040a83199288fc79bed1a90c44.jpg',2,1,1,1,0,0,0,0),(2218,'hamed911','c7870a8dd8203daeec7bd988d0c08cbccd2f6534','hamed_gorjiara@yahoo.com',1,0,'4f6761e1daba60aad8a36c143980acffa50691b8','don_hamed','tehran','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(2219,'daneshvar.amrollahi','2db62a593dfe8047a294bab7c096a8120e3a868a','daneshvar.a2011@gmail.com',1,0,'9709dbac6cdbb52948c68daed1991b2616539b72','Daneshvar','Allameh Helli 2','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2220,'sliverwxj','2a201d5d40b06a812a09ff0c557f48a2ec3d6a4c','sliver_kimi@126.com',0,0,'7f709e546812cf09ee49e2694dc81c13456ff703','Akalm','zju','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2221,'sailwhite','62c6b2d7eade5aeea91a768816e0efc398cb9ba3','SailWhite@hotmail.com',1,0,'035456d6df4d36035749d4855008c42af3b46095','SailWhite','','2013-03-31 06:01:58','default.png',2,-1,1,1,0,0,0,0),(2222,'reza.mahmodi71','d23fef134b50957f3ece724feb5fafce4c459d33','mahmoodia.reza@gmail.com',1,0,'c94bbbb5e7b64756fae9c258d132d345f0424cf7','display name','دانشگاه آزاد آیت اله آملی','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2223,'hsirig','b1286ce7938ae33e049c657e95a05a054139b47d','girish@hotmail.co.in',1,0,'de4cc7426289e2682b8109adc31c5ebdba8860c1','geekism','Atmos','2013-04-06 04:13:41','default.png',2,-1,0,1,0,0,0,0),(2224,'poopoo','8e2eb78a0a9aeddc2e5c316e5667c10b95e2f10a','pouyan.shal@gmail.com',1,0,'6bba9577d1f0b4d682f8fdf711de2ce0b603820d','poopoo','university of guilan','2013-04-20 13:45:35','default.png',2,-1,1,1,0,0,0,0),(2225,'mohsen.n','d847ec5d4c16b2924807750574f299eefd35b4e8','mohsen71.guilan@yahoo.com',1,0,'5bfbec9224eeacfc77878eb890401aad262cae76','Mohsen71','university of guilan','2013-04-08 18:11:49','default.png',2,-1,1,1,0,0,0,0),(2226,'ssd352','cb27a55d295156bb689b2061db0e6a004d817dac','ssd352@gmail.com',1,0,'0b7a338fa09edb736014bf81eb06c1956e4bc375','S.S.D.','UT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2227,'tootiya','46448e848852b18a2d1e5aca1175073ea67352db','tootiya20@yahoo.com',0,0,'cd01de78f25309857c8b7278324fc13445626b74','tootiya','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2228,'atefeh.ir','2c9347ee318f7b0716cb0e5786a137ea00bc0b4e','atefeh.ir72@yahoo.com',0,0,'97f7582397e78b03a2fe247e3817782ab8ea7535','irania','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2229,'raeenh2002','d831b342644255cf7ea6a022cbb4a573edd17b9f','raeenh2002@gmail.com',1,0,'0e0560a2252ecfbbbdf44d8e0bd3ce7e56253d2b','Rainman','University of Tehran','2013-06-14 05:48:50','default.png',2,3,1,1,0,0,0,0),(2230,'shahram','78e6921f4fad44c5f1f9f13467fbdb973051ed08','elahi2m@yahoo.com',1,0,'0f6b1960d863a8ab29cbc89a7b421219da52cc89','SHAHRAM','Tehran','2013-06-13 17:46:39','default.png',2,-1,1,1,0,0,0,0),(2231,'sohail.uv','12d0f0a09cc9bb31c9b155155b7a835b7399417a','sohail.uv@gmail.com',1,0,'db0c2e0efcdfea14864a28121a354d5c5b3b9610','Sohail.UV','University of Tehran','2013-06-13 19:29:25','default.png',2,-1,1,1,0,0,0,0),(2232,'Reply','a262c808daf4fa46d3913b9ce38104afa08628df','aloneboy.reza@yahoo.com',1,0,'24621c6d376f49cf32f3fa4a7d85bf53943fbdfe','Reza','sadjad  university of mashhad','2013-04-07 20:26:37','default.png',2,-1,1,1,0,0,0,0),(2233,'Moh1','ecbe55847dc7621df4738f4b872eb37b62f115db','mo_defaei@yahoo.com',1,0,'c0006ca2c53f6384d5e660df4e64a7166de03278','Mohammad','Guilan','2013-04-08 04:50:02','default.png',2,-1,1,1,0,0,0,0),(2234,'random.johnnyh','72ac12a9ac002f3aab391603347c515e4c9ce10c','random.johnnyh@gmail.com',1,0,'ba85bbd553fffeef5edd62b07554dd5458df7949','Johnny Ho','Harvard University','2013-04-08 06:08:29','default.png',2,-1,1,1,0,0,0,0),(2235,'9999','c9675d659971bb5644969e9b87b0c953f58aea26','ijeijcij@yahoo.com',0,0,'aaf21fca2cf0fc5fc865651df6f6b7c638ee62d0','09090','909','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2236,'aliyeh','94bc766127e31fcf9fc7344785770754f85a175a','aliyeh.d1994@yahoo.com',1,0,'60ae881c71fa83507dc82f4acb584e2e65c6a5af','aliyeh','sadjad','2013-04-30 09:09:41','default.png',2,-1,1,1,0,0,0,0),(2237,'nazii','9fd97860aea97b43cf075b211f5dd8c6ab179114','nazanin.jafari1995@yahoo.com',0,0,'d1bf299e1b6a0428a6f326b8f966a8806fef5d69','nazanin','sadjad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2238,'naziii','84d430d5fb5ea0165584638a087bb3176c0ea577','nazanin.jafari1995@yahoo.com',1,0,'533393edc611ddba6322390b658548f6488d152c','nazanin','sadjad','2013-04-09 08:43:31','default.png',2,-1,1,1,0,0,0,0),(2239,'e.khorsandb','705378568a3819f36bf57cfa793ae7a21f488748','minyator5@yahoo.com',1,0,'58b727b39d166b928e8773821532fc3f58380298','e.khorsandb','sadjad','2013-04-09 09:53:45','default.png',2,-1,1,1,0,0,0,0),(2240,'mohammad91','3c77970bf5eaa6df214e034228636454852a0556','sm_nasrollahi91@yahoo.com',1,0,'58bfcd2f080fca3d3933f934bf6a23d0ebad7c32','victor','birjand uni of technology','2013-04-19 09:03:13','default.png',2,-1,1,1,0,0,0,0),(2241,'hosna62','c86998b0a1d991f66c394d02cbda95d8790450be','hosna62@rocketmail.com',1,0,'1b852e19aec02cb1c522917c732ab18b9dd12f98','hosna62','university of guilan','2013-04-15 09:51:52','default.png',2,-1,1,1,0,0,0,0),(2242,'pnikdel','0c9c5a0ba4e011dac81a26b8adb8b44732f622cc','payam222@gmail.com',1,0,'cef3404389986b3c450c8f4cccad290917887ef6','Payam','UT','2013-06-13 08:52:15','default.png',2,-1,1,1,0,0,0,0),(2243,'aseman','69d2753fc77d906a09d3829f9d739dc38f23068c','arezoo.heidary@hotmail.com',1,0,'31a0e41a818caa58fec1b669482de36b3184ca75','arezoo','tehran','2013-06-13 18:56:17','default.png',2,-1,1,1,0,0,0,0),(2244,'sh.zarepoorN','6c9e9782bf25176862a0ea11ada6967e087ee6d9','shabnam.engineer72@yahoo.com',1,0,'aeecf9eaf7d3ae67fe7c428485015f5834c7666d','jigaram','Tehran university','2013-06-13 18:25:56','default.png',2,-1,0,1,0,0,0,0),(2245,'medadrangi','78f4ca119feaedccc7d1bd14c83f25150ae5e87f','atefeh.ir72@yahoo.com',1,0,'ff6e1de685de9f01bef5e2832d9604b09ba7b9c2','medadrangi','tehran','2013-06-13 18:34:43','default.png',2,-1,1,1,0,0,0,0),(2246,'noron','3aed3bc2572f532739320135c534548c5870f6f3','noron@yahoo.com',0,0,'1630ff4ceb4847ba3f84a42bcd39fd08484dae8a','Noron','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2247,'nsks1990','c6a279fb668fefb2607da3013c7019399c39fc86','nsks1990@yahoo.com',1,0,'d15864c6b7be225f05decd4c6c3368a0b3176227','NsKs','Ferdosi','2013-04-16 19:12:06','default.png',2,-1,1,1,0,0,0,0),(2248,'rAm1n','bad29a15c2f9036609e5199c5806152d1642f5d5','fahimi72@gmail.com',1,0,'4d0350076acc0f0a5dad3291761b7b7a96d9fe70','rAm1n','iust','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2249,'sad1989','905e87a71ee2b61d309c9be61710cd3578a189f5','youzi.sedaf@gmail.com',1,0,'db5d9c5ee23c744a24a2322f45eebdad002ae66d','sad1989','university of Tehran','2013-04-14 06:31:21','default.png',2,-1,0,1,0,0,0,0),(2250,'palmfrond','5442bbde6393a8015ba38db9a1484e2ba8b444f9','palmer.lao@gmail.com',1,0,'32da68aa2226e59aa45d9eaca3be8559ad161449','palmfrond','Clarkson University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2251,'maryam.f','b455413fbdb1a3f4c6a1aeabe0fdac5ddba44c80','maryam_fallah@rocketmail.com',0,0,'7b14df98be922fa675b68a752cbef26b81284a79','marmar','university of guilan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2252,'6610861','6aaf2e9186422f05c90f99bba260c8e31311963d','yasamin_kosari@yahoo.com',0,0,'04e6fdaa4d6abeb5163b706343878bcad3e399b5','yasamin','birjand','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2253,'saadatfar','1ea7ba345f8293b18db26e394bca1ff058a819c7','NOT@NOT.COM',0,0,'81bb590afe75262cbe4b9b608cd26f4c408d5423','TEST','','2013-04-16 12:50:30','default.png',2,-1,0,1,0,0,0,0),(2254,'tana','f2be186859121ebc4ba8fe665ef5d87b1741714d','tnaddafi@yahoo.com',1,0,'cb36c8d8ab49c8a85be54ec2cc855bab5b7d728e','tana','Tehran University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2255,'AkuIsEvil','ec49bc6904c9d9543317b1a600ea6b184f014662','fuckyouass@mailinator.com',1,0,'fecce2cb58a344e85a4ab8944e8098d74da4a31d','Gunjan','Killahahaah','2013-04-14 21:36:01','default.png',2,-1,1,1,0,0,0,0),(2256,'kamesh','17835b0aab1e8612efe5e754e419e9a8ddb9e9cc','kameshprajapati75@yahoo.com',1,0,'84b53506256f016f0878602aa2bc1d567425916a','kamesh','LDCE','2013-04-14 20:50:41','default.png',2,-1,1,1,0,0,0,0),(2257,'faezeFaghih','c9540cfda80463ebdf4153660b372c886effece4','faeze.faghih@gmail.com',0,0,'bc0d0750c6c39723747ad97cba94c74c9570e3ec','faeze','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2258,'maryam.eng','62031f9e537a757cdf8908016466fe60280d0b21','maryam_shabati@yahoo.com',0,0,'ec263e9f9233db97ff1d10f83b7aba6d63db3474','maryamSh','university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2259,'maryam94','db5a465afa0ed805674af3020f9cdc4fbe9a72f7','maryam_shabati@ymail.com',1,0,'a3ea873937627c01cd2802fc8a30a5adf6063c9f','maryamSh','university of guilan','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(2260,'MB24','e2b7bc50dde217a533be21b369e1e0cbc30e97c7','mb2472@ymail.com',0,0,'8564b038717e60fee5f28975cbe5e9bd877ade7e','Mohammad.B','B.U.T','0000-00-00 00:00:00','default.png',2,1,0,1,0,0,0,0),(2261,'MehrdadSComputer','e0beef452c60109f3c6070f8b537e41eb6659f0e','mehrdadscomputer@yahoo.com',1,0,'b19d5d81d16ae37828d3983f2f875808c90d70d1','MehrdadSComputer','Shahrood University Of Technology','2013-05-06 19:53:17','default.png',2,3,1,0,0,0,0,0),(2262,'chooghoorr','5193fe292a374bd617360f47126628883f082b7d','nafiseh_yavari@yahoo.com',1,0,'594bb21b686f0b6e1e1f5e4c0886eb8c0648fa21','n.y.','tehran','2013-06-13 16:25:52','default.png',2,3,0,0,0,0,0,0),(2263,'mohsen.f','c8eed1775ab0717bc98eca4e27fe53236f254771','mohsenfarahati71@gmail.com',1,0,'53da9c0f7f5b4a370e7fe3746b43b4ad9054f652','Mohsen.F','Birjand University of Technology','2013-04-17 12:46:37','default.png',2,-1,1,1,0,0,0,0),(2264,'soran','678366da58ba97aba0277c80d3f3e47e7129e090','soran.ghadery@gmail.com',1,0,'774961b6d717e542f67400393e3c0379759dbf7f','soran','kordestan uni','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2265,'a.entezari.z','180b65cca9a77ad469758deb4092f0e22511bda5','A.Entezari.Z@gmail.com',1,0,'817b7b4e59f70a86039afd095f6c308434fbf677','RedHat!','UT','2013-04-17 19:18:59','default.png',2,-1,1,1,0,0,0,0),(2266,'SESBA','9e39588dc8faba30d291dc514309d1d0eb14b50c','seyyedabbasshah@yahoo.com',1,0,'19a4fe35537bf2c6599b24a962369b13c7be09cb','SESBA','KNTU','2013-04-17 16:12:32','default.png',2,-1,1,1,0,0,0,0),(2267,'spdbd','f08f25891eb3773af8abaea38bf29d4ec7fe3da0','sepidehbod.93@gmail.com',1,0,'78e7443f5c49e93558f87c26cd4efea700dcfa27','spd.bd','','2013-04-17 14:53:55','default.png',2,-1,1,1,0,0,0,0),(2268,'post98','ea65d92f77f89fe839e69f116c100094d572c1eb','infoprog98@yahoo.com',1,0,'98331b970ee37f71728d5d95684c70b9d62cd5ee','pedram','sharif','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2269,'punsher2011','0d94ece82dd0c4adab5078802317fa22fda4f932','mrem71@gmail.com',1,0,'5c28593b3696d4b4789c47e95ebac6f384fb393d','Masoud Rahmani','IAUN','2013-04-19 18:10:20','9fbd52bfc70375cec2d3527ef21ab5e0f8a671be.jpg',2,1,1,1,0,0,0,0),(2270,'Jmachs','3eee0409e55ca3bd03a196e72695928d18a5e39d','jesus.machado.ortiz@gmail.com',1,0,'79ae3e5f351184ac69eb5fedf2d28b9ac784fc2f','Jesus Machado','University of Oriente','2013-06-23 00:53:49','default.png',2,3,1,1,0,0,0,0),(2271,'soleiman','67334e60c5ddb18ad1d02467d4ce3c35ecb2e608','soleiman.sharifi2002@gmail.com',1,0,'7a5e12d06747fcae82f918940e542f3842f06eef','soleiman sharifi','Imam Reza','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2272,'Majno0n','62ffb11d9bf0be101a6c7904a6c84dca139cb2b2','hosein.hashemi72@gmail.com',1,0,'5a7f311d699578ac97bcf15b81cc33b8e3a9dfd7','Haji !','University of Tehran','2013-04-20 16:58:24','default.png',2,-1,1,1,0,0,0,0),(2273,'saeedranjbar71','f662ce2a4fcb073a4a9be5b18bc5aaefdc8a8010','srm71_h@yahoo.com',1,0,'b873e2f13a68c251a1b7afdd2e913be755ee6730','Saeed Ranjbar','University of Guilan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2274,'504905803','7bb2f193969c8716cab0a06866f95dfe8e440b29','504905803@qq.com',1,0,'826c808ec881db32c8d33d74395546bbc066eedd','Leeliu','zstu','2013-04-21 13:32:17','default.png',2,-1,1,1,0,0,0,0),(2275,'Nostop','1b90a592867d313c1a296b82a22c8970f8bb36fd','495122692@qq.com',0,0,'83543adcc62cf603993aa4b2bb1a77d0ba94b606','No_stop','zstu','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2276,'saaraa','a92cc0dc30283dad3e3d95fec7b2097135da3990','saraj.no@gmail.com',1,0,'3ebe2d266716f93202b7638ec568f348bb208ef1','sara','UT','2013-05-03 16:34:55','default.png',2,-1,1,1,0,0,0,0),(2277,'karim.rahimian','7447dc222e3e1941fdc74db746f1637e4e55bfef','karim_rahimian@yahoo.com',0,0,'6fc369de18389465eecc55776eebb36e859c2dcd','کریم','علوم اقتصاد','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2278,'Yukar','27ca0d3b96194d38ac2f78dc7a9e014d06502468','sunyuntao129@163.com',1,0,'ae6eb61a828acbb0ac3fbdc638ed29a530f6cf57','Yukar','ZSTU','2013-04-23 02:53:29','default.png',2,-1,1,1,0,0,0,0),(2279,'celarco','42fcffcc36d228280d6db5e0c5e8e1a51d9cea19','hj842@yahoo.com',1,0,'5207b05ba15ccecf686bb92d3419ca87033f392e','Hadis Jameei','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2280,'re.azami','edce1abc2699c1ee48e142e7733aa04905471e54','re.azami@ut.ac.ir',0,0,'3cc6a76402fc1661607bb17f68eae5493b1902eb','Reza Azami','University Of Tehran','0000-00-00 00:00:00','default.png',2,1,0,1,0,0,0,0),(2281,'m.mahdieh','b589c55ed14050bee41bfd03ef9670602147d84b','m.mahdieh@gmail.com',1,0,'78095997c71ac892948a5894d2f4dffbf985dece','Mostafa Mahdieh','','2013-04-22 19:52:08','default.png',2,-1,1,1,0,0,0,0),(2282,'nganji','2e78116829f62c35a9d8dad52dbe4a6a03e8e8f1','badboy_n1993@yahoo.com',1,0,'03f7cf8ef57da230b6e61fe3b463324c91cbf0de','N!ma','University of tehran','2013-05-03 16:42:44','default.png',2,-1,0,1,0,0,0,0),(2283,'mohammadahmadi.kurdy','320cddaa099fc025e78ef920cd41f4af81b01945','mohammadahmadi137372@yahoo.com',0,0,'87e754d34ce4fa2ffeb2e86f42c0aeaff44f86b6','mkurd','kurdistan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2284,'mohammadkurd','a0142e720778947d61d570f5994b5574ccd2cebd','mohammadahmadi137372@yahoo.com',1,0,'3a76603ab57ce646878dc4ed3d3810d66d5dddaf','m.kurd','university of kurdistan','2013-04-28 12:10:09','default.png',2,-1,1,1,0,0,0,0),(2285,'A.H.taheri','51b0fc171565a889adeff7c223846d3d21a2164d','amir.h_taheri@yahoo.com',0,0,'c368cc8dadcc5b1d5a44976817ff8ba22f3461b9','A.H.taheri','university of tehran','0000-00-00 00:00:00','03bb74977a78eff81e3505175350d29982fe6463.jpg',2,1,1,1,0,0,0,0),(2286,'HOR2','47337b521a32d9e0d04c6a92d2aaa52a7b447b88','hsn.vahedi@ut.ac.ir',1,0,'daaaa05c23f00a94cb816e046c3bf9a10a9ab93f','HOR2','University of Tehran','2013-05-01 18:36:35','default.png',2,-1,0,1,0,0,0,0),(2287,'ghamar','62c74db30bf488a0e9ae159286c73824bcc8b52e','ghamar@mailinator.com',1,0,'121b2eacf7d478d6ab356f6bce93f15e8e72d0be','.::.','','2013-04-25 07:56:56','default.png',2,-1,1,1,0,0,0,0),(2288,'ansar','03645c8eafc658d4e6fb76d62f8deba001c53d50','malakiansar@gmail.com',1,0,'fc1489c280088174d816d886d5d11f824b2ecce9','ansar','kordestan','2013-05-08 20:11:07','default.png',2,-1,1,1,0,0,0,0),(2289,'S3CreT','3194a7aabaac0534fa1d3ae56b090b6777f585fe','bahooshsecret@gmail.com',1,0,'1e858cd53489655fc92f7df8a7780cedfd3b3aa1','S3CreT','BASU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2290,'Miaki','0d80f1fe7e3a567272b0a8aeb70a37304d6b87a8','MiakiMiha@gmail.com',1,0,'385b00b1171fe4ea8e007e00ac5d15fc473a8fe9','Miaki','FZYZ','0000-00-00 00:00:00','default.png',2,1,1,1,0,0,0,0),(2291,'dare5421','44d854744ef044d6c42e40bd85b9ba6b3d8f5929','dariush.zandi.n@gmail.com',1,0,'00aaea7556a9b364af0aa67efcafd5974c7c29a0','dare5421','ASAP','2013-04-27 10:18:16','default.png',2,-1,1,1,0,0,0,0),(2292,'a.874','945f507cd4e6eea7d8b100f2e36981568713d15f','ansar_malaki@yahoo.com',1,0,'e312f177af1e976ec41f8b689fc929c119a0f13f','a.874','kurdistan','2013-05-08 20:12:29','default.png',2,-1,1,1,0,0,0,0),(2293,'shayan72','521ff9914eae7b26837f2bc1e8e0ee33cda01377','shayan72@gmail.com',1,0,'4932a7efe2731c06e3f710fe778abd90a1c4a791','shayanS','Sharif University Of Technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2294,'komak','cfdf7be1937bf6a1d82a855ec5f2fdffa1440339','mohammad.obaidi1992@gmail.com',1,0,'36f79b33c49c93bef29a61df278d9c6f563612b2','sami','k','2013-05-26 18:50:17','default.png',2,-1,1,1,0,0,0,0),(2295,'Kimia','03fb1d866139f1be485fcfc9eeb6f7e3d101c16a','kimiak94@yahoo.com',1,0,'3ddda0aba83ddf1aba934d01503ea4f780c58831','Kimia','University Of Tehran','2013-05-01 06:34:16','default.png',2,-1,1,1,0,0,0,0),(2296,'aida.msv','903dd0b25aa5455732a50df4a7430100b8432fab','moosavifar1993@yahoo.com',1,0,'136246bfbdcac2854c2361f9caa8def5db2564f6','Aida','tehran university','2013-05-01 19:32:32','default.png',2,1,1,1,0,0,0,0),(2297,'bizworld','0be43f8b26a5f339c86b13af627d17277d6f159c','bizworld@outlook.com',1,0,'9c2493d769d0224741a34f1044ce21c962ddd4e7','biz man','code school','0000-00-00 00:00:00','8b7de8574519f6f5d77d5568ac460253be3f3098.jpg',2,-1,1,1,0,0,0,0),(2298,'semicolon','6ca241c09b59d3fc03ee7e28bc75dff6e70b2d65','f.bajelan@gmail.com',0,0,'cf554ac952dd351b366b4e101ab228c31d45d71b','smc7','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2299,'SiMo1000','b5685902961bde5eeb085fb2fcec2a1db2573d4b','siavash.mohebbi@gmail.com',1,0,'ae72da73f2fc187d647a56a703f5d88a1212c7c9','SiMo1000','zanjan university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2300,'morteza16','b8a283571f6f95c24b6772380c104e63a8b51c3a','m.habibzadeh16@gmail.com',1,0,'2db145d44867e42ccad29f3da6aba91a4ebe5dca','morteza','guilan','2013-05-09 18:43:10','default.png',2,-1,1,1,0,0,0,0),(2301,'hani','b29424225838a4cbe55d13a0d42599963eb58de0','hkeshir@gmail.com',1,0,'213ef5d2bb00946051a5a7e08d40239656cadb0a','hani','tehran university','2013-05-03 11:58:04','default.png',2,-1,1,1,0,0,0,0),(2302,'zanyar','f7975dcbf25684494204fcacce52e503f16ab5ae','kamyar.heidari@gmail.com',1,0,'c8ac4127ef77d564fb6d7344c062aaae4d3b9cd4','zanyar','sharif','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2303,'shervin','f177afee290c747456b9f023bbea87a3b9b08273','spartan_god2000@yahoo.com',1,0,'0d6f71b9e6c5214d9d89f5cfc11a85aae59918df','shervin_2.0','university of tehran','2013-06-08 07:50:43','default.png',2,1,1,1,0,0,0,0),(2304,'bismoy2013','d1af6d5f7ac6014ed58ea55d7e43f3815763e5af','bmurasing@gmail.com',1,0,'efc1dead785020eaf16c99f14f36abb4122a4edf','BISMOY MURASING','PSG COLLEGE OF TECHNOLOGY','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2305,'Django','24d6353030f4d4dcb209459503fb3d36d872a102','geedawgwtf@yahoo.com',1,0,'6b7f7fe37f61db4c6c4e74bf309dc951d0459995','Django','Azad Bumehen','2013-05-02 11:35:16','default.png',2,-1,1,1,0,0,0,0),(2306,'vru.sheldon','111724411cd97d2e3f54d603a0e79cd4a8e19861','arshiamidos@gmail.com',1,0,'d264dcf74b79dbecc9a0634089f1020adf37c890','arshiamidos@gmail.com','vru','2013-05-02 14:03:48','default.png',2,-1,1,1,0,0,0,0),(2307,'vru020','037e1434237d811348602b7520caf77b9d7a81b5','fatemehzangiabadi2012@yahoo.com',0,0,'974320dc39c37498f36fd0a39b415e8d756944ec','فاطمه','valiasr','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2308,'enchanted.ruby','dac21aa78e73c8cab79bdf210927c6931d6cd683','enchanted.mne@gmail.com',1,0,'3c32e02bf51815e4f3026bdab3e034ad86d18ef1','Mahsan','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2309,'vru811','5745dcbe27ee406f97ad28be83c4b1c4dbd7722d','s.saeid.h@gmail.com',1,0,'e015288b11aa4673dd811ca9d78408e0d46c3935','saeid','vru','2013-05-02 13:59:02','default.png',2,-1,1,1,0,0,0,0),(2310,'vru.cris','8b2bf7a74c1773948d3afff3ec10519bc7cd5eca','koosha.haghiri4@yahoo.com',1,0,'2a229518f7919cc99e83b689f1f70520bb0b2ac3','vru.sheldon','vru','2013-05-15 13:26:16','default.png',2,-1,1,1,0,0,0,0),(2311,'akbarww','1291ffeb1643035500ebc48f4821b33a8d3481ee','atashgame@yahoo.com',1,0,'8c87e3ddbe9ff383b53feb713d69c6833604cb27','ba121','ati','2013-05-03 16:10:29','default.png',2,-1,1,1,0,0,0,0),(2312,'Safari','0e4f3b4f2a1c36d92fd80d7694d542b4b1c46f22','omid.safari2000@gmail.com',1,0,'c52ccaaa7f51d26d536f8aed4ef105c33e1ee7da','****','*','2013-06-08 09:23:51','default.png',2,3,1,0,0,0,0,0),(2313,'Aidin.Abbasi','344ab5f0c32c1c3552e84d6256731c8d7731e1c3','aidin.abbasi73@gmail.com',1,0,'e79b49f95f0b58b949ba71047945b6535e999169','Aidin','UOK','2013-05-06 09:28:35','default.png',2,-1,1,1,0,0,0,0),(2314,'badihi','f14339ff43114e0ff5198560ffbdcb078e48fabb','badihi.2006@gmail.com',1,0,'9a1d5e10c5bc446102d4254b83176a0406c50d5f','Ahmad','Ejei','2013-05-05 11:51:09','default.png',2,-1,1,1,0,0,0,0),(2315,'Eisenheim','7d387e4068172c992f6ab902a947879a4db74413','mahmadkhanloo@gmail.com',1,0,'5156d5b2b9654edae33f46f5f83c6d76e62641f3','Eisenheim','Tehran University','0000-00-00 00:00:00','c0f644302667a5b0a7ee26573790ba54d7f598dd.jpg',2,1,1,0,0,0,0,0),(2316,'soranghaderi','7568d88e8e149578b465d4f072aecec53fd362c2','soran.ghadery@gmail.com',1,0,'e55ce7cb09b949c42ea6196ea47f6c5dc7bf8fb9','ghaderi','kordestan','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2317,'soran.ghaderi','0bea4cb6dcc43d4754b634559b8f72dec4a9f263','soran.ghaderi99@yahoo.com',1,0,'74b7895ff696fa8fe890ad908f5e8ba3b6475608','Melodi','kurdestan uni','2013-05-08 09:16:08','b3ab17a0e3b1dba75851aa2ef1372c61ed872fec.jpg',2,1,0,1,0,0,0,0),(2318,'Mehrshad','bc1ce3c19ebe0d3324361051c93435c947a4550d','Mehrshad_Da@yahoo.co.uk',1,0,'61c8daea132736dc31a0143a596f283bb392e3f7','Mehrshad','University of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2319,'didib','1ba570eadcdf2d77c2feec0ac7e7f3f41ad51ead','ladybierd@yahoo.com',1,0,'6a107cba78a229028ea927d70305d70be0ef4983','Diba','semnan university','2013-05-16 14:38:14','default.png',2,0,1,1,0,0,0,0),(2320,'atwong','0eb0c602d41eee2188152f2bbf1649aa8f0c7a6e','atwong@alumni.uci.edu',1,0,'d4d0952a533c456e6f59189a236ce1b257990132','Albert T. Wong','University of California Irvine','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2321,'ence','db7391a054b80fe0898201b1991b1b714acd0727','n30mg21@gmail.com',0,0,'f1d0fb5cd5a6d9eb3ae4b27256224bf1b8d3fb72','ence','hut','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2322,'coder1340','7253289bb6993acf8416f4cfb79ad745ed3eb940','coder_1340@yahoo.com',1,0,'5d6b9d1aa064a4e421df5c1a66c4d0219d3b4164','Coder','Le Quy Don Gifted High School','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2323,'naghi','0167eae9e8d1a6c0c7d8bdafa44aa96e331fc173','taghi@yahoo.com',0,0,'2518c452e1246542fa95b171b26cebb69f4a0e02','rahim','hahaha','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2324,'IromY','9b7588ed3a0aad725ecb292723e911da87cbebad','hamidsang007@gmail.com',1,0,'4069b4e0420597b3d79387a216ab0b3df2d9f4b9','IromY','INPT','2013-05-12 16:37:51','default.png',2,-1,1,1,0,0,0,0),(2325,'abrcmptr','218840c1cf2ebe8c3194174f07899de50f3f4d35','abiarash@gmail.com',1,0,'7dbaaf8c4e8931a404f3f10da4f8312e4d3fb762','abrcmptr','VRU','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2326,'paradox','25c10df1ff02680e38fa073d36f021ed89da317a','hrp_71@yahoo.com',1,0,'4b487d9b5ff073d604790faa83abb22d5b941879','paradox','paradox','2013-06-19 11:07:17','default.png',2,-1,0,1,0,0,0,0),(2327,'xarash','b07e09d53117754e69d81a415718b5f32b8adc29','xarash11@yahoo.com',1,0,'346bc01c40e006ba50a4dd10bca914bd6238d9c5','arash','efc of Urmia','2013-05-17 05:17:45','default.png',2,-1,1,1,0,0,0,0),(2328,'evilbut7','835fa051b73ebb89e80639dce8353ba2c969c22f','mr.tanakian@gmail.com',0,0,'85cdc3e96ff1d86cdf2417d2e5d8ce65e9c89016','Evilbut7','Birjand University technology','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2329,'alvandyhamed','85d5fdbf2fb5fa47205d88d210bd1700fb00bbc0','alvandyhamed@gmail.com',1,0,'a0f88f915866b5277774b6e7aa8cfc1396720328','bardiia','arak jihad','2013-05-22 03:21:49','default.png',2,-1,1,1,0,0,0,0),(2330,'yotokan','04a7390b94118be3794893fc6b216d085c2fea7a','yotokan@gmail.com',1,0,'192754d4081a7d92bfe1f899ea1804214f0e2c42','yotokan','HardKnocks','0000-00-00 00:00:00','default.png',2,3,1,1,0,0,0,0),(2331,'sparta','11246c9e2bf5484e1f7cbcd87fe31189d04da74e','msmmsf@yahoo.com',1,0,'41cda1d870000ec60e805ae0574f231c377052cc','sparta','aj.ac.ir','2013-05-21 12:10:03','default.png',2,-1,1,1,0,0,0,0),(2332,'dammy','f87d1b3d9ea3ee2d080c20ce2fbec28dd9b19808','damilola.ajiboye@ymail.com',1,0,'530b048aca4e7d9a8da32332789242cd73db668c','ajibigad','covenant university','2013-05-25 04:50:33','default.png',2,-1,1,1,0,0,0,0),(2333,'Daviking','6ed4aa5bbb306ac7b9658cf0ebce6cb34e50c329','akindavid2012@yahoo.com',0,0,'70d5e08a6c29c750f755394fba7ee93e220a213a','Daviking95','Covenant University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2334,'teska','9a21117cbee6aab7e984c987f723252d97d430c9','teskacorp@gmail.com',0,0,'7b6a578eedd3e6fc49aa03e5be5261dba618c8bd','teska','uni !','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2335,'smohammadi','85e7fd203500849326a738edcf4f1e08873db553','smohammadi@ut.ac.ir',1,0,'215bd9c79e47c5e04a22da7f491b9eb4dd9d23a6','saeed','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2336,'f.m.m','80f199579a503a205b83c6d3c6dec135bd957a57','farshid_andik@yahoo.com',1,0,'976fc107807980e265a319818fb9c44c6afaf79d','farshid','rasang','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2337,'mj.mh1','c142f73306217261e63ec5cc9c8823fad8a25e72','mjj_mh@yahoo.com',1,0,'e5c99012083f6139a3a75391c18092d0f4c891bb','IT MAN','sadjad','2013-05-25 18:01:50','default.png',2,-1,1,1,0,0,0,0),(2338,'dani1373','ce06cd7f4791fe174fc021fbec375961aaa0c0fd','dmehrjerdi@gmail.com',0,0,'02194f9b5571fa8abdfa1ed2cae5e5161409641d','dani','Sharif FUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2339,'mamari','f7f0e3578121bae45dd830a432a77bff2a642fac','maryam.one17@yahoo.com',1,0,'fb795b8ffcb014dd182d2394d65635c1951cc5c5','panjey.oghab','zeinab kobra','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2340,'mmnaderi','a453b781feb2607ac92d7d3a2b6d038b6968bac9','mmnaderi.ir@gmail.com',0,0,'ec39c3b0b4153ae15ded80d2067d903e004f1747','MMNaderi','Shahid Ejei School','0000-00-00 00:00:00','default.png',2,1,0,1,0,0,0,0),(2341,'mjnaderi','28f57c9b4907840dfd543d929a6ecfd118138b11','mjnaderi@gmail.com',1,0,'1b204a1bd6f696c0fd6d80019ce025c3e0463f4e','icedream','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2342,'Williams','3990918eabffe1509bfe2b837d42da3af92e04b1','tobiwily@yahoo.com',1,0,'7f40c3dace5fb4b38689d64e4d2217e937230467','Williams','Covenant University','2013-05-27 23:19:30','default.png',2,3,1,1,0,0,0,0),(2343,'slimjed','1337fe1bfa06bf452f54baf3fc82a98ba333e106','omadoyejed@yahoo.com',0,0,'e79ca01188e3cc375af404438e7782a4f189be83','slimjed','Covenant University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2344,'damilare.ogunnaike','3b78edef68336ba08a2d3dbccb11af87773ee406','damilare_ogunnaike@yahoo.com',1,0,'0f50a73d8abaf4be4ecd27ecff940b1f0175f2a8','Damilare','Covenant University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2345,'bisibila','03fe1dd4fb101daa8f44aff516dbf6e1d52bbd7f','havaliza@gmail.com',1,0,'be66755fb8eacd34780980dad6d9b1ce502dd2a5','bisibila','Sharif FUT','2013-05-30 08:30:45','default.png',2,-1,1,1,0,0,0,0),(2346,'farzad.ab','7176d672ea4bc277dbee8364fcd8b8d9d6df7f1e','fab.helli@gmail.com',1,0,'ebde9916e2b3006ec36d1ad1d6a30ba21b88d164','farzad abdolhoseini','allamehelli','2013-06-01 04:39:23','default.png',2,-1,1,1,0,0,0,0),(2347,'suarezcumare','fca99c0d3f09ac8ed9e45d6a7c4048c92c554749','suarezcumare@hotmail.com',1,0,'41e61f33b9e37f5b80b44fed7d75efbba35a0359','suarezcumare','UC Lisandro Alvarado [UCLAve]','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2348,'pard','00b369c5cd8d991f635c8af341cbd4e4cbb032c1','spooferninja@yahoo.com',0,0,'8e43b4c0c7c070fe3ee4f099ce23cdc1ff597039','pard','po','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2349,'midnightwish7','1d601371a44b00b8edac3ea910ee53f8994cc357','midnightwish7@yahoo.com',1,0,'e91af43a99226da8c8fd0848c15f3a7cba6e56e5','Illidan_Stormrage','sajad university of mashhad','2013-06-11 11:18:35','default.png',2,-1,1,1,0,0,0,0),(2350,'dbzsum','cd0b03dcbdeb52f0688422339c67f0de35c02653','dbzsum@interia.pl',0,0,'433e0b44693891032bf607fef7fc233af857c1a3','dbzsum','UW','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2351,'schon','d789ec095a4e8802f68fc5e49afc1c3b8a8bcd1a','ali.fleissig@gmail.com',1,0,'604c87082f159d658e1447ed853eb90222bc9cfb','Fleissig','University of Tehran','2013-06-02 12:45:34','default.png',2,3,1,0,0,0,0,0),(2352,'Kiaft','021fdb7b30916d53f350d61fbcf326871e14dd80','kiaft@yahoo.com',1,0,'2d6ace92450633626c13dfc1ea3a48ac849c560d','Angry_Developer','Ejeei highschool 1','2013-06-02 17:01:27','default.png',2,-1,1,1,0,0,0,0),(2353,'poname','22e3679682e4f457a053df5643d606f625153525','adsl0912@gmail.com',0,0,'ef6fe9042e622ba75f2e466d7ac9bcf5f34a56f4','popo','ece','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2354,'zupiroos','46087389ccd1438d3a4ba6fe3b403d2f603f8b36','zupiroos@gmail.com',1,0,'cdb738bb3766e15dfb037874fd1c63fc6d4de55a','Elyas','','2013-06-04 04:04:36','08db5b6ca9a6d13d26b5450705d403789c79b342.jpg',2,-1,1,1,0,0,0,0),(2355,'Am1R.Ar3alaN','609552099149bd49fc7c95883b6ad665faeb7717','am1r.ar3alan@yahoo.com',1,0,'5ef0015b2f39df9629aad64f8de9fd0c922345c9','Amir arsalan','secure-land','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2356,'hossein.salam','145e3852f37241fe8c10868d3b2a076545f318e0','hoosssein+salam@gmail.com',0,0,'3d435d590647c1f1fc344ca0c662d130c6b58da7','hossein','tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2357,'hoda','58776da71c8118fe8a4ced156d78d983225560b5','arami.hoda@yahoo.com',1,0,'e07ac2e918b6cb8666651f737961d4a3646d0092','Hoda','University of Tehran','2013-06-13 18:15:31','default.png',2,-1,1,1,0,0,0,0),(2358,'iMohammad','b0adce824663f03d8c1ff2435df8e9d3467e52bd','mohammad@dashtizadeh.net',1,0,'34949092535fa3d9cea15c9e0b13b4adc139ed46','Mohammad','','2013-06-08 11:11:54','default.png',2,-1,0,1,0,0,0,0),(2359,'Parnian.yousefi','2199bfa841767d6fcfea0f760870d35e9b46bafa','p_yousefi_s@yahoo.com',1,0,'c54f6ba70c3629ccabc043fe640d6b49e7a695f3','Parnian','Guilan University','2013-06-20 14:27:43','97b8e7039fe092db7e6ce75433494357291671f8.jpg',2,1,1,1,0,0,0,0),(2360,'hamido0ops','416fd801a95720c9048077272199a024fddd4eb9','hamid.o0ops@gmail.com',0,0,'c247d0671b2feadc9764994f1c2caf994696364a','HamidReza','Zabool Uni','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2361,'atsign','8b60b82b75dac5ac92e71d7cbb5958aa784884bc','rkrainsky@gmail.com',1,0,'19067d22902dae71b53ae60f1d48bc308c773270','atsign','','2013-06-09 16:36:00','default.png',2,-1,1,1,0,0,0,0),(2362,'a.bahramali','835f6876a1cd6c0130c08f7da955e7c47e21b9b5','a_bahramali@yahoo.com',1,0,'fc942609089e19ec758c54e48ef0735b037aaec1','bahram','university of tehran','2013-06-10 08:20:29','default.png',2,-1,1,1,0,0,0,0),(2363,'CIUDO','e6a5c64dc92acffd9b26eebc297688f620009744','jesus.machado.ortiz@outlook.com',0,0,'49a363ea8bf4e02e45d41ec2f08163bb1565fa46','Jesús Machado','Universidad de Oriente','0000-00-00 00:00:00','default.png',2,6,0,1,0,0,0,0),(2364,'spd.bd','6b8d34cb9a9bd0ac7030391466d771922b0974a2','sepidehbod.93@gmail.com',0,0,'0647e6d226783d62f79cb41661a4b4e1f39f56f8','spd.bd','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2365,'sepideh','c646b10e865ac4b9dc81af4c9d9c3ae183bfc910','bod.sepideh@gmail.com',0,0,'7863740f937962c313f0d62e04bc4502aecada51','3pideh','theran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2366,'stevehemond','089d5052beffe9346549b6bdbfed37ff77b61029','steve.hemond@outlook.com',0,0,'65b7a4f1bb5dee3a05a2590db5a5cf3650f2619d','Steve Hémond','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2367,'tahereh','9d2e2bc7d18ffc3fa7fc1280b8b9f07b413822f9','tnaddafi@gmail.com',0,0,'2d142a0db5f8dc5ea248d582d391eff919a52171','tahereh','Tehran University','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(2368,'maneesh4848','bb71ab09bebf1c983758d0d71f79d6d5314ac9ac','maneesh4848@gmail.com',0,0,'d83aa4ca1454f3e46ea5af8f6435d0dfeedd636b','maneesh','iiit hyderabad','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2369,'henkukr','f6bfa6825d1aab6ad0e9705a03aec878d4272851','henkukr@gmail.com',0,0,'b98d6a79b0e710fa981c5b6be04ee60a5ec333b9','Alex','KPI','0000-00-00 00:00:00','default.png',2,3,1,1,0,0,0,0),(2370,'borhan.hemmati','f6924941fca4025b2ce8454941a3f32cd1638bd7','borhan_hemmati@yahoo.com',0,0,'8a7525eb4f739aed12c345c41b91bcd33bd498f7','Borhan','Tehran University','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2371,'arghavan.m','5cfb3720505246676ddfd2a43eee4cbd14bc694a','arghy_snowygirl@yahoo.com',0,0,'4fd76c3608e7c8a2491bacc2946f219e97fdf45d','arghavan','University of tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2372,'shadow.sa11','8fb1fe188b873d7fa6dea73fcfbab7d902281295','sepehrasgarian7@gmail.com',0,0,'3a9a69724eb7e7af1e1ccedb6233a9904e520710','Shadow','Sajad','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(2373,'HanieR','f7c04c25e858776783d41e8d804cd5aebd9c0372','rahmati_hanie@yahoo.com',1,0,'21b0c912c8d563d5674a590968a6957657487009','Hanie Rahmati','University of Tehran','2013-06-18 21:47:59','default.png',2,1,1,1,0,0,0,0),(2374,'Farshadf','fa05938b064de399744c1e94bfcb5fe601cb1114','farshadfn@yahoo.com',0,0,'41e14b2e6e792813c05622f2e91af077726ca01e','Farshad','University of Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2375,'ati.kia92','60082d30e8346358b53a7d1c2fbc7dd4f27d35d0','hiro_686@yahoo.com',0,0,'8af7c2fdf06b6d2b2303ee8488da7e2e6375a052','atie','shahed university','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2376,'minhnhat93','8f660764fcbabffb7801f13c3f61342576a6d866','minhnhat93@gmail.com',0,0,'a7acbfe8c272a6cef422ed4af215d93752a79f15','deathwing on the move','HCMUT','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2377,'restart','3423b8042b0c44db2d7daab5c0234e0dbedbb4c8','khatereh_smsn@yahoo.com',0,0,'7957e149f884c172043bd5bf97b02cfa24272808','restart','','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2378,'soreana','2430ffac9b4d1db9f5302c5b0b3b9527d79e69da','esterlinkof@yahoo.co.uk',0,0,'b95bd68854e9b56068b8dbacef603eea80f6f597','saman','Tehran','0000-00-00 00:00:00','f59511538bed3a3e39a700b87da94b0676cc9acc.jpg',2,-1,1,1,0,0,0,0),(2379,'xxxx','459254f0744e96181ed876a61d96413b22f89464','kamyar.heidari1992@gmail.com',0,0,'1b64645abfae27de19f9452fb939445f30021208','xxxx','uok','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2380,'yyyy','39fba892caeebe8283a3871fb977dc8b67dedf54','kamyar.heidari1992@gmail.com',0,0,'44c14aa8f3e634861445ea4e08d6d1caba2759b6','yyyy','uok','0000-00-00 00:00:00','default.png',2,3,1,1,0,0,0,0),(2381,'faezeh','6e479d39ad6bbe2ab9d66d4e04cc7782c7687c04','www.khorram.faezeh@yahoo.com',0,0,'de3f251b041491453c3604d5288595647d559bed','faezeh','shahrood','0000-00-00 00:00:00','default.png',2,-1,0,1,0,0,0,0),(2382,'zzzz','0c8cd021ef70270a00c2aa65520f14450f64ab4b','kamyar.heidari@gmail.com',0,0,'0c40c078ddd23adccc5e950cd3e048a6c43bb54c','zzzz','uok','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0),(2383,'nadia.gh','f7c30b331b5536e220ed9ca1697e00d81c4f25d7','nadia_t72@yahoo.com',0,0,'493f06e7606b85901877054334fe1276c100bc6f','naam','Tehran','0000-00-00 00:00:00','default.png',2,-1,1,1,0,0,0,0);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `virtual_ranklist`
--

DROP TABLE IF EXISTS `virtual_ranklist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `virtual_ranklist` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `label` varchar(256) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `virtual_ranklist`
--

LOCK TABLES `virtual_ranklist` WRITE;
/*!40000 ALTER TABLE `virtual_ranklist` DISABLE KEYS */;
INSERT INTO `virtual_ranklist` VALUES (2,'4th Kashan Contest');
/*!40000 ALTER TABLE `virtual_ranklist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `virtual_runs`
--

DROP TABLE IF EXISTS `virtual_runs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `virtual_runs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `team_id` int(11) NOT NULL,
  `virtual_contest_id` int(11) NOT NULL,
  `problem_letter` varchar(1) NOT NULL,
  `time` int(12) NOT NULL,
  `att` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=83 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `virtual_runs`
--

LOCK TABLES `virtual_runs` WRITE;
/*!40000 ALTER TABLE `virtual_runs` DISABLE KEYS */;
INSERT INTO `virtual_runs` VALUES (20,4,2,'A',5820,1),(21,4,2,'B',2520,2),(22,4,2,'D',17220,2),(23,4,2,'E',7860,1),(24,4,2,'F',12240,1),(25,4,2,'G',10860,1),(26,4,2,'H',4800,1),(27,4,2,'I',9000,1),(28,4,2,'J',3360,1),(29,5,2,'A',3600,1),(30,5,2,'B',5880,2),(31,5,2,'F',13860,1),(32,5,2,'G',11040,3),(33,5,2,'H',6900,2),(34,5,2,'I',8160,1),(35,5,2,'J',720,1),(36,6,2,'A',6960,1),(37,6,2,'B',4320,1),(38,6,2,'G',13020,4),(39,6,2,'H',17160,2),(40,6,2,'J',8640,2),(41,7,2,'A',9360,3),(42,7,2,'B',1680,2),(43,7,2,'G',9180,3),(44,7,2,'J',4020,1),(45,8,2,'A',13560,1),(46,8,2,'B',2940,1),(47,8,2,'F',16260,4),(48,8,2,'J',3960,1),(49,9,2,'A',2040,1),(50,9,2,'B',7200,1),(51,9,2,'G',15360,3),(52,9,2,'J',17220,4),(53,10,2,'A',2940,1),(54,10,2,'B',6960,3),(55,10,2,'J',10620,4),(56,11,2,'A',8940,1),(57,11,2,'B',1680,1),(58,11,2,'G',15480,3),(59,12,2,'A',11640,2),(60,12,2,'B',4860,1),(61,12,2,'J',13560,1),(62,13,2,'A',12120,1),(63,13,2,'B',14760,1),(64,13,2,'I',8040,1),(65,14,2,'A',15420,3),(66,14,2,'B',3960,5),(67,14,2,'G',9900,1),(68,15,2,'A',4080,1),(69,15,2,'B',4260,2),(70,15,2,'G',17760,9),(71,16,2,'A',9180,1),(72,16,2,'B',7680,5),(73,16,2,'G',15660,2),(74,17,2,'A',6540,1),(75,17,2,'B',14100,1),(76,17,2,'G',17820,3),(77,18,2,'A',1860,1),(78,18,2,'B',6360,3),(79,19,2,'A',3780,1),(80,19,2,'B',6420,3),(81,20,2,'A',10080,1),(82,20,2,'B',3000,1);
/*!40000 ALTER TABLE `virtual_runs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `virtual_team`
--

DROP TABLE IF EXISTS `virtual_team`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `virtual_team` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(128) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=21 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `virtual_team`
--

LOCK TABLES `virtual_team` WRITE;
/*!40000 ALTER TABLE `virtual_team` DISABLE KEYS */;
INSERT INTO `virtual_team` VALUES (4,'Fin _ Ferdosi'),(5,'Victorious _ AUT'),(6,'IUT One _ IUT'),(7,'Nova _ Uni Of Tehran'),(8,'Fantastic3 _ Uni Of Isfahan'),(9,'Angry Coders _ USC'),(10,'Backreack _ IUST'),(11,'Noob Please! _ SBU'),(12,'BoOoOoGH!!! _ Uni Of Isfahan'),(13,'Lift Truck _ Shiraz'),(14,'Pastil _ AUT'),(15,'Tricycle _ SBU'),(16,'Fatal_Error _ Shiraz'),(17,'Master Mind _ Uni Of Kurdistan'),(18,'Shahedian _ Shahed Teh.'),(19,'GoodbyeParty _ Damghan Uni'),(20,'UKCS _ Shahid Bahonar Kerman');
/*!40000 ALTER TABLE `virtual_team` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2013-06-25 12:46:05
